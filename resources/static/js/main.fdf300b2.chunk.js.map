{"version":3,"sources":["i18n.js","auth/KeycloakContext.js","components/__types__/ref.js","auth/withKeycloak.js","api/constants.js","api/helpers.js","api/customers.js","components/Admin/AddCustomerModal.js","helpers/widgetEvents.js","custom-elements/widgetEventTypes.js","custom-elements/AdminAddCustomerElement.js","api/ticketingsystem.js","components/Admin/Configuration/TicketingSystem.js","api/productVersion.js","components/Admin/AddProductVersionModal.js","components/Admin/EditVersionModal.js","components/Admin/Configuration/ProductVersion.js","components/Breadcrumbs/Breadcrumbs.js","components/Admin/Configuration/AdminConfiguration.js","custom-elements/AdminConfigurationElement.js","api/partners.js","api/projects.js","auth/KeycloakViews.js","components/Admin/AddPartnerModal.js","components/Admin/AddProjectModal.js","components/Admin/EditProjectModal.js","components/Admin/ManagePartnersModal.js","components/Admin/ProjectActionItems.js","api/subscriptions.js","components/Customer/CustomerDataTable.js","components/Customer/CustomerDetails.js","components/Admin/EditCustomerModal.js","components/Customer/CustomerAccordian.js","components/Admin/AdminDashboard.js","custom-elements/AdminDashboardElement.js","api/tickets.js","components/SubscriptionDetails/TicketList.js","components/SubscriptionDetails/Subscription.js","components/Customer/CustomerProjectList.js","components/App.js","custom-elements/AppElement.js","api/portalusers.js","api/keycloak.js","components/Admin/ManageUser/AssignUser.js","custom-elements/AssignUserElement.js","components/Admin/ManageUser/DeleteUser.js","custom-elements/DeleteUserElement.js","components/Forms/OpenTicketForm.js","custom-elements/FormsOpenTicketElement.js","components/Login/Login.js","custom-elements/LoginElement.js","components/Admin/ManageSubscriptions/ManageSubscriptions.js","custom-elements/ManageSubscriptionsElement.js","components/Admin/ManageUser/ManageUser.js","custom-elements/ManageUserElement.js","components/Navigation/Navigation.js","custom-elements/NavigationElement.js","custom-elements/OpenTicketElement.js","custom-elements/ProductVersionElement.js","custom-elements/SubscriptionElement.js","components/Forms/SubscriptionForm.js","custom-elements/SubscriptionFormElement.js","custom-elements/TicketListElement.js","custom-elements/TicketingSystemElement.js","local/LocalApp.js","local/LocalAppElement.js"],"names":["i18n","defaultLocale","locale","fallbacks","translations","en","it","setLocale","KeycloakContext","PropTypes","oneOfType","func","shape","current","elementType","React","createContext","withKeycloak","WrappedComponent","WithKeycloakComponent","renderWrappedComponent","value","props","forwardedRef","rest","ref","keycloak","Consumer","this","Component","defaultProps","forwardRef","PAGE_CUSTOMER_PORTAL","PAGE_ADMIN_CONFIG","PAGE_MANAGE_SUBSCRIPTIONS","PAGE_MANAGE_USERS","PAGE_SUBSCRIPTION_FORM","PAGE_TICKET_FORM","getKeycloakToken","window","entando","authenticated","token","isAuthenticated","initialized","authenticationChanged","prevProps","changedAuth","isPortalAdmin","hasKeycloakClientRole","isPortalSupport","isPortalPartner","isPortalCustomer","isPortalAdminOrSupport","isPortalUser","clientRole","resourceAccess","client","item","roles","includes","getDefaultOptions","headers","Headers","Authorization","getDefaultKeycloakOptions","getActiveSubscription","project","projectSubscriptions","find","status","getPageUrl","pageCode","url","getUrl","request","options","a","fetch","response","has","parseInt","get","data","json","Promise","reject","Error","statusText","resource","apiCustomerDelete","serviceUrl","id","method","apiCustomersGet","apiCustomerGet","apiCustomerPost","customer","body","JSON","stringify","apiCustomerPut","apiAddProjectToCustomer","customerId","projectId","apiDeleteProjectFromCustomer","handleChanges","e","input","target","name","setState","handleFormSubmit","handleValidation","state","customerNumber","contactName","contactPhone","contactEmail","notes","customerPost","then","submitMsg","t","submitColour","updateCustomerList","catch","clearValues","document","querySelector","className","baseState","invalid","formIsValid","lastAtPos","lastIndexOf","lastDotPos","indexOf","length","addEventListener","modalConfirmation","style","color","modalId","ModalWrapper","buttonTriggerText","modalHeading","buttonTriggerClassName","handleSubmit","primaryButtonText","secondaryButtonText","Form","onSubmit","TextInput","labelText","onChange","invalidText","TextArea","subscribeToWidgetEvent","eventType","eventHandler","removeEventListener","KEYCLOAK_EVENT_TYPE","getKeycloakInstance","ATTRIBUTES","AdminAddCustomerElement","mountPoint","createElement","unsubscribeFromKeycloakEvent","render","appendChild","getAttribute","Locale","ReactDOM","Provider","HTMLElement","customElements","define","apiTicketingSystemDelete","apiCurrentTicketingSystemGet","apiTicketingSystemsGet","ticketingSystems","apiTicketingSystemPost","ticketingSystem","secret","tsRequest","apiTicketingSystemPut","event","preventDefault","updateTicketingSystem","createTicketingSystem","ticketingSystemType","serviceAccount","serviceAccountSecret","systemId","fetchData","confirm","deleteTicketingSystem","Select","SelectItem","text","map","type","i","Button","kind","tabIndex","onClick","handleDelete","apiProductVersionsGet","apiProductVersionGet","versionId","apiUpdateProductVersionsStatus","apiProductVersionPost","productVersion","apiProductVersionPut","apiProductVersionDelete","addProductVersion","updateProductVersions","handleStartDateChange","date","startDate","moment","toISOString","format","handleEndDateChange","endDate","match","DatePicker","dateFormat","datePickerType","DatePickerInput","placeholder","version","versionPut","buttonId","getVersionDetails","buttonClassName","ProductVersion","handleDeleteVersion","deleteVersion","getProductVersions","versions","productVersions","DataTable","rows","rowData","headerData","getHeaderProps","getTableProps","TableContainer","Table","TableHead","TableRow","header","TableHeader","TableBody","Object","keys","index","TableCell","Toggle","size","handleToggleChange","aria-label","defaultToggled","display","width","key","entVersion","homeUrl","subscription","Breadcrumb","margin","BreadcrumbItem","href","loading","adminConfig","label","content","Tile","Accordion","AccordionItem","title","description","toString","AdminConfigurationElement","apiPartnerPost","partner","apiProjectsGet","apiProjectGet","apiProjectPost","apiProjectPut","apiAddSubscriptionToProject","subscriptionId","apiAddUserToProject","userId","apiDeletePartnerFromProject","partnerId","apiDeleteSubscriptionFromProject","apiDeleteUserFromProject","apiAddPartnerToProject","apiGetProjectUsers","apiGetProjectSubscriptions","AuthenticatedView","children","UnauthenticatedView","partnerNumber","partnerPost","projectList","projects","console","log","result","trim","alert","projectPost","getAllProjects","customerList","getCustomers","customers","allCustomers","allProjects","projectPut","updateProjectList","getProjectDetails","ManagePartnersModal","handleRemovePartner","removePartner","err","hasForm","partners","border","borderTop","handleClick","showMenu","handleOutsideClick","prevState","node","contains","isAdmin","actionDivider","topButton","padding","editProject","subscriptionParam","newOrRenewSubscription","textDecoration","managePartners","manageUsers","manageSubscriptions","openTicket","viewAllTickets","substr","rel","deleteProject","handleDeleteProject","zIndex","position","backgroundColor","to","formatStartDate","String","Date","toDateString","formatEndDate","lengthInMonths","setMonth","getMonth","apiSubscriptionGet","apiProjectSubscriptionPost","projectSubscriptionCreation","apiProjectSubscriptionPut","apiRenewSubscription","projectSubscriptionRenew","action","callback","partnerIndex","entandoVersion","minHeight","paddingBottom","getCustomerDetails","getCustomer","updateCustomer","deleteCustomer","open","accordionOpened","getTime","handleSearch","newFilteredState","filter","toLowerCase","filteredCustomers","currentPage","undefined","forceUpdate","role","test","numberOfPages","Math","ceil","Search","onKeyPress","indexOfLastItem","firstIndexOfCurrentPage","PaginationNav","loop","Boolean","page","Number","totalItems","itemsShown","AdminDashboardElement","jiraResource","apiJiraTicketsGet","apiJiraTicketPost","ticket","tickets","ticketSystemUrl","ticketingSystemBaseUrl","ticketUrl","summary","priority","createDate","updateDate","subscriptionData","updateSubscription","users","params","license","level","user","username","path","AppElement","apiUserGetByUsernameAndEmail","email","apiKeycloakUserGet","realm","usersResource","mapKeycloakUserEmails","keycloakUsers","usernameEmailMap","Map","forEach","keycloakUser","set","assignUser","handleFormValidation","assignUserToProject","res","dispatchEvent","CustomEvent","getPortalUserId","portalUserId","portalUserApi","portalUser","warn","authServerUrl","search","location","URLSearchParams","userList","unshift","setupFormComponents","AssignUserElement","handleRemoveUser","displayUsers","handleUserDisplay","userAccess","row","cells","cell","DeleteUserElement","createTicket","types","priorities","error","FormsOpenTicketElement","KEYCLOAK_EVENT_ID","keycloakEventHandler","bind","keycloakEvent","detail","logout","loginUrl","redirectUri","origin","login","LoginElement","handleDeleteSubscription","deleteSubscription","subscriptions","ManageSubscriptionsElement","userFunctionality","ManageUserElement","Navigation","NavigationElement","OpenTicketElement","ProductVersionElement","SubscriptionElement","FORM_TYPE","SUBSCRIPTION_LEVEL","GOLD","PLATINUM","SUBSCRIPTION_STATUS","requested","pending","active","expired","submitSuccess","submitError","formatted","formType","subscriptionRequest","stateToSubscription","updateStateForSuccess","newSubscription","renewSubscription","entandoVersionId","str","isNaN","isNumeric","success","renewal","projectSubscription","toUpperCase","subscriptionLevelList","entries","versionList","statusList","disabled","subscriptionType","createFormMessage","subMessageKey","formLabelKey","successErrorMessage","renderForm","SubscriptionFormElement","TicketListCustomerElement","TicketingSystemElement","forceRefresh","exact","LocalAppElement"],"mappings":"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","file":"static/js/main.fdf300b2.chunk.js","sourcesContent":["import i18n from 'i18n-js';\r\n\r\nimport en from './i18n/locales/en.json';\r\nimport it from './i18n/locales/it.json';\r\n\r\ni18n.defaultLocale = 'en';\r\ni18n.locale = 'en';\r\ni18n.fallbacks = true;\r\ni18n.translations = { en, it };\r\n\r\nexport const setLocale = locale => {\r\n  i18n.locale = locale;\r\n};\r\n\r\nexport default i18n;\r\n","import React from 'react';\r\n\r\nconst KeycloakContext = React.createContext(null);\r\n\r\nexport default KeycloakContext;\r\n","import PropTypes from 'prop-types';\r\n\r\nexport default PropTypes.oneOfType([PropTypes.func, PropTypes.shape({ current: PropTypes.elementType }), PropTypes.shape(null)]);\r\n","/* eslint-disable react/jsx-props-no-spreading */\r\nimport React, { forwardRef, Component } from 'react';\r\nimport refType from '../components/__types__/ref';\r\nimport KeycloakContext from './KeycloakContext';\r\n\r\nexport default function withKeycloak(WrappedComponent) {\r\n  class WithKeycloakComponent extends Component {\r\n    renderWrappedComponent = value => {\r\n      const { forwardedRef, ...rest } = this.props;\r\n      return <WrappedComponent {...rest} ref={forwardedRef} keycloak={value} />;\r\n    };\r\n\r\n    render() {\r\n      return <KeycloakContext.Consumer>{this.renderWrappedComponent}</KeycloakContext.Consumer>;\r\n    }\r\n  }\r\n\r\n  WithKeycloakComponent.propTypes = {\r\n    forwardedRef: refType,\r\n  };\r\n\r\n  WithKeycloakComponent.defaultProps = {\r\n    forwardedRef: () => {},\r\n  };\r\n\r\n  return forwardRef((props, ref) => <WithKeycloakComponent {...props} forwardedRef={ref} />);\r\n}\r\n","export const DOMAIN = process.env.REACT_APP_PATH || ''; // eslint-disable-line import/prefer-default-export\r\n\r\n//Customer Portal roles\r\nexport const ADMIN = 'cp-admin';\r\nexport const SUPPORT = 'cp-support';\r\nexport const PARTNER = 'cp-partner';\r\nexport const CUSTOMER = 'cp-customer';\r\n\r\n//Page codes\r\nexport const PAGE_CUSTOMER_PORTAL = 'customer_portal.page'\r\nexport const PAGE_ADMIN_CONFIG = 'cp_admin_config.page'\r\nexport const PAGE_MANAGE_SUBSCRIPTIONS = 'cp_manage_subscriptions.page'\r\nexport const PAGE_MANAGE_USERS = 'cp_manage_users.page'\r\nexport const PAGE_SUBSCRIPTION_FORM = 'cp_subscription.page'\r\nexport const PAGE_TICKET_FORM = 'cp_ticket.page'\r\n","import {ADMIN, SUPPORT, CUSTOMER, PARTNER, DOMAIN} from './constants';\r\n\r\nexport const getKeycloakToken = () => {\r\n  if (window && window.entando && window.entando.keycloak && window.entando.keycloak.authenticated) {\r\n    return window.entando.keycloak.token;\r\n  }\r\n  return '';\r\n};\r\n\r\nexport const isAuthenticated = props => {\r\n  const {keycloak} = props;\r\n  return keycloak.initialized && keycloak.authenticated;\r\n};\r\n\r\nexport const authenticationChanged = (props, prevProps) => {\r\n  const authenticated = isAuthenticated(props);\r\n  const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n  return authenticated && changedAuth;\r\n};\r\n\r\nexport const isPortalAdmin = () => {\r\n  return hasKeycloakClientRole(ADMIN);\r\n};\r\n\r\nexport const isPortalSupport = () => {\r\n  return hasKeycloakClientRole(SUPPORT);\r\n};\r\n\r\nexport const isPortalPartner = () => {\r\n  return hasKeycloakClientRole(PARTNER);\r\n};\r\n\r\nexport const isPortalCustomer = () => {\r\n  return hasKeycloakClientRole(CUSTOMER);\r\n};\r\n\r\nexport const isPortalAdminOrSupport = () => {\r\n  return isPortalAdmin() || isPortalSupport();\r\n};\r\n\r\nexport const isPortalCustomerOrPartner = () => {\r\n  return isPortalCustomer() || isPortalPartner();\r\n};\r\n\r\nexport const isPortalUser = () => {\r\n  return isPortalAdminOrSupport() || isPortalCustomerOrPartner();\r\n};\r\n\r\nexport const hasKeycloakClientRole = clientRole => {\r\n  if (getKeycloakToken()) {\r\n    const { resourceAccess } = window.entando.keycloak;\r\n    if (resourceAccess) {\r\n      for (const client in resourceAccess) {\r\n        const item = resourceAccess[client];\r\n        if (item.roles && item.roles.includes(clientRole)) {\r\n          // console.debug(\"Found role {} with client {} \", clientRole, client);\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return false;\r\n};\r\n\r\nexport const getDefaultOptions = () => ({\r\n  headers: new Headers({\r\n    Authorization: `Bearer ${getKeycloakToken()}`,\r\n    'Content-Type': 'application/json',\r\n  }),\r\n});\r\n\r\nexport const getDefaultKeycloakOptions = () => ({\r\n  headers: new Headers({\r\n    Authorization: `Bearer ${getKeycloakToken()}`,\r\n    'Content-Type': 'application/x-www-form-urlencoded',\r\n  }),\r\n});\r\n\r\nexport const getActiveSubscription = project => {\r\n  return (\r\n    project &&\r\n    project.projectSubscriptions &&\r\n    project.projectSubscriptions.find(item => {\r\n      return item.status === 'ACTIVE' ? item : null;\r\n    })\r\n  );\r\n};\r\n\r\nexport const getPageUrl = (pageCode, locale) => {\r\n  const url = `${DOMAIN}/${locale}/${pageCode}`;\r\n  return getUrl(url);\r\n}\r\n\r\nexport const getUrl = url => {\r\n  return `${url}`;\r\n};\r\n\r\nexport const request = async (url, options) => {\r\n  const response = await fetch(url, options);\r\n\r\n  const headers = {\r\n    ...(response.headers.has('X-Total-Count') ? {'X-Total-Count': parseInt(response.headers.get('X-Total-Count'), 10)} : {}),\r\n  };\r\n\r\n  if (response.status === 204) {\r\n    return { data: '', status: response.status };\r\n  }\r\n\r\n  return response.status >= 200 && response.status < 300\r\n    ? { data: await response.json(), headers, status: response.status }\r\n    : Promise.reject(new Error(response.statusText || response.status));\r\n};\r\n","import { getDefaultOptions, request, getUrl } from './helpers';\r\n\r\nconst resource = 'api/customers';\r\n\r\nexport const apiCustomerDelete = async (serviceUrl, id) => {\r\n  const url = `${serviceUrl}/${resource}/${id}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiCustomersGet = async serviceUrl => {\r\n  const url = getUrl(`${serviceUrl}/${resource}`);\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiCustomerGet = async (serviceUrl, id) => {\r\n  const url = getUrl(`${serviceUrl}/${resource}/${id}`);\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiCustomerPost = async (serviceUrl, customer) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n    body: customer ? JSON.stringify(customer) : null,\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiCustomerPut = async (serviceUrl, customer) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'PUT',\r\n    body: customer ? JSON.stringify(customer) : null,\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiAddProjectToCustomer = async (serviceUrl, customerId, projectId) => {\r\n  const url = `${serviceUrl}/${resource}/${customerId}/projects/${projectId}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiDeleteProjectFromCustomer = async (serviceUrl, customerId, projectId) => {\r\n  const url = `${serviceUrl}/${resource}/${customerId}/projects/${projectId}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE',\r\n  };\r\n  return request(url, options);\r\n};\r\n","import React, { Component } from 'react';\r\nimport i18n from '../../i18n';\r\nimport { ModalWrapper, Form, TextInput, TextArea } from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport {apiCustomerPost} from '../../api/customers';\r\nimport {isAuthenticated} from \"../../api/helpers\";\r\n\r\nclass AddCustomerModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      name: '',\r\n      customerNumber: '',\r\n      contactName: '',\r\n      contactPhone: '',\r\n      contactEmail: '',\r\n      notes: '',\r\n      invalid: {},\r\n      submitMsg: '',\r\n      submitColour: 'black',\r\n    };\r\n\r\n    this.baseState = this.state;\r\n  }\r\n\r\n  handleValidation() {\r\n    let invalid = {};\r\n    let formIsValid = true;\r\n\r\n    if (this.state.name === '') {\r\n      formIsValid = false;\r\n      invalid['name'] = true;\r\n    }\r\n\r\n    if (this.state.customerNumber === '') {\r\n      formIsValid = false;\r\n      invalid['customerNumber'] = true;\r\n    }\r\n\r\n    if (typeof this.state.contactEmail !== 'undefined') {\r\n      let lastAtPos = this.state.contactEmail.lastIndexOf('@');\r\n      let lastDotPos = this.state.contactEmail.lastIndexOf('.');\r\n\r\n      if (\r\n        !(\r\n          lastAtPos < lastDotPos &&\r\n          lastAtPos > 0 &&\r\n          this.state.contactEmail.indexOf('@@') === -1 &&\r\n          lastDotPos > 2 &&\r\n          this.state.contactEmail.length - lastDotPos > 2\r\n        )\r\n      ) {\r\n        formIsValid = false;\r\n        invalid['contactEmail'] = true;\r\n      }\r\n    }\r\n\r\n    this.setState({ invalid: invalid });\r\n    return formIsValid;\r\n  }\r\n\r\n  handleChanges = e => {\r\n    const input = e.target;\r\n    const name = input.name;\r\n    const value = input.value;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  async customerPost(customer) {\r\n    if (isAuthenticated(this.props)) {\r\n      return await apiCustomerPost(this.props.serviceUrl, customer);\r\n    }\r\n  }\r\n\r\n  handleFormSubmit = () => {\r\n    const formIsValid = this.handleValidation();\r\n\r\n    if (formIsValid) {\r\n      const customer = {\r\n        name: this.state.name,\r\n        customerNumber: this.state.customerNumber,\r\n        contactName: this.state.contactName,\r\n        contactPhone: this.state.contactPhone,\r\n        contactEmail: this.state.contactEmail,\r\n        notes: this.state.notes,\r\n      };\r\n\r\n      this.customerPost(customer)\r\n        .then(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.added'),\r\n            submitColour: '#24a148',\r\n          });\r\n          this.props.updateCustomerList();\r\n        })\r\n        .catch(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.error'),\r\n            submitColour: '#da1e28',\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  clearValues = () => {\r\n    const customerModalElement = document.querySelector('#modal-form-customer');\r\n    if (!customerModalElement.className.includes('is-visible')) {\r\n      this.setState(this.baseState);\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    const modalOpenButton = document.querySelector('.add-customer-button');\r\n    modalOpenButton.addEventListener('click', this.clearValues, false);\r\n  }\r\n\r\n  render() {\r\n    const modalConfirmation = (\r\n      <div className=\"bx--modal-header\">\r\n        <p style={{color: this.state.submitColour}}>{this.state.submitMsg}</p>\r\n      </div>\r\n    );\r\n    const modalId = 'modal-form-customer';\r\n    return (\r\n      <ModalWrapper\r\n        buttonTriggerText={i18n.t('buttons.addCustomer')}\r\n        modalHeading={i18n.t('adminDashboard.addCustomer.title')}\r\n        buttonTriggerClassName=\"add-customer bx--btn bx--btn--tertiary add-customer-button\"\r\n        className=\"modal-form\"\r\n        id={modalId}\r\n        handleSubmit={this.handleFormSubmit}\r\n        primaryButtonText={i18n.t('modalText.save')}\r\n        secondaryButtonText={i18n.t('modalText.cancel')}\r\n      >\r\n        {modalConfirmation}\r\n        <div className=\"form-container\">\r\n          <Form onSubmit={this.handleFormSubmit}>\r\n            <TextInput\r\n              id={'name' + modalId}\r\n              name=\"name\"\r\n              labelText={i18n.t('adminDashboard.addCustomer.customerName') + ' *'}\r\n              value={this.state.name}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.required')}\r\n              invalid={this.state.invalid['name']}\r\n            />\r\n            <TextInput\r\n              id={'customerNumber' + modalId}\r\n              name=\"customerNumber\"\r\n              labelText={i18n.t('adminDashboard.addCustomer.customerNumber') + ' *'}\r\n              value={this.state.customerNumber}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.required')}\r\n              invalid={this.state.invalid['customerNumber']}\r\n            />\r\n            <TextInput\r\n              id={'contactName' + modalId}\r\n              name=\"contactName\"\r\n              labelText={i18n.t('adminDashboard.addCustomer.contactName')}\r\n              value={this.state.contactName}\r\n              onChange={this.handleChanges}\r\n            />\r\n            <TextInput\r\n              id={'contactPhone' + modalId}\r\n              name=\"contactPhone\"\r\n              labelText={i18n.t('adminDashboard.addCustomer.contactPhone')}\r\n              value={this.state.contactPhone}\r\n              onChange={this.handleChanges}\r\n            />\r\n            <TextInput\r\n              id={'contactEmail' + modalId}\r\n              name=\"contactEmail\"\r\n              labelText={i18n.t('adminDashboard.addCustomer.contactEmail') + ' *'}\r\n              value={this.state.contactEmail}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.email')}\r\n              invalid={this.state.invalid['contactEmail']}\r\n            />\r\n            <TextArea\r\n              id={'notes' + modalId}\r\n              name=\"notes\"\r\n              labelText={i18n.t('adminDashboard.addCustomer.notes')}\r\n              value={this.state.notes}\r\n              onChange={this.handleChanges}\r\n            />\r\n          </Form>\r\n        </div>\r\n        {modalConfirmation}\r\n      </ModalWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withKeycloak(AddCustomerModal);\r\n","export const publishWidgetEvent = (eventId, payload) => {\r\n  const widgetEvent = new CustomEvent(eventId, {\r\n    detail: {\r\n      payload,\r\n    },\r\n  });\r\n  window.dispatchEvent(widgetEvent);\r\n};\r\n\r\nexport const createWidgetEventPublisher = eventType => payload => publishWidgetEvent(eventType, payload);\r\n\r\nexport const subscribeToWidgetEvent = (eventType, eventHandler) => {\r\n  window.addEventListener(eventType, eventHandler);\r\n\r\n  return () => {\r\n    window.removeEventListener(eventType, eventHandler);\r\n  };\r\n};\r\n\r\nexport const subscribeToWidgetEvents = (widgetEvents, eventHandler) => {\r\n  widgetEvents.forEach(eventType => window.addEventListener(eventType, eventHandler));\r\n\r\n  return () => {\r\n    widgetEvents.forEach(eventType => window.removeEventListener(eventType, eventHandler));\r\n  };\r\n};\r\n\r\nexport const widgetEventToFSA = widgetEvent => {\r\n  // for info about Flux Standard Action (FSA) see https://github.com/redux-utilities/flux-standard-action\r\n  const {\r\n    type,\r\n    detail: { payload, error, meta },\r\n  } = widgetEvent;\r\n  return { type, payload, error, meta };\r\n};\r\n","export const INPUT_EVENT_TYPES = {\r\n  formUpdate: 'customer.form.update',\r\n  formCreate: 'customer.form.create',\r\n  formDelete: 'customer.form.delete',\r\n};\r\n\r\nexport const OUTPUT_EVENT_TYPES = {\r\n  select: 'customer.table.select',\r\n  add: 'customer.table.add',\r\n  error: 'customer.table.error',\r\n  delete: 'customer.table.delete',\r\n};\r\n\r\nexport const KEYCLOAK_EVENT_TYPE = 'keycloak';\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport AddCustomerModal from '../components/Admin/AddCustomerModal';\r\nimport '../index.scss';\r\n\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\n\r\nimport {subscribeToWidgetEvent} from '../helpers/widgetEvents';\r\nimport {KEYCLOAK_EVENT_TYPE} from './widgetEventTypes';\r\nimport * as Locale from '../i18n';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window && window.entando && window.entando.keycloak && {...window.entando.keycloak, initialized: true}) || {\r\n    initialized: false,\r\n  };\r\n\r\nconst ATTRIBUTES = {\r\n  hidden: 'hidden',\r\n  locale: 'locale',\r\n  paginationMode: 'pagination-mode',\r\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n  serviceUrl: 'service-url',\r\n};\r\n\r\nclass AdminAddCustomerElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    //retargetEvents(shadowRoot);\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n    const locale = this.getAttribute(ATTRIBUTES.locale) || '';\r\n    Locale.setLocale(locale);\r\n\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <AddCustomerModal serviceUrl={serviceUrl} locale={locale}/>\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.define('cp-admin-add-customer-widget', AdminAddCustomerElement);\r\n","import {getDefaultOptions, request} from './helpers';\r\n\r\nconst resource = 'api/ticketing-systems';\r\n\r\nexport const apiTicketingSystemDelete = async (serviceUrl, id) => {\r\n  const url = `${serviceUrl}/${resource}/${id}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiCurrentTicketingSystemGet = async serviceUrl => {\r\n  const ticketingSystems = (await apiTicketingSystemsGet(serviceUrl)).data;\r\n  //Simplifying assumption to take the latest ticketing system as the current config. There should be only 1.\r\n  return ticketingSystems && ticketingSystems.length ? ticketingSystems[ticketingSystems.length - 1] : null;\r\n};\r\n\r\nexport const apiTicketingSystemsGet = async serviceUrl => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\n//Note: post and put both use a ticketingsystemrequest\r\nexport const apiTicketingSystemPost = async (serviceUrl, ticketingSystem, secret) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const tsRequest = {\r\n    \"ticketingSystem\": ticketingSystem,\r\n    \"secret\": secret\r\n  }\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n    body: JSON.stringify(tsRequest),\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiTicketingSystemPut = async (serviceUrl, ticketingSystem, secret) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const tsRequest = {\r\n    \"ticketingSystem\": ticketingSystem,\r\n    \"secret\": secret\r\n  }\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'PUT',\r\n    body: JSON.stringify(tsRequest),\r\n  };\r\n  return request(url, options);\r\n};\r\n","import React, { Component } from 'react';\r\nimport i18n from '../../../i18n';\r\nimport { Form, TextInput, Select, SelectItem, Button } from 'carbon-components-react';\r\nimport {\r\n  apiCurrentTicketingSystemGet,\r\n  apiTicketingSystemDelete,\r\n  apiTicketingSystemPost,\r\n  apiTicketingSystemPut,\r\n} from '../../../api/ticketingsystem';\r\nimport {authenticationChanged, isAuthenticated, isPortalAdmin} from '../../../api/helpers';\r\nimport withKeycloak from '../../../auth/withKeycloak';\r\n\r\nclass TicketingSystem extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      ticketingSystem: {},\r\n      ticketingSystemType: 'Jira',\r\n      url: '',\r\n      serviceAccount: '',\r\n      serviceAccountSecret: '',\r\n      systemId: '',\r\n      submitMsg: '',\r\n      submitColour: 'black',\r\n    };\r\n  }\r\n\r\n  handleChanges = e => {\r\n    const input = e.target;\r\n    const name = input.name;\r\n    const value = input.value;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  async createTicketingSystem() {\r\n    const ticketingSystem = {\r\n      url: this.state.url,\r\n      serviceAccount: this.state.serviceAccount,\r\n      systemId: this.state.systemId,\r\n    };\r\n    const response = (await apiTicketingSystemPost(this.props.serviceUrl, ticketingSystem, this.state.serviceAccountSecret)).data;\r\n    this.setState({\r\n      ticketingSystem: response,\r\n    });\r\n  }\r\n\r\n  async updateTicketingSystem() {\r\n    const ticketingSystem = {\r\n      id: this.state.ticketingSystem.id,\r\n      url: this.state.url,\r\n      serviceAccount: this.state.serviceAccount,\r\n      systemId: this.state.systemId,\r\n    };\r\n    return await apiTicketingSystemPut(this.props.serviceUrl, ticketingSystem, this.state.serviceAccountSecret);\r\n  }\r\n\r\n  async fetchData() {\r\n    const ticketingSystem = await apiCurrentTicketingSystemGet(this.props.serviceUrl);\r\n    this.setState({\r\n      ticketingSystem: ticketingSystem,\r\n      url: ticketingSystem ? ticketingSystem.url : '',\r\n      serviceAccount: ticketingSystem ? ticketingSystem.serviceAccount : '',\r\n      //Secret needs to be entered each time\r\n      systemId: ticketingSystem ? ticketingSystem.systemId : '',\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (isAuthenticated(this.props)) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (authenticationChanged(this.props, prevProps)) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n\r\n  async deleteTicketingSystem() {\r\n    return await apiTicketingSystemDelete(this.props.serviceUrl, this.state.ticketingSystem.id);\r\n  }\r\n\r\n  handleDelete() {\r\n    if (window.confirm('Are you sure you want to delete this ticketing system?')) {\r\n      this.deleteTicketingSystem()\r\n        .then(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.deleted'),\r\n            submitColour: '#24a148',\r\n          });\r\n          this.fetchData();\r\n        })\r\n        .catch(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.error'),\r\n            submitColour: '#da1e28',\r\n          });\r\n        });\r\n    }\r\n  }\r\n\r\n  handleFormSubmit = event => {\r\n    event.preventDefault();\r\n    if (!this.state.ticketingSystem) {\r\n      this.createTicketingSystem()\r\n        .then(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.created'),\r\n            submitColour: '#24a148',\r\n          });\r\n        })\r\n        .catch(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.error'),\r\n            submitColour: '#da1e28',\r\n          });\r\n        });\r\n    } else {\r\n      this.updateTicketingSystem()\r\n        .then(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.updated'),\r\n            submitColour: '#24a148',\r\n          });\r\n        })\r\n        .catch(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.error'),\r\n            submitColour: '#da1e28',\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const ticketingSystemTypes = ['Jira'];\r\n    if (isPortalAdmin()) {\r\n      return (\r\n        <div className=\"cp-form\">\r\n          <p style={{ color: this.state.submitColour }}>{this.state.submitMsg}</p>\r\n          <Form onSubmit={this.handleFormSubmit}>\r\n            <div className=\"bx--grid\">\r\n              <div className=\"bx--row\">\r\n                <div className=\"bx--col\">\r\n                  <Select\r\n                    id=\"ticketingSystemType\"\r\n                    name=\"ticketingSystemType\"\r\n                    labelText={i18n.t('adminConfig.integrationTicketingSystem.selectBackendTicketingSystem')}\r\n                    value={this.state.ticketingSystemType}\r\n                    onChange={this.handleChanges}\r\n                  >\r\n                    <SelectItem text={i18n.t('adminConfig.integrationTicketingSystem.select')}\r\n                                value=\"ticketing-system\"/>\r\n                    {ticketingSystemTypes.map((type, i) => (\r\n                      <SelectItem key={i} text={type} value={type}>\r\n                        {type}\r\n                      </SelectItem>\r\n                    ))}\r\n                  </Select>\r\n                  <TextInput\r\n                    id=\"serviceAccount\"\r\n                    name=\"serviceAccount\"\r\n                    labelText={i18n.t('adminConfig.integrationTicketingSystem.userName')}\r\n                    value={this.state.serviceAccount}\r\n                    onChange={this.handleChanges}\r\n                  />\r\n                  <TextInput\r\n                    id=\"systemId\"\r\n                    name=\"systemId\"\r\n                    labelText={i18n.t('adminConfig.integrationTicketingSystem.projectName')}\r\n                    value={this.state.systemId}\r\n                    onChange={this.handleChanges}\r\n                  />\r\n                </div>\r\n                <div className=\"bx--col\">\r\n                  <TextInput\r\n                    id=\"url\"\r\n                    name=\"url\"\r\n                    labelText={i18n.t('adminConfig.integrationTicketingSystem.url')}\r\n                    value={this.state.url}\r\n                    onChange={this.handleChanges}\r\n                  />\r\n                  <TextInput\r\n                    id=\"serviceAccountSecret\"\r\n                    name=\"serviceAccountSecret\"\r\n                    type=\"password\"\r\n                    labelText={i18n.t('adminConfig.integrationTicketingSystem.password')}\r\n                    value={this.state.serviceAccountSecret}\r\n                    onChange={this.handleChanges}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <Button kind=\"primary\" tabIndex={0} type=\"submit\">\r\n                {' '}\r\n                {i18n.t('buttons.submit')}{' '}\r\n              </Button>\r\n              {this.state.ticketingSystem ? (\r\n                <Button kind=\"danger\" onClick={() => this.handleDelete()}>\r\n                  {' '}\r\n                  Delete{' '}\r\n                </Button>\r\n              ) : null}\r\n            </div>\r\n          </Form>\r\n        </div>\r\n      );\r\n    }\r\n    // Unauthorized\r\n    else {\r\n      return <p>{i18n.t('userMessages.unauthorized')}</p>;\r\n    }\r\n  }\r\n}\r\n\r\nexport default withKeycloak(TicketingSystem);\r\n","import { getDefaultOptions, request } from './helpers';\r\n\r\nconst resource = 'api/entando-versions';\r\n\r\nexport const apiProductVersionsGet = async serviceUrl => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiProductVersionGet = async (serviceUrl, versionId) => {\r\n  const url = `${serviceUrl}/${resource}/${versionId}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiUpdateProductVersionsStatus = async (serviceUrl, id) => {\r\n  const url = `${serviceUrl}/${resource}/${id}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'PUT',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiProductVersionPost = async (serviceUrl, productVersion) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n    body: productVersion ? JSON.stringify(productVersion) : null,\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiProductVersionPut = async (serviceUrl, productVersion) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'PUT',\r\n    body: productVersion ? JSON.stringify(productVersion) : null,\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiProductVersionDelete = async (serviceUrl, id) => {\r\n  const url = `${serviceUrl}/${resource}/${id}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE',\r\n  };\r\n  return request(url, options);\r\n};\r\n","import React, { Component } from 'react';\r\nimport i18n from '../../i18n';\r\nimport { ModalWrapper, Form, TextInput, DatePicker, DatePickerInput } from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport { apiProductVersionPost } from '../../api/productVersion';\r\nimport moment from 'moment';\r\nimport {isAuthenticated} from \"../../api/helpers\";\r\n\r\nclass AddProductVersionModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      name: '',\r\n      startDate: '',\r\n      endDate: '',\r\n      invalid: {},\r\n      submitMsg: '',\r\n      submitColour: 'black',\r\n    };\r\n\r\n    this.baseState = this.state;\r\n  }\r\n\r\n  handleValidation() {\r\n    let invalid = {};\r\n    let formIsValid = true;\r\n\r\n    //name\r\n    if (this.state.name === '') {\r\n      formIsValid = false;\r\n      invalid['name'] = true;\r\n    }\r\n\r\n    if (typeof this.state.startDate !== 'undefined') {\r\n      if (!this.state.startDate.match(/^(0[1-9]|1[0-2])\\/(0[1-9]|1\\d|2\\d|3[01])\\/(19|20)\\d{2}$/)) {\r\n        formIsValid = false;\r\n        invalid['startDate'] = true;\r\n      }\r\n    }\r\n\r\n    if (typeof this.state.endDate !== 'undefined') {\r\n      if (!this.state.endDate.match(/^(0[1-9]|1[0-2])\\/(0[1-9]|1\\d|2\\d|3[01])\\/(19|20)\\d{2}$/)) {\r\n        formIsValid = false;\r\n        invalid['endDate'] = true;\r\n      }\r\n    }\r\n\r\n    this.setState({ invalid: invalid });\r\n    return formIsValid;\r\n  }\r\n\r\n  handleChanges = e => {\r\n    const input = e.target;\r\n    const name = input.name;\r\n    const value = input.value;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  async addProductVersion() {\r\n    if (isAuthenticated(this.props)) {\r\n      return await apiProductVersionPost(this.props.serviceUrl, this.state);\r\n    }\r\n  }\r\n\r\n  handleFormSubmit = () => {\r\n    const formIsValid = this.handleValidation();\r\n\r\n    if (formIsValid) {\r\n      this.addProductVersion()\r\n        .then(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.added'),\r\n            submitColour: '#24a148',\r\n          });\r\n          this.props.updateProductVersions();\r\n        })\r\n        .catch(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.error'),\r\n            submitColour: '#da1e28',\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  clearValues = () => {\r\n    const customerModalElement = document.querySelector('#modal-form-product-version');\r\n    if (!customerModalElement.className.includes('is-visible')) {\r\n      this.setState(this.baseState);\r\n    }\r\n  };\r\n\r\n  handleStartDateChange = date => {\r\n    this.setState({\r\n      startDate: moment(date[0].toISOString()).format('MM/DD/YYYY'),\r\n    });\r\n  };\r\n\r\n  handleEndDateChange = date => {\r\n    this.setState({\r\n      endDate: moment(date[0].toISOString()).format('MM/DD/YYYY'),\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    const modalOpenButton = document.querySelector('.add-product-version-button');\r\n    modalOpenButton.addEventListener('click', this.clearValues, false);\r\n  }\r\n\r\n  render() {\r\n    const modalConfirmation = (\r\n      <div className=\"bx--modal-header\">\r\n        <p style={{color: this.state.submitColour}}>{this.state.submitMsg}</p>\r\n      </div>\r\n    );\r\n    const modalId = 'modal-form-product-version';\r\n    return (\r\n      <ModalWrapper\r\n        buttonTriggerText={i18n.t('buttons.addProductVersion')}\r\n        modalHeading={i18n.t('adminDashboard.addProductVersion.title')}\r\n        buttonTriggerClassName=\"add-product-version bx--btn bx--btn--tertiary add-product-version-button\"\r\n        className=\"modal-form\"\r\n        id={modalId}\r\n        handleSubmit={this.handleFormSubmit}\r\n      >\r\n        {modalConfirmation}\r\n        <div className=\"form-container\">\r\n          <Form onSubmit={this.handleFormSubmit}>\r\n            <TextInput\r\n              id={'name' + modalId}\r\n              name=\"name\"\r\n              labelText={i18n.t('adminDashboard.addProductVersion.productVersion')}\r\n              value={this.state.name}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.required')}\r\n              invalid={this.state.invalid['name']}\r\n            />\r\n            <DatePicker dateFormat=\"m/d/Y\" datePickerType=\"single\" onChange={this.handleStartDateChange}>\r\n              <DatePickerInput\r\n                id={'startDate' + modalId}\r\n                name=\"startDate\"\r\n                placeholder=\"mm/dd/yyyy\"\r\n                labelText={i18n.t('adminDashboard.addProductVersion.productVersionStartDate')}\r\n                value={this.state.startDate}\r\n                //onChange={this.handleChanges}\r\n                type=\"text\"\r\n                invalidText={i18n.t('validation.invalid.date')}\r\n                invalid={this.state.invalid['startDate']}\r\n              />\r\n            </DatePicker>\r\n            <DatePicker dateFormat=\"m/d/Y\" datePickerType=\"single\" onChange={this.handleEndDateChange}>\r\n              <DatePickerInput\r\n                id={'endDate' + modalId}\r\n                name=\"endDate\"\r\n                placeholder=\"mm/dd/yyyy\"\r\n                labelText={i18n.t('adminDashboard.addProductVersion.productVersionEndDate')}\r\n                value={this.state.endDate}\r\n                type=\"text\"\r\n                invalidText={i18n.t('validation.invalid.date')}\r\n                invalid={this.state.invalid['endDate']}\r\n              />\r\n            </DatePicker>\r\n          </Form>\r\n        </div>\r\n        {modalConfirmation}\r\n      </ModalWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withKeycloak(AddProductVersionModal);\r\n","import React, { Component } from 'react';\r\nimport i18n from '../../i18n';\r\nimport { ModalWrapper, Form, TextInput, DatePicker, DatePickerInput } from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport { apiProductVersionGet, apiProductVersionPut } from '../../api/productVersion';\r\nimport moment from 'moment';\r\nimport {authenticationChanged, isAuthenticated} from '../../api/helpers';\r\n\r\nclass EditVersionModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      name: '',\r\n      startDate: '',\r\n      endDate: '',\r\n      invalid: {},\r\n      modalId: '',\r\n      buttonId: '',\r\n      submitMsg: '',\r\n      submitColour: 'black',\r\n    };\r\n  }\r\n\r\n  handleValidation() {\r\n    let invalid = {};\r\n    let formIsValid = true;\r\n\r\n    //name\r\n    if (this.state.name === '') {\r\n      formIsValid = false;\r\n      invalid['name'] = true;\r\n    }\r\n\r\n    if (typeof this.state.startDate !== 'undefined') {\r\n      if (!this.state.startDate.match(/^(0[1-9]|1[0-2])\\/(0[1-9]|1\\d|2\\d|3[01])\\/(19|20)\\d{2}$/)) {\r\n        formIsValid = false;\r\n        invalid['startDate'] = true;\r\n      }\r\n    }\r\n\r\n    if (typeof this.state.endDate !== 'undefined') {\r\n      if (!this.state.endDate.match(/^(0[1-9]|1[0-2])\\/(0[1-9]|1\\d|2\\d|3[01])\\/(19|20)\\d{2}$/)) {\r\n        formIsValid = false;\r\n        invalid['endDate'] = true;\r\n      }\r\n    }\r\n\r\n    this.setState({ invalid: invalid });\r\n    return formIsValid;\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (authenticationChanged(this.props, prevProps)) {\r\n      this.getVersionDetails();\r\n    }\r\n  }\r\n\r\n  handleChanges = e => {\r\n    const input = e.target;\r\n    const name = input.name;\r\n    const value = input.value;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleStartDateChange = date => {\r\n    this.setState({\r\n      startDate: moment(date[0].toISOString()).format('MM/DD/YYYY'),\r\n    });\r\n  };\r\n\r\n  handleEndDateChange = date => {\r\n    this.setState({\r\n      endDate: moment(date[0].toISOString()).format('MM/DD/YYYY'),\r\n    });\r\n  };\r\n\r\n  async getVersionDetails() {\r\n    const version = await apiProductVersionGet(this.props.serviceUrl, this.props.version.id);\r\n    this.setState({\r\n      name: version.data.name,\r\n      startDate: moment(version.data.startDate).format('MM/DD/YYYY'),\r\n      endDate: moment(version.data.endDate).format('MM/DD/YYYY'),\r\n      modalId: 'modal-form-version-edit-' + version.data.id,\r\n      buttonId: 'edit-version-button-' + version.data.id,\r\n    });\r\n  }\r\n\r\n  async versionPut(version) {\r\n    return await apiProductVersionPut(this.props.serviceUrl, version);\r\n  }\r\n\r\n  handleFormSubmit = () => {\r\n    const formIsValid = this.handleValidation();\r\n\r\n    if (formIsValid) {\r\n      const version = {\r\n        id: this.props.version.id,\r\n        name: this.state.name,\r\n        startDate: moment(this.state.startDate).format(),\r\n        endDate: moment(this.state.endDate).format(),\r\n      };\r\n      this.versionPut(version)\r\n        .then(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.updated'),\r\n            submitColour: '#24a148',\r\n          });\r\n          this.props.updateProductVersions();\r\n        })\r\n        .catch(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.error'),\r\n            submitColour: '#da1e28',\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (isAuthenticated(this.props)) {\r\n      this.getVersionDetails();\r\n      const modalOpenButton = document.querySelector('.edit-version-button-' + this.props.version.id);\r\n      modalOpenButton.addEventListener('click', this.clearValues, false);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const modalConfirmation = (\r\n      <div className=\"bx--modal-header\">\r\n        <p style={{color: this.state.submitColour}}>{this.state.submitMsg}</p>\r\n      </div>\r\n    );\r\n    const buttonClassName = 'bx--btn bx--btn--ghost edit-version-button-' + this.props.version.id;\r\n    const modalId = this.state.modalId;\r\n    return (\r\n      <ModalWrapper\r\n        buttonTriggerText={i18n.t('buttons.edit')}\r\n        modalHeading={i18n.t('adminDashboard.addProject.editTitle')}\r\n        buttonTriggerClassName={buttonClassName}\r\n        className=\"modal-form\"\r\n        id={this.state.modalId}\r\n        handleSubmit={this.handleFormSubmit}\r\n        primaryButtonText={i18n.t('modalText.save')}\r\n        secondaryButtonText={i18n.t('modalText.cancel')}\r\n      >\r\n        {modalConfirmation}\r\n        <div className=\"form-container\">\r\n          <Form onSubmit={this.handleFormSubmit} id={'form' + modalId}>\r\n            <TextInput\r\n              id={'name' + modalId}\r\n              name=\"name\"\r\n              labelText={i18n.t('adminDashboard.addProject.projectName') + ' *'}\r\n              value={this.state.name}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.required')}\r\n              invalid={this.state.invalid['name']}\r\n            />\r\n            <DatePicker dateFormat=\"m/d/Y\" datePickerType=\"single\" onChange={this.handleStartDateChange}\r\n                        value={this.state.startDate}>\r\n              <DatePickerInput\r\n                id={'startDate' + modalId}\r\n                name=\"startDate\"\r\n                placeholder=\"mm/dd/yyyy\"\r\n                labelText={i18n.t('subscriptionDetails.startDate') + ' *'}\r\n                onChange={this.handleChanges}\r\n                type=\"text\"\r\n                invalidText={i18n.t('validation.invalid.date')}\r\n                invalid={this.state.invalid['startDate']}\r\n              />\r\n            </DatePicker>\r\n            <DatePicker\r\n              dateFormat=\"m/d/Y\"\r\n              datePickerType=\"single\"\r\n              onChange={this.handleEndDateChange}\r\n              id={'endDate' + modalId}\r\n              name=\"endDate\"\r\n              value={this.state.endDate}\r\n            >\r\n              <DatePickerInput\r\n                id={'endDate' + modalId}\r\n                name=\"endDate\"\r\n                placeholder=\"mm/dd/yyyy\"\r\n                labelText={i18n.t('subscriptionDetails.endDate') + ' *'}\r\n                onChange={this.handleChanges}\r\n                type=\"text\"\r\n                invalidText={i18n.t('validation.invalid.date')}\r\n                invalid={this.state.invalid['endDate']}\r\n              />\r\n            </DatePicker>\r\n          </Form>\r\n        </div>\r\n        {modalConfirmation}\r\n      </ModalWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withKeycloak(EditVersionModal);\r\n","import React, { Component } from 'react';\r\nimport i18n from '../../../i18n';\r\nimport {\r\n  DataTable,\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableHeader,\r\n  TableBody,\r\n  TableCell,\r\n  Toggle,\r\n  Button,\r\n} from 'carbon-components-react';\r\nimport { apiProductVersionDelete, apiProductVersionsGet, apiUpdateProductVersionsStatus } from '../../../api/productVersion';\r\nimport withKeycloak from '../../../auth/withKeycloak';\r\nimport AddProductVersionModal from '../AddProductVersionModal';\r\nimport {authenticationChanged, isAuthenticated, isPortalAdminOrSupport} from '../../../api/helpers';\r\nimport EditVersionModal from '../EditVersionModal';\r\n\r\nclass ProductVersion extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      versions: '',\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (isPortalAdminOrSupport()) {\r\n      this.getProductVersions();\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (authenticationChanged(this.props, prevProps)) {\r\n      if (isPortalAdminOrSupport()) {\r\n        this.getProductVersions();\r\n      }\r\n    }\r\n  }\r\n\r\n  async getProductVersions() {\r\n    if (isAuthenticated(this.props)) {\r\n      const productVersions = await apiProductVersionsGet(this.props.serviceUrl);\r\n\r\n      this.setState({\r\n        versions: productVersions.data,\r\n      });\r\n    }\r\n  }\r\n\r\n  async deleteVersion(id) {\r\n    if (isAuthenticated(this.props)) {\r\n      return await apiProductVersionDelete(this.props.serviceUrl, id);\r\n    }\r\n  }\r\n\r\n  handleDeleteVersion = (e, id) => {\r\n    e.preventDefault();\r\n    if (window.confirm('Are you sure you want to delete this Entando version?')) {\r\n      this.deleteVersion(id)\r\n        .then(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.deleted'),\r\n            submitColour: '#24a148',\r\n          });\r\n          this.updateProductVersions();\r\n        })\r\n        .catch(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.error'),\r\n            submitColour: '#da1e28',\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  updateProductVersions = () => {\r\n    this.getProductVersions();\r\n  };\r\n\r\n  async handleToggleChange(id) {\r\n    return await apiUpdateProductVersionsStatus(this.props.serviceUrl, id);\r\n  }\r\n\r\n  render() {\r\n    if (isPortalAdminOrSupport()) {\r\n      return (\r\n        <div>\r\n          <DataTable rows={rowData} headers={headerData}>\r\n            {({rows, headers, getHeaderProps, getTableProps}) => (\r\n              <TableContainer>\r\n                <Table {...getTableProps()}>\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      {headers.map(header => (\r\n                        <TableHeader {...getHeaderProps({header})}>{header.header}</TableHeader>\r\n                      ))}\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {Object.keys(this.state.versions).length !== 0\r\n                      ? this.state.versions.map((productVersion, index) => (\r\n                        <TableRow key={index}>\r\n                          <TableCell>{productVersion.name}</TableCell>\r\n                          <TableCell>\r\n                            <Toggle\r\n                              size=\"sm\"\r\n                              onClick={() => this.handleToggleChange(productVersion.id)}\r\n                              aria-label=\"toggle button\"\r\n                              id={'toggle' + productVersion.id}\r\n                              defaultToggled={productVersion.status}\r\n                            />\r\n                          </TableCell>\r\n                          <TableCell>{productVersion.startDate}</TableCell>\r\n                          <TableCell>{productVersion.endDate}</TableCell>\r\n                          <TableCell>\r\n                            <div style={{display: 'flex'}}>\r\n                              <EditVersionModal\r\n                                key={productVersion.id}\r\n                                version={productVersion}\r\n                                serviceUrl={this.props.serviceUrl}\r\n                                updateProductVersions={this.updateProductVersions}\r\n                              />\r\n                                <Button\r\n                                  kind=\"ghost\"\r\n                                  onClick={e => this.handleDeleteVersion(e, productVersion.id)}\r\n                                  style={{ display: 'flex', width: '100%', color: 'red' }}\r\n                                >\r\n                                  {i18n.t('buttons.delete')}\r\n                                </Button>\r\n                              </div>\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        ))\r\n                      : null}\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            )}\r\n          </DataTable>\r\n          <br />\r\n          <AddProductVersionModal serviceUrl={this.props.serviceUrl} updateProductVersions={this.updateProductVersions} />\r\n        </div>\r\n      );\r\n    } else {\r\n      return <p>{i18n.t('userMessages.unauthorized')}</p>;\r\n    }\r\n  }\r\n}\r\n\r\nconst headerData = [\r\n  {\r\n    header: i18n.t('adminConfig.manageProductVersion.entandoVersion'),\r\n    key: 'entVersion',\r\n  },\r\n  {\r\n    header: i18n.t('adminConfig.manageProductVersion.status'),\r\n    key: 'status',\r\n  },\r\n  {\r\n    header: i18n.t('adminConfig.manageProductVersion.startDate'),\r\n    key: 'startDate',\r\n  },\r\n  {\r\n    header: i18n.t('adminConfig.manageProductVersion.supportEndDate'),\r\n    key: 'endDate',\r\n  },\r\n  {\r\n    header: i18n.t('customerDashboard.action'),\r\n    key: 'action',\r\n  },\r\n];\r\n\r\nconst rowData = [\r\n  {\r\n    id: 'a',\r\n    entVersion: '5.2',\r\n    status: <Toggle size=\"sm\" aria-label=\"toggle button\" defaultToggled id=\"status-1\" />,\r\n    startDate: 'April, 2018',\r\n    endDate: 'April, 2022',\r\n  },\r\n  {\r\n    id: 'b',\r\n    entVersion: '6.3',\r\n    status: <Toggle size=\"sm\" aria-label=\"toggle button\" id=\"status-2\"/>,\r\n    startDate: 'Jile, 2019',\r\n    endDate: 'April, 2023',\r\n  },\r\n  {\r\n    id: 'c',\r\n    entVersion: '6.2',\r\n    status: <Toggle size=\"sm\" aria-label=\"toggle button\" defaultToggled id=\"status-3\"/>,\r\n    startDate: 'September, 2020',\r\n    endDate: 'April, 2024',\r\n  },\r\n];\r\n\r\nexport default withKeycloak(ProductVersion);\r\n","import {Component} from 'react';\r\nimport withKeycloak from \"../../auth/withKeycloak\";\r\nimport {Breadcrumb, BreadcrumbItem} from \"carbon-components-react\";\r\nimport {getActiveSubscription, getPageUrl} from \"../../api/helpers\";\r\nimport {PAGE_CUSTOMER_PORTAL} from \"../../api/constants\";\r\nimport i18n from \"../../i18n\";\r\n\r\nclass Breadcrumbs extends Component {\r\n\r\n  render() {\r\n    const homeUrl = getPageUrl(PAGE_CUSTOMER_PORTAL, this.props.locale);\r\n\r\n    let customer = this.props.customer || {};\r\n    const project = this.props.project;\r\n    if (project) {\r\n      customer = project.customer || {};\r\n    }\r\n    const subscription = this.props.subscription ? this.props.subscription : getActiveSubscription(project);\r\n\r\n    return (\r\n      <Breadcrumb style={{margin: \"1em 0\"}}>\r\n        <BreadcrumbItem href={homeUrl}>{i18n.t('customerDashboard.customerPortal')}</BreadcrumbItem>\r\n        {customer && customer.name && (\r\n          <BreadcrumbItem href={`${homeUrl}#/customer-details/${customer.id}`}>\r\n            {customer.name}\r\n          </BreadcrumbItem>\r\n        )}\r\n        {project && project.name && subscription && subscription.id && (\r\n          <BreadcrumbItem href={`${homeUrl}#/subscription-details/${subscription.id}`}>\r\n            {project.name}\r\n          </BreadcrumbItem>\r\n        )}\r\n      </Breadcrumb>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withKeycloak(Breadcrumbs);\r\n","import React from 'react';\nimport i18n from '../../../i18n';\nimport { Accordion, AccordionItem, Tile } from 'carbon-components-react';\nimport TicketingSystem from './TicketingSystem';\nimport ProductVersion from './ProductVersion';\nimport {authenticationChanged, isAuthenticated, isPortalAdmin} from '../../../api/helpers';\nimport withKeycloak from '../../../auth/withKeycloak';\nimport Breadcrumbs from \"../../Breadcrumbs/Breadcrumbs\";\n\nclass AdminConfiguration extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n    };\n    this.adminConfig = [\n      {\n        label: (\n          <div>\n            <p className=\"title\">{i18n.t('adminConfig.integrationTicketingSystem.title')}</p>\n            <p className=\"desc\">{i18n.t('adminConfig.integrationTicketingSystem.desc')}</p>\n          </div>\n        ),\n        content: <TicketingSystem serviceUrl={this.props.serviceUrl} />,\n      },\n      {\n        label: (\n          <div>\n            <p className=\"title\">{i18n.t('adminConfig.manageProductVersion.title')}</p>\n            <p className=\"desc\">{i18n.t('adminConfig.manageProductVersion.desc')}</p>\n          </div>\n        ),\n        content: <ProductVersion serviceUrl={this.props.serviceUrl} />,\n      },\n    ];\n  }\n\n  componentDidMount() {\n    if (isAuthenticated(this.props)) {\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (authenticationChanged(this.props, prevProps)) {\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n\n  render() {\n    if (!this.state.loading) {\n      // Authorized\n      if (isPortalAdmin()) {\n        return (\n          <div id=\"entando-customer-portal\">\n            <Breadcrumbs locale={this.props.locale}/>\n            <div className=\"form-container\">\n              <Tile>\n                <p className=\"title\">{i18n.t('adminConfig.title')}</p>\n                <p className=\"desc\">{i18n.t('adminConfig.desc')}</p>\n              </Tile>\n              <Accordion>\n                {this.adminConfig.map((item, index) => (\n                  <AccordionItem key={index.toString()} index={index} title={item.label} description={item.description}>\n                    <div>{item.content}</div>\n                  </AccordionItem>\n                ))}\n              </Accordion>\n            </div>\n          </div>\n        );\n      }\n      // Unauthorized\n      else {\n        return <p>{i18n.t('userMessages.unauthorized')}</p>;\n      }\n    }\n    // Loading\n    else {\n      return null;\n    }\n  }\n}\nexport default withKeycloak(AdminConfiguration);\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport AdminConfiguration from '../components/Admin/Configuration/AdminConfiguration';\r\nimport '../index.scss';\r\nimport * as Locale from '../i18n';\r\n\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\n\r\nimport { subscribeToWidgetEvent } from '../helpers/widgetEvents';\r\nimport { KEYCLOAK_EVENT_TYPE } from './widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window && window.entando && window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\nconst ATTRIBUTES = {\r\n  hidden: 'hidden',\r\n  locale: 'locale',\r\n  paginationMode: 'pagination-mode',\r\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n  serviceUrl: 'service-url',\r\n};\r\n\r\nclass AdminConfigurationElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    //retargetEvents(shadowRoot);\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n    const locale = this.getAttribute(ATTRIBUTES.locale) || '';\r\n    Locale.setLocale(locale);\r\n\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <AdminConfiguration serviceUrl={serviceUrl} locale={locale}/>\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.define('cp-admin-configuration-widget', AdminConfigurationElement);\r\n","import { getDefaultOptions, request, getUrl } from './helpers';\r\n\r\nconst resource = 'api/partners';\r\n\r\nexport const apiPartnerDelete = async (serviceUrl, id) => {\r\n  const url = `${serviceUrl}/${resource}/${id}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiPartnersGet = async serviceUrl => {\r\n  const url = getUrl(`${serviceUrl}/${resource}`);\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiPartnerPost = async (serviceUrl, partner) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n    body: partner ? JSON.stringify(partner) : null,\r\n  };\r\n  return request(url, options);\r\n};\r\n","import { getDefaultOptions, request, getUrl } from './helpers';\r\n\r\nconst resource = 'api/projects';\r\n\r\nexport const apiProjectsDelete = async (serviceUrl, id) => {\r\n  const url = `${serviceUrl}/${resource}/${id}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiProjectsGet = async serviceUrl => {\r\n  const url = getUrl(`${serviceUrl}/${resource}`);\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiProjectGet = async (serviceUrl, id) => {\r\n  const url = getUrl(`${serviceUrl}/${resource}/${id}`);\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiProjectPost = async (serviceUrl, project) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n    body: project ? JSON.stringify(project) : null,\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiProjectPut = async (serviceUrl, project) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'PUT',\r\n    body: project ? JSON.stringify(project) : null,\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiAddTicketToProject = async (serviceUrl, projectId, ticketId) => {\r\n  const url = `${serviceUrl}/${resource}/${projectId}/tickets/${ticketId}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiAddSubscriptionToProject = async (serviceUrl, projectId, subscriptionId) => {\r\n  const url = `${serviceUrl}/${resource}/${projectId}/subscriptions/${subscriptionId}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiAddUserToProject = async (serviceUrl, projectId, userId) => {\r\n  const url = `${serviceUrl}/${resource}/${projectId}/users/${userId}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiDeletePartnerFromProject = async (serviceUrl, projectId, partnerId) => {\r\n  const url = `${serviceUrl}/${resource}/${projectId}/partners/${partnerId}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiDeleteSubscriptionFromProject = async (serviceUrl, projectId, subscriptionId) => {\r\n  const url = `${serviceUrl}/${resource}/${projectId}/subscriptions/${subscriptionId}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiDeleteUserFromProject = async (serviceUrl, projectId, userId) => {\r\n  const url = `${serviceUrl}/${resource}/${projectId}/users/${userId}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiAddPartnerToProject = async (serviceUrl, projectId, partnerId) => {\r\n  const url = `${serviceUrl}/${resource}/${projectId}/partners/${partnerId}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiGetProjectUsers = async (serviceUrl, projectId) => {\r\n  const url = `${serviceUrl}/${resource}/${projectId}/users/`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiGetProjectSubscriptions = async (serviceUrl, projectId) => {\r\n  const url = `${serviceUrl}/${resource}/${projectId}/subscriptions/`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n  return request(url, options);\r\n};\r\n","export const AuthenticatedView = ({ children, keycloak }) => {\r\n  const authenticated = keycloak && keycloak.initialized && keycloak.authenticated;\r\n  return authenticated ? children : null;\r\n};\r\n\r\nexport const UnauthenticatedView = ({ children, keycloak }) => {\r\n  const authenticated = keycloak && keycloak.initialized && keycloak.authenticated;\r\n  return !authenticated ? children : null;\r\n};\r\n","import React, {Component} from 'react';\r\nimport i18n from '../../i18n';\r\nimport {ModalWrapper, Form, TextInput, Select, SelectItem, TextArea} from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport {apiPartnerPost} from '../../api/partners';\r\nimport {apiProjectsGet, apiAddPartnerToProject} from '../../api/projects';\r\nimport {authenticationChanged, isAuthenticated} from '../../api/helpers';\r\nimport {AuthenticatedView} from '../../auth/KeycloakViews';\r\n\r\nclass AddPartnerModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      projectList: {},\r\n      projectId: '',\r\n      name: '',\r\n      partnerNumber: '',\r\n      notes: '',\r\n      invalid: {},\r\n      submitMsg: '',\r\n      submitColour: 'black',\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (isAuthenticated(this.props)) {\r\n      this.fetchData();\r\n\r\n      const modalOpenButton = document.querySelector('.add-partner-button');\r\n      modalOpenButton.addEventListener('click', this.clearValues, false);\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (authenticationChanged(this.props, prevProps)) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n\r\n  handleValidation() {\r\n    let invalid = {};\r\n    let formIsValid = true;\r\n\r\n    //project\r\n    if (this.state.projectId === '' || this.state.projectId === 'project-list') {\r\n      formIsValid = false;\r\n      invalid['projectId'] = true;\r\n    }\r\n\r\n    if (this.state.name === '') {\r\n      formIsValid = false;\r\n      invalid['name'] = true;\r\n    }\r\n\r\n    if (this.state.partnerNumber === '') {\r\n      formIsValid = false;\r\n      invalid['partnerNumber'] = true;\r\n    }\r\n\r\n    this.setState({ invalid: invalid });\r\n    return formIsValid;\r\n  }\r\n\r\n  handleChanges = e => {\r\n    const input = e.target;\r\n    const name = input.name;\r\n    const value = input.value;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  async fetchData() {\r\n    if (isAuthenticated(this.props)) {\r\n      let projects = {};\r\n      try {\r\n        projects = (await apiProjectsGet(this.props.serviceUrl)).data;\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n      this.setState({\r\n        projectList: projects ? projects : {},\r\n      });\r\n    }\r\n  }\r\n\r\n  async partnerPost(partner) {\r\n    if (isAuthenticated(this.props)) {\r\n      const result = await apiPartnerPost(this.props.serviceUrl, partner);\r\n      return await apiAddPartnerToProject(this.props.serviceUrl, this.state.projectId, result.data.id);\r\n    }\r\n  }\r\n\r\n  handleFormSubmit = () => {\r\n    const formIsValid = this.handleValidation();\r\n\r\n    if (formIsValid) {\r\n      const partner = {\r\n        name: this.state.name,\r\n        partnerNumber: this.state.partnerNumber,\r\n        notes: this.state.notes,\r\n      };\r\n      this.partnerPost(partner)\r\n        .then(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.added'),\r\n            submitColour: '#24a148',\r\n          });\r\n          this.props.updateCustomerList();\r\n        })\r\n        .catch(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.error'),\r\n            submitColour: '#da1e28',\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  clearValues = () => {\r\n    const partnerModalElement = document.querySelector('#modal-form-partner');\r\n    if (!partnerModalElement.className.includes('is-visible')) {\r\n      this.setState({\r\n        projectId: '',\r\n        name: '',\r\n        partnerNumber: '',\r\n        notes: '',\r\n        invalid: {},\r\n        submitMsg: '',\r\n        submitColour: 'black',\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const modalConfirmation = (\r\n      <div className=\"bx--modal-header\">\r\n        <p style={{color: this.state.submitColour}}>{this.state.submitMsg}</p>\r\n      </div>\r\n    );\r\n    const {keycloak} = this.props;\r\n    const modalId = 'modal-form-partner';\r\n    return (\r\n      <AuthenticatedView keycloak={keycloak}>\r\n        <ModalWrapper\r\n          buttonTriggerText={i18n.t('buttons.addPartner')}\r\n          modalHeading={i18n.t('adminDashboard.addPartner.title')}\r\n          buttonTriggerClassName=\"add-partner bx--btn bx--btn--tertiary add-partner-button\"\r\n          className=\"modal-form\"\r\n          id={modalId}\r\n          handleSubmit={this.handleFormSubmit}\r\n          primaryButtonText={i18n.t('modalText.save')}\r\n          secondaryButtonText={i18n.t('modalText.cancel')}\r\n        >\r\n          {modalConfirmation}\r\n          <div className=\"form-container\">\r\n            <Form onSubmit={this.handleFormSubmit}>\r\n              <Select\r\n                id={'projectId' + modalId}\r\n                name=\"projectId\"\r\n                labelText={i18n.t('adminDashboard.addPartner.projectList') + ' *'}\r\n                value={this.state.projectId}\r\n                onChange={this.handleChanges}\r\n                invalidText={i18n.t('validation.invalid.required')}\r\n                invalid={this.state.invalid['projectId']}\r\n              >\r\n                <SelectItem text={i18n.t('adminDashboard.addPartner.selectProject')} value=\"project-list\"/>\r\n                {Object.keys(this.state.projectList).length !== 0\r\n                  ? this.state.projectList.map((project, i) => (\r\n                    <SelectItem key={i} text={project.name} value={project.id}>\r\n                      {project.name}\r\n                    </SelectItem>\r\n                  ))\r\n                  : null}\r\n              </Select>\r\n\r\n              <TextInput\r\n                id={'name' + modalId}\r\n                name=\"name\"\r\n                labelText={i18n.t('adminDashboard.addPartner.partnerName') + ' *'}\r\n                value={this.state.name}\r\n                onChange={this.handleChanges}\r\n                invalidText={i18n.t('validation.invalid.required')}\r\n                invalid={this.state.invalid['name']}\r\n              />\r\n              <TextInput\r\n                id={'partnerNumber' + modalId}\r\n                name=\"partnerNumber\"\r\n                labelText={i18n.t('adminDashboard.addPartner.partnerNumber') + ' *'}\r\n                value={this.state.partnerNumber}\r\n                onChange={this.handleChanges}\r\n                invalidText={i18n.t('validation.invalid.required')}\r\n                invalid={this.state.invalid['partnerNumber']}\r\n              />\r\n              <TextArea\r\n                name=\"notes\"\r\n                labelText={i18n.t('adminDashboard.addPartner.notes')}\r\n                value={this.state.notes}\r\n                onChange={this.handleChanges}\r\n              />\r\n            </Form>\r\n          </div>\r\n          {modalConfirmation}\r\n        </ModalWrapper>\r\n      </AuthenticatedView>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withKeycloak(AddPartnerModal);\r\n","import React, { Component } from 'react';\r\nimport i18n from '../../i18n';\r\nimport { ModalWrapper, Form, TextInput, Select, SelectItem, TextArea } from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport { apiCustomersGet, apiAddProjectToCustomer } from '../../api/customers';\r\nimport {apiProjectPost, apiProjectsGet} from '../../api/projects';\r\nimport {authenticationChanged, isAuthenticated} from \"../../api/helpers\";\r\n\r\nclass AddProjectModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      projects: {},\r\n      customerList: {},\r\n      customerId: '',\r\n      name: '',\r\n      description: '',\r\n      systemId: '',\r\n      contactName: '',\r\n      contactPhone: '',\r\n      contactEmail: '',\r\n      notes: '',\r\n      invalid: {},\r\n      submitMsg: '',\r\n      submitColour: 'black',\r\n    };\r\n  }\r\n\r\n  handleValidation() {\r\n    let invalid = {};\r\n    let formIsValid = true;\r\n\r\n    //customer\r\n    if (this.state.customerId === '' || this.state.customerId === 'customer-list') {\r\n      formIsValid = false;\r\n      invalid['customerId'] = true;\r\n    }\r\n\r\n    //name\r\n    if (this.state.name === '') {\r\n      formIsValid = false;\r\n      invalid['name'] = true;\r\n    }\r\n\r\n    //description\r\n    if (this.state.description === '') {\r\n      formIsValid = false;\r\n      invalid['description'] = true;\r\n    }\r\n\r\n    //contactEmail\r\n    if (typeof this.state.contactEmail !== 'undefined') {\r\n      let lastAtPos = this.state.contactEmail.lastIndexOf('@');\r\n      let lastDotPos = this.state.contactEmail.lastIndexOf('.');\r\n\r\n      if (\r\n        !(\r\n          lastAtPos < lastDotPos &&\r\n          lastAtPos > 0 &&\r\n          this.state.contactEmail.indexOf('@@') === -1 &&\r\n          lastDotPos > 2 &&\r\n          this.state.contactEmail.length - lastDotPos > 2\r\n        )\r\n      ) {\r\n        formIsValid = false;\r\n        invalid['contactEmail'] = true;\r\n      }\r\n    }\r\n\r\n    this.setState({ invalid: invalid });\r\n    return formIsValid;\r\n  }\r\n\r\n  async getAllProjects() {\r\n    let projects = {}\r\n    try {\r\n      projects = await apiProjectsGet(this.props.serviceUrl);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n    this.setState({\r\n      projects: projects.data ? projects.data : {},\r\n    });\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (authenticationChanged(this.props, prevProps)) {\r\n      this.getCustomers();\r\n      this.getAllProjects();\r\n    }\r\n  }\r\n\r\n  handleChanges = e => {\r\n    const input = e.target;\r\n    const name = input.name;\r\n    const value = input.value;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  async getCustomers() {\r\n    if (isAuthenticated(this.props)) {\r\n      let customers = {};\r\n      try {\r\n        customers = await apiCustomersGet(this.props.serviceUrl);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n      this.setState({customerList: customers});\r\n    }\r\n  }\r\n\r\n  async projectPost(project) {\r\n    if (isAuthenticated(this.props)) {\r\n      const result = await apiProjectPost(this.props.serviceUrl, project);\r\n      return await apiAddProjectToCustomer(this.props.serviceUrl, this.state.customerId, result.data.id);\r\n    }\r\n  }\r\n\r\n  handleFormSubmit = () => {\r\n    const formIsValid = this.handleValidation();\r\n\r\n    if (formIsValid) {\r\n      const project = {\r\n        name: this.state.name,\r\n        description: this.state.description,\r\n        systemId: this.state.systemId,\r\n        contactName: this.state.contactName,\r\n        contactPhone: this.state.contactPhone,\r\n        contactEmail: this.state.contactEmail,\r\n        notes: this.state.notes,\r\n      };\r\n      for (var i = 0; i < this.state.projects.length; i++) {\r\n        if (project.systemId === this.state.projects[i].systemId && project.systemId.trim() !== '') {\r\n          window.alert('That system id is already in use in another project');\r\n          return;\r\n        }\r\n      }\r\n      this.projectPost(project)\r\n        .then(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.added'),\r\n            submitColour: '#24a148',\r\n          });\r\n          this.props.updateCustomerList();\r\n          this.getAllProjects();\r\n        })\r\n        .catch(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.error'),\r\n            submitColour: '#da1e28',\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  clearValues = () => {\r\n    const projectModalElement = document.querySelector('#modal-form-project');\r\n    if (!projectModalElement.className.includes('is-visible')) {\r\n      this.setState({\r\n        customerId: '',\r\n        name: '',\r\n        description: '',\r\n        systemId: '',\r\n        contactName: '',\r\n        contactPhone: '',\r\n        contactEmail: '',\r\n        notes: '',\r\n        invalid: {},\r\n      });\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getCustomers();\r\n    this.getAllProjects();\r\n\r\n    const modalOpenButton = document.querySelector('.add-project-button');\r\n    modalOpenButton.addEventListener('click', this.clearValues, false);\r\n  }\r\n\r\n  render() {\r\n    const modalConfirmation = (\r\n      <div className=\"bx--modal-header\">\r\n        <p style={{color: this.state.submitColour}}>{this.state.submitMsg}</p>\r\n      </div>\r\n    );\r\n    const modalId = 'modal-form-project';\r\n    return (\r\n      <ModalWrapper\r\n        buttonTriggerText={i18n.t('buttons.addProject')}\r\n        modalHeading={i18n.t('adminDashboard.addProject.title')}\r\n        buttonTriggerClassName=\"add-project bx--btn bx--btn--tertiary add-project-button\"\r\n        className=\"modal-form\"\r\n        id={modalId}\r\n        handleSubmit={this.handleFormSubmit}\r\n        primaryButtonText={i18n.t('modalText.save')}\r\n        secondaryButtonText={i18n.t('modalText.cancel')}\r\n      >\r\n        {modalConfirmation}\r\n        <div className=\"form-container\">\r\n          <Form onSubmit={this.handleFormSubmit}>\r\n            <Select\r\n              id={'customerId' + modalId}\r\n              name=\"customerId\"\r\n              labelText={i18n.t('adminDashboard.addProject.customerList') + ' *'}\r\n              value={this.state.customerId}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.required')}\r\n              invalid={this.state.invalid['customerId']}\r\n            >\r\n              <SelectItem text={i18n.t('adminDashboard.addProject.selectCustomer')} value=\"customer-list\" />\r\n              {Object.keys(this.props.allCustomers).length !== 0\r\n                ? this.props.allCustomers.map((customerList, i) => (\r\n                    <SelectItem key={i} text={customerList.name} value={customerList.id}>\r\n                      {customerList.name}\r\n                    </SelectItem>\r\n                  ))\r\n                : null}\r\n            </Select>\r\n\r\n            <TextInput\r\n              id={'name' + modalId}\r\n              name=\"name\"\r\n              labelText={i18n.t('adminDashboard.addProject.projectName') + ' *'}\r\n              value={this.state.name}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.required')}\r\n              invalid={this.state.invalid['name']}\r\n            />\r\n            <TextInput\r\n              id={'description' + modalId}\r\n              name=\"description\"\r\n              labelText={i18n.t('adminDashboard.addProject.projectDesc') + ' *'}\r\n              value={this.state.description}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.required')}\r\n              invalid={this.state.invalid['description']}\r\n            />\r\n            <TextInput\r\n              id={'systemId' + modalId}\r\n              name=\"systemId\"\r\n              labelText={i18n.t('adminDashboard.addProject.systemId')}\r\n              value={this.state.systemId}\r\n              onChange={this.handleChanges}\r\n            />\r\n            <TextInput\r\n              id={'contactName' + modalId}\r\n              name=\"contactName\"\r\n              labelText={i18n.t('adminDashboard.addProject.contactName')}\r\n              value={this.state.contactName}\r\n              onChange={this.handleChanges}\r\n            />\r\n            <TextInput\r\n              id={'contactPhone' + modalId}\r\n              name=\"contactPhone\"\r\n              labelText={i18n.t('adminDashboard.addProject.contactPhone')}\r\n              value={this.state.contactPhone}\r\n              onChange={this.handleChanges}\r\n            />\r\n            <TextInput\r\n              id={'contactEmail' + modalId}\r\n              name=\"contactEmail\"\r\n              labelText={i18n.t('adminDashboard.addProject.contactEmail') + ' *'}\r\n              value={this.state.contactEmail}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.email')}\r\n              invalid={this.state.invalid['contactEmail']}\r\n            />\r\n            <TextArea\r\n              id={'notes' + modalId}\r\n              name=\"notes\"\r\n              labelText={i18n.t('adminDashboard.addProject.notes')}\r\n              value={this.state.notes}\r\n              onChange={this.handleChanges}\r\n            />\r\n          </Form>\r\n        </div>\r\n        {modalConfirmation}\r\n      </ModalWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withKeycloak(AddProjectModal);\r\n","import React, { Component } from 'react';\r\nimport i18n from '../../i18n';\r\nimport { ModalWrapper, Form, TextInput, TextArea } from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport { apiCustomersGet } from '../../api/customers';\r\nimport {apiProjectGet, apiProjectPut, apiProjectsGet} from '../../api/projects';\r\nimport {authenticationChanged, isAuthenticated} from \"../../api/helpers\";\r\n\r\nclass EditProjectModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      projects: {},\r\n      customerList: {},\r\n      customerId: '',\r\n      name: '',\r\n      description: '',\r\n      systemId: '',\r\n      contactName: '',\r\n      contactPhone: '',\r\n      contactEmail: '',\r\n      notes: '',\r\n      invalid: {},\r\n      modalId: '',\r\n      buttonId: '',\r\n      submitMsg: '',\r\n      submitColour: 'black',\r\n    };\r\n  }\r\n\r\n  handleValidation() {\r\n    let invalid = {};\r\n    let formIsValid = true;\r\n\r\n    //name\r\n    if (this.state.name === '') {\r\n      formIsValid = false;\r\n      invalid['name'] = true;\r\n    }\r\n\r\n    //description\r\n    if (this.state.description === '') {\r\n      formIsValid = false;\r\n      invalid['description'] = true;\r\n    }\r\n\r\n    //contactEmail\r\n    if (typeof this.state.contactEmail !== 'undefined') {\r\n      let lastAtPos = this.state.contactEmail.lastIndexOf('@');\r\n      let lastDotPos = this.state.contactEmail.lastIndexOf('.');\r\n\r\n      if (\r\n        !(\r\n          lastAtPos < lastDotPos &&\r\n          lastAtPos > 0 &&\r\n          this.state.contactEmail.indexOf('@@') === -1 &&\r\n          lastDotPos > 2 &&\r\n          this.state.contactEmail.length - lastDotPos > 2\r\n        )\r\n      ) {\r\n        formIsValid = false;\r\n        invalid['contactEmail'] = true;\r\n      }\r\n    }\r\n\r\n    this.setState({ invalid: invalid });\r\n    return formIsValid;\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (authenticationChanged(this.props, prevProps)) {\r\n      this.getCustomers();\r\n      this.getAllProjects();\r\n      this.getProjectDetails();\r\n    }\r\n  }\r\n\r\n  handleChanges = e => {\r\n    const input = e.target;\r\n    const name = input.name;\r\n    const value = input.value;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  async getCustomers() {\r\n    if (isAuthenticated(this.props)) {\r\n      const customers = await apiCustomersGet(this.props.serviceUrl);\r\n      this.setState({customerList: customers});\r\n    }\r\n  }\r\n\r\n  async getProjectDetails() {\r\n    if (isAuthenticated(this.props)) {\r\n      const project = await apiProjectGet(this.props.serviceUrl, this.props.project.id);\r\n      this.setState({\r\n        name: project.data.name,\r\n        description: project.data.description,\r\n        systemId: project.data.systemId,\r\n        contactName: project.data.contactName,\r\n        contactPhone: project.data.contactPhone,\r\n        contactEmail: project.data.contactEmail,\r\n        notes: project.data.notes,\r\n        modalId: 'modal-form-project-edit-' + project.data.id,\r\n        buttonId: 'edit-project-button-' + project.data.id,\r\n      });\r\n    }\r\n  }\r\n\r\n  async getAllProjects() {\r\n    const projects = await apiProjectsGet(this.props.serviceUrl);\r\n    this.setState({\r\n      projects: projects.data,\r\n    });\r\n  }\r\n\r\n  async projectPut(project) {\r\n    if (isAuthenticated(this.props)) {\r\n      return await apiProjectPut(this.props.serviceUrl, project);\r\n    }\r\n  }\r\n\r\n  handleFormSubmit = () => {\r\n    const formIsValid = this.handleValidation();\r\n\r\n    if (formIsValid) {\r\n      const project = {\r\n        id: this.props.project.id,\r\n        customer: this.props.project.customer,\r\n        name: this.state.name,\r\n        description: this.state.description,\r\n        systemId: this.state.systemId,\r\n        contactName: this.state.contactName,\r\n        contactPhone: this.state.contactPhone,\r\n        contactEmail: this.state.contactEmail,\r\n        notes: this.state.notes,\r\n      };\r\n      for (var i = 0; i < this.props.allProjects.length; i++) {\r\n        if (\r\n          project.systemId === this.props.allProjects[i].systemId &&\r\n          project.id !== this.props.allProjects[i].id &&\r\n          project.systemId.trim() !== ''\r\n        ) {\r\n          window.alert('That system id is already in use in another project');\r\n          return;\r\n        }\r\n      }\r\n      this.projectPut(project)\r\n        .then(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.updated'),\r\n            submitColour: '#24a148',\r\n          });\r\n          this.props.updateProjectList();\r\n        })\r\n        .catch(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.error'),\r\n            submitColour: '#da1e28',\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  clearValues = () => {\r\n    const customerModalElement = document.querySelector('#' + this.state.modalId);\r\n    if (!customerModalElement.className.includes('is-visible')) {\r\n      this.setState({\r\n        name: this.props.project.name,\r\n        description: this.props.project.description,\r\n        systemId: this.props.project.systemId,\r\n        contactName: this.props.project.contactName,\r\n        contactPhone: this.props.project.contactPhone,\r\n        contactEmail: this.props.project.contactEmail,\r\n        notes: this.props.project.notes,\r\n        invalid: {},\r\n      });\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (isAuthenticated(this.props)) {\r\n      this.getCustomers();\r\n      this.getAllProjects();\r\n      this.getProjectDetails();\r\n\r\n      const modalOpenButton = document.querySelector('.edit-project-button-' + this.props.project.id);\r\n      modalOpenButton.addEventListener('click', this.clearValues, false);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const modalConfirmation = (\r\n      <div className=\"bx--modal-header\">\r\n        <p style={{color: this.state.submitColour}}>{this.state.submitMsg}</p>\r\n      </div>\r\n    );\r\n    const buttonClassName = 'dropdown-button-button bx--btn bx--btn--ghost edit-project-button-' + this.props.project.id;\r\n    const modalId = this.state.modalId;\r\n    return (\r\n      <ModalWrapper\r\n        buttonTriggerText={i18n.t('buttons.edit')}\r\n        modalHeading={i18n.t('adminDashboard.addProject.editTitle')}\r\n        buttonTriggerClassName={buttonClassName}\r\n        className=\"modal-form\"\r\n        id={this.state.modalId}\r\n        handleSubmit={this.handleFormSubmit}\r\n        primaryButtonText={i18n.t('modalText.save')}\r\n        secondaryButtonText={i18n.t('modalText.cancel')}\r\n      >\r\n        {modalConfirmation}\r\n        <div className=\"form-container\">\r\n          <Form onSubmit={this.handleFormSubmit}>\r\n            <TextInput\r\n              id={'name' + modalId}\r\n              name=\"name\"\r\n              labelText={i18n.t('adminDashboard.addProject.projectName') + ' *'}\r\n              value={this.state.name}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.required')}\r\n              invalid={this.state.invalid['name']}\r\n            />\r\n            <TextInput\r\n              id={'description' + modalId}\r\n              name=\"description\"\r\n              labelText={i18n.t('adminDashboard.addProject.projectDesc') + ' *'}\r\n              value={this.state.description}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.required')}\r\n              invalid={this.state.invalid['description']}\r\n            />\r\n            <TextInput\r\n              id={'systemId' + modalId}\r\n              name=\"systemId\"\r\n              labelText={i18n.t('adminDashboard.addProject.systemId')}\r\n              value={this.state.systemId}\r\n              onChange={this.handleChanges}\r\n            />\r\n            <TextInput\r\n              id={'contactName' + modalId}\r\n              name=\"contactName\"\r\n              labelText={i18n.t('adminDashboard.addProject.contactName')}\r\n              value={this.state.contactName}\r\n              onChange={this.handleChanges}\r\n            />\r\n            <TextInput\r\n              id={'contactPhone' + modalId}\r\n              name=\"contactPhone\"\r\n              labelText={i18n.t('adminDashboard.addProject.contactPhone')}\r\n              value={this.state.contactPhone}\r\n              onChange={this.handleChanges}\r\n            />\r\n            <TextInput\r\n              id={'contactEmail' + modalId}\r\n              name=\"contactEmail\"\r\n              labelText={i18n.t('adminDashboard.addProject.contactEmail') + ' *'}\r\n              value={this.state.contactEmail}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.email')}\r\n              invalid={this.state.invalid['contactEmail']}\r\n            />\r\n            <TextArea\r\n              name=\"notes\"\r\n              labelText={i18n.t('adminDashboard.addProject.notes')}\r\n              value={this.state.notes}\r\n              onChange={this.handleChanges}\r\n            />\r\n          </Form>\r\n        </div>\r\n        {modalConfirmation}\r\n      </ModalWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withKeycloak(EditProjectModal);\r\n","import React, {Component} from 'react';\r\nimport i18n from '../../i18n';\r\nimport {\r\n  Button,\r\n  DataTable,\r\n  ModalWrapper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableHeader,\r\n  TableRow,\r\n} from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport {isPortalAdminOrSupport} from '../../api/helpers';\r\nimport {apiDeletePartnerFromProject} from '../../api/projects';\r\n\r\nclass ManagePartnersModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      projectId: this.props.project.id,\r\n      project: this.props.project,\r\n    };\r\n\r\n    this.headerData = [\r\n      {\r\n        header: i18n.t('adminDashboard.addPartner.partnerName'),\r\n        key: 'partner',\r\n      },\r\n      {\r\n        header: i18n.t('adminDashboard.addPartner.partnerNumber'),\r\n        key: 'partnerNumber',\r\n      },\r\n      {\r\n        header: i18n.t('adminDashboard.addPartner.notes'),\r\n        key: 'notes',\r\n      },\r\n      {\r\n        header: i18n.t('customerDashboard.action'),\r\n        key: 'action',\r\n      },\r\n    ];\r\n  }\r\n\r\n  async removePartner(projectId, partnerId) {\r\n    if (isPortalAdminOrSupport()) {\r\n      return await apiDeletePartnerFromProject(this.props.serviceUrl, projectId, partnerId);\r\n    }\r\n  }\r\n\r\n  handleRemovePartner = (e, projectId, partnerId) => {\r\n    e.preventDefault();\r\n    if (window.confirm('Are you sure you want to remove this partner from the project?')) {\r\n      this.removePartner(projectId, partnerId)\r\n        .then(result => {\r\n          this.setState({\r\n            project: result.data,\r\n            submitMsg: i18n.t('submitMessages.deleted'),\r\n            submitColour: '#24a148',\r\n          });\r\n          this.props.updateProjectList();\r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.error'),\r\n            submitColour: '#da1e28',\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const modalConfirmation = (\r\n      <div className=\"bx--modal-header\">\r\n        <p style={{color: this.state.submitColour}}>{this.state.submitMsg}</p>\r\n      </div>\r\n    );\r\n    const modalId = 'modal-form-manage-partners';\r\n    return (\r\n      <ModalWrapper\r\n        buttonTriggerText={i18n.t('buttons.managePartners')}\r\n        modalHeading={i18n.t('adminDashboard.managePartners.title')}\r\n        buttonTriggerClassName=\"add-partner bx--btn bx--btn--tertiary add-partner-button\"\r\n        className=\"modal-form\"\r\n        id={modalId}\r\n        hasForm={false}\r\n        primaryButtonText={i18n.t('modalText.done')}\r\n        secondaryButtonText={null}\r\n      >\r\n        {modalConfirmation}\r\n        <div>\r\n          <DataTable rows={rowData} headers={this.headerData}>\r\n            {({rows, headers, getHeaderProps, getTableProps}) => (\r\n              <TableContainer description={i18n.t('customerDashboard.tableDesc')}>\r\n                <Table {...getTableProps()}>\r\n                  <TableHead>\r\n                    <TableRow key=\"headerRow\">\r\n                      {headers.map(header => {\r\n                        return <TableHeader {...getHeaderProps({header})}>{header.header}</TableHeader>;\r\n                      })}\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {this.state.project.partners.map((partner, index) => {\r\n                      return (\r\n                        <TableRow key={'partner' + index}>\r\n                          <TableCell>{partner.name}</TableCell>\r\n                          <TableCell>{partner.partnerNumber}</TableCell>\r\n                          <TableCell>{partner.notes}</TableCell>\r\n                          <TableCell>\r\n                            <div>\r\n                              <Button\r\n                                kind=\"ghost\"\r\n                                onClick={e => this.handleRemovePartner(e, this.state.projectId, partner.id)}\r\n                                style={{display: 'block', width: '100%', color: 'red'}}\r\n                              >\r\n                                {i18n.t('buttons.delete')}\r\n                              </Button>\r\n                              <hr style={{margin: '0', border: 'none', borderTop: '1px solid lightgrey'}}/>\r\n                            </div>\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      );\r\n                    })}\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            )}\r\n          </DataTable>\r\n        </div>\r\n        {modalConfirmation}\r\n      </ModalWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nconst rowData = [\r\n  {\r\n    id: 'a',\r\n    name: 'Partner 1',\r\n    partnerNumber: '123',\r\n  },\r\n  {\r\n    id: 'b',\r\n    name: 'Partner 2',\r\n    partnerNumber: '456',\r\n  },\r\n];\r\n\r\nexport default withKeycloak(ManagePartnersModal);\r\n","import React from 'react';\r\nimport i18n from '../../i18n';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport { Button } from 'carbon-components-react';\r\nimport EditProjectModal from '../Admin/EditProjectModal';\r\nimport ManagePartnersModal from '../Admin/ManagePartnersModal';\r\nimport {getPageUrl, isPortalAdmin} from '../../api/helpers';\r\nimport {Link} from 'react-router-dom';\r\nimport {\r\n  PAGE_MANAGE_SUBSCRIPTIONS,\r\n  PAGE_MANAGE_USERS, PAGE_SUBSCRIPTION_FORM,\r\n  PAGE_TICKET_FORM\r\n} from \"../../api/constants\";\r\n\r\nclass ProjectActionItems extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      showMenu: false,\r\n    };\r\n  }\r\n\r\n  handleClick = () => {\r\n    if (!this.state.showMenu) {\r\n      document.addEventListener('mousedown', this.handleOutsideClick, false);\r\n    } else {\r\n      document.removeEventListener('mousedown', this.handleOutsideClick, false);\r\n    }\r\n\r\n    this.setState(prevState => ({\r\n      showMenu: !prevState.showMenu,\r\n    }));\r\n  };\r\n\r\n  handleOutsideClick = e => {\r\n    if (this.node && !this.node.contains(e.target)) {\r\n      this.handleClick();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const isAdmin = isPortalAdmin();\r\n    const actionDivider = <hr style={{margin: '0', border: 'none', borderTop: '1px solid lightgrey'}}/>;\r\n    const topButton = (\r\n      <Button onClick={this.handleClick} style={{padding: '10px 20px'}} kind=\"tertiary\">\r\n        +\r\n      </Button>\r\n    );\r\n    const editProject = (\r\n      <>\r\n        <EditProjectModal\r\n          key={this.props.project.id}\r\n          allProjects={this.props.allProjects}\r\n          project={this.props.project}\r\n          serviceUrl={this.props.serviceUrl}\r\n          updateProjectList={this.props.updateProjectList}\r\n        />\r\n        {actionDivider}\r\n      </>\r\n    );\r\n    const subscriptionParam = this.props.subscription ? '&subscription=' + this.props.subscription.id : '';\r\n    const newOrRenewSubscription = (\r\n      <>\r\n        <a\r\n          href={`${getPageUrl(PAGE_SUBSCRIPTION_FORM, this.props.locale)}?project=${this.props.project.id}${subscriptionParam}`}\r\n          style={{textDecoration: 'none'}}\r\n        >\r\n          <Button kind=\"ghost\" style={{display: 'block', width: '100%'}} value=\"Subscription Request\">\r\n            {i18n.t('buttons.subscriptionRequest')}\r\n          </Button>\r\n        </a>\r\n        {actionDivider}\r\n      </>\r\n    );\r\n    const managePartners = (\r\n      <>\r\n        <ManagePartnersModal\r\n          key={this.props.project.id}\r\n          project={this.props.project}\r\n          serviceUrl={this.props.serviceUrl}\r\n          updateProjectList={this.props.updateProjectList}\r\n        />\r\n        {actionDivider}\r\n      </>\r\n    );\r\n    const manageUsers = (\r\n      <>\r\n        <a\r\n          href={`${getPageUrl(PAGE_MANAGE_USERS, this.props.locale)}?project=${this.props.project.id}`}\r\n          style={{textDecoration: 'none'}}\r\n        >\r\n          <Button kind=\"ghost\" style={{display: 'block', width: '100%'}} value=\"Manage Users\">\r\n            {i18n.t('buttons.manageUsers')}\r\n          </Button>\r\n        </a>\r\n        {actionDivider}\r\n      </>\r\n    );\r\n    const manageSubscriptions = (\r\n      <>\r\n        <a\r\n          href={`${getPageUrl(PAGE_MANAGE_SUBSCRIPTIONS, this.props.locale)}?project=${this.props.project.id}`}\r\n          style={{textDecoration: 'none'}}\r\n        >\r\n          <Button kind=\"ghost\" style={{display: 'block', width: '100%'}} value=\"Manage Subscriptions\">\r\n            {i18n.t('buttons.manageSubscriptions')}\r\n          </Button>\r\n        </a>\r\n        {actionDivider}\r\n      </>\r\n    );\r\n    const openTicket = (\r\n      <>\r\n        <a\r\n          href={`${getPageUrl(PAGE_TICKET_FORM, this.props.locale)}?project=${this.props.project.id}`}\r\n          style={{textDecoration: 'none'}}\r\n        >\r\n          <Button kind=\"ghost\" style={{display: 'block', width: '100%'}} value=\"Open Ticket\">\r\n            {i18n.t('buttons.openTicket')}\r\n          </Button>\r\n        </a>\r\n        {actionDivider}\r\n      </>\r\n    );\r\n    const ticketingSystem = this.props.ticketingSystem;\r\n    const viewAllTickets = ticketingSystem && ticketingSystem.url && (\r\n      <>\r\n        <a\r\n          href={\r\n            ticketingSystem.url.substr(0, ticketingSystem.url.indexOf('/rest')) +\r\n            '/issues/?jql=Organizations=' +\r\n            this.props.project.systemId\r\n          }\r\n          style={{textDecoration: 'none'}}\r\n          target=\"_blank\"\r\n          rel=\"noreferrer\"\r\n        >\r\n          <Button kind=\"ghost\" style={{display: 'block', width: '100%'}} value=\"View All Tickets\">\r\n            {i18n.t('buttons.viewAllTickets')}\r\n          </Button>\r\n        </a>\r\n        {actionDivider}\r\n      </>\r\n    );\r\n    const deleteProject = (\r\n      <>\r\n        <Button\r\n          kind=\"ghost\"\r\n          onClick={e => this.props.handleDeleteProject(e, this.props.project.id)}\r\n          style={{display: 'block', width: '100%', color: 'red'}}\r\n        >\r\n          {i18n.t('buttons.delete')}\r\n        </Button>\r\n        {actionDivider}\r\n      </>\r\n    );\r\n    if (!this.props.subscription) {\r\n      return (\r\n        <>\r\n          {topButton}\r\n          {this.state.showMenu && (\r\n            <div\r\n              className=\"menu\"\r\n              style={{zIndex: '100', position: 'absolute', backgroundColor: 'white'}}\r\n              ref={node => {\r\n                this.node = node;\r\n              }}\r\n            >\r\n              {actionDivider}\r\n              {isAdmin && editProject}\r\n              {newOrRenewSubscription}\r\n              {isAdmin && (\r\n                <>\r\n                  {openTicket}\r\n                  {viewAllTickets}\r\n                  {manageSubscriptions}\r\n                  {manageUsers}\r\n                  {managePartners}\r\n                  {deleteProject}\r\n                </>\r\n              )}\r\n            </div>\r\n          )}\r\n        </>\r\n      );\r\n    } else {\r\n      return (\r\n        <>\r\n          {topButton}\r\n          {this.state.showMenu && (\r\n            <div\r\n              className=\"menu\"\r\n              style={{zIndex: '100', position: 'absolute', backgroundColor: 'white'}}\r\n              ref={node => {\r\n                this.node = node;\r\n              }}\r\n            >\r\n              {actionDivider}\r\n              {/*View Project Subscription*/}\r\n              <Link to={`/subscription-details/${this.props.subscription.id}`} style={{textDecoration: 'none'}}>\r\n                <Button kind=\"ghost\" style={{display: 'block', width: '100%'}} value=\"View\">\r\n                  {i18n.t('buttons.view')}\r\n                </Button>\r\n              </Link>\r\n              {actionDivider}\r\n              {isAdmin && editProject}\r\n              {openTicket}\r\n              {viewAllTickets}\r\n              {!isAdmin && newOrRenewSubscription}\r\n              {isAdmin && (\r\n                <>\r\n                  {manageSubscriptions}\r\n                  {manageUsers}\r\n                  {managePartners}\r\n                  {deleteProject}\r\n                </>\r\n              )}\r\n            </div>\r\n          )}\r\n        </>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default withKeycloak(ProjectActionItems);\r\n","import {getDefaultOptions, request} from './helpers';\r\nimport moment from 'moment';\r\n\r\nconst resource = 'api/project-subscriptions';\r\n\r\nexport const formatStartDate = startDate => {\r\n  return String(new Date(startDate).toDateString());\r\n};\r\n\r\nexport const formatEndDate = (startDate, lengthInMonths) => {\r\n  const endDate = new Date(startDate).setMonth(new Date(startDate).getMonth() + lengthInMonths);\r\n  return String(new Date(endDate).toDateString());\r\n};\r\n\r\nexport const stripTime = date => {\r\n  return moment(date).format('MM/DD/YYYY');\r\n};\r\n\r\nexport const apiSubscriptionGet = async (serviceUrl, id) => {\r\n  const url = `${serviceUrl}/${resource}/${id}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\n// Project Subscription creation consists of an object containing a projectSubscription, an entandoVersionId, and a\r\n// project id, see SubscriptionCreationRequest.\r\n/**\r\n * Called to create a new project subscription\r\n *\r\n * @param {string} serviceUrl\r\n * @param {ProjectSubscriptionCreation} projectSubscriptionCreation\r\n * @returns\r\n */\r\nexport const apiProjectSubscriptionPost = async (serviceUrl, projectSubscriptionCreation) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n    body: projectSubscriptionCreation ? JSON.stringify(projectSubscriptionCreation) : null,\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiProjectSubscriptionPut = async (serviceUrl, projectSubscriptionCreation) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'PUT',\r\n    body: projectSubscriptionCreation ? JSON.stringify(projectSubscriptionCreation) : null,\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\n// Same format as {projectSubscriptionCreation}\r\nexport const apiRenewSubscription = async (serviceUrl, projectSubscriptionRenew) => {\r\n  const url = `${serviceUrl}/${resource}/renew`;\r\n\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'PUT',\r\n    body: projectSubscriptionRenew ? JSON.stringify(projectSubscriptionRenew) : null,\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n","import {Component} from 'react';\r\nimport {\r\n  DataTable,\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableHeader,\r\n  TableBody,\r\n  TableCell\r\n} from 'carbon-components-react';\r\nimport '../../index.scss';\r\nimport {apiDeleteProjectFromCustomer, apiCustomerGet} from '../../api/customers';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport {Link} from 'react-router-dom';\r\nimport i18n from '../../i18n';\r\nimport {authenticationChanged, getActiveSubscription, isAuthenticated, isPortalAdminOrSupport} from '../../api/helpers';\r\nimport {apiCurrentTicketingSystemGet} from '../../api/ticketingsystem';\r\nimport ProjectActionItems from '../Admin/ProjectActionItems';\r\nimport {formatEndDate, formatStartDate} from '../../api/subscriptions';\r\n\r\nclass CustomerDataTable extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      projects: {},\r\n      ticketingSystem: {},\r\n      action: 'Edit',\r\n      showMenu: {},\r\n    };\r\n    this.headerData = [\r\n      {\r\n        header: i18n.t('customerDashboard.projectName'),\r\n        key: 'projectName',\r\n      },\r\n      {\r\n        header: i18n.t('customerDashboard.partners'),\r\n        key: 'partners',\r\n      },\r\n      {\r\n        header: i18n.t('customerDashboard.entandoVersion'),\r\n        key: 'entandoVersion',\r\n      },\r\n      {\r\n        header: i18n.t('customerDashboard.status'),\r\n        key: 'status',\r\n      },\r\n      {\r\n        header: i18n.t('customerDashboard.startDate'),\r\n        key: 'startDate',\r\n      },\r\n      {\r\n        header: i18n.t('customerDashboard.endDate'),\r\n        key: 'endDate',\r\n      },\r\n      {\r\n        header: i18n.t('customerDetails.notes'),\r\n        key: 'notes',\r\n      },\r\n      {\r\n        header: i18n.t('customerDashboard.action'),\r\n        key: 'action',\r\n      },\r\n    ];\r\n  }\r\n\r\n  async fetchData() {\r\n    if (isAuthenticated(this.props)) {\r\n      try {\r\n        const customer = await apiCustomerGet(this.props.serviceUrl, this.props.customerId);\r\n        const projects = customer.data.projects;\r\n        const ticketingSystem = await apiCurrentTicketingSystemGet(this.props.serviceUrl);\r\n        this.setState({\r\n          projects: projects,\r\n          ticketingSystem: ticketingSystem,\r\n        });\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n    this.render();\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (isAuthenticated(this.props)) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (authenticationChanged(this.props, prevProps)) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n\r\n  // fix warning: Can't perform a React state update on an unmounted component\r\n  componentWillUnmount() {\r\n    this.setState = (state, callback) => {\r\n      //no-op\r\n    };\r\n  }\r\n\r\n  updateProjectList = () => {\r\n    this.fetchData();\r\n  };\r\n\r\n  async deleteProject(id) {\r\n    if (isAuthenticated(this.props)) {\r\n      return await apiDeleteProjectFromCustomer(this.props.serviceUrl, this.props.customerId, id);\r\n    }\r\n  }\r\n\r\n  handleDeleteProject = (e, id) => {\r\n    e.preventDefault();\r\n    if (window.confirm('Are you sure you want to delete this project?')) {\r\n      this.deleteProject(id)\r\n        .then(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.deleted'),\r\n            submitColour: '#24a148',\r\n          });\r\n          this.props.updateCustomerList();\r\n        })\r\n        .catch(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.error'),\r\n            submitColour: '#da1e28',\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <DataTable rows={[{id: '1'}]} headers={this.headerData}>\r\n          {({rows, headers, getHeaderProps, getTableProps}) => (\r\n            <TableContainer description={i18n.t('customerDashboard.tableDesc')}>\r\n              <Table {...getTableProps()}>\r\n                <TableHead>\r\n                  <TableRow key=\"headerRow\">\r\n                    {headers.map(header => {\r\n                      let result;\r\n                      if (header.header === i18n.t('customerDetails.notes')) {\r\n                        if (isPortalAdminOrSupport()) {\r\n                          result = <TableHeader {...getHeaderProps({header})}>{header.header}</TableHeader>;\r\n                        }\r\n                      } else {\r\n                        result = <TableHeader {...getHeaderProps({ header })}>{header.header}</TableHeader>;\r\n                      }\r\n                      return result;\r\n                    })}\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {Object.keys(this.state.projects).length !== 0\r\n                    ? this.state.projects.map((project, index) => {\r\n                      const subscription = getActiveSubscription(project);\r\n                      if (!subscription) {\r\n                        return (\r\n                          <TableRow key={index}>\r\n                            <TableCell>{project.name}</TableCell>\r\n                            {project.partners.length !== 0 ? (\r\n                              <TableCell>\r\n                                {project.partners.map((partner, partnerIndex) => (\r\n                                  <div key={partnerIndex}>{partner.name}</div>\r\n                                ))}\r\n                              </TableCell>\r\n                            ) : (\r\n                              <TableCell>{i18n.t('userMessages.none')}</TableCell>\r\n                            )}\r\n                            <TableCell>{i18n.t('userMessages.none')}</TableCell>\r\n                            <TableCell>{i18n.t('userMessages.none')}</TableCell>\r\n                            <TableCell>{i18n.t('userMessages.none')}</TableCell>\r\n                            <TableCell>{i18n.t('userMessages.none')}</TableCell>\r\n                            {isPortalAdminOrSupport() ?\r\n                              <TableCell style={{width: '250px'}}>{project.notes}</TableCell> : null}\r\n                            <TableCell>\r\n                              <ProjectActionItems\r\n                                serviceUrl={this.props.serviceUrl}\r\n                                ticketingSystem={this.state.ticketingSystem}\r\n                                locale={this.props.locale}\r\n                                project={project}\r\n                                allProjects={this.state.projects}\r\n                                handleDeleteProject={this.handleDeleteProject}\r\n                                updateProjectList={this.updateProjectList}\r\n                                />\r\n                              </TableCell>\r\n                            </TableRow>\r\n                          );\r\n                        } else {\r\n                          return (\r\n                            <TableRow key={index}>\r\n                              <TableCell>\r\n                                <Link to={`/subscription-details/${subscription.id}`}>{project.name}</Link>\r\n                              </TableCell>\r\n                              {project.partners.length !== 0 ? (\r\n                                <TableCell>\r\n                                  {project.partners.map((partner, partnerIndex) => (\r\n                                    <div key={partnerIndex}>{partner.name}</div>\r\n                                  ))}\r\n                                </TableCell>\r\n                              ) : (\r\n                                <TableCell>{i18n.t('userMessages.none')}</TableCell>\r\n                              )}\r\n                              {subscription.entandoVersion ? (\r\n                                <TableCell>{subscription.entandoVersion.name}</TableCell>\r\n                              ) : (\r\n                                <TableCell>{i18n.t('userMessages.none')}</TableCell>\r\n                              )}\r\n                              <TableCell>{subscription.status}</TableCell>\r\n                              <TableCell>{formatStartDate(subscription.startDate)}</TableCell>\r\n                              <TableCell>{formatEndDate(subscription.startDate, subscription.lengthInMonths)}</TableCell>\r\n                              {isPortalAdminOrSupport() ?\r\n                                <TableCell style={{width: '250px'}}>{project.notes}</TableCell> : null}\r\n                              <TableCell>\r\n                                <ProjectActionItems\r\n                                  serviceUrl={this.props.serviceUrl}\r\n                                  ticketingSystem={this.state.ticketingSystem}\r\n                                  locale={this.props.locale}\r\n                                  subscription={subscription}\r\n                                  project={project}\r\n                                  allProjects={this.state.projects}\r\n                                  handleDeleteProject={this.handleDeleteProject}\r\n                                  updateProjectList={this.updateProjectList}\r\n                                />\r\n                              </TableCell>\r\n                            </TableRow>\r\n                          );\r\n                        }\r\n                      })\r\n                    : null}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          )}\r\n        </DataTable>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withKeycloak(CustomerDataTable);\r\n","import {Component} from 'react';\r\nimport i18n from '../../i18n';\r\nimport { Tile } from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\n\r\nclass CustomerDetails extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      customer: {},\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"customer-details\">\r\n        <Tile style={{margin: '2em 0', minHeight: '0', paddingBottom: '0'}}>\r\n          <div>\r\n            <strong>{i18n.t('customerDashboard.customerId')}</strong> {this.props.customer.id}\r\n          </div>\r\n          <div>\r\n            <strong>{i18n.t('customerDashboard.customerName')}</strong> {this.props.customer.name}\r\n          </div>\r\n        </Tile>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withKeycloak(CustomerDetails);\r\n","import React, {Component} from 'react';\r\nimport i18n from '../../i18n';\r\nimport {ModalWrapper, Form, TextInput, TextArea} from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport {apiCustomerGet, apiCustomerPut} from '../../api/customers';\r\nimport {authenticationChanged, isAuthenticated} from '../../api/helpers';\r\n\r\nclass EditCustomerModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      name: '',\r\n      customerNumber: '',\r\n      contactName: '',\r\n      contactPhone: '',\r\n      contactEmail: '',\r\n      notes: '',\r\n      invalid: {},\r\n      modalId: '',\r\n      buttonId: '',\r\n      submitMsg: '',\r\n      submitColour: 'black',\r\n    };\r\n  }\r\n\r\n  handleValidation() {\r\n    let invalid = {};\r\n    let formIsValid = true;\r\n\r\n    //name\r\n    if (this.state.name === '') {\r\n      formIsValid = false;\r\n      invalid['name'] = true;\r\n    }\r\n\r\n    //customerNumber\r\n    if (this.state.customerNumber === '') {\r\n      formIsValid = false;\r\n      invalid['customerNumber'] = true;\r\n    }\r\n\r\n    //contactEmail\r\n    if (typeof this.state.contactEmail !== 'undefined') {\r\n      let lastAtPos = this.state.contactEmail.lastIndexOf('@');\r\n      let lastDotPos = this.state.contactEmail.lastIndexOf('.');\r\n\r\n      if (\r\n        !(\r\n          lastAtPos < lastDotPos &&\r\n          lastAtPos > 0 &&\r\n          this.state.contactEmail.indexOf('@@') === -1 &&\r\n          lastDotPos > 2 &&\r\n          this.state.contactEmail.length - lastDotPos > 2\r\n        )\r\n      ) {\r\n        formIsValid = false;\r\n        invalid['contactEmail'] = true;\r\n      }\r\n    }\r\n\r\n    this.setState({ invalid: invalid });\r\n    return formIsValid;\r\n  }\r\n\r\n  handleChanges = e => {\r\n    const input = e.target;\r\n    const name = input.name;\r\n    const value = input.value;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  async updateCustomer(customer) {\r\n    if (isAuthenticated(this.props)) {\r\n      return await apiCustomerPut(this.props.serviceUrl, customer);\r\n    }\r\n  }\r\n\r\n  getCustomerDetails = customerId => {\r\n    this.getCustomer(customerId);\r\n  };\r\n\r\n  async getCustomer(customerId) {\r\n    if (isAuthenticated(this.props)) {\r\n      const customer = (await apiCustomerGet(this.props.serviceUrl, customerId)).data;\r\n      this.setState({\r\n        name: customer.name,\r\n        customerNumber: customer.customerNumber,\r\n        contactName: customer.contactName,\r\n        contactPhone: customer.contactPhone,\r\n        contactEmail: customer.contactEmail,\r\n        notes: customer.notes,\r\n        modalId: 'modal-form-customer-edit-' + customer.id,\r\n        buttonId: 'edit-customer-button-' + customer.id,\r\n      });\r\n    }\r\n  }\r\n\r\n  handleFormSubmit = () => {\r\n    const formIsValid = this.handleValidation();\r\n\r\n    if (formIsValid) {\r\n      const customer = {\r\n        id: this.props.customer.id,\r\n        name: this.state.name,\r\n        customerNumber: this.state.customerNumber,\r\n        contactName: this.state.contactName,\r\n        contactPhone: this.state.contactPhone,\r\n        contactEmail: this.state.contactEmail,\r\n        notes: this.state.notes,\r\n      };\r\n      this.updateCustomer(customer)\r\n        .then(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.updated'),\r\n            submitColour: '#24a148',\r\n          });\r\n          this.props.updateCustomerList();\r\n          this.getCustomerDetails(this.props.customer.id);\r\n        })\r\n        .catch(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.error'),\r\n            submitColour: '#da1e28',\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  clearValues = () => {\r\n    const customerModalElement = document.querySelector('#' + this.state.modalId);\r\n    if (!customerModalElement.className.includes('is-visible')) {\r\n      this.setState({\r\n        name: this.props.customer.name,\r\n        customerNumber: this.props.customer.customerNumber,\r\n        contactName: this.props.customer.contactName,\r\n        contactPhone: this.props.customer.contactPhone,\r\n        contactEmail: this.props.customer.contactEmail,\r\n        notes: this.props.customer.notes,\r\n        invalid: {},\r\n      });\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (isAuthenticated(this.props)) {\r\n      if (this.props.customerId) {\r\n        this.getCustomerDetails(this.props.customerId);\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (authenticationChanged(this.props, prevProps)) {\r\n      this.getCustomerDetails(this.props.customerId);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const modalConfirmation = (\r\n      <div className=\"bx--modal-header\">\r\n        <p style={{color: this.state.submitColour}}>{this.state.submitMsg}</p>\r\n      </div>\r\n    );\r\n    const modalId = this.state.modalId;\r\n    const buttonClassName = 'bx--btn bx--btn--ghost edit-customer-button-' + this.props.customerId;\r\n    return (\r\n      modalId && (\r\n        <ModalWrapper\r\n          buttonTriggerText={i18n.t('buttons.edit')}\r\n          modalHeading={i18n.t('adminDashboard.editCustomer.title')}\r\n          buttonTriggerClassName={buttonClassName}\r\n          className=\"modal-form\"\r\n          id={modalId}\r\n          handleSubmit={this.handleFormSubmit}\r\n          primaryButtonText={i18n.t('modalText.save')}\r\n          secondaryButtonText={i18n.t('modalText.cancel')}\r\n        >\r\n          {modalConfirmation}\r\n          <div className=\"form-container\">\r\n            <Form onSubmit={this.handleFormSubmit} id={'form-' + modalId}>\r\n              <TextInput\r\n                id={'name' + modalId}\r\n                name=\"name\"\r\n                labelText={i18n.t('adminDashboard.addCustomer.customerName') + ' *'}\r\n                value={this.state.name}\r\n                onChange={this.handleChanges}\r\n                invalidText={i18n.t('validation.invalid.required')}\r\n                invalid={this.state.invalid['name']}\r\n              />\r\n              <TextInput\r\n                id={'customerNumber' + modalId}\r\n                name=\"customerNumber\"\r\n                labelText={i18n.t('adminDashboard.addCustomer.customerNumber') + ' *'}\r\n                value={this.state.customerNumber}\r\n                onChange={this.handleChanges}\r\n                invalidText={i18n.t('validation.invalid.required')}\r\n                invalid={this.state.invalid['customerNumber']}\r\n              />\r\n              <TextInput\r\n                id={'contactName' + modalId}\r\n                name=\"contactName\"\r\n                labelText={i18n.t('adminDashboard.addCustomer.contactName')}\r\n                value={this.state.contactName}\r\n                onChange={this.handleChanges}\r\n              />\r\n              <TextInput\r\n                id={'contactPhone' + modalId}\r\n                name=\"contactPhone\"\r\n                labelText={i18n.t('adminDashboard.addCustomer.contactPhone')}\r\n                value={this.state.contactPhone}\r\n                onChange={this.handleChanges}\r\n              />\r\n              <TextInput\r\n                id={'contactEmail' + modalId}\r\n                name=\"contactEmail\"\r\n                labelText={i18n.t('adminDashboard.addCustomer.contactEmail') + ' *'}\r\n                value={this.state.contactEmail}\r\n                onChange={this.handleChanges}\r\n                invalidText={i18n.t('validation.invalid.email')}\r\n                invalid={this.state.invalid['contactEmail']}\r\n              />\r\n              <TextArea\r\n                name=\"notes\"\r\n                labelText={i18n.t('adminDashboard.addCustomer.notes')}\r\n                value={this.state.notes}\r\n                onChange={this.handleChanges}\r\n              />\r\n            </Form>\r\n          </div>\r\n          {modalConfirmation}\r\n        </ModalWrapper>\r\n      )\r\n    );\r\n  }\r\n}\r\n\r\nexport default withKeycloak(EditCustomerModal);\r\n","import {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {AccordionItem, Button} from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport {apiCustomerGet, apiCustomerDelete} from '../../api/customers';\r\nimport CustomerDataTable from './CustomerDataTable';\r\nimport CustomerDetails from './CustomerDetails';\r\nimport {\r\n  isPortalAdminOrSupport,\r\n  isPortalAdmin,\r\n  isPortalCustomer,\r\n  isAuthenticated,\r\n  authenticationChanged\r\n} from '../../api/helpers';\r\nimport EditCustomerModal from '../Admin/EditCustomerModal';\r\nimport i18n from '../../i18n';\r\n\r\nclass CustomerAccordian extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      projects: {},\r\n      customer: {},\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (isAuthenticated(this.props)) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (authenticationChanged(this.props, prevProps)) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n\r\n  async fetchData() {\r\n    const customerId = this.props.customerId;\r\n    try {\r\n      const customer = await apiCustomerGet(this.props.serviceUrl, customerId);\r\n      this.setState({\r\n        customer: customer.data,\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  async deleteCustomer() {\r\n    return await apiCustomerDelete(this.props.serviceUrl, this.state.customer.id);\r\n  }\r\n\r\n  handleDelete() {\r\n    if (window.confirm('Are you sure you want to delete this customer?')) {\r\n      this.deleteCustomer().then(() => {\r\n        this.props.updateCustomerList();\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div>\r\n          {isPortalCustomer() && <CustomerDetails serviceUrl={this.props.serviceUrl} customer={this.state.customer}/>}\r\n          <AccordionItem title={this.props.title} open={this.props.accordionOpened}>\r\n            <div style={{display: 'flex'}}>\r\n              {isPortalAdminOrSupport() && (\r\n                <Link style={{textDecoration: 'none'}} to={`/customer-details/${this.state.customer.id}`}>\r\n                  <Button kind=\"ghost\">{i18n.t('buttons.viewDetails')}</Button>\r\n                </Link>\r\n              )}\r\n              {isPortalAdmin() && (\r\n                <div style={{display: 'flex'}}>\r\n                  <EditCustomerModal\r\n                    serviceUrl={this.props.serviceUrl}\r\n                    customer={this.state.customer}\r\n                    key={this.state.customer.id}\r\n                    updateCustomerList={this.props.updateCustomerList}\r\n                    customerId={this.state.customer.id}\r\n                  />\r\n                  <Button kind=\"ghost\" style={{color: 'red'}} onClick={() => this.handleDelete()}>\r\n                    {i18n.t('buttons.delete')}\r\n                  </Button>\r\n                </div>\r\n              )}\r\n            </div>\r\n            <CustomerDataTable\r\n              key={new Date().getTime()}\r\n              serviceUrl={this.props.serviceUrl}\r\n              customerId={this.props.customerId}\r\n              locale={this.props.locale}\r\n              updateCustomerList={this.props.updateCustomerList}\r\n            />\r\n          </AccordionItem>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withKeycloak(CustomerAccordian);\r\n","import React from 'react';\r\nimport i18n from '../../i18n';\r\nimport { Accordion, PaginationNav, Search, Tile } from 'carbon-components-react';\r\nimport AddCustomerModal from './AddCustomerModal';\r\nimport AddPartnerModal from './AddPartnerModal';\r\nimport AddProjectModal from './AddProjectModal';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport {apiCustomersGet} from '../../api/customers';\r\nimport CustomerAccordian from '../Customer/CustomerAccordian';\r\nimport {\r\n  authenticationChanged,\r\n  isPortalAdmin,\r\n  isPortalSupport,\r\n  isPortalPartner,\r\n  isPortalUser,\r\n  isAuthenticated,\r\n} from '../../api/helpers';\r\n\r\nclass AdminDashboard extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      customers: {},\r\n      role: '',\r\n      filteredCustomers: {},\r\n      currentPage: 0,\r\n      test: '',\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchData();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (authenticationChanged(this.props, prevProps)) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n\r\n  async fetchData() {\r\n    if (isAuthenticated(this.props)) {\r\n      let customers = {};\r\n      try {\r\n        customers = await apiCustomersGet(this.props.serviceUrl);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n\r\n      this.setState({\r\n        customers: customers.data ? customers.data : {},\r\n        filteredCustomers: customers.data ? customers.data : {},\r\n      });\r\n    }\r\n  }\r\n\r\n  handleSearch = event => {\r\n    if (event.key === 'Enter') {\r\n      //Note: should refactor this to preform filtering in db\r\n      const newFilteredState = this.state.customers.filter(customer =>\r\n        customer.name.toLowerCase().includes(event.target.value.toLowerCase())\r\n      );\r\n      this.setState({\r\n        filteredCustomers: newFilteredState,\r\n        currentPage: 0,\r\n      });\r\n    } else {\r\n      if (event.target.value === '' || event.target.value === undefined) {\r\n        this.setState({\r\n          filteredCustomers: this.state.customers,\r\n        });\r\n      }\r\n    }\r\n    this.forceUpdate();\r\n  };\r\n\r\n  updateCustomerList = () => {\r\n    this.fetchData();\r\n  };\r\n\r\n  render() {\r\n    var numberOfPages = 1;\r\n    if (Object.keys(this.state.filteredCustomers).length !== 0) {\r\n      numberOfPages = Math.ceil(this.state.filteredCustomers.length / 5);\r\n    } else {\r\n      numberOfPages = 1;\r\n    }\r\n\r\n    const props = () => ({\r\n      loop: Boolean(false),\r\n      page: Number(this.state.currentPage),\r\n      totalItems: Number(numberOfPages),\r\n      itemsShown: Number(1),\r\n      onChange: event => this.setState({ currentPage: event }),\r\n    });\r\n\r\n    return (\r\n      <div className=\"admin-dashboard\">\r\n        {isPortalAdmin() || isPortalSupport() || isPortalPartner() ? (\r\n          <Tile>\r\n            <p className=\"title\">{i18n.t('adminDashboard.allCustomers')}</p>\r\n            <div className=\"bx--row\">\r\n              <div className=\"bx--col\">\r\n                <Search\r\n                  onChange={this.handleSearch}\r\n                  id=\"search\"\r\n                  placeholder={i18n.t('adminDashboard.searchText')}\r\n                  labelText={i18n.t('adminDashboard.searchLabel')}\r\n                  onKeyPress={this.handleSearch}\r\n                />\r\n              </div>\r\n              {isPortalAdmin() ? (\r\n                <div className=\"bx--col\">\r\n                  <div>\r\n                    <AddPartnerModal serviceUrl={this.props.serviceUrl} updateCustomerList={this.updateCustomerList}/>\r\n                    <AddCustomerModal serviceUrl={this.props.serviceUrl} updateCustomerList={this.updateCustomerList}/>\r\n                    <AddProjectModal serviceUrl={this.props.serviceUrl} updateCustomerList={this.updateCustomerList}\r\n                                     allCustomers={this.state.customers}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n          </Tile>\r\n        ) : null}\r\n\r\n        <div className=\"form-container\">\r\n          <Accordion>\r\n            {Object.keys(this.state.customers).length !== 0\r\n              ? this.state.filteredCustomers.map((customer, index) => {\r\n                //Pagination for Admin and Support roles (5 items per page)\r\n                //Note: eventually this should be pushed down into paginated microservice calls\r\n                var indexOfLastItem = (this.state.currentPage + 1) * 5 - 1;\r\n                var firstIndexOfCurrentPage = this.state.currentPage * 5;\r\n                var accordionOpened = this.state.customers.length === 1;\r\n\r\n                if (isPortalUser()) {\r\n                  if (index >= firstIndexOfCurrentPage && index <= indexOfLastItem) {\r\n                    return (\r\n                      <CustomerAccordian\r\n                        key={customer.id}\r\n                        serviceUrl={this.props.serviceUrl}\r\n                          customerId={customer.id}\r\n                          title={customer.name}\r\n                          updateCustomerList={this.updateCustomerList}\r\n                          locale={this.props.locale}\r\n                          accordionOpened={accordionOpened}\r\n                        />\r\n                      );\r\n                    } else {\r\n                      return null;\r\n                    }\r\n                  } else {\r\n                    return null;\r\n                  }\r\n                })\r\n              : null}\r\n          </Accordion>\r\n          <PaginationNav {...props()} className=\"pagination-right\" />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withKeycloak(AdminDashboard);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport AdminDashboard from '../components/Admin/AdminDashboard';\r\nimport '../index.scss';\r\n\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\n\r\nimport {subscribeToWidgetEvent} from '../helpers/widgetEvents';\r\nimport {KEYCLOAK_EVENT_TYPE} from './widgetEventTypes';\r\nimport * as Locale from '../i18n';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window && window.entando && window.entando.keycloak && {...window.entando.keycloak, initialized: true}) || {\r\n    initialized: false,\r\n  };\r\n\r\nconst ATTRIBUTES = {\r\n  hidden: 'hidden',\r\n  locale: 'locale',\r\n  paginationMode: 'pagination-mode',\r\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n  serviceUrl: 'service-url',\r\n};\r\n\r\nclass AdminDashboardElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    //retargetEvents(shadowRoot);\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n    const locale = this.getAttribute(ATTRIBUTES.locale) || '';\r\n    Locale.setLocale(locale);\r\n\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <AdminDashboard serviceUrl={serviceUrl} locale={locale}/>\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.define('cp-admin-dashboard-widget', AdminDashboardElement);\r\n","import { getDefaultOptions, request, getUrl } from './helpers';\r\n\r\nconst resource = 'api/tickets';\r\n\r\nexport const apiTicketDelete = async (serviceUrl, id) => {\r\n  const url = `${serviceUrl}/${resource}/${id}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiTicketsGet = async serviceUrl => {\r\n  const url = getUrl(`${serviceUrl}/${resource}`);\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiTicketPost = async (serviceUrl, ticket) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n    body: ticket ? JSON.stringify(ticket) : null,\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nconst jiraResource = 'api/tickets/ticketingsystem';\r\n\r\nexport const apiJiraTicketsGet = async (serviceUrl, projectId) => {\r\n  const url = `${serviceUrl}/${jiraResource}/${projectId}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiJiraTicketPost = async (serviceUrl, projectId, ticket) => {\r\n  const url = `${serviceUrl}/${jiraResource}/${projectId}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n    body: ticket ? JSON.stringify(ticket) : null,\r\n  };\r\n  return request(url, options);\r\n};\r\n","import React, { Component } from 'react';\r\nimport {\r\n  DataTable,\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableHeader,\r\n  TableBody,\r\n  TableCell,\r\n  PaginationNav,\r\n  Button,\r\n} from 'carbon-components-react';\r\nimport {apiJiraTicketsGet} from '../../api/tickets';\r\nimport {apiCurrentTicketingSystemGet} from '../../api/ticketingsystem';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport {apiProjectGet} from '../../api/projects';\r\nimport {authenticationChanged, getPageUrl, isAuthenticated, isPortalUser} from '../../api/helpers';\r\nimport i18n from '../../i18n';\r\nimport {PAGE_TICKET_FORM} from \"../../api/constants\";\r\n\r\nclass TicketList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      tickets: {},\r\n      project: {},\r\n      ticketingSystem: {},\r\n      currentPage: 0,\r\n    };\r\n    this.headerData = [\r\n      {\r\n        header: i18n.t('ticketDetails.issue'),\r\n        key: 'issue',\r\n      },\r\n      {\r\n        header: i18n.t('ticketDetails.summary'),\r\n        key: 'summary',\r\n      },\r\n      {\r\n        header: i18n.t('ticketDetails.status'),\r\n        key: 'status',\r\n      },\r\n      {\r\n        header: i18n.t('ticketDetails.type'),\r\n        key: 'type',\r\n      },\r\n      {\r\n        header: i18n.t('ticketDetails.priority'),\r\n        key: 'priority',\r\n      },\r\n      {\r\n        header: i18n.t('ticketDetails.created'),\r\n        key: 'created',\r\n      },\r\n      {\r\n        header: i18n.t('ticketDetails.updated'),\r\n        key: 'updated',\r\n      },\r\n      {\r\n        header: i18n.t('ticketDetails.link'),\r\n        key: 'link',\r\n      },\r\n    ];\r\n  }\r\n\r\n  async fetchData() {\r\n    if (isPortalUser()) {\r\n      try {\r\n        const project = (await apiProjectGet(this.props.serviceUrl, this.props.projectId)).data;\r\n        const ticketingSystem = await apiCurrentTicketingSystemGet(this.props.serviceUrl);\r\n        const tickets = await apiJiraTicketsGet(this.props.serviceUrl, project.id);\r\n        this.setState({\r\n          tickets: tickets,\r\n          project: project,\r\n          ticketingSystem: ticketingSystem,\r\n        });\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (isAuthenticated(this.props)) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (authenticationChanged(this.props, prevProps)) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var numberOfPages = 1;\r\n    if (Object.keys(this.state.tickets).length !== 0) {\r\n      numberOfPages = Math.ceil(this.state.tickets.data.length / 10);\r\n    }\r\n\r\n    const paginationProps = () => ({\r\n      loop: Boolean(false),\r\n      page: Number(this.state.currentPage),\r\n      totalItems: Number(numberOfPages),\r\n      itemsShown: Number(1),\r\n      onChange: event => this.setState({currentPage: event}),\r\n    });\r\n    const ticketSystemUrl = this.state.ticketingSystem.url;\r\n    const ticketingSystemBaseUrl = ticketSystemUrl != null ? ticketSystemUrl.substr(0, ticketSystemUrl.indexOf('/rest')) : null;\r\n\r\n    return (\r\n      <div>\r\n        {this.state.project.id && (\r\n          <div>\r\n            {/*View All Ticket*/}\r\n            <a\r\n              href={ticketingSystemBaseUrl + '/issues/?jql=Organizations=' + this.state.project.systemId}\r\n              style={{textDecoration: 'none'}}\r\n              target=\"_blank\"\r\n              rel=\"noreferrer\"\r\n            >\r\n              <Button kind=\"ghost\" style={{display: 'block', width: '100%'}} value=\"Open Ticket\">\r\n                {i18n.t('buttons.viewAllTickets')}\r\n              </Button>\r\n            </a>\r\n            {/*Open Ticket*/}\r\n            <a\r\n              href={`${getPageUrl(PAGE_TICKET_FORM, this.props.locale)}?project=${this.state.project.id}`}\r\n              style={{textDecoration: 'none'}}\r\n            >\r\n              <Button kind=\"ghost\" style={{display: 'block', width: '100%'}} value=\"Open Ticket\">\r\n                {i18n.t('buttons.openTicket')}\r\n              </Button>\r\n            </a>\r\n          </div>\r\n        )}\r\n        <DataTable rows={[{id: '1'}]} headers={this.headerData}>\r\n          {({rows, headers, getHeaderProps, getTableProps}) => (\r\n            <TableContainer title={i18n.t('ticketDetails.listOfTickets')}>\r\n              <Table {...getTableProps()}>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    {headers.map(header => (\r\n                      <TableHeader {...getHeaderProps({header})}>{header.header}</TableHeader>\r\n                    ))}\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {Object.keys(this.state.tickets).length !== 0 ? (\r\n                    this.state.tickets.data.map((ticket, index) => {\r\n                      const indexOfLastItem = (this.state.currentPage + 1) * 10 - 1;\r\n                      const firstIndexOfCurrentPage = this.state.currentPage * 10;\r\n                      const ticketUrl = ticketingSystemBaseUrl + '/browse/' + ticket.systemId;\r\n\r\n                      if (index >= firstIndexOfCurrentPage && index <= indexOfLastItem) {\r\n                        return (\r\n                          <TableRow key={ticket.id}>\r\n                            <TableCell>\r\n                              <a href={ticketUrl} target=\"_blank\" rel=\"noreferrer\">\r\n                                {ticket.systemId}\r\n                              </a>\r\n                            </TableCell>\r\n                            <TableCell>{ticket.summary}</TableCell>\r\n                            <TableCell>{ticket.status}</TableCell>\r\n                            <TableCell>{ticket.type}</TableCell>\r\n                            <TableCell>{ticket.priority}</TableCell>\r\n                            <TableCell>{new Date(ticket.createDate).toDateString()}</TableCell>\r\n                            <TableCell>{new Date(ticket.updateDate).toDateString()}</TableCell>\r\n                            <TableCell>\r\n                              <a href={ticketUrl} target=\"_blank\" rel=\"noreferrer\">\r\n                                {i18n.t('ticketDetails.viewTicket')}\r\n                              </a>\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        );\r\n                      } else {\r\n                        return null;\r\n                      }\r\n                    })\r\n                  ) : (\r\n                    <TableRow/>\r\n                  )}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          )}\r\n        </DataTable>\r\n        <PaginationNav {...paginationProps()} className=\"pagination-right\"/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withKeycloak(TicketList);\r\n","import React from 'react';\r\nimport TicketList from './TicketList';\r\nimport {Tile} from 'carbon-components-react';\r\nimport {apiSubscriptionGet, formatStartDate, formatEndDate} from '../../api/subscriptions';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport {apiGetProjectUsers, apiProjectGet} from '../../api/projects';\r\nimport {isPortalAdminOrSupport, isPortalUser, authenticationChanged} from '../../api/helpers';\r\nimport i18n from '../../i18n';\r\nimport Breadcrumbs from \"../Breadcrumbs/Breadcrumbs\";\r\n\r\nconst subscriptionData = {\r\n  type: 'Product Support Subscription Entando Platform',\r\n  license: 'Free Commercial Open Source',\r\n};\r\n\r\nclass Subscription extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: true,\r\n      subscription: {},\r\n      users: {},\r\n      project: {},\r\n      customer: {},\r\n    };\r\n  }\r\n\r\n  async fetchData() {\r\n    if (isPortalUser()) {\r\n      try {\r\n        let users = {};\r\n        let project = {};\r\n        const subscription = await apiSubscriptionGet(this.props.serviceUrl, this.props.match.params.id);\r\n        if (subscription.data.project) {\r\n          project = await apiProjectGet(this.props.serviceUrl, subscription.data.project.id);\r\n          users = await apiGetProjectUsers(this.props.serviceUrl, project.data.id);\r\n        }\r\n        this.setState({\r\n          subscription: subscription,\r\n          project: project,\r\n          customer: project.customer,\r\n          users: users,\r\n          loading: false,\r\n        });\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n  }\r\n\r\n  updateSubscription = () => {\r\n    this.fetchData();\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (isPortalUser()) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (authenticationChanged(this.props, prevProps) && isPortalUser()) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { type, license } = subscriptionData;\r\n\r\n    if (!this.state.loading) {\r\n      if (isPortalUser()) {\r\n        if (Object.keys(this.state.subscription).length !== 0 && Object.keys(this.state.project).length !== 0) {\r\n          const project = this.state.project.data;\r\n          const subscription = this.state.subscription.data;\r\n          return (\r\n            <div className=\"subscription-details\">\r\n              <div>\r\n                <Breadcrumbs project={project} subscription={subscription} locale={this.props.locale}/>\r\n                <Tile>\r\n                  <div className=\"bx--grid\">\r\n                    <div className=\"bx--row\">\r\n                      <div className=\"bx--col\">\r\n                        <div>\r\n                          <strong>{i18n.t('customerDashboard.customerName')}:</strong> {project.customer.name}\r\n                        </div>\r\n                        <div>\r\n                          <strong>{i18n.t('customerDashboard.projectName')}:</strong> {project.name}\r\n                        </div>\r\n                        <div>\r\n                          <strong>{i18n.t('subscriptionDetails.description')}:</strong> {subscription.project.description}\r\n                        </div>\r\n                        <div>\r\n                          <strong>{i18n.t('subscriptionDetails.partners')}:</strong>\r\n                          {project !== '' && Object.keys(project.partners).length !== 0 ? (\r\n                            <>\r\n                              {project.partners.map((partner, index) => (\r\n                                <div key={index}>\r\n                                  {' '}\r\n                                  {index === project.partners.length - 1 ? partner.name : partner.name + ', '}{' '}\r\n                                </div>\r\n                              ))}\r\n                            </>\r\n                          ) : (\r\n                            <> {i18n.t('userMessages.none')} </>\r\n                          )}\r\n                        </div>\r\n                        <div>\r\n                          <strong>{i18n.t('subscriptionDetails.type')}:</strong> {type}\r\n                        </div>\r\n                        {isPortalAdminOrSupport() ? (\r\n                          <div>\r\n                            <strong>{i18n.t('subscriptionDetails.notes')}:</strong> {subscription.notes}\r\n                          </div>\r\n                        ) : null}\r\n                      </div>\r\n                      <div className=\"bx--col\">\r\n                        <div>\r\n                          <strong>{i18n.t('subscriptionDetails.status')}:</strong> {subscription.status}\r\n                        </div>\r\n                        <div>\r\n                          <strong>{i18n.t('subscriptionDetails.level')}:</strong> {subscription.level}\r\n                        </div>\r\n                        <div>\r\n                          <strong>{i18n.t('subscriptionDetails.startDate')}:</strong>{' '}\r\n                          {formatStartDate(subscription.startDate)}\r\n                        </div>\r\n                        <div>\r\n                          <strong>{i18n.t('subscriptionDetails.endDate')}:</strong>{' '}\r\n                          {formatEndDate(subscription.startDate, subscription.lengthInMonths)}\r\n                        </div>\r\n                        <div>\r\n                          <strong>{i18n.t('subscriptionDetails.license')}:</strong> {license}\r\n                        </div>\r\n                        <div>\r\n                          <strong>{i18n.t('subscriptionDetails.assignedUsers')}:</strong>\r\n                          {this.state.users.data !== '' && Object.keys(this.state.users.data).length !== 0 ? (\r\n                            <>\r\n                              {this.state.users.data.map((user, index) => (\r\n                                <div\r\n                                  key={index}> {index === this.state.users.data.length - 1 ? user.username : user.username + ', '} </div>\r\n                              ))}\r\n                            </>\r\n                          ) : (\r\n                            <> {i18n.t('userMessages.none')} </>\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </Tile>\r\n                <br/>\r\n                <TicketList projectId={project.id} serviceUrl={this.props.serviceUrl} locale={this.props.locale}/>\r\n              </div>\r\n            </div>\r\n          );\r\n        } else {\r\n          return <div>{i18n.t('userMessages.unauthorized')}</div>;\r\n        }\r\n      } else {\r\n        return <div>{i18n.t('userMessages.unauthorized')}</div>;\r\n      }\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport default withKeycloak(Subscription);\r\n","import React from 'react';\nimport {Tile} from 'carbon-components-react';\nimport withKeycloak from '../../auth/withKeycloak';\nimport {apiCustomerGet} from '../../api/customers';\nimport {authenticationChanged, isAuthenticated, isPortalAdminOrSupport} from '../../api/helpers';\nimport i18n from '../../i18n';\nimport Breadcrumbs from '../Breadcrumbs/Breadcrumbs';\nimport CustomerDataTable from './CustomerDataTable';\n\nclass CustomerProjectList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      customer: {},\n    };\n  }\n\n  async fetchData() {\n    if (isAuthenticated(this.props)) {\n      try {\n        const customer = await apiCustomerGet(this.props.serviceUrl, this.props.match.params.id);\n        this.setState({\n          customer: customer.data,\n          loading: false,\n        });\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (authenticationChanged(this.props, prevProps)) {\n      if (isPortalAdminOrSupport()) {\n        this.fetchData();\n      }\n    }\n  }\n\n  render() {\n    if (!this.state.loading) {\n      const customer = this.state.customer;\n      if (customer) {\n        return (\n          <div>\n            <Breadcrumbs customer={customer} locale={this.props.locale}/>\n            <Tile>\n              <div className=\"bx--grid\">\n                <div className=\"bx--row\">\n                  <div className=\"bx--col\">\n                    <p>\n                      <strong>{i18n.t('customerDetails.id')}: </strong> {customer.id}\n                    </p>\n                    <p>\n                      <strong>{i18n.t('customerDetails.name')}: </strong> {customer.name}\n                    </p>\n                    {isPortalAdminOrSupport() &&\n                    <p>\n                      <strong>{i18n.t('customerDetails.notes')}: </strong> {customer.notes}\n                    </p>\n                    }\n                  </div>\n                  <div className=\"bx--col\">\n                    <p>\n                      <strong>{i18n.t('customerDetails.contactName')}: </strong> {customer.contactName}\n                    </p>\n                    <p>\n                      <strong>{i18n.t('customerDetails.contactPhone')}: </strong> {customer.contactPhone}\n                    </p>\n                    <p>\n                      <strong>{i18n.t('customerDetails.contactEmail')}: </strong> {customer.contactEmail}\n                    </p>\n                  </div>\n                </div>\n              </div>\n            </Tile>\n            <CustomerDataTable serviceUrl={this.props.serviceUrl} customerId={customer.id}\n                               locale={this.props.locale}/>\n          </div>\n        );\n      } else {\n        return <p>{i18n.t('userMessages.loading')}...</p>;\n      }\n    } else {\n      return <p>{i18n.t('userMessages.unauthorized')}</p>;\n    }\n  }\n}\n\nexport default withKeycloak(CustomerProjectList);\n","import React, {Component} from 'react';\r\nimport {HashRouter, Route, Switch} from 'react-router-dom';\r\nimport AdminDashboard from './Admin/AdminDashboard';\r\nimport Subscription from './SubscriptionDetails/Subscription';\r\nimport withKeycloak from '../auth/withKeycloak';\r\nimport {AuthenticatedView, UnauthenticatedView} from '../auth/KeycloakViews';\r\nimport {authenticationChanged, isAuthenticated, isPortalUser} from '../api/helpers';\r\nimport CustomerProjectList from './Customer/CustomerProjectList';\r\nimport i18n from '../i18n';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: true,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (isAuthenticated(this.props)) {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (authenticationChanged(this.props, prevProps)) {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var { keycloak } = this.props;\r\n\r\n    if (!this.state.loading) {\r\n      if (isPortalUser()) {\r\n        return (\r\n          <div id=\"entando-customer-portal\">\r\n            <AuthenticatedView keycloak={keycloak}>\r\n              <HashRouter>\r\n                <Switch>\r\n                  <Route\r\n                    path={'**/customer-details/:id'}\r\n                    render={props => <CustomerProjectList {...props} serviceUrl={this.props.serviceUrl} locale={this.props.locale} />}\r\n                  />\r\n                  <Route\r\n                    path={'**/subscription-details/:id'}\r\n                    render={props => <Subscription {...props} serviceUrl={this.props.serviceUrl} locale={this.props.locale} />}\r\n                  />\r\n                  <Route\r\n                    path=\"**/\"\r\n                    render={props => <AdminDashboard {...props} serviceUrl={this.props.serviceUrl} locale={this.props.locale} />}\r\n                  />\r\n                </Switch>\r\n              </HashRouter>\r\n            </AuthenticatedView>\r\n            <UnauthenticatedView keycloak={keycloak}>\r\n              <p>{i18n.t('userMessages.unauthorized')}</p>\r\n            </UnauthenticatedView>\r\n          </div>\r\n        );\r\n      } else {\r\n        return <p>{i18n.t('userMessages.unauthorized')}</p>;\r\n      }\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport default withKeycloak(App);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport '../index.scss';\r\nimport * as Locale from '../i18n';\r\n\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\nimport App from '../components/App';\r\n\r\nimport { subscribeToWidgetEvent } from '../helpers/widgetEvents';\r\nimport { KEYCLOAK_EVENT_TYPE } from './widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window && window.entando && window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\nconst ATTRIBUTES = {\r\n  hidden: 'hidden',\r\n  locale: 'locale',\r\n  paginationMode: 'pagination-mode',\r\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n  serviceUrl: 'service-url',\r\n};\r\n\r\nclass AppElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    //retargetEvents(shadowRoot);\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n    const locale = this.getAttribute(ATTRIBUTES.locale) || '';\r\n    Locale.setLocale(locale);\r\n\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <App serviceUrl={serviceUrl} locale={locale} />\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.define('cp-app-element', AppElement);\r\n","import { getDefaultOptions, request, getUrl } from './helpers';\r\n\r\nconst resource = 'api/portal-users';\r\n\r\nexport const apiUserDelete = async (serviceUrl, id) => {\r\n  const url = `${serviceUrl}/${resource}/${id}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE',\r\n  };\r\n  return await request(url, options);\r\n};\r\n\r\nexport const apiUsersPut = async (serviceUrl, user) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'PUT',\r\n    body: user ? JSON.stringify(user) : null,\r\n  };\r\n  return await request(url, options);\r\n};\r\n\r\nexport const apiUsersGet = async serviceUrl => {\r\n  const url = getUrl(`${serviceUrl}/${resource}`);\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return await request(url, options);\r\n};\r\n\r\nexport const apiUserGet = async (serviceUrl, userId) => {\r\n  const url = getUrl(`${serviceUrl}/${resource}/${userId}`);\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return await request(url, options);\r\n};\r\n\r\nexport const apiUserPost = async (serviceUrl, user) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n    body: user ? JSON.stringify(user) : null,\r\n  };\r\n  return await request(url, options);\r\n};\r\n\r\nexport const apiUserGetByUsernameAndEmail = async (serviceUrl, username, email) => {\r\n  const url = getUrl(`${serviceUrl}/${resource}/username/${username}/email/${email}`);\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return await request(url, options);\r\n};\r\n","import { getDefaultKeycloakOptions, request, getUrl } from './helpers';\r\n\r\nexport const apiKeycloakUserGet = async (serviceUrl, realm) => {\r\n  const usersResource = `admin/realms/${realm}/users`;\r\n  const url = `${serviceUrl}/${usersResource}`;\r\n  const options = {\r\n    ...getDefaultKeycloakOptions(),\r\n    method: 'GET',\r\n  };\r\n  return await request(url, options);\r\n};\r\n\r\nexport const apiKeycloakToken = async (serviceUrl, realm) => {\r\n  const tokenResource = `realms/${realm}/protocol/openid-connect/token`;\r\n  const url = getUrl(`${serviceUrl}/${tokenResource}`);\r\n  const keycloakBody = {\r\n    client_id: 'web_app',\r\n    username: 'admin',\r\n    password: 'admin',\r\n    grant_type: 'password',\r\n  };\r\n  const options = {\r\n    ...getDefaultKeycloakOptions(),\r\n    method: 'POST',\r\n    body: keycloakBody ? serialize(keycloakBody) : null,\r\n  };\r\n  return await request(url, options);\r\n};\r\n\r\nfunction serialize(obj) {\r\n  var str = [];\r\n  for (var p in obj)\r\n    if (obj.hasOwnProperty(p)) {\r\n      str.push(encodeURIComponent(p) + '=' + encodeURIComponent(obj[p]));\r\n    }\r\n  return str.join('&');\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Form, Select, SelectItem, Button } from 'carbon-components-react';\r\nimport * as portalUserApi from '../../../api/portalusers';\r\nimport {apiAddUserToProject, apiProjectGet} from '../../../api/projects';\r\nimport withKeycloak from '../../../auth/withKeycloak';\r\nimport { apiKeycloakUserGet } from '../../../api/keycloak';\r\nimport i18n from '../../../i18n';\r\nimport {authenticationChanged, isAuthenticated} from \"../../../api/helpers\";\r\nclass AssignUser extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      project: null,\r\n      projectId: '',\r\n      assignUser: '',\r\n      users: new Map(),\r\n      invalid: {},\r\n      submitMsg: '',\r\n      submitColour: 'black',\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (isAuthenticated(this.props)) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (authenticationChanged(this.props, prevProps)) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n\r\n  async fetchData() {\r\n    const {keycloak} = this.props;\r\n    const users = this.mapKeycloakUserEmails((await apiKeycloakUserGet(keycloak.authServerUrl, keycloak.realm)).data);\r\n    const search = window.location.search;\r\n    const params = new URLSearchParams(search);\r\n    let projectId = params.get('project');\r\n    let project = null;\r\n    if (projectId != null) {\r\n      project = (await apiProjectGet(this.props.serviceUrl, projectId)).data;\r\n    } else {\r\n      projectId = '';\r\n    }\r\n\r\n    this.setState({\r\n      projectId: projectId,\r\n      project: project,\r\n      users: users,\r\n    });\r\n  }\r\n\r\n  mapKeycloakUserEmails = keycloakUsers => {\r\n    const usernameEmailMap = new Map();\r\n    keycloakUsers.forEach(keycloakUser => usernameEmailMap.set(keycloakUser.username, keycloakUser.email));\r\n    return usernameEmailMap;\r\n  };\r\n\r\n  handleChanges = e => {\r\n    const input = e.target;\r\n    const name = input.name;\r\n    const value = input.value;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleFormSubmit = event => {\r\n    event.preventDefault();\r\n    const { projectId, assignUser } = this.state;\r\n    const formIsValid = this.handleFormValidation();\r\n\r\n    if (formIsValid) {\r\n      this.assignUserToProject(projectId, assignUser).then(res => {\r\n        if (res && res.status === 201) {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.updated'),\r\n            submitColour: '#24a148',\r\n          });\r\n          window.dispatchEvent(new CustomEvent('cp-user-assigned'));\r\n        } else {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.error'),\r\n            submitColour: '#da1e28',\r\n          });\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  handleFormValidation() {\r\n    let invalid = {};\r\n    let formIsValid = true;\r\n    const { projectId, assignUser } = this.state;\r\n\r\n    //name\r\n    if (projectId === '') {\r\n      formIsValid = false;\r\n      invalid['projectId'] = true;\r\n    }\r\n\r\n    //customerNumber\r\n    if (assignUser === '') {\r\n      formIsValid = false;\r\n      invalid['assignUser'] = true;\r\n    }\r\n\r\n    this.setState({ invalid: invalid });\r\n    return formIsValid;\r\n  }\r\n\r\n  assignUserToProject = async (projectId, username) => {\r\n    const email = this.state.users.get(username);\r\n    if (!email) {\r\n      alert(\"User is missing an email address in keycloak and cannot be assigned.\")\r\n      return null;\r\n    }\r\n    const portalUserId = await this.getPortalUserId({username, email: this.state.users.get(username)});\r\n    return await apiAddUserToProject(this.props.serviceUrl, projectId, portalUserId);\r\n  };\r\n\r\n  getPortalUserId = async keycloakUser => {\r\n    let portalUserId = null;\r\n    try {\r\n      const portalUser = await portalUserApi.apiUserGetByUsernameAndEmail(this.props.serviceUrl,\r\n        keycloakUser.username, keycloakUser.email);\r\n      portalUserId = portalUser.data.id;\r\n    } catch (e) {\r\n      console.warn(e);\r\n    }\r\n\r\n    return portalUserId;\r\n  };\r\n\r\n  setupFormComponents() {\r\n    const users = this.state.users;\r\n    const project = this.state.project;\r\n    let userList;\r\n    let projectList;\r\n\r\n    if (users.size > 0) {\r\n      userList = [...users.keys()].map((assignUser, i) => (\r\n        <SelectItem key={i} text={assignUser} value={assignUser}>\r\n          {assignUser}\r\n        </SelectItem>\r\n      ));\r\n      userList.unshift(<SelectItem key=\"-1\" text={i18n.t('manageUsers.assign.userList')} value=\"\"/>);\r\n    } else {\r\n      userList = <SelectItem text={i18n.t('manageUsers.assign.noUsers')} value=\"\"/>;\r\n    }\r\n\r\n    if (project != null) {\r\n      projectList = <SelectItem key={project.id} text={project.name} value={project.id}/>;\r\n    } else {\r\n      projectList = <SelectItem text={i18n.t('manageUsers.assign.noProjects')} value=\"\"/>;\r\n    }\r\n\r\n    return {userList, projectList};\r\n  }\r\n\r\n  render() {\r\n    const { userList, projectList } = this.setupFormComponents();\r\n\r\n    return (\r\n      <div>\r\n        <p style={{ color: this.state.submitColour }}>{this.state.submitMsg}</p>\r\n        <Form onSubmit={this.handleFormSubmit}>\r\n          <div className=\"bx--grid\">\r\n            <div className=\"bx--row\">\r\n              <div className=\"bx--col\">\r\n                <Select\r\n                  id=\"projectId\"\r\n                  name=\"projectId\"\r\n                  labelText={i18n.t('manageUsers.assign.projectName')}\r\n                  value={this.state.projectId}\r\n                  onChange={this.handleChanges}\r\n                  invalidText={i18n.t('validation.invalid.required')}\r\n                  invalid={this.state.invalid['projectId']}\r\n                >\r\n                  {projectList}\r\n                </Select>\r\n              </div>\r\n            </div>\r\n            <div className=\"bx--row\">\r\n              <div className=\"bx--col\">\r\n                <Select\r\n                  id=\"assignUser\"\r\n                  name=\"assignUser\"\r\n                  labelText={i18n.t('manageUsers.assign.assignUser')}\r\n                  value={this.state.assignUser}\r\n                  onChange={this.handleChanges}\r\n                  invalidText={i18n.t('validation.invalid.required')}\r\n                  invalid={this.state.invalid['assignUser']}\r\n                >\r\n                  {userList}\r\n                </Select>\r\n              </div>\r\n            </div>\r\n            <Button kind=\"primary\" tabIndex={0} type=\"submit\">\r\n              {' '}\r\n              {i18n.t('buttons.submit')}{' '}\r\n            </Button>\r\n          </div>\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withKeycloak(AssignUser);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport AssignUser from '../components/Admin/ManageUser/AssignUser';\r\nimport '../index.scss';\r\n\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\n\r\nimport {subscribeToWidgetEvent} from '../helpers/widgetEvents';\r\nimport {KEYCLOAK_EVENT_TYPE} from './widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window && window.entando && window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\nconst ATTRIBUTES = {\r\n  hidden: 'hidden',\r\n  locale: 'locale',\r\n  paginationMode: 'pagination-mode',\r\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n  serviceUrl: 'service-url',\r\n};\r\n\r\nclass AssignUserElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    //retargetEvents(shadowRoot);\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <AssignUser serviceUrl={serviceUrl} />\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.define('cp-assign-user-widget', AssignUserElement);\r\n","import React, {Component} from 'react';\r\nimport {\r\n  DataTable,\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableHeader,\r\n  TableBody,\r\n  TableCell,\r\n  Button\r\n} from 'carbon-components-react';\r\nimport withKeycloak from '../../../auth/withKeycloak';\r\nimport i18n from '../../../i18n';\r\nimport {apiGetProjectUsers, apiDeleteUserFromProject} from '../../../api/projects';\r\nimport {authenticationChanged, isAuthenticated} from \"../../../api/helpers\";\r\n\r\nclass DeleteUser extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      users: [],\r\n      displayUsers: [],\r\n      projectId: '',\r\n    };\r\n    this.headerData = [\r\n      {\r\n        header: i18n.t('manageUsers.delete.userName'),\r\n        key: 'username',\r\n      },\r\n      {\r\n        header: i18n.t('manageUsers.delete.userEmail'),\r\n        key: 'email',\r\n      },\r\n      {\r\n        header: i18n.t('manageUsers.delete.userAccess'),\r\n        key: 'userAccess',\r\n      },\r\n    ];\r\n    window.addEventListener('cp-user-assigned', event => {\r\n      this.fetchData();\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (isAuthenticated(this.props)) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (authenticationChanged(this.props, prevProps)) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n\r\n  async fetchData() {\r\n    if (isAuthenticated(this.props)) {\r\n      let search = window.location.search;\r\n      const params = new URLSearchParams(search);\r\n      const projectId = params.get('project');\r\n      let users = [];\r\n      if (projectId != null) {\r\n        users = (await apiGetProjectUsers(this.props.serviceUrl, projectId)).data;\r\n      }\r\n\r\n      this.setState({\r\n        users,\r\n        projectId,\r\n      });\r\n\r\n      this.handleUserDisplay();\r\n    }\r\n  }\r\n\r\n  handleUserDisplay() {\r\n    const users = this.state.users;\r\n    const projectId = this.state.projectId;\r\n\r\n    const displayUsers = users.map(user => ({\r\n      id: user.username,\r\n      username: user.username,\r\n      email: user.email,\r\n      userAccess: (\r\n        <Button kind=\"ghost\" onClick={event => this.handleRemoveUser(user.id, projectId, event)}\r\n                className=\"button-warning\">\r\n          {i18n.t('manageUsers.delete.removeUser')}\r\n        </Button>\r\n      ),\r\n    }));\r\n\r\n    this.setState({\r\n      displayUsers,\r\n    });\r\n  }\r\n\r\n  handleRemoveUser = (userId, projectId, event) => {\r\n    event.preventDefault();\r\n\r\n    apiDeleteUserFromProject(this.props.serviceUrl, projectId, userId).then(res => {\r\n      if (res.status === 201) {\r\n        this.fetchData();\r\n      } else {\r\n        console.warn('Failed to delete user', res);\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <DataTable rows={this.state.displayUsers} headers={this.headerData}>\r\n        {({ rows, headers, getHeaderProps, getTableProps }) => (\r\n          <TableContainer>\r\n            <Table {...getTableProps()}>\r\n              <TableHead>\r\n                <TableRow>\r\n                  {headers.map(header => (\r\n                    <TableHeader {...getHeaderProps({ header })}>{header.header}</TableHeader>\r\n                  ))}\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {rows.map(row => (\r\n                  <TableRow key={row.id}>\r\n                    {row.cells.map(cell => (\r\n                      <TableCell key={cell.id}>{cell.value}</TableCell>\r\n                    ))}\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        )}\r\n      </DataTable>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withKeycloak(DeleteUser);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport DeleteUser from '../components/Admin/ManageUser/DeleteUser';\r\nimport '../index.scss';\r\n\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\n\r\nimport {subscribeToWidgetEvent} from '../helpers/widgetEvents';\r\nimport {KEYCLOAK_EVENT_TYPE} from './widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window && window.entando && window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\nconst ATTRIBUTES = {\r\n  hidden: 'hidden',\r\n  locale: 'locale',\r\n  paginationMode: 'pagination-mode',\r\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n  serviceUrl: 'service-url',\r\n};\r\n\r\nclass DeleteUserElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    //retargetEvents(shadowRoot);\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <DeleteUser serviceUrl={serviceUrl} />\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.define('cp-delete-user-widget', DeleteUserElement);\r\n","import React, {Component} from 'react';\nimport i18n from '../../i18n';\nimport {Form, Select, SelectItem, Button, TextArea, TextInput} from 'carbon-components-react';\nimport withKeycloak from '../../auth/withKeycloak';\nimport {apiProjectGet} from '../../api/projects';\nimport {apiJiraTicketPost} from '../../api/tickets';\nimport {authenticationChanged, getActiveSubscription, isAuthenticated, isPortalUser} from '../../api/helpers';\nimport Breadcrumbs from \"../Breadcrumbs/Breadcrumbs\";\n\nclass OpenTicketForm extends Component {\n  constructor() {\n    super();\n    this.state = {\n      loading: true,\n      project: {},\n      role: '',\n      invalid: {},\n      submitMsg: '',\n      submitColour: 'black',\n      //form fields\n      type: 'Support',\n      priority: 'Medium',\n      status: 'To Do',\n      summary: '',\n      description: '',\n    };\n    this.types = ['Support', 'New Feature', 'Bug'];\n    this.priorities = ['Critical', 'High', 'Medium', 'Low'];\n  }\n\n  componentDidMount() {\n    if (isAuthenticated(this.props)) {\n      this.fetchData();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (authenticationChanged(this.props, prevProps)) {\n      this.fetchData();\n    }\n  }\n\n  async fetchData() {\n    if (!isPortalUser()) {\n      return;\n    }\n\n    let search = window.location.search;\n    let params = new URLSearchParams(search);\n    let projectId = params.get('project');\n    let project = (await apiProjectGet(this.props.serviceUrl, projectId)).data;\n\n    if (!project) {\n      console.error('Unable to retrieve projectId ', projectId);\n      project = {};\n    }\n\n    this.setState({\n      project: project,\n      loading: false,\n    });\n  }\n\n  handleValidation() {\n    let invalid = {};\n    let formIsValid = true;\n\n    if (this.state.type === '') {\n      formIsValid = false;\n      invalid['type'] = true;\n    }\n\n    if (this.state.summary === '') {\n      formIsValid = false;\n      invalid['summary'] = true;\n    }\n\n    if (this.state.description === '') {\n      formIsValid = false;\n      invalid['description'] = true;\n    }\n\n    if (this.state.priority === '') {\n      formIsValid = false;\n      invalid['priority'] = true;\n    }\n\n    this.setState({\n      invalid: invalid,\n    });\n    return formIsValid;\n  }\n\n  handleChanges = e => {\n    const input = e.target;\n    const name = input.name;\n    const value = input.value;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n\n    const formIsValid = this.handleValidation();\n\n    if (formIsValid) {\n      const subscription = getActiveSubscription(this.state.project);\n      if (subscription) {\n        this.createTicket()\n          .then(() => {\n            this.setState({\n              submitMsg: i18n.t('submitMessages.created'),\n              submitColour: '#24a148',\n            });\n          })\n          .catch(() => {\n            this.setState({\n              submitMsg: i18n.t('submitMessages.ticketError'),\n              submitColour: '#da1e28',\n            });\n          });\n      }\n      // if no subscriptions, don't create ticket\n      else {\n        this.setState({\n          submitMsg: i18n.t('submitMessages.subscriptionRequired'),\n          submitColour: '#da1e28',\n        });\n      }\n    } else {\n      this.setState({\n        submitMsg: i18n.t('submitMessages.error'),\n        submitColour: '#da1e28',\n      });\n    }\n  };\n\n  async createTicket() {\n    if (isPortalUser()) {\n      const ticket = {\n        type: this.state.type,\n        summary: this.state.summary,\n        description: this.state.description,\n        priority: this.state.priority,\n        // these fields are just placeholders to validate the POST request (fields will be set in the backend)\n        systemId: '999',\n        status: 'To Do',\n        createDate: '2021-02-22T14:14:09-05:00',\n        updateDate: '2021-02-22T14:14:09-05:00',\n      };\n      return await apiJiraTicketPost(this.props.serviceUrl, this.state.project.id, ticket);\n    }\n  }\n\n  render() {\n    if (!this.state.loading) {\n      if (isPortalUser()) {\n        return (\n          <div id=\"entando-customer-portal\">\n            <Breadcrumbs project={this.state.project} locale={this.props.locale}/>\n            <div className=\"form-container\">\n              <p style={{color: this.state.submitColour}}>{this.state.submitMsg}</p>\n              <Form onSubmit={this.handleFormSubmit}>\n                <div className=\"bx--grid\">\n                  <div className=\"bx--row\" style={{padding: '1em 0'}}>\n                    <div className=\"bx--col\">\n                      <div className=\"form-desc\">\n                        <h4>{i18n.t('supportTicketForm.formTitle')}</h4>\n                        <div>{i18n.t('supportTicketForm.desc')}</div>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"bx--row\">\n                    <div className=\"bx--col\">\n                      <div>\n                        <strong>{i18n.t('projectDetails.project')}:</strong> {this.state.project.name}\n                      </div>\n                      <Select\n                        id=\"type\"\n                        name=\"type\"\n                        labelText={i18n.t('supportTicketForm.type') + ' *'}\n                        value={this.state.type}\n                        onChange={this.handleChanges}\n                        invalidText={i18n.t('validation.invalid.required')}\n                        invalid={this.state.invalid['type']}\n                      >\n                        {this.types.map((type, i) => (\n                          <SelectItem key={i} text={type} value={type}>\n                            {type}\n                          </SelectItem>\n                        ))}\n                      </Select>\n                      <Select\n                        id=\"priority\"\n                        name=\"priority\"\n                        labelText={i18n.t('supportTicketForm.priority') + ' *'}\n                        value={this.state.priority}\n                        onChange={this.handleChanges}\n                        invalidText={i18n.t('validation.invalid.required')}\n                        invalid={this.state.invalid['priority']}\n                      >\n                        {this.priorities.map((priority, i) => (\n                          <SelectItem key={i} text={priority} value={priority}>\n                            {priority}\n                          </SelectItem>\n                        ))}\n                      </Select>\n                    </div>\n                  </div>\n                  <div className=\"bx--row\">\n                    <div className=\"bx--col\">\n                      <TextInput\n                        labelText={i18n.t('supportTicketForm.ticketSummary') + ' *'}\n                        placeholder={i18n.t('supportTicketForm.addticketSummary')}\n                        id=\"summary\"\n                        name=\"summary\"\n                        value={this.state.summary}\n                        onChange={this.handleChanges}\n                        invalidText={i18n.t('validation.invalid.required')}\n                        invalid={this.state.invalid['summary']}\n                      />\n                    </div>\n                  </div>\n                  <div className=\"bx--row\">\n                    <div className=\"bx--col\">\n                      <TextArea\n                        labelText={i18n.t('supportTicketForm.ticketDescription') + ' *'}\n                        placeholder={i18n.t('supportTicketForm.addticketDescription')}\n                        name=\"description\"\n                        value={this.state.description}\n                        onChange={this.handleChanges}\n                        invalidText={i18n.t('validation.invalid.required')}\n                        invalid={this.state.invalid['description']}\n                      />\n                      <Button kind=\"primary\" tabIndex={0} type=\"submit\">\n                        {' '}\n                        {i18n.t('buttons.submit')}{' '}\n                      </Button>\n                    </div>\n                  </div>\n                </div>\n              </Form>\n            </div>\n          </div>\n        );\n      } else {\n        return <p>{i18n.t('userMessages.unauthorized')}</p>;\n      }\n    } else {\n      return null;\n    }\n  }\n}\n\nexport default withKeycloak(OpenTicketForm);\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport OpenTicketForm from '../components/Forms/OpenTicketForm';\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\n\r\nimport {subscribeToWidgetEvent} from '../helpers/widgetEvents';\r\nimport {KEYCLOAK_EVENT_TYPE} from './widgetEventTypes';\r\nimport * as Locale from '../i18n';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window && window.entando && window.entando.keycloak && {...window.entando.keycloak, initialized: true}) || {\r\n    initialized: false,\r\n  };\r\n\r\nconst ATTRIBUTES = {\r\n  hidden: 'hidden',\r\n  locale: 'locale',\r\n  paginationMode: 'pagination-mode',\r\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n  serviceUrl: 'service-url',\r\n};\r\n\r\nclass FormsOpenTicketElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    //retargetEvents(shadowRoot);\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n    const locale = this.getAttribute(ATTRIBUTES.locale) || '';\r\n    Locale.setLocale(locale);\r\n\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <OpenTicketForm serviceUrl={serviceUrl} locale={locale}/>\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.define('cp-forms-openticket-widget', FormsOpenTicketElement);\r\n","import React, {Component} from 'react';\nimport {getPageUrl, isAuthenticated, isPortalUser} from \"../../api/helpers\";\nimport i18n from \"../../i18n\";\nimport withKeycloak from \"../../auth/withKeycloak\";\nimport {PAGE_CUSTOMER_PORTAL} from '../../api/constants';\n\nconst KEYCLOAK_EVENT_ID = 'keycloak';\n\nclass Login extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      username: null\n    };\n    this.keycloakEventHandler = this.keycloakEventHandler.bind(this);\n  }\n\n  keycloakEventHandler(event) {\n    const keycloakEvent = event.detail.eventType;\n    const {keycloak} = this.props;\n    switch (keycloakEvent) {\n      case 'onAuthRefreshError':\n        keycloak.logout();\n        break;\n      default:\n        break;\n    }\n  }\n\n  componentDidMount() {\n    window.addEventListener(KEYCLOAK_EVENT_ID, this.keycloakEventHandler);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(KEYCLOAK_EVENT_ID, this.keycloakEventHandler);\n  }\n\n  render() {\n    const {keycloak} = this.props;\n    const loginUrl = window.location;\n    const handleLogin = () => keycloak.login({ redirectUri: loginUrl });\n    const handleLogout = () => keycloak.logout({ redirectUri: window.location.origin });\n\n    return (\n      <span className=\"entando-login\">\n        {!isAuthenticated(this.props) ? (\n          <>\n            <a className=\"log-in\" href=\"#entando-customer-portal\" onClick={handleLogin} title={i18n.t('userMessages.login')}>\n              {i18n.t('userMessages.login')}<i className=\"fas fa-sign-in-alt\"/>\n            </a>\n          </>\n        ) : (\n          <>\n            {isPortalUser() && (\n              <>\n                <a href={getPageUrl(PAGE_CUSTOMER_PORTAL, this.props.locale)}>{i18n.t('customerDashboard.customerPortal')}</a>\n                <span className=\"divider\">&nbsp;|&nbsp;</span>\n              </>\n            )}\n            <a className=\"log-out\" href=\"#entando-customer-portal\" onClick={handleLogout} title={i18n.t('userMessages.logout')}>\n              {i18n.t('userMessages.logout')}<i className=\"fas fa-sign-out-alt\"/>\n            </a>\n          </>\n        )}\n      </span>\n    )\n  }\n}\n\nexport default withKeycloak(Login);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '../index.scss';\n\nimport KeycloakContext from '../auth/KeycloakContext';\n\nimport {subscribeToWidgetEvent} from '../helpers/widgetEvents';\nimport {KEYCLOAK_EVENT_TYPE} from './widgetEventTypes';\nimport * as Locale from '../i18n';\nimport Login from '../components/Login/Login';\n\nconst getKeycloakInstance = () =>\n  (window && window.entando && window.entando.keycloak && {...window.entando.keycloak, initialized: true}) || {\n    initialized: false,\n  };\n\nconst ATTRIBUTES = {\n  hidden: 'hidden',\n  locale: 'locale',\n  paginationMode: 'pagination-mode',\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\n  serviceUrl: 'service-url',\n};\n\nclass LoginElement extends HTMLElement {\n  container;\n\n  mountPoint;\n\n  unsubscribeFromKeycloakEvent;\n\n  keycloak = getKeycloakInstance();\n\n  connectedCallback() {\n    this.mountPoint = document.createElement('span');\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\n\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\n      this.render();\n    });\n\n    this.render();\n\n    //retargetEvents(shadowRoot);\n    this.appendChild(this.mountPoint);\n  }\n\n  render() {\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\n    const locale = this.getAttribute(ATTRIBUTES.locale) || '';\n    Locale.setLocale(locale);\n\n    ReactDOM.render(\n      <KeycloakContext.Provider value={this.keycloak}>\n        <Login serviceUrl={serviceUrl} locale={locale}/>\n      </KeycloakContext.Provider>,\n      this.mountPoint\n    );\n  }\n}\n\ncustomElements.define('cp-login-widget', LoginElement);\n","import React, {Component} from 'react';\nimport {\n  DataTable,\n  TableContainer,\n  Table,\n  TableHead,\n  TableRow,\n  TableHeader,\n  TableBody,\n  TableCell,\n  Button\n} from 'carbon-components-react';\nimport '../../../index.scss';\nimport withKeycloak from '../../../auth/withKeycloak';\nimport i18n from '../../../i18n';\nimport {isAuthenticated, authenticationChanged, getPageUrl} from '../../../api/helpers';\nimport {apiDeleteSubscriptionFromProject, apiGetProjectSubscriptions, apiProjectGet} from '../../../api/projects';\nimport {formatEndDate, formatStartDate} from '../../../api/subscriptions';\nimport {PAGE_SUBSCRIPTION_FORM} from \"../../../api/constants\";\nimport Breadcrumbs from \"../../Breadcrumbs/Breadcrumbs\";\n\nclass ManageSubscriptions extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      projectId: '',\n      project: {},\n      subscriptions: [],\n    };\n    this.headerData = [\n      {\n        header: i18n.t('projectDetails.id'),\n        key: 'id',\n      },\n      {\n        header: i18n.t('subscriptionDetails.status'),\n        key: 'status',\n      },\n      {\n        header: i18n.t('projectDetails.entandoVersion'),\n        key: 'entandoVersion',\n      },\n      {\n        header: i18n.t('subscriptionDetails.level'),\n        key: 'level',\n      },\n      {\n        header: i18n.t('subscriptionDetails.startDate'),\n        key: 'startDate',\n      },\n      {\n        header: i18n.t('subscriptionDetails.endDate'),\n        key: 'endDate',\n      },\n      {\n        header: i18n.t('subscriptionDetails.lengthInMonths'),\n        key: 'lengthInMonths',\n      },\n      {\n        header: i18n.t('subscriptionDetails.notes'),\n        key: 'notes',\n      },\n      {\n        header: i18n.t('customerDashboard.action'),\n        key: 'action',\n      },\n    ];\n  }\n\n  componentDidMount() {\n    if (isAuthenticated(this.props)) {\n      this.fetchData();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (authenticationChanged(this.props, prevProps)) {\n      this.fetchData();\n    }\n  }\n\n  async fetchData() {\n    if (isAuthenticated(this.props)) {\n      let search = window.location.search;\n      const params = new URLSearchParams(search);\n      const projectId = params.get('project');\n\n      let project = {};\n      let subscriptions = {};\n      if (projectId != null) {\n        project = (await apiProjectGet(this.props.serviceUrl, projectId)).data;\n        subscriptions = (await apiGetProjectSubscriptions(this.props.serviceUrl, projectId)).data;\n      }\n\n      this.setState({\n        projectId: projectId,\n        project: project,\n        subscriptions: subscriptions,\n      });\n    }\n  }\n\n  async deleteSubscription(subscriptionId) {\n    if (isAuthenticated(this.props)) {\n      return await apiDeleteSubscriptionFromProject(this.props.serviceUrl, this.state.projectId, subscriptionId);\n    }\n  }\n\n  handleDeleteSubscription = (e, id) => {\n    e.preventDefault();\n    if (window.confirm(i18n.t('submitMessages.confirmDelete'))) {\n      console.log('confirmed to delete', id);\n      this.deleteSubscription(id)\n        .then(() => {\n          this.setState({\n            submitMsg: i18n.t('submitMessages.deleted'),\n            submitColour: '#24a148',\n          });\n          this.fetchData();\n        })\n        .catch(() => {\n          this.setState({\n            submitMsg: i18n.t('submitMessages.error'),\n            submitColour: '#da1e28',\n          });\n        });\n    }\n  };\n\n  render() {\n    const project = this.state.project;\n    return (\n      <div id=\"entando-customer-portal\">\n        <Breadcrumbs project={project} locale={this.props.locale}/>\n        <h5>{project.name}</h5>\n        <a\n          href={`${getPageUrl(PAGE_SUBSCRIPTION_FORM, this.props.locale)}?project=${this.state.projectId}`}\n          style={{textDecoration: 'none'}}\n        >\n          <Button kind=\"ghost\" style={{display: 'block', width: '100%'}} value=\"Add Subscription\">\n            {i18n.t('buttons.addSubscription')}\n          </Button>\n        </a>\n\n        <DataTable rows={[{id: '1'}]} headers={this.headerData}>\n          {({headers, getHeaderProps, getTableProps}) => (\n            <TableContainer>\n              <Table {...getTableProps()}>\n                <TableHead>\n                  <TableRow>\n                    {headers.map(header => (\n                      <TableHeader {...getHeaderProps({header})}>{header.header}</TableHeader>\n                    ))}\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {Object.keys(this.state.subscriptions).length !== 0 &&\n                  this.state.subscriptions.map((subscription, index) => (\n                    <TableRow key={index}>\n                      <TableCell>{subscription.id}</TableCell>\n                      <TableCell>{subscription.status}</TableCell>\n                      <TableCell>{subscription.entandoVersion.name}</TableCell>\n                      <TableCell>{subscription.level}</TableCell>\n                      <TableCell>{formatStartDate(subscription.startDate)}</TableCell>\n                      <TableCell>{formatEndDate(subscription.startDate, subscription.lengthInMonths)}</TableCell>\n                      <TableCell>{subscription.lengthInMonths}</TableCell>\n                      <TableCell>{subscription.notes}</TableCell>\n                      <TableCell>\n                        <a\n                          href={`${getPageUrl(PAGE_SUBSCRIPTION_FORM, this.props.locale)}?project=${this.state.projectId}&subscription=${subscription.id}`}\n                          style={{textDecoration: 'none'}}\n                        >\n                          <Button kind=\"ghost\" style={{display: 'block', width: '100%'}} value=\"Edit\">\n                            {i18n.t('buttons.edit')}\n                          </Button>\n                        </a>\n                        <Button\n                          kind=\"ghost\"\n                          onClick={event => this.handleDeleteSubscription(event, subscription.id)}\n                          className=\"button-warning\"\n                        >\n                          {i18n.t('buttons.delete')}\n                        </Button>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          )}\n        </DataTable>\n      </div>\n    );\n  }\n}\n\nexport default withKeycloak(ManageSubscriptions);\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport ManageSubscriptions from '../components/Admin/ManageSubscriptions/ManageSubscriptions';\r\nimport * as Locale from '../i18n';\r\n\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\n\r\nimport {subscribeToWidgetEvent} from '../helpers/widgetEvents';\r\nimport {KEYCLOAK_EVENT_TYPE} from './widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window && window.entando && window.entando.keycloak && {...window.entando.keycloak, initialized: true}) || {\r\n    initialized: false,\r\n  };\r\n\r\nconst ATTRIBUTES = {\r\n  hidden: 'hidden',\r\n  locale: 'locale',\r\n  paginationMode: 'pagination-mode',\r\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n  serviceUrl: 'service-url',\r\n};\r\n\r\nclass ManageSubscriptionsElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n    this.keycloak = {...getKeycloakInstance(), initialized: true};\r\n\r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = {...getKeycloakInstance(), initialized: true};\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    //retargetEvents(shadowRoot);\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n    const locale = this.getAttribute(ATTRIBUTES.locale) || '';\r\n    Locale.setLocale(locale);\r\n\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <ManageSubscriptions serviceUrl={serviceUrl} locale={locale}/>\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.define('cp-manage-subscriptions-widget', ManageSubscriptionsElement);\r\n","import React, { Component } from 'react';\nimport i18n from '../../../i18n';\nimport { Accordion, AccordionItem } from 'carbon-components-react';\nimport AssignUser from './AssignUser';\nimport DeleteUser from './DeleteUser';\nimport {authenticationChanged, isAuthenticated, isPortalAdmin} from '../../../api/helpers';\nimport withKeycloak from '../../../auth/withKeycloak';\nimport Breadcrumbs from \"../../Breadcrumbs/Breadcrumbs\";\n\nclass ManageUser extends Component {\n  userFunctionality;\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n    };\n    this.userFunctionality = [\n      {\n        label: (\n          <div>\n            <p className=\"title\">{i18n.t('manageUsers.manage.title')}</p>\n            <p className=\"desc\">{i18n.t('manageUsers.manage.desc')}</p>\n          </div>\n        ),\n        content: <DeleteUser serviceUrl={this.props.serviceUrl}/>,\n        open: true,\n      },\n      {\n        label: (\n          <div>\n            <p className=\"title\">{i18n.t('manageUsers.assign.title')}</p>\n            <p className=\"desc\">{i18n.t('manageUsers.assign.desc')}</p>\n          </div>\n        ),\n        content: <AssignUser serviceUrl={this.props.serviceUrl}/>,\n        open: true,\n      },\n    ];\n  }\n\n  componentDidMount() {\n    if (isAuthenticated(this.props)) {\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (authenticationChanged(this.props, prevProps)) {\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n\n  render() {\n    if (!this.state.loading) {\n      if (isPortalAdmin()) {\n        return (\n          <div id=\"entando-customer-portal\">\n            <Breadcrumbs locale={this.props.locale}/>\n            <div className=\"form-container\">\n              <Accordion>\n                {this.userFunctionality.map((item, index) => (\n                  <AccordionItem key={index.toString()} index={index} title={item.label} description={item.description}\n                                 open={item.open}>\n                    {item.content}\n                  </AccordionItem>\n                ))}\n              </Accordion>\n            </div>\n          </div>\n        );\n      }\n      // Unauthorized\n      else {\n        return <p>{i18n.t('userMessages.unauthorized')}</p>;\n      }\n    }\n    // Loading\n    else {\n      return null;\n    }\n  }\n}\n\nexport default withKeycloak(ManageUser);\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport ManageUser from '../components/Admin/ManageUser/ManageUser';\r\nimport '../index.scss';\r\nimport * as Locale from '../i18n';\r\n\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\n\r\nimport { subscribeToWidgetEvent } from '../helpers/widgetEvents';\r\nimport { KEYCLOAK_EVENT_TYPE } from './widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window && window.entando && window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\nconst ATTRIBUTES = {\r\n  hidden: 'hidden',\r\n  locale: 'locale',\r\n  paginationMode: 'pagination-mode',\r\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n  serviceUrl: 'service-url',\r\n};\r\n\r\nclass ManageUserElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    //retargetEvents(shadowRoot);\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n    const locale = this.getAttribute(ATTRIBUTES.locale) || '';\r\n    Locale.setLocale(locale);\r\n\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <ManageUser serviceUrl={serviceUrl} locale={locale}/>\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.define('cp-manage-user-widget', ManageUserElement);\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Navigation = () => {\r\n  return (\r\n    <ul id=\"navigation\">\r\n      <li>\r\n        <NavLink to=\"/\">Home</NavLink>\r\n      </li>\r\n      <li>\r\n        <NavLink to=\"/subscription-details\">Subscription Details</NavLink>\r\n      </li>\r\n      <li>\r\n        <NavLink to=\"/subscription\">New or Renew Subscription</NavLink>\r\n      </li>\r\n      <li>\r\n        <NavLink to=\"/service-ticket\">Open Service Ticket</NavLink>\r\n      </li>\r\n      <li>\r\n        <NavLink to=\"/enhancement\">Request for Enhancement Process</NavLink>\r\n      </li>\r\n      <li>\r\n        <NavLink to=\"/manage-users\">Manage Users</NavLink>\r\n      </li>\r\n      <li>\r\n        <NavLink to=\"/configuration-settings\">Configuration Settings</NavLink>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Navigation from '../components/Navigation/Navigation';\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\n\r\nimport {subscribeToWidgetEvent} from '../helpers/widgetEvents';\r\nimport {KEYCLOAK_EVENT_TYPE} from './widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window && window.entando && window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\nconst ATTRIBUTES = {\r\n  hidden: 'hidden',\r\n  locale: 'locale',\r\n  paginationMode: 'pagination-mode',\r\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n  serviceUrl: 'service-url',\r\n};\r\n\r\nclass NavigationElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    //retargetEvents(shadowRoot);\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <Navigation serviceUrl={serviceUrl} />\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.define('cp-navigation-widget', NavigationElement);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport OpenTicketForm from '../components/Forms/OpenTicketForm';\r\nimport '../index.scss';\r\nimport * as Locale from '../i18n';\r\n\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\n\r\nimport {subscribeToWidgetEvent} from '../helpers/widgetEvents';\r\nimport {KEYCLOAK_EVENT_TYPE} from './widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window && window.entando && window.entando.keycloak && {...window.entando.keycloak, initialized: true}) || {\r\n    initialized: false,\r\n  };\r\n\r\nconst ATTRIBUTES = {\r\n  hidden: 'hidden',\r\n  locale: 'locale',\r\n  paginationMode: 'pagination-mode',\r\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n  serviceUrl: 'service-url',\r\n};\r\n\r\nclass OpenTicketElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    //retargetEvents(shadowRoot);\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n    const locale = this.getAttribute(ATTRIBUTES.locale) || '';\r\n    Locale.setLocale(locale);\r\n\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <OpenTicketForm serviceUrl={serviceUrl} locale={locale}/>\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.define('cp-open-ticket-widget', OpenTicketElement);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport ProductVersion from '../components/Admin/Configuration/ProductVersion';\r\nimport '../index.scss';\r\n\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\n\r\nimport { subscribeToWidgetEvent } from '../helpers/widgetEvents';\r\nimport { KEYCLOAK_EVENT_TYPE } from './widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window && window.entando && window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\nconst ATTRIBUTES = {\r\n  hidden: 'hidden',\r\n  locale: 'locale',\r\n  paginationMode: 'pagination-mode',\r\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n  serviceUrl: 'service-url',\r\n};\r\n\r\nclass ProductVersionElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    //retargetEvents(shadowRoot);\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <ProductVersion serviceUrl={serviceUrl} />\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.define('cp-product-version-widget', ProductVersionElement);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Subscription from '../components/SubscriptionDetails/Subscription';\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\n\r\nimport {subscribeToWidgetEvent} from '../helpers/widgetEvents';\r\nimport {KEYCLOAK_EVENT_TYPE} from './widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window && window.entando && window.entando.keycloak && {...window.entando.keycloak, initialized: true}) || {\r\n    initialized: false,\r\n  };\r\n\r\nconst ATTRIBUTES = {\r\n  hidden: 'hidden',\r\n  locale: 'locale',\r\n  paginationMode: 'pagination-mode',\r\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n  serviceUrl: 'service-url',\r\n};\r\n\r\nclass SubscriptionElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    //retargetEvents(shadowRoot);\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <Subscription serviceUrl={serviceUrl} />\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.define('cp-subscription-widget', SubscriptionElement);\r\n","import React, {Component} from 'react';\nimport i18n from '../../i18n';\nimport {\n  Form,\n  TextInput,\n  Select,\n  SelectItem,\n  Button,\n  DatePicker,\n  DatePickerInput,\n  TextArea\n} from 'carbon-components-react';\nimport withKeycloak from '../../auth/withKeycloak';\nimport {apiProjectGet} from '../../api/projects';\nimport {\n  apiProjectSubscriptionPost,\n  apiProjectSubscriptionPut,\n  apiRenewSubscription,\n  apiSubscriptionGet,\n  stripTime,\n} from '../../api/subscriptions';\nimport {apiProductVersionsGet} from '../../api/productVersion';\nimport {authenticationChanged, isAuthenticated, isPortalAdmin, isPortalUser} from '../../api/helpers';\nimport {apiAddSubscriptionToProject} from '../../api/projects';\nimport moment from 'moment';\nimport Breadcrumbs from \"../Breadcrumbs/Breadcrumbs\";\n\nconst FORM_TYPE = {\n  new: 'new',\n  renewal: 'renewal',\n  edit: 'edit',\n};\n\nconst SUBSCRIPTION_LEVEL = {\n  GOLD: 'GOLD',\n  PLATINUM: 'PLATINUM',\n};\n\nconst SUBSCRIPTION_STATUS = {\n  requested: 'REQUESTED',\n  pending: 'PENDING',\n  active: 'ACTIVE',\n  expired: 'EXPIRED',\n};\n\nclass SubscriptionForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      project: {},\n      projectId: '',\n      subscription: {},\n      startDate: '',\n      level: 'PLATINUM',\n      lengthInMonths: '',\n      notes: '',\n      entandoVersionId: '',\n      status: '',\n      formType: 'new',\n      invalid: {},\n      productVersions: [],\n      submitSuccess: false,\n      submitError: false,\n      submitColour: 'black',\n    };\n  }\n\n  componentDidMount() {\n    if (isAuthenticated(this.props)) {\n      this.fetchData();\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (authenticationChanged(this.props, prevProps)) {\n      this.fetchData();\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n\n  async fetchData() {\n    if (!isPortalUser()) {\n      return;\n    }\n\n    const serviceUrl = this.props.serviceUrl;\n\n    const search = window.location.search;\n    const params = new URLSearchParams(search);\n\n    const subscriptionId = params.get('subscription');\n    let projectId = params.get('project');\n\n    let subscription = {};\n    let project = {};\n    let formType = FORM_TYPE.new;\n    let status = '';\n    const isAdmin = isPortalAdmin();\n\n    if (subscriptionId !== null) {\n      subscription = (await apiSubscriptionGet(serviceUrl, subscriptionId)).data;\n      status = isAdmin ? subscription.status : SUBSCRIPTION_STATUS.requested;\n      formType = isAdmin ? FORM_TYPE.edit : FORM_TYPE.renewal;\n      project = subscription.project;\n    } else if (projectId !== null) {\n      project = (await apiProjectGet(serviceUrl, projectId)).data;\n      status = isAdmin ? SUBSCRIPTION_STATUS.pending : SUBSCRIPTION_STATUS.requested;\n    } else {\n      console.log('Unable to load project and/or subscription');\n      return;\n    }\n\n    const productVersions = (await apiProductVersionsGet(serviceUrl)).data;\n\n    this.setState({\n      subscription: subscription,\n      level: subscription.level ? subscription.level : '',\n      entandoVersionId: subscription.entandoVersion ? subscription.entandoVersion.id : '',\n      startDate: stripTime(subscription.startDate),\n      lengthInMonths: subscription.lengthInMonths ? subscription.lengthInMonths : '',\n      notes: subscription.notes ? subscription.notes : '',\n      status: status,\n      formType: formType,\n      project: project,\n      projectId: projectId,\n      productVersions: productVersions,\n    });\n  }\n\n  isNumeric(str) {\n    return !isNaN(str) && !isNaN(parseInt(str));\n  }\n\n  handleValidation() {\n    let invalid = {};\n\n    if (!this.state.startDate || !this.state.startDate.match(/^(0[1-9]|1[0-2])\\/(0[1-9]|1\\d|2\\d|3[01])\\/(19|20)\\d{2}$/)) {\n      invalid['startDate'] = true;\n    }\n\n    if (!this.state.lengthInMonths || !this.isNumeric(this.state.lengthInMonths)) {\n      invalid['lengthInMonths'] = true;\n    }\n\n    if (!this.state.level) {\n      invalid['level'] = true;\n    }\n\n    if (this.state.entandoVersionId === '') {\n      invalid['entandoVersionId'] = true;\n    }\n\n    this.setState({ invalid: invalid });\n    return Object.keys(invalid).length === 0;\n  }\n\n  handleChanges = e => {\n    const input = e.target;\n    const name = input.name;\n    const value = input.value;\n    this.setState({ [name]: value });\n    this.setState({\n      submitSuccess: false,\n      submitError: false,\n    });\n  };\n\n  handleStartDateChange = date => {\n    let formatted = '';\n    if (date && date[0]) {\n      formatted = moment(date[0].toISOString()).format('MM/DD/YYYY');\n    }\n    this.setState({\n      startDate: formatted,\n    });\n  };\n\n  updateStateForSuccess(success) {\n    if (success) {\n      this.setState({\n        submitSuccess: true,\n        submitError: false,\n        submitColour: '#24a148',\n      });\n    } else {\n      this.setState({\n        submitSuccess: false,\n        submitError: true,\n        submitColour: '#da1e28',\n      });\n    }\n  }\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    this.setState({\n      submitSuccess: false,\n      submitError: false,\n    });\n    const formIsValid = this.handleValidation();\n\n    if (formIsValid) {\n      const formType = this.state.formType;\n      const serviceUrl = this.props.serviceUrl;\n      const subscriptionRequest = this.stateToSubscription();\n\n      if (formType === FORM_TYPE.edit) {\n        apiProjectSubscriptionPut(serviceUrl, subscriptionRequest)\n          .then(() => {\n            this.updateStateForSuccess(true);\n          })\n          .catch(() => {\n            this.updateStateForSuccess(false);\n          });\n      } else if (formType === FORM_TYPE.new) {\n        this.newSubscription(subscriptionRequest)\n          .then(res => {\n            apiAddSubscriptionToProject(serviceUrl, this.state.projectId, res.data.id);\n            this.updateStateForSuccess(true);\n          })\n          .catch(() => {\n            this.updateStateForSuccess(false);\n          });\n      } else if (formType === FORM_TYPE.renewal) {\n        this.renewSubscription(subscriptionRequest)\n          .then(res => {\n            apiAddSubscriptionToProject(serviceUrl, this.state.projectId, res.data.id);\n            this.updateStateForSuccess(true);\n          })\n          .catch(() => {\n            this.updateStateForSuccess(false);\n          });\n      } else {\n        console.log('Illegal operation');\n      }\n    }\n  };\n\n  stateToSubscription() {\n    return {\n      entandoVersionId: this.state.entandoVersionId,\n      projectId: this.state.projectId,\n      renewal: this.state.formType === FORM_TYPE.renewal,\n      projectSubscription: {\n        id: this.state.subscription.id,\n        startDate: new Date(this.state.startDate),\n        lengthInMonths: this.state.lengthInMonths,\n        level: this.state.level,\n        status: this.state.status.toUpperCase(),\n        notes: this.state.notes,\n      },\n    };\n  }\n\n  async newSubscription(request) {\n    return await apiProjectSubscriptionPost(this.props.serviceUrl, request);\n  }\n\n  async renewSubscription(request) {\n    return await apiRenewSubscription(this.props.serviceUrl, request);\n  }\n\n  setupFormComponents() {\n    const subscriptionLevelList = Object.entries(SUBSCRIPTION_LEVEL).map(([key, value]) => (\n      <SelectItem key={key} text={value} value={key}>\n        {value}\n      </SelectItem>\n    ));\n    subscriptionLevelList.unshift(<SelectItem key=\"-1\" text={i18n.t('subscriptionForm.chooseLevel')} value=\"\"/>);\n\n    const versionList = this.state.productVersions.map(version => {\n      // only allow the user to choose from active entando versions\n      if (version.status) {\n        return (\n          <SelectItem key={version.id} text={version.name} value={version.id}>\n            {version.name}\n          </SelectItem>\n        );\n      } else {\n        return null;\n      }\n    });\n    versionList.unshift(<SelectItem key=\"-1\" text={i18n.t('subscriptionForm.chooseVersion')} value=\"\"/>);\n\n    const statusList = Object.entries(SUBSCRIPTION_STATUS).map(([key, value]) => (\n      <SelectItem key={key} text={value} value={value}>\n        {value}\n      </SelectItem>\n    ));\n\n    return {subscriptionLevelList, versionList, statusList};\n  }\n\n  renderForm() {\n    const {subscriptionLevelList, versionList, statusList} = this.setupFormComponents();\n    return (\n      <div>\n        <div className=\"bx--row\">\n          <div className=\"bx--col\">\n            <div>\n              <span>{i18n.t('subscriptionForm.projectName')}:</span> {this.state.project.name}\n            </div>\n            <Select\n              id=\"status\"\n              name=\"status\"\n              labelText={i18n.t('subscriptionForm.subscriptionStatus')}\n              value={this.state.status}\n              onChange={this.handleChanges}\n              invalidText={i18n.t('validation.invalid.required')}\n              invalid={this.state.invalid['status']}\n              disabled={!isPortalAdmin()}\n            >\n              {statusList}\n            </Select>\n            <Select\n              id=\"level\"\n              name=\"level\"\n              labelText={i18n.t('subscriptionForm.subscriptionLevel') + ' *'}\n              value={this.state.level || ''}\n              onChange={this.handleChanges}\n              invalidText={i18n.t('validation.invalid.required')}\n              invalid={this.state.invalid['level']}\n            >\n              {subscriptionLevelList}\n            </Select>\n            <Select\n              id=\"entandoVersionId\"\n              name=\"entandoVersionId\"\n              labelText={i18n.t('subscriptionForm.entandoVersion') + ' *'}\n              value={this.state.entandoVersionId}\n              onChange={this.handleChanges}\n              invalidText={i18n.t('validation.invalid.required')}\n              invalid={this.state.invalid['entandoVersionId']}\n            >\n              {versionList}\n            </Select>\n          </div>\n          <div className=\"bx--col\">\n            <DatePicker dateFormat=\"m/d/Y\" datePickerType=\"single\" value={this.state.startDate}\n                        onChange={this.handleStartDateChange}>\n              <DatePickerInput\n                id=\"startDate\"\n                name=\"startDate\"\n                placeholder=\"mm/dd/yyyy\"\n                labelText={i18n.t('subscriptionForm.subscriptionStartDate')}\n                type=\"text\"\n                invalidText={i18n.t('validation.invalid.date')}\n                invalid={this.state.invalid['startDate']}\n              />\n            </DatePicker>\n            <TextInput\n              id=\"lengthInMonths\"\n              name=\"lengthInMonths\"\n              labelText={i18n.t('subscriptionForm.subscriptionLength') + ' *'}\n              value={this.state.lengthInMonths}\n              onChange={this.handleChanges}\n              invalidText={i18n.t('validation.invalid.number')}\n              invalid={this.state.invalid['lengthInMonths']}\n            />\n            {isPortalAdmin() && (\n              <TextArea\n                id={'notes'}\n                name=\"notes\"\n                labelText={i18n.t('adminDashboard.addProject.notes')}\n                value={this.state.notes}\n                onChange={this.handleChanges}\n              />\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  successErrorMessage() {\n    const isAdmin = isPortalAdmin();\n    const { subscriptionType, submitSuccess, submitError } = this.state;\n\n    if (subscriptionType === 'new') {\n      if (submitSuccess) {\n        return isAdmin ? this.createFormMessage('adminSubmitNewSuccess') : this.createFormMessage('customerSubmitSuccess');\n      } else if (submitError) {\n        return this.createFormMessage('newSubError');\n      }\n    } else {\n      if (submitSuccess) {\n        return isAdmin ? this.createFormMessage('adminRenewNewSuccess') : this.createFormMessage('customerSubmitSuccess');\n      } else if (submitError) {\n        return this.createFormMessage('renewSubError');\n      }\n    }\n  }\n\n  createFormMessage(subMessageKey) {\n    return <p style={{ color: this.state.submitColour }}>{i18n.t(`subscriptionForm.${subMessageKey}`)}</p>;\n  }\n\n  render() {\n    const formType = this.state.formType;\n    let formLabelKey = 'subscriptionForm.newSubscription';\n    if (formType !== 'new') {\n      formLabelKey = isPortalAdmin() ? 'subscriptionForm.editSubscription' : 'subscriptionForm.renewSubscription';\n    }\n\n    if (!this.state.loading) {\n      if (isPortalUser()) {\n        return (\n          <div id=\"entando-customer-portal\">\n            <Breadcrumbs project={this.state.project} subscription={this.state.subscription}\n                         locale={this.props.locale}/>\n            <div className=\"form-container\">\n              {this.successErrorMessage()}\n              <Form onSubmit={this.handleFormSubmit}>\n                <div className=\"bx--grid\">\n                  <div className=\"bx--row\">\n                    <div className=\"bx--col\">\n                      <strong>{i18n.t(formLabelKey)}</strong>\n                    </div>\n                  </div>\n                  {this.renderForm()}\n                  <Button kind=\"primary\" tabIndex={0} type=\"submit\">\n                    {' '}\n                    {i18n.t('buttons.submit')}\n                  </Button>\n                </div>\n              </Form>\n            </div>\n          </div>\n        );\n      } else {\n        return <p>{i18n.t('userMessages.unauthorized')}</p>;\n      }\n    }\n    // Loading\n    else {\n      return null;\n    }\n  }\n}\n\nexport default withKeycloak(SubscriptionForm);\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport SubscriptionForm from '../components/Forms/SubscriptionForm';\r\nimport '../index.scss';\r\nimport * as Locale from '../i18n';\r\n\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\n\r\nimport { subscribeToWidgetEvent } from '../helpers/widgetEvents';\r\nimport { KEYCLOAK_EVENT_TYPE } from './widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window && window.entando && window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\nconst ATTRIBUTES = {\r\n  hidden: 'hidden',\r\n  locale: 'locale',\r\n  paginationMode: 'pagination-mode',\r\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n  serviceUrl: 'service-url',\r\n};\r\n\r\nclass SubscriptionFormElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    //retargetEvents(shadowRoot);\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n    const locale = this.getAttribute(ATTRIBUTES.locale) || '';\r\n    Locale.setLocale(locale);\r\n\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <SubscriptionForm serviceUrl={serviceUrl} locale={locale}/>\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.define('cp-subscription-form-widget', SubscriptionFormElement);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport TicketList from '../components/SubscriptionDetails/TicketList';\r\nimport '../index.scss';\r\n\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\n\r\nimport {subscribeToWidgetEvent} from '../helpers/widgetEvents';\r\nimport {KEYCLOAK_EVENT_TYPE} from './widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window && window.entando && window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\nconst ATTRIBUTES = {\r\n  hidden: 'hidden',\r\n  locale: 'locale',\r\n  paginationMode: 'pagination-mode',\r\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n  serviceUrl: 'service-url',\r\n};\r\n\r\nclass TicketListCustomerElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    //retargetEvents(shadowRoot);\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <TicketList serviceUrl={serviceUrl} />\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.define('cp-ticket-list-widget', TicketListCustomerElement);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport TicketingSystem from '../components/Admin/Configuration/TicketingSystem';\r\nimport '../index.scss';\r\n\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\n\r\nimport { subscribeToWidgetEvent } from '../helpers/widgetEvents';\r\nimport { KEYCLOAK_EVENT_TYPE } from './widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window && window.entando && window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\nconst ATTRIBUTES = {\r\n  hidden: 'hidden',\r\n  locale: 'locale',\r\n  paginationMode: 'pagination-mode',\r\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n  serviceUrl: 'service-url',\r\n};\r\n\r\nclass TicketingSystemElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    //retargetEvents(shadowRoot);\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <TicketingSystem serviceUrl={serviceUrl} />\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.define('cp-ticketing-system-widget', TicketingSystemElement);\r\n","import React, {Component} from 'react';\nimport {BrowserRouter, Route, Switch, Link} from 'react-router-dom';\nimport App from '../components/App';\nimport withKeycloak from '../auth/withKeycloak';\nimport SubscriptionForm from '../components/Forms/SubscriptionForm';\nimport AdminConfiguration from '../components/Admin/Configuration/AdminConfiguration';\nimport OpenTicketForm from '../components/Forms/OpenTicketForm';\nimport ManageUser from '../components/Admin/ManageUser/ManageUser';\nimport ManageSubscriptions from '../components/Admin/ManageSubscriptions/ManageSubscriptions';\nimport {authenticationChanged, getPageUrl, isAuthenticated, isPortalAdmin} from '../api/helpers';\nimport {\n  PAGE_ADMIN_CONFIG, PAGE_CUSTOMER_PORTAL, PAGE_MANAGE_SUBSCRIPTIONS,\n  PAGE_MANAGE_USERS,\n  PAGE_SUBSCRIPTION_FORM,\n  PAGE_TICKET_FORM\n} from \"../api/constants\";\nimport Login from \"../components/Login/Login\";\n\nclass LocalApp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n    };\n  }\n\n  componentDidMount() {\n    if (isAuthenticated(this.props)) {\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (authenticationChanged(this.props, prevProps)) {\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n\n  render() {\n    const {locale, serviceUrl} = this.props;\n    if (!this.state.loading) {\n      return (\n        <div>\n          <BrowserRouter forceRefresh={true}>\n            <Login locale={locale}/>\n            <div>\n              <ul>\n                {isPortalAdmin() && (\n                  <li>\n                    <Link to={getPageUrl(PAGE_ADMIN_CONFIG, locale)}>Admin</Link>\n                  </li>\n                )}\n              </ul>\n            </div>\n            <Switch>\n              <Route path={getPageUrl(PAGE_ADMIN_CONFIG, locale)}>\n                <AdminConfiguration serviceUrl={serviceUrl} locale={locale}/>\n              </Route>\n              <Route path={getPageUrl(PAGE_MANAGE_SUBSCRIPTIONS, locale)}>\n                <ManageSubscriptions serviceUrl={serviceUrl} locale={locale}/>\n              </Route>\n              <Route path={getPageUrl(PAGE_MANAGE_USERS, locale)}>\n                <ManageUser serviceUrl={serviceUrl} locale={locale}/>\n              </Route>\n              <Route path={getPageUrl(PAGE_SUBSCRIPTION_FORM, locale)}>\n                <SubscriptionForm serviceUrl={serviceUrl} locale={locale}/>\n              </Route>\n              <Route path={getPageUrl(PAGE_TICKET_FORM, locale)}>\n                <OpenTicketForm serviceUrl={serviceUrl} locale={locale}/>\n              </Route>\n              <Route path={getPageUrl(PAGE_CUSTOMER_PORTAL, locale)}>\n                <App serviceUrl={serviceUrl} locale={locale}/>\n              </Route>\n              <Route path=\"/\" exact={true}>\n                <App serviceUrl={serviceUrl} locale={locale}/>\n              </Route>\n            </Switch>\n          </BrowserRouter>\n        </div>\n      );\n    } else {\n      return null;\n    }\n  }\n}\n\nexport default withKeycloak(LocalApp);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '../index.scss';\n// import './entando.css';\nimport * as Locale from '../i18n';\n\nimport KeycloakContext from '../auth/KeycloakContext';\nimport LocalApp from '../local/LocalApp';\n\nimport {subscribeToWidgetEvent} from '../helpers/widgetEvents';\nimport {KEYCLOAK_EVENT_TYPE} from '../custom-elements/widgetEventTypes';\n\nconst getKeycloakInstance = () =>\n  (window && window.entando && window.entando.keycloak && {...window.entando.keycloak, initialized: true}) || {\n    initialized: false,\n  };\n\nconst ATTRIBUTES = {\n  hidden: 'hidden',\n  locale: 'locale',\n  paginationMode: 'pagination-mode',\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\n  serviceUrl: 'service-url',\n};\n\nclass LocalAppElement extends HTMLElement {\n  container;\n\n  mountPoint;\n\n  unsubscribeFromKeycloakEvent;\n\n  keycloak = getKeycloakInstance();\n\n  connectedCallback() {\n    this.mountPoint = document.createElement('div');\n    this.keycloak = {...getKeycloakInstance(), initialized: true};\n\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\n      this.keycloak = {...getKeycloakInstance(), initialized: true};\n      this.render();\n    });\n\n    this.render();\n\n    //retargetEvents(shadowRoot);\n    this.appendChild(this.mountPoint);\n  }\n\n  render() {\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\n    const locale = this.getAttribute(ATTRIBUTES.locale) || '';\n    Locale.setLocale(locale);\n\n    ReactDOM.render(\n      <KeycloakContext.Provider value={this.keycloak}>\n        <LocalApp serviceUrl={serviceUrl} locale={locale}/>\n      </KeycloakContext.Provider>,\n      this.mountPoint\n    );\n  }\n}\n\ncustomElements.define('local-app-element', LocalAppElement);\n"],"sourceRoot":""}