{"version":3,"sources":["i18n.js","api/constants.js","api/helpers.js","api/ticketingsystem.js","auth/KeycloakContext.js","components/__types__/ref.js","auth/withKeycloak.js","components/Admin/Configuration/TicketingSystem.js","api/productVersion.js","components/Admin/AddProductVersionModal.js","components/Admin/EditVersionModal.js","components/Admin/Configuration/ProductVersion.js","components/Breadcrumbs/Breadcrumbs.js","components/Admin/Configuration/AdminConfiguration.js","helpers/widgetEvents.js","custom-elements/widgetEventTypes.js","custom-elements/AdminConfigurationElement.js","api/customers.js","components/Admin/AddCustomerModal.js","api/partners.js","api/projects.js","auth/KeycloakViews.js","components/Admin/AddPartnerModal.js","components/Admin/AddProjectModal.js","components/Admin/EditProjectModal.js","components/Admin/ManagePartnersModal.js","components/Admin/ProjectActionItems.js","api/subscriptions.js","components/Customer/CustomerDataTable.js","components/Customer/CustomerDetails.js","components/Admin/EditCustomerModal.js","components/Customer/CustomerAccordian.js","components/Admin/AdminDashboard.js","api/tickets.js","components/SubscriptionDetails/TicketList.js","components/SubscriptionDetails/Subscription.js","components/Customer/CustomerProjectList.js","components/Admin/ManageSubscriptions/ManageSubscriptions.js","components/Forms/SubscriptionForm.js","components/Forms/OpenTicketForm.js","api/portalusers.js","api/keycloak.js","components/Admin/ManageUsers/AssignUsers.js","components/Admin/ManageUsers/DeleteUsers.js","components/Admin/ManageUsers/ManageUsers.js","components/App.js","custom-elements/AppElement.js","components/Login/Login.js","custom-elements/LoginElement.js","local/LocalApp.js","local/LocalAppElement.js"],"names":["i18n","defaultLocale","locale","fallbacks","translations","en","it","setLocale","PAGE_CUSTOMER_PORTAL","PAGE_ADMIN_CONFIG","getKeycloakToken","window","entando","keycloak","authenticated","token","isAuthenticated","props","initialized","authenticationChanged","prevProps","changedAuth","isPortalAdmin","hasKeycloakClientRole","isPortalSupport","isPortalPartner","isPortalCustomer","isPortalAdminOrSupport","isPortalUser","clientRole","resourceAccess","client","item","roles","includes","getDefaultOptions","headers","Headers","Authorization","getDefaultKeycloakOptions","getActiveSubscription","project","projectSubscriptions","find","status","getPageUrl","pageCode","url","getUrl","request","options","a","fetch","response","has","parseInt","get","data","json","Promise","reject","Error","statusText","resource","apiTicketingSystemDelete","serviceUrl","id","method","apiCurrentTicketingSystemGet","currentTicketingSystem","apiTicketingSystemsGet","ticketingSystems","length","apiTicketingSystemPost","ticketingSystem","secret","tsRequest","body","JSON","stringify","apiTicketingSystemPut","KeycloakContext","PropTypes","oneOfType","func","shape","current","elementType","React","createContext","withKeycloak","WrappedComponent","WithKeycloakComponent","renderWrappedComponent","value","forwardedRef","rest","ref","Consumer","this","Component","defaultProps","forwardRef","handleChanges","e","input","target","name","setState","handleFormSubmit","event","preventDefault","state","updateTicketingSystem","then","submitMsg","t","submitColour","catch","createTicketingSystem","ticketingSystemType","serviceAccount","serviceAccountSecret","systemId","fetchData","confirm","deleteTicketingSystem","className","style","color","Form","onSubmit","Select","labelText","onChange","SelectItem","text","map","type","i","TextInput","Button","kind","tabIndex","onClick","handleDelete","apiProductVersionsGet","apiProductVersionGet","versionId","apiUpdateProductVersionsStatus","apiProductVersionPost","productVersion","apiProductVersionPut","apiProductVersionDelete","handleValidation","addProductVersion","updateProductVersions","clearValues","document","querySelector","baseState","handleStartDateChange","date","startDate","moment","toISOString","format","handleEndDateChange","endDate","invalid","formIsValid","match","addEventListener","modalConfirmation","modalId","ModalWrapper","buttonTriggerText","modalHeading","buttonTriggerClassName","handleSubmit","invalidText","DatePicker","dateFormat","datePickerType","DatePickerInput","placeholder","version","versionPut","buttonId","getVersionDetails","buttonClassName","primaryButtonText","secondaryButtonText","ProductVersion","handleDeleteVersion","deleteVersion","getProductVersions","versions","productVersions","DataTable","rows","rowData","headerData","getHeaderProps","getTableProps","TableContainer","Table","TableHead","TableRow","header","TableHeader","TableBody","Object","keys","index","TableCell","Toggle","size","handleToggleChange","aria-label","defaultToggled","display","width","key","entVersion","homeUrl","customer","subscription","Breadcrumb","margin","BreadcrumbItem","href","loading","adminConfig","label","content","Tile","Accordion","AccordionItem","title","description","toString","subscribeToWidgetEvent","eventType","eventHandler","removeEventListener","KEYCLOAK_EVENT_TYPE","getKeycloakInstance","ATTRIBUTES","AdminConfigurationElement","mountPoint","createElement","unsubscribeFromKeycloakEvent","render","appendChild","getAttribute","Locale","ReactDOM","Provider","HTMLElement","customElements","define","apiCustomerDelete","apiCustomersGet","apiCustomerGet","apiCustomerPost","apiCustomerPut","apiAddProjectToCustomer","customerId","projectId","apiDeleteProjectFromCustomer","customerNumber","contactName","contactPhone","contactEmail","notes","customerPost","updateCustomerList","TextArea","apiPartnerPost","partner","apiProjectsGet","apiProjectsGetByCustomer","apiProjectGet","apiProjectPost","apiProjectPut","apiAddSubscriptionToProject","subscriptionId","apiAddUserToProject","userId","apiDeletePartnerFromProject","partnerId","apiDeleteSubscriptionFromProject","apiDeleteUserFromProject","apiAddPartnerToProject","apiGetProjectUsers","apiGetProjectSubscriptions","AuthenticatedView","children","UnauthenticatedView","partnerNumber","partnerPost","projectList","projects","console","log","result","trim","alert","projectPost","getAllProjects","customerList","getCustomers","customers","allCustomers","allProjects","projectPut","updateProjectList","getProjectDetails","ManagePartnersModal","handleRemovePartner","removePartner","err","hasForm","partners","border","borderTop","handleClick","showMenu","handleOutsideClick","prevState","node","contains","isAdmin","actionDivider","topButton","padding","editProject","subscriptionParam","newOrRenewSubscription","to","textDecoration","managePartners","manageUsers","manageSubscriptions","openTicket","viewAllTickets","substr","indexOf","rel","deleteProject","handleDeleteProject","zIndex","position","backgroundColor","formatStartDate","String","Date","toDateString","formatEndDate","lengthInMonths","setMonth","getMonth","apiSubscriptionGet","apiProjectSubscriptionPost","projectSubscriptionCreation","apiProjectSubscriptionPut","apiRenewSubscription","projectSubscriptionRenew","action","callback","partnerIndex","entandoVersion","minHeight","paddingBottom","getCustomerDetails","getCustomer","updateCustomer","deleteCustomer","open","accordionOpened","getTime","handleSearch","newFilteredState","filter","toLowerCase","filteredCustomers","currentPage","undefined","role","test","numberOfPages","Math","ceil","Search","onKeyPress","InlineLoading","indexOfLastItem","firstIndexOfCurrentPage","PaginationNav","loop","Boolean","page","Number","totalItems","itemsShown","jiraResource","apiJiraTicketsGet","apiJiraTicketPost","ticket","tickets","ticketSystemUrl","ticketingSystemBaseUrl","ticketUrl","summary","priority","createDate","updateDate","subscriptionData","updateSubscription","users","params","license","level","user","username","handleDeleteSubscription","deleteSubscription","subscriptions","FORM_TYPE","SUBSCRIPTION_LEVEL","GOLD","PLATINUM","SUBSCRIPTION_STATUS","requested","pending","active","expired","submitSuccess","submitError","formatted","formType","subscriptionRequest","stateToSubscription","updateStateForSuccess","newSubscription","res","renewSubscription","entandoVersionId","str","isNaN","isNumeric","success","renewal","projectSubscription","toUpperCase","subscriptionLevelList","entries","unshift","versionList","statusList","setupFormComponents","disabled","subscriptionType","createFormMessage","subMessageKey","formLabelKey","successErrorMessage","renderForm","createTicket","types","priorities","error","apiUserGetByUsernameAndEmail","email","apiKeycloakUserGet","realm","usersResource","mapKeycloakUserEmails","keycloakUsers","usernameEmailMap","Map","forEach","keycloakUser","set","assignUser","handleFormValidation","assignUserToProject","dispatchEvent","CustomEvent","getPortalUserId","portalUserId","portalUserApi","portalUser","warn","authServerUrl","userList","handleRemoveUser","displayUsers","handleUserDisplay","userAccess","row","cells","cell","userFunctionality","path","AppElement","KEYCLOAK_EVENT_ID","keycloakEventHandler","bind","keycloakEvent","detail","logout","loginUrl","location","redirectUri","origin","login","LoginElement","forceRefresh","exact","LocalAppElement"],"mappings":"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","file":"static/js/main.cad2544b.chunk.js","sourcesContent":["import i18n from 'i18n-js';\r\n\r\nimport en from './i18n/locales/en.json';\r\nimport it from './i18n/locales/it.json';\r\n\r\ni18n.defaultLocale = 'en';\r\ni18n.locale = 'en';\r\ni18n.fallbacks = true;\r\ni18n.translations = { en, it };\r\n\r\nexport const setLocale = locale => {\r\n  i18n.locale = locale;\r\n};\r\n\r\nexport default i18n;\r\n","export const DOMAIN = process.env.REACT_APP_PATH || ''; // eslint-disable-line import/prefer-default-export\r\n\r\n//Customer Portal roles\r\nexport const ADMIN = 'cp-admin';\r\nexport const SUPPORT = 'cp-support';\r\nexport const PARTNER = 'cp-partner';\r\nexport const CUSTOMER = 'cp-customer';\r\n\r\n//Page codes\r\nexport const PAGE_CUSTOMER_PORTAL = 'customer_portal.page'\r\nexport const PAGE_ADMIN_CONFIG = 'cp_admin_config.page'\r\n","import {ADMIN, SUPPORT, CUSTOMER, PARTNER, DOMAIN} from './constants';\r\n\r\nexport const getKeycloakToken = () => {\r\n  if (window && window.entando && window.entando.keycloak && window.entando.keycloak.authenticated) {\r\n    return window.entando.keycloak.token;\r\n  }\r\n  return '';\r\n};\r\n\r\nexport const isAuthenticated = props => {\r\n  const {keycloak} = props;\r\n  return keycloak.initialized && keycloak.authenticated;\r\n};\r\n\r\nexport const authenticationChanged = (props, prevProps) => {\r\n  const authenticated = isAuthenticated(props);\r\n  const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n  return authenticated && changedAuth;\r\n};\r\n\r\nexport const isPortalAdmin = () => {\r\n  return hasKeycloakClientRole(ADMIN);\r\n};\r\n\r\nexport const isPortalSupport = () => {\r\n  return hasKeycloakClientRole(SUPPORT);\r\n};\r\n\r\nexport const isPortalPartner = () => {\r\n  return hasKeycloakClientRole(PARTNER);\r\n};\r\n\r\nexport const isPortalCustomer = () => {\r\n  return hasKeycloakClientRole(CUSTOMER);\r\n};\r\n\r\nexport const isPortalAdminOrSupport = () => {\r\n  return isPortalAdmin() || isPortalSupport();\r\n};\r\n\r\nexport const isPortalCustomerOrPartner = () => {\r\n  return isPortalCustomer() || isPortalPartner();\r\n};\r\n\r\nexport const isPortalUser = () => {\r\n  return isPortalAdminOrSupport() || isPortalCustomerOrPartner();\r\n};\r\n\r\nexport const hasKeycloakClientRole = clientRole => {\r\n  if (getKeycloakToken()) {\r\n    const { resourceAccess } = window.entando.keycloak;\r\n    if (resourceAccess) {\r\n      for (const client in resourceAccess) {\r\n        const item = resourceAccess[client];\r\n        if (item.roles && item.roles.includes(clientRole)) {\r\n          // console.debug(\"Found role {} with client {} \", clientRole, client);\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return false;\r\n};\r\n\r\nexport const getDefaultOptions = () => ({\r\n  headers: new Headers({\r\n    Authorization: `Bearer ${getKeycloakToken()}`,\r\n    'Content-Type': 'application/json',\r\n  }),\r\n});\r\n\r\nexport const getDefaultKeycloakOptions = () => ({\r\n  headers: new Headers({\r\n    Authorization: `Bearer ${getKeycloakToken()}`,\r\n    'Content-Type': 'application/x-www-form-urlencoded',\r\n  }),\r\n});\r\n\r\nexport const getActiveSubscription = project => {\r\n  return (\r\n    project &&\r\n    project.projectSubscriptions &&\r\n    project.projectSubscriptions.find(item => {\r\n      return item.status === 'ACTIVE' ? item : null;\r\n    })\r\n  );\r\n};\r\n\r\nexport const getPageUrl = (pageCode, locale) => {\r\n  const url = `${DOMAIN}/${locale}/${pageCode}`;\r\n  return getUrl(url);\r\n}\r\n\r\nexport const getUrl = url => {\r\n  return `${url}`;\r\n};\r\n\r\nexport const request = async (url, options) => {\r\n  const response = await fetch(url, options);\r\n\r\n  const headers = {\r\n    ...(response.headers.has('X-Total-Count') ? {'X-Total-Count': parseInt(response.headers.get('X-Total-Count'), 10)} : {}),\r\n  };\r\n\r\n  if (response.status === 204) {\r\n    return { data: '', status: response.status };\r\n  }\r\n\r\n  return response.status >= 200 && response.status < 300\r\n    ? { data: await response.json(), headers, status: response.status }\r\n    : Promise.reject(new Error(response.statusText || response.status));\r\n};\r\n","import {getDefaultOptions, request} from './helpers';\r\n\r\nconst resource = 'api/ticketing-systems';\r\n\r\nexport const apiTicketingSystemDelete = async (serviceUrl, id) => {\r\n  const url = `${serviceUrl}/${resource}/${id}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\n//Simplifying assumptions\r\n// 1) Take the latest ticketing system as the current config. There should be only 1.\r\n// 2) Only load it once in the current context\r\nexport const apiCurrentTicketingSystemGet = async serviceUrl => {\r\n  if (window.entando.currentTicketingSystem == null) {\r\n    const ticketingSystems = (await apiTicketingSystemsGet(serviceUrl)).data;\r\n    window.entando.currentTicketingSystem = ticketingSystems && ticketingSystems.length ? ticketingSystems[ticketingSystems.length - 1] : null;\r\n  }\r\n  return window.entando.currentTicketingSystem;\r\n};\r\n\r\nexport const apiTicketingSystemsGet = async serviceUrl => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\n//Note: post and put both use a ticketingsystemrequest\r\nexport const apiTicketingSystemPost = async (serviceUrl, ticketingSystem, secret) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const tsRequest = {\r\n    \"ticketingSystem\": ticketingSystem,\r\n    \"secret\": secret\r\n  }\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n    body: JSON.stringify(tsRequest),\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiTicketingSystemPut = async (serviceUrl, ticketingSystem, secret) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const tsRequest = {\r\n    \"ticketingSystem\": ticketingSystem,\r\n    \"secret\": secret\r\n  }\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'PUT',\r\n    body: JSON.stringify(tsRequest),\r\n  };\r\n  return request(url, options);\r\n};\r\n","import React from 'react';\r\n\r\nconst KeycloakContext = React.createContext(null);\r\n\r\nexport default KeycloakContext;\r\n","import PropTypes from 'prop-types';\r\n\r\nexport default PropTypes.oneOfType([PropTypes.func, PropTypes.shape({ current: PropTypes.elementType }), PropTypes.shape(null)]);\r\n","/* eslint-disable react/jsx-props-no-spreading */\r\nimport React, { forwardRef, Component } from 'react';\r\nimport refType from '../components/__types__/ref';\r\nimport KeycloakContext from './KeycloakContext';\r\n\r\nexport default function withKeycloak(WrappedComponent) {\r\n  class WithKeycloakComponent extends Component {\r\n    renderWrappedComponent = value => {\r\n      const { forwardedRef, ...rest } = this.props;\r\n      return <WrappedComponent {...rest} ref={forwardedRef} keycloak={value} />;\r\n    };\r\n\r\n    render() {\r\n      return <KeycloakContext.Consumer>{this.renderWrappedComponent}</KeycloakContext.Consumer>;\r\n    }\r\n  }\r\n\r\n  WithKeycloakComponent.propTypes = {\r\n    forwardedRef: refType,\r\n  };\r\n\r\n  WithKeycloakComponent.defaultProps = {\r\n    forwardedRef: () => {},\r\n  };\r\n\r\n  return forwardRef((props, ref) => <WithKeycloakComponent {...props} forwardedRef={ref} />);\r\n}\r\n","import React, { Component } from 'react';\r\nimport i18n from '../../../i18n';\r\nimport { Form, TextInput, Select, SelectItem, Button } from 'carbon-components-react';\r\nimport {\r\n  apiCurrentTicketingSystemGet,\r\n  apiTicketingSystemDelete,\r\n  apiTicketingSystemPost,\r\n  apiTicketingSystemPut,\r\n} from '../../../api/ticketingsystem';\r\nimport {authenticationChanged, isAuthenticated, isPortalAdmin} from '../../../api/helpers';\r\nimport withKeycloak from '../../../auth/withKeycloak';\r\n\r\nclass TicketingSystem extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      ticketingSystem: {},\r\n      ticketingSystemType: 'Jira',\r\n      url: '',\r\n      serviceAccount: '',\r\n      serviceAccountSecret: '',\r\n      systemId: '',\r\n      submitMsg: '',\r\n      submitColour: 'black',\r\n    };\r\n  }\r\n\r\n  handleChanges = e => {\r\n    const input = e.target;\r\n    const name = input.name;\r\n    const value = input.value;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  async createTicketingSystem() {\r\n    const ticketingSystem = {\r\n      url: this.state.url,\r\n      serviceAccount: this.state.serviceAccount,\r\n      systemId: this.state.systemId,\r\n    };\r\n    const response = (await apiTicketingSystemPost(this.props.serviceUrl, ticketingSystem, this.state.serviceAccountSecret)).data;\r\n    this.setState({\r\n      ticketingSystem: response,\r\n    });\r\n  }\r\n\r\n  async updateTicketingSystem() {\r\n    const ticketingSystem = {\r\n      id: this.state.ticketingSystem.id,\r\n      url: this.state.url,\r\n      serviceAccount: this.state.serviceAccount,\r\n      systemId: this.state.systemId,\r\n    };\r\n    return await apiTicketingSystemPut(this.props.serviceUrl, ticketingSystem, this.state.serviceAccountSecret);\r\n  }\r\n\r\n  async fetchData() {\r\n    const ticketingSystem = await apiCurrentTicketingSystemGet(this.props.serviceUrl);\r\n    this.setState({\r\n      ticketingSystem: ticketingSystem,\r\n      url: ticketingSystem ? ticketingSystem.url : '',\r\n      serviceAccount: ticketingSystem ? ticketingSystem.serviceAccount : '',\r\n      //Secret needs to be entered each time\r\n      systemId: ticketingSystem ? ticketingSystem.systemId : '',\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (isAuthenticated(this.props)) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (authenticationChanged(this.props, prevProps)) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n\r\n  async deleteTicketingSystem() {\r\n    return await apiTicketingSystemDelete(this.props.serviceUrl, this.state.ticketingSystem.id);\r\n  }\r\n\r\n  handleDelete() {\r\n    if (window.confirm('Are you sure you want to delete this ticketing system?')) {\r\n      this.deleteTicketingSystem()\r\n        .then(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.deleted'),\r\n            submitColour: '#24a148',\r\n          });\r\n          this.fetchData();\r\n        })\r\n        .catch(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.error'),\r\n            submitColour: '#da1e28',\r\n          });\r\n        });\r\n    }\r\n  }\r\n\r\n  handleFormSubmit = event => {\r\n    event.preventDefault();\r\n    if (!this.state.ticketingSystem) {\r\n      this.createTicketingSystem()\r\n        .then(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.created'),\r\n            submitColour: '#24a148',\r\n          });\r\n        })\r\n        .catch(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.error'),\r\n            submitColour: '#da1e28',\r\n          });\r\n        });\r\n    } else {\r\n      this.updateTicketingSystem()\r\n        .then(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.updated'),\r\n            submitColour: '#24a148',\r\n          });\r\n        })\r\n        .catch(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.error'),\r\n            submitColour: '#da1e28',\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const ticketingSystemTypes = ['Jira'];\r\n    if (isPortalAdmin()) {\r\n      return (\r\n        <div className=\"cp-form\">\r\n          <p style={{ color: this.state.submitColour }}>{this.state.submitMsg}</p>\r\n          <Form onSubmit={this.handleFormSubmit}>\r\n            <div className=\"bx--grid\">\r\n              <div className=\"bx--row\">\r\n                <div className=\"bx--col\">\r\n                  <Select\r\n                    id=\"ticketingSystemType\"\r\n                    name=\"ticketingSystemType\"\r\n                    labelText={i18n.t('adminConfig.integrationTicketingSystem.selectBackendTicketingSystem')}\r\n                    value={this.state.ticketingSystemType}\r\n                    onChange={this.handleChanges}\r\n                  >\r\n                    <SelectItem text={i18n.t('adminConfig.integrationTicketingSystem.select')}\r\n                                value=\"ticketing-system\"/>\r\n                    {ticketingSystemTypes.map((type, i) => (\r\n                      <SelectItem key={i} text={type} value={type}>\r\n                        {type}\r\n                      </SelectItem>\r\n                    ))}\r\n                  </Select>\r\n                  <TextInput\r\n                    id=\"serviceAccount\"\r\n                    name=\"serviceAccount\"\r\n                    labelText={i18n.t('adminConfig.integrationTicketingSystem.userName')}\r\n                    value={this.state.serviceAccount}\r\n                    onChange={this.handleChanges}\r\n                  />\r\n                  <TextInput\r\n                    id=\"systemId\"\r\n                    name=\"systemId\"\r\n                    labelText={i18n.t('adminConfig.integrationTicketingSystem.projectName')}\r\n                    value={this.state.systemId}\r\n                    onChange={this.handleChanges}\r\n                  />\r\n                </div>\r\n                <div className=\"bx--col\">\r\n                  <TextInput\r\n                    id=\"url\"\r\n                    name=\"url\"\r\n                    labelText={i18n.t('adminConfig.integrationTicketingSystem.url')}\r\n                    value={this.state.url}\r\n                    onChange={this.handleChanges}\r\n                  />\r\n                  <TextInput\r\n                    id=\"serviceAccountSecret\"\r\n                    name=\"serviceAccountSecret\"\r\n                    type=\"password\"\r\n                    labelText={i18n.t('adminConfig.integrationTicketingSystem.password')}\r\n                    value={this.state.serviceAccountSecret}\r\n                    onChange={this.handleChanges}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <Button kind=\"primary\" tabIndex={0} type=\"submit\">\r\n                {' '}\r\n                {i18n.t('buttons.submit')}{' '}\r\n              </Button>\r\n              {this.state.ticketingSystem ? (\r\n                <Button kind=\"danger\" onClick={() => this.handleDelete()}>\r\n                  {' '}\r\n                  Delete{' '}\r\n                </Button>\r\n              ) : null}\r\n            </div>\r\n          </Form>\r\n        </div>\r\n      );\r\n    }\r\n    // Unauthorized\r\n    else {\r\n      return <p>{i18n.t('userMessages.unauthorized')}</p>;\r\n    }\r\n  }\r\n}\r\n\r\nexport default withKeycloak(TicketingSystem);\r\n","import { getDefaultOptions, request } from './helpers';\r\n\r\nconst resource = 'api/entando-versions';\r\n\r\nexport const apiProductVersionsGet = async serviceUrl => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiProductVersionGet = async (serviceUrl, versionId) => {\r\n  const url = `${serviceUrl}/${resource}/${versionId}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiUpdateProductVersionsStatus = async (serviceUrl, id) => {\r\n  const url = `${serviceUrl}/${resource}/${id}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'PUT',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiProductVersionPost = async (serviceUrl, productVersion) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n    body: productVersion ? JSON.stringify(productVersion) : null,\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiProductVersionPut = async (serviceUrl, productVersion) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'PUT',\r\n    body: productVersion ? JSON.stringify(productVersion) : null,\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiProductVersionDelete = async (serviceUrl, id) => {\r\n  const url = `${serviceUrl}/${resource}/${id}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE',\r\n  };\r\n  return request(url, options);\r\n};\r\n","import React, { Component } from 'react';\r\nimport i18n from '../../i18n';\r\nimport { ModalWrapper, Form, TextInput, DatePicker, DatePickerInput } from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport { apiProductVersionPost } from '../../api/productVersion';\r\nimport moment from 'moment';\r\nimport {isAuthenticated} from \"../../api/helpers\";\r\n\r\nclass AddProductVersionModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      name: '',\r\n      startDate: '',\r\n      endDate: '',\r\n      invalid: {},\r\n      submitMsg: '',\r\n      submitColour: 'black',\r\n    };\r\n\r\n    this.baseState = this.state;\r\n  }\r\n\r\n  handleValidation() {\r\n    let invalid = {};\r\n    let formIsValid = true;\r\n\r\n    //name\r\n    if (this.state.name === '') {\r\n      formIsValid = false;\r\n      invalid['name'] = true;\r\n    }\r\n\r\n    if (typeof this.state.startDate !== 'undefined') {\r\n      if (!this.state.startDate.match(/^(0[1-9]|1[0-2])\\/(0[1-9]|1\\d|2\\d|3[01])\\/(19|20)\\d{2}$/)) {\r\n        formIsValid = false;\r\n        invalid['startDate'] = true;\r\n      }\r\n    }\r\n\r\n    if (typeof this.state.endDate !== 'undefined') {\r\n      if (!this.state.endDate.match(/^(0[1-9]|1[0-2])\\/(0[1-9]|1\\d|2\\d|3[01])\\/(19|20)\\d{2}$/)) {\r\n        formIsValid = false;\r\n        invalid['endDate'] = true;\r\n      }\r\n    }\r\n\r\n    this.setState({ invalid: invalid });\r\n    return formIsValid;\r\n  }\r\n\r\n  handleChanges = e => {\r\n    const input = e.target;\r\n    const name = input.name;\r\n    const value = input.value;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  async addProductVersion() {\r\n    if (isAuthenticated(this.props)) {\r\n      return await apiProductVersionPost(this.props.serviceUrl, this.state);\r\n    }\r\n  }\r\n\r\n  handleFormSubmit = () => {\r\n    const formIsValid = this.handleValidation();\r\n\r\n    if (formIsValid) {\r\n      this.addProductVersion()\r\n        .then(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.added'),\r\n            submitColour: '#24a148',\r\n          });\r\n          this.props.updateProductVersions();\r\n        })\r\n        .catch(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.error'),\r\n            submitColour: '#da1e28',\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  clearValues = () => {\r\n    const customerModalElement = document.querySelector('#modal-form-product-version');\r\n    if (!customerModalElement.className.includes('is-visible')) {\r\n      this.setState(this.baseState);\r\n    }\r\n  };\r\n\r\n  handleStartDateChange = date => {\r\n    this.setState({\r\n      startDate: moment(date[0].toISOString()).format('MM/DD/YYYY'),\r\n    });\r\n  };\r\n\r\n  handleEndDateChange = date => {\r\n    this.setState({\r\n      endDate: moment(date[0].toISOString()).format('MM/DD/YYYY'),\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    const modalOpenButton = document.querySelector('.add-product-version-button');\r\n    modalOpenButton.addEventListener('click', this.clearValues, false);\r\n  }\r\n\r\n  render() {\r\n    const modalConfirmation = (\r\n      <div className=\"bx--modal-header\">\r\n        <p style={{color: this.state.submitColour}}>{this.state.submitMsg}</p>\r\n      </div>\r\n    );\r\n    const modalId = 'modal-form-product-version';\r\n    return (\r\n      <ModalWrapper\r\n        buttonTriggerText={i18n.t('buttons.addProductVersion')}\r\n        modalHeading={i18n.t('adminDashboard.addProductVersion.title')}\r\n        buttonTriggerClassName=\"add-product-version bx--btn bx--btn--tertiary add-product-version-button\"\r\n        className=\"modal-form\"\r\n        id={modalId}\r\n        handleSubmit={this.handleFormSubmit}\r\n      >\r\n        {modalConfirmation}\r\n        <div className=\"form-container\">\r\n          <Form onSubmit={this.handleFormSubmit}>\r\n            <TextInput\r\n              id={'name' + modalId}\r\n              name=\"name\"\r\n              labelText={i18n.t('adminDashboard.addProductVersion.productVersion')}\r\n              value={this.state.name}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.required')}\r\n              invalid={this.state.invalid['name']}\r\n            />\r\n            <DatePicker dateFormat=\"m/d/Y\" datePickerType=\"single\" onChange={this.handleStartDateChange}>\r\n              <DatePickerInput\r\n                id={'startDate' + modalId}\r\n                name=\"startDate\"\r\n                placeholder=\"mm/dd/yyyy\"\r\n                labelText={i18n.t('adminDashboard.addProductVersion.productVersionStartDate')}\r\n                value={this.state.startDate}\r\n                //onChange={this.handleChanges}\r\n                type=\"text\"\r\n                invalidText={i18n.t('validation.invalid.date')}\r\n                invalid={this.state.invalid['startDate']}\r\n              />\r\n            </DatePicker>\r\n            <DatePicker dateFormat=\"m/d/Y\" datePickerType=\"single\" onChange={this.handleEndDateChange}>\r\n              <DatePickerInput\r\n                id={'endDate' + modalId}\r\n                name=\"endDate\"\r\n                placeholder=\"mm/dd/yyyy\"\r\n                labelText={i18n.t('adminDashboard.addProductVersion.productVersionEndDate')}\r\n                value={this.state.endDate}\r\n                type=\"text\"\r\n                invalidText={i18n.t('validation.invalid.date')}\r\n                invalid={this.state.invalid['endDate']}\r\n              />\r\n            </DatePicker>\r\n          </Form>\r\n        </div>\r\n        {modalConfirmation}\r\n      </ModalWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withKeycloak(AddProductVersionModal);\r\n","import React, { Component } from 'react';\r\nimport i18n from '../../i18n';\r\nimport { ModalWrapper, Form, TextInput, DatePicker, DatePickerInput } from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport { apiProductVersionGet, apiProductVersionPut } from '../../api/productVersion';\r\nimport moment from 'moment';\r\nimport {authenticationChanged, isAuthenticated} from '../../api/helpers';\r\n\r\nclass EditVersionModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      name: '',\r\n      startDate: '',\r\n      endDate: '',\r\n      invalid: {},\r\n      modalId: '',\r\n      buttonId: '',\r\n      submitMsg: '',\r\n      submitColour: 'black',\r\n    };\r\n  }\r\n\r\n  handleValidation() {\r\n    let invalid = {};\r\n    let formIsValid = true;\r\n\r\n    //name\r\n    if (this.state.name === '') {\r\n      formIsValid = false;\r\n      invalid['name'] = true;\r\n    }\r\n\r\n    if (typeof this.state.startDate !== 'undefined') {\r\n      if (!this.state.startDate.match(/^(0[1-9]|1[0-2])\\/(0[1-9]|1\\d|2\\d|3[01])\\/(19|20)\\d{2}$/)) {\r\n        formIsValid = false;\r\n        invalid['startDate'] = true;\r\n      }\r\n    }\r\n\r\n    if (typeof this.state.endDate !== 'undefined') {\r\n      if (!this.state.endDate.match(/^(0[1-9]|1[0-2])\\/(0[1-9]|1\\d|2\\d|3[01])\\/(19|20)\\d{2}$/)) {\r\n        formIsValid = false;\r\n        invalid['endDate'] = true;\r\n      }\r\n    }\r\n\r\n    this.setState({ invalid: invalid });\r\n    return formIsValid;\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (authenticationChanged(this.props, prevProps)) {\r\n      this.getVersionDetails();\r\n    }\r\n  }\r\n\r\n  handleChanges = e => {\r\n    const input = e.target;\r\n    const name = input.name;\r\n    const value = input.value;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleStartDateChange = date => {\r\n    this.setState({\r\n      startDate: moment(date[0].toISOString()).format('MM/DD/YYYY'),\r\n    });\r\n  };\r\n\r\n  handleEndDateChange = date => {\r\n    this.setState({\r\n      endDate: moment(date[0].toISOString()).format('MM/DD/YYYY'),\r\n    });\r\n  };\r\n\r\n  async getVersionDetails() {\r\n    const version = await apiProductVersionGet(this.props.serviceUrl, this.props.version.id);\r\n    this.setState({\r\n      name: version.data.name,\r\n      startDate: moment(version.data.startDate).format('MM/DD/YYYY'),\r\n      endDate: moment(version.data.endDate).format('MM/DD/YYYY'),\r\n      modalId: 'modal-form-version-edit-' + version.data.id,\r\n      buttonId: 'edit-version-button-' + version.data.id,\r\n    });\r\n  }\r\n\r\n  async versionPut(version) {\r\n    return await apiProductVersionPut(this.props.serviceUrl, version);\r\n  }\r\n\r\n  handleFormSubmit = () => {\r\n    const formIsValid = this.handleValidation();\r\n\r\n    if (formIsValid) {\r\n      const version = {\r\n        id: this.props.version.id,\r\n        name: this.state.name,\r\n        startDate: moment(this.state.startDate).format(),\r\n        endDate: moment(this.state.endDate).format(),\r\n      };\r\n      this.versionPut(version)\r\n        .then(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.updated'),\r\n            submitColour: '#24a148',\r\n          });\r\n          this.props.updateProductVersions();\r\n        })\r\n        .catch(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.error'),\r\n            submitColour: '#da1e28',\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (isAuthenticated(this.props)) {\r\n      this.getVersionDetails();\r\n      const modalOpenButton = document.querySelector('.edit-version-button-' + this.props.version.id);\r\n      modalOpenButton.addEventListener('click', this.clearValues, false);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const modalConfirmation = (\r\n      <div className=\"bx--modal-header\">\r\n        <p style={{color: this.state.submitColour}}>{this.state.submitMsg}</p>\r\n      </div>\r\n    );\r\n    const buttonClassName = 'bx--btn bx--btn--ghost edit-version-button-' + this.props.version.id;\r\n    const modalId = this.state.modalId;\r\n    return (\r\n      <ModalWrapper\r\n        buttonTriggerText={i18n.t('buttons.edit')}\r\n        modalHeading={i18n.t('adminDashboard.addProject.editTitle')}\r\n        buttonTriggerClassName={buttonClassName}\r\n        className=\"modal-form\"\r\n        id={this.state.modalId}\r\n        handleSubmit={this.handleFormSubmit}\r\n        primaryButtonText={i18n.t('modalText.save')}\r\n        secondaryButtonText={i18n.t('modalText.cancel')}\r\n      >\r\n        {modalConfirmation}\r\n        <div className=\"form-container\">\r\n          <Form onSubmit={this.handleFormSubmit} id={'form' + modalId}>\r\n            <TextInput\r\n              id={'name' + modalId}\r\n              name=\"name\"\r\n              labelText={i18n.t('adminDashboard.addProject.projectName') + ' *'}\r\n              value={this.state.name}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.required')}\r\n              invalid={this.state.invalid['name']}\r\n            />\r\n            <DatePicker dateFormat=\"m/d/Y\" datePickerType=\"single\" onChange={this.handleStartDateChange}\r\n                        value={this.state.startDate}>\r\n              <DatePickerInput\r\n                id={'startDate' + modalId}\r\n                name=\"startDate\"\r\n                placeholder=\"mm/dd/yyyy\"\r\n                labelText={i18n.t('subscriptionDetails.startDate') + ' *'}\r\n                onChange={this.handleChanges}\r\n                type=\"text\"\r\n                invalidText={i18n.t('validation.invalid.date')}\r\n                invalid={this.state.invalid['startDate']}\r\n              />\r\n            </DatePicker>\r\n            <DatePicker\r\n              dateFormat=\"m/d/Y\"\r\n              datePickerType=\"single\"\r\n              onChange={this.handleEndDateChange}\r\n              id={'endDate' + modalId}\r\n              name=\"endDate\"\r\n              value={this.state.endDate}\r\n            >\r\n              <DatePickerInput\r\n                id={'endDate' + modalId}\r\n                name=\"endDate\"\r\n                placeholder=\"mm/dd/yyyy\"\r\n                labelText={i18n.t('subscriptionDetails.endDate') + ' *'}\r\n                onChange={this.handleChanges}\r\n                type=\"text\"\r\n                invalidText={i18n.t('validation.invalid.date')}\r\n                invalid={this.state.invalid['endDate']}\r\n              />\r\n            </DatePicker>\r\n          </Form>\r\n        </div>\r\n        {modalConfirmation}\r\n      </ModalWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withKeycloak(EditVersionModal);\r\n","import React, { Component } from 'react';\r\nimport i18n from '../../../i18n';\r\nimport {\r\n  DataTable,\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableHeader,\r\n  TableBody,\r\n  TableCell,\r\n  Toggle,\r\n  Button,\r\n} from 'carbon-components-react';\r\nimport { apiProductVersionDelete, apiProductVersionsGet, apiUpdateProductVersionsStatus } from '../../../api/productVersion';\r\nimport withKeycloak from '../../../auth/withKeycloak';\r\nimport AddProductVersionModal from '../AddProductVersionModal';\r\nimport {authenticationChanged, isAuthenticated, isPortalAdminOrSupport} from '../../../api/helpers';\r\nimport EditVersionModal from '../EditVersionModal';\r\n\r\nclass ProductVersion extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      versions: '',\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (isPortalAdminOrSupport()) {\r\n      this.getProductVersions();\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (authenticationChanged(this.props, prevProps)) {\r\n      if (isPortalAdminOrSupport()) {\r\n        this.getProductVersions();\r\n      }\r\n    }\r\n  }\r\n\r\n  async getProductVersions() {\r\n    if (isAuthenticated(this.props)) {\r\n      const productVersions = await apiProductVersionsGet(this.props.serviceUrl);\r\n\r\n      this.setState({\r\n        versions: productVersions.data,\r\n      });\r\n    }\r\n  }\r\n\r\n  async deleteVersion(id) {\r\n    if (isAuthenticated(this.props)) {\r\n      return await apiProductVersionDelete(this.props.serviceUrl, id);\r\n    }\r\n  }\r\n\r\n  handleDeleteVersion = (e, id) => {\r\n    e.preventDefault();\r\n    if (window.confirm('Are you sure you want to delete this Entando version?')) {\r\n      this.deleteVersion(id)\r\n        .then(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.deleted'),\r\n            submitColour: '#24a148',\r\n          });\r\n          this.updateProductVersions();\r\n        })\r\n        .catch(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.error'),\r\n            submitColour: '#da1e28',\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  updateProductVersions = () => {\r\n    this.getProductVersions();\r\n  };\r\n\r\n  async handleToggleChange(id) {\r\n    return await apiUpdateProductVersionsStatus(this.props.serviceUrl, id);\r\n  }\r\n\r\n  render() {\r\n    if (isPortalAdminOrSupport()) {\r\n      return (\r\n        <div>\r\n          <DataTable rows={rowData} headers={headerData}>\r\n            {({rows, headers, getHeaderProps, getTableProps}) => (\r\n              <TableContainer>\r\n                <Table {...getTableProps()}>\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      {headers.map(header => (\r\n                        <TableHeader {...getHeaderProps({header})}>{header.header}</TableHeader>\r\n                      ))}\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {Object.keys(this.state.versions).length !== 0\r\n                      ? this.state.versions.map((productVersion, index) => (\r\n                        <TableRow key={index}>\r\n                          <TableCell>{productVersion.name}</TableCell>\r\n                          <TableCell>\r\n                            <Toggle\r\n                              size=\"sm\"\r\n                              onClick={() => this.handleToggleChange(productVersion.id)}\r\n                              aria-label=\"toggle button\"\r\n                              id={'toggle' + productVersion.id}\r\n                              defaultToggled={productVersion.status}\r\n                            />\r\n                          </TableCell>\r\n                          <TableCell>{productVersion.startDate}</TableCell>\r\n                          <TableCell>{productVersion.endDate}</TableCell>\r\n                          <TableCell>\r\n                            <div style={{display: 'flex'}}>\r\n                              <EditVersionModal\r\n                                key={productVersion.id}\r\n                                version={productVersion}\r\n                                serviceUrl={this.props.serviceUrl}\r\n                                updateProductVersions={this.updateProductVersions}\r\n                              />\r\n                                <Button\r\n                                  kind=\"ghost\"\r\n                                  onClick={e => this.handleDeleteVersion(e, productVersion.id)}\r\n                                  style={{ display: 'flex', width: '100%', color: 'red' }}\r\n                                >\r\n                                  {i18n.t('buttons.delete')}\r\n                                </Button>\r\n                              </div>\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        ))\r\n                      : null}\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            )}\r\n          </DataTable>\r\n          <br />\r\n          <AddProductVersionModal serviceUrl={this.props.serviceUrl} updateProductVersions={this.updateProductVersions} />\r\n        </div>\r\n      );\r\n    } else {\r\n      return <p>{i18n.t('userMessages.unauthorized')}</p>;\r\n    }\r\n  }\r\n}\r\n\r\nconst headerData = [\r\n  {\r\n    header: i18n.t('adminConfig.manageProductVersion.entandoVersion'),\r\n    key: 'entVersion',\r\n  },\r\n  {\r\n    header: i18n.t('adminConfig.manageProductVersion.status'),\r\n    key: 'status',\r\n  },\r\n  {\r\n    header: i18n.t('adminConfig.manageProductVersion.startDate'),\r\n    key: 'startDate',\r\n  },\r\n  {\r\n    header: i18n.t('adminConfig.manageProductVersion.supportEndDate'),\r\n    key: 'endDate',\r\n  },\r\n  {\r\n    header: i18n.t('customerDashboard.action'),\r\n    key: 'action',\r\n  },\r\n];\r\n\r\nconst rowData = [\r\n  {\r\n    id: 'a',\r\n    entVersion: '5.2',\r\n    status: <Toggle size=\"sm\" aria-label=\"toggle button\" defaultToggled id=\"status-1\" />,\r\n    startDate: 'April, 2018',\r\n    endDate: 'April, 2022',\r\n  },\r\n  {\r\n    id: 'b',\r\n    entVersion: '6.3',\r\n    status: <Toggle size=\"sm\" aria-label=\"toggle button\" id=\"status-2\"/>,\r\n    startDate: 'Jile, 2019',\r\n    endDate: 'April, 2023',\r\n  },\r\n  {\r\n    id: 'c',\r\n    entVersion: '6.2',\r\n    status: <Toggle size=\"sm\" aria-label=\"toggle button\" defaultToggled id=\"status-3\"/>,\r\n    startDate: 'September, 2020',\r\n    endDate: 'April, 2024',\r\n  },\r\n];\r\n\r\nexport default withKeycloak(ProductVersion);\r\n","import {Component} from 'react';\r\nimport withKeycloak from \"../../auth/withKeycloak\";\r\nimport {Breadcrumb, BreadcrumbItem} from \"carbon-components-react\";\r\nimport {getActiveSubscription, getPageUrl} from \"../../api/helpers\";\r\nimport {PAGE_CUSTOMER_PORTAL} from \"../../api/constants\";\r\nimport i18n from \"../../i18n\";\r\n\r\nclass Breadcrumbs extends Component {\r\n\r\n  render() {\r\n    const homeUrl = getPageUrl(PAGE_CUSTOMER_PORTAL, this.props.locale);\r\n\r\n    let customer = this.props.customer || {};\r\n    const project = this.props.project;\r\n    if (project) {\r\n      customer = project.customer || {};\r\n    }\r\n    const subscription = this.props.subscription ? this.props.subscription : getActiveSubscription(project);\r\n\r\n    return (\r\n      <Breadcrumb style={{margin: \"1em 0\"}}>\r\n        <BreadcrumbItem href={`${homeUrl}#`}>{i18n.t('customerDashboard.customerPortal')}</BreadcrumbItem>\r\n        {customer && customer.name && (\r\n          <BreadcrumbItem href={`${homeUrl}#/customer-details/${customer.id}`}>\r\n            {customer.name}\r\n          </BreadcrumbItem>\r\n        )}\r\n        {project && project.name && subscription && subscription.id && (\r\n          <BreadcrumbItem href={`${homeUrl}#/subscription-details/${subscription.id}`}>\r\n            {project.name}\r\n          </BreadcrumbItem>\r\n        )}\r\n      </Breadcrumb>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withKeycloak(Breadcrumbs);\r\n","import React from 'react';\r\nimport i18n from '../../../i18n';\r\nimport { Accordion, AccordionItem, Tile } from 'carbon-components-react';\r\nimport TicketingSystem from './TicketingSystem';\r\nimport ProductVersion from './ProductVersion';\r\nimport {authenticationChanged, isAuthenticated, isPortalAdmin} from '../../../api/helpers';\r\nimport withKeycloak from '../../../auth/withKeycloak';\r\nimport Breadcrumbs from \"../../Breadcrumbs/Breadcrumbs\";\r\n\r\nclass AdminConfiguration extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: true,\r\n    };\r\n    this.adminConfig = [\r\n      {\r\n        label: (\r\n          <div>\r\n            <p className=\"title\">{i18n.t('adminConfig.integrationTicketingSystem.title')}</p>\r\n            <p className=\"desc\">{i18n.t('adminConfig.integrationTicketingSystem.desc')}</p>\r\n          </div>\r\n        ),\r\n        content: <TicketingSystem serviceUrl={this.props.serviceUrl} />,\r\n      },\r\n      {\r\n        label: (\r\n          <div>\r\n            <p className=\"title\">{i18n.t('adminConfig.manageProductVersion.title')}</p>\r\n            <p className=\"desc\">{i18n.t('adminConfig.manageProductVersion.desc')}</p>\r\n          </div>\r\n        ),\r\n        content: <ProductVersion serviceUrl={this.props.serviceUrl} />,\r\n      },\r\n    ];\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (isAuthenticated(this.props)) {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (authenticationChanged(this.props, prevProps)) {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (!this.state.loading) {\r\n      // Authorized\r\n      if (isPortalAdmin()) {\r\n        return (\r\n          <div id=\"entando-customer-portal\">\r\n            <Breadcrumbs locale={this.props.locale}/>\r\n            <div className=\"form-container\">\r\n              <Tile>\r\n                <p className=\"title\">{i18n.t('adminConfig.title')}</p>\r\n                <p className=\"desc\">{i18n.t('adminConfig.desc')}</p>\r\n              </Tile>\r\n              <Accordion>\r\n                {this.adminConfig.map((item, index) => (\r\n                  <AccordionItem key={index.toString()} index={index} title={item.label} description={item.description}>\r\n                    <div>{item.content}</div>\r\n                  </AccordionItem>\r\n                ))}\r\n              </Accordion>\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n      // Unauthorized\r\n      else {\r\n        return <p>{i18n.t('userMessages.unauthorized')}</p>;\r\n      }\r\n    }\r\n    // Loading\r\n    else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\nexport default withKeycloak(AdminConfiguration);\r\n","export const publishWidgetEvent = (eventId, payload) => {\r\n  const widgetEvent = new CustomEvent(eventId, {\r\n    detail: {\r\n      payload,\r\n    },\r\n  });\r\n  window.dispatchEvent(widgetEvent);\r\n};\r\n\r\nexport const createWidgetEventPublisher = eventType => payload => publishWidgetEvent(eventType, payload);\r\n\r\nexport const subscribeToWidgetEvent = (eventType, eventHandler) => {\r\n  window.addEventListener(eventType, eventHandler);\r\n\r\n  return () => {\r\n    window.removeEventListener(eventType, eventHandler);\r\n  };\r\n};\r\n\r\nexport const subscribeToWidgetEvents = (widgetEvents, eventHandler) => {\r\n  widgetEvents.forEach(eventType => window.addEventListener(eventType, eventHandler));\r\n\r\n  return () => {\r\n    widgetEvents.forEach(eventType => window.removeEventListener(eventType, eventHandler));\r\n  };\r\n};\r\n\r\nexport const widgetEventToFSA = widgetEvent => {\r\n  // for info about Flux Standard Action (FSA) see https://github.com/redux-utilities/flux-standard-action\r\n  const {\r\n    type,\r\n    detail: { payload, error, meta },\r\n  } = widgetEvent;\r\n  return { type, payload, error, meta };\r\n};\r\n","export const INPUT_EVENT_TYPES = {\r\n  formUpdate: 'customer.form.update',\r\n  formCreate: 'customer.form.create',\r\n  formDelete: 'customer.form.delete',\r\n};\r\n\r\nexport const OUTPUT_EVENT_TYPES = {\r\n  select: 'customer.table.select',\r\n  add: 'customer.table.add',\r\n  error: 'customer.table.error',\r\n  delete: 'customer.table.delete',\r\n};\r\n\r\nexport const KEYCLOAK_EVENT_TYPE = 'keycloak';\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport AdminConfiguration from '../components/Admin/Configuration/AdminConfiguration';\r\nimport '../index.scss';\r\nimport * as Locale from '../i18n';\r\n\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\n\r\nimport { subscribeToWidgetEvent } from '../helpers/widgetEvents';\r\nimport { KEYCLOAK_EVENT_TYPE } from './widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window && window.entando && window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\nconst ATTRIBUTES = {\r\n  hidden: 'hidden',\r\n  locale: 'locale',\r\n  paginationMode: 'pagination-mode',\r\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n  serviceUrl: 'service-url',\r\n};\r\n\r\nclass AdminConfigurationElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    //retargetEvents(shadowRoot);\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n    const locale = this.getAttribute(ATTRIBUTES.locale) || '';\r\n    Locale.setLocale(locale);\r\n\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <AdminConfiguration serviceUrl={serviceUrl} locale={locale}/>\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.get('cp-admin-configuration') || customElements.define('cp-admin-configuration', AdminConfigurationElement);\r\n","import { getDefaultOptions, request, getUrl } from './helpers';\r\n\r\nconst resource = 'api/customers';\r\n\r\nexport const apiCustomerDelete = async (serviceUrl, id) => {\r\n  const url = `${serviceUrl}/${resource}/${id}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiCustomersGet = async serviceUrl => {\r\n  const url = getUrl(`${serviceUrl}/${resource}`);\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiCustomerGet = async (serviceUrl, id) => {\r\n  const url = getUrl(`${serviceUrl}/${resource}/${id}`);\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiCustomerPost = async (serviceUrl, customer) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n    body: customer ? JSON.stringify(customer) : null,\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiCustomerPut = async (serviceUrl, customer) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'PUT',\r\n    body: customer ? JSON.stringify(customer) : null,\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiAddProjectToCustomer = async (serviceUrl, customerId, projectId) => {\r\n  const url = `${serviceUrl}/${resource}/${customerId}/projects/${projectId}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiDeleteProjectFromCustomer = async (serviceUrl, customerId, projectId) => {\r\n  const url = `${serviceUrl}/${resource}/${customerId}/projects/${projectId}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE',\r\n  };\r\n  return request(url, options);\r\n};\r\n","import React, { Component } from 'react';\nimport i18n from '../../i18n';\nimport { ModalWrapper, Form, TextInput, TextArea } from 'carbon-components-react';\nimport withKeycloak from '../../auth/withKeycloak';\nimport {apiCustomerPost} from '../../api/customers';\nimport {isAuthenticated} from \"../../api/helpers\";\n\nclass AddCustomerModal extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      name: '',\n      customerNumber: '',\n      contactName: '',\n      contactPhone: '',\n      contactEmail: '',\n      notes: '',\n      invalid: {},\n      submitMsg: '',\n      submitColour: 'black',\n    };\n\n    this.baseState = this.state;\n  }\n\n  handleValidation() {\n    let invalid = {};\n    let formIsValid = true;\n\n    if (this.state.name === '') {\n      formIsValid = false;\n      invalid['name'] = true;\n    }\n\n    if (this.state.customerNumber === '') {\n      formIsValid = false;\n      invalid['customerNumber'] = true;\n    }\n\n    this.setState({ invalid: invalid });\n    return formIsValid;\n  }\n\n  handleChanges = e => {\n    const input = e.target;\n    const name = input.name;\n    const value = input.value;\n    this.setState({ [name]: value });\n  };\n\n  async customerPost(customer) {\n    if (isAuthenticated(this.props)) {\n      return await apiCustomerPost(this.props.serviceUrl, customer);\n    }\n  }\n\n  handleFormSubmit = () => {\n    const formIsValid = this.handleValidation();\n\n    if (formIsValid) {\n      const customer = {\n        name: this.state.name,\n        customerNumber: this.state.customerNumber,\n        contactName: this.state.contactName,\n        contactPhone: this.state.contactPhone,\n        contactEmail: this.state.contactEmail,\n        notes: this.state.notes,\n      };\n\n      this.customerPost(customer)\n        .then(() => {\n          this.setState({\n            submitMsg: i18n.t('submitMessages.added'),\n            submitColour: '#24a148',\n          });\n          this.props.updateCustomerList();\n        })\n        .catch(() => {\n          this.setState({\n            submitMsg: i18n.t('submitMessages.error'),\n            submitColour: '#da1e28',\n          });\n        });\n    }\n  };\n\n  clearValues = () => {\n    const customerModalElement = document.querySelector('#modal-form-customer');\n    if (!customerModalElement.className.includes('is-visible')) {\n      this.setState(this.baseState);\n    }\n  };\n\n  componentDidMount() {\n    const modalOpenButton = document.querySelector('.add-customer-button');\n    modalOpenButton.addEventListener('click', this.clearValues, false);\n  }\n\n  render() {\n    const modalConfirmation = (\n      <div className=\"bx--modal-header\">\n        <p style={{color: this.state.submitColour}}>{this.state.submitMsg}</p>\n      </div>\n    );\n    const modalId = 'modal-form-customer';\n    return (\n      <ModalWrapper\n        buttonTriggerText={i18n.t('buttons.addCustomer')}\n        modalHeading={i18n.t('adminDashboard.addCustomer.title')}\n        buttonTriggerClassName=\"add-customer bx--btn bx--btn--tertiary add-customer-button\"\n        className=\"modal-form\"\n        id={modalId}\n        handleSubmit={this.handleFormSubmit}\n        primaryButtonText={i18n.t('modalText.save')}\n        secondaryButtonText={i18n.t('modalText.cancel')}\n      >\n        {modalConfirmation}\n        <div className=\"form-container\">\n          <Form onSubmit={this.handleFormSubmit}>\n            <TextInput\n              id={'name' + modalId}\n              name=\"name\"\n              labelText={i18n.t('adminDashboard.addCustomer.customerName') + ' *'}\n              value={this.state.name}\n              onChange={this.handleChanges}\n              invalidText={i18n.t('validation.invalid.required')}\n              invalid={this.state.invalid['name']}\n            />\n            <TextInput\n              id={'customerNumber' + modalId}\n              name=\"customerNumber\"\n              labelText={i18n.t('adminDashboard.addCustomer.customerNumber') + ' *'}\n              value={this.state.customerNumber}\n              onChange={this.handleChanges}\n              invalidText={i18n.t('validation.invalid.required')}\n              invalid={this.state.invalid['customerNumber']}\n            />\n            <TextInput\n              id={'contactName' + modalId}\n              name=\"contactName\"\n              labelText={i18n.t('adminDashboard.addCustomer.contactName')}\n              value={this.state.contactName}\n              onChange={this.handleChanges}\n            />\n            <TextInput\n              id={'contactPhone' + modalId}\n              name=\"contactPhone\"\n              labelText={i18n.t('adminDashboard.addCustomer.contactPhone')}\n              value={this.state.contactPhone}\n              onChange={this.handleChanges}\n            />\n            <TextInput\n              id={'contactEmail' + modalId}\n              name=\"contactEmail\"\n              labelText={i18n.t('adminDashboard.addCustomer.contactEmail')}\n              value={this.state.contactEmail}\n              onChange={this.handleChanges}\n              invalidText={i18n.t('validation.invalid.email')}\n              invalid={this.state.invalid['contactEmail']}\n            />\n            <TextArea\n              id={'notes' + modalId}\n              name=\"notes\"\n              labelText={i18n.t('adminDashboard.addCustomer.notes')}\n              value={this.state.notes}\n              onChange={this.handleChanges}\n            />\n          </Form>\n        </div>\n        {modalConfirmation}\n      </ModalWrapper>\n    );\n  }\n}\n\nexport default withKeycloak(AddCustomerModal);\n","import { getDefaultOptions, request, getUrl } from './helpers';\r\n\r\nconst resource = 'api/partners';\r\n\r\nexport const apiPartnerDelete = async (serviceUrl, id) => {\r\n  const url = `${serviceUrl}/${resource}/${id}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiPartnersGet = async serviceUrl => {\r\n  const url = getUrl(`${serviceUrl}/${resource}`);\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiPartnerPost = async (serviceUrl, partner) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n    body: partner ? JSON.stringify(partner) : null,\r\n  };\r\n  return request(url, options);\r\n};\r\n","import { getDefaultOptions, request, getUrl } from './helpers';\r\n\r\nconst resource = 'api/projects';\r\n\r\nexport const apiProjectsDelete = async (serviceUrl, id) => {\r\n  const url = `${serviceUrl}/${resource}/${id}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiProjectsGet = async serviceUrl => {\r\n  const url = getUrl(`${serviceUrl}/${resource}`);\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiProjectsGetByCustomer = async (serviceUrl, id) => {\r\n  const url = getUrl(`${serviceUrl}/${resource}/customer/${id}`);\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiProjectGet = async (serviceUrl, id) => {\r\n  const url = getUrl(`${serviceUrl}/${resource}/${id}`);\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiProjectPost = async (serviceUrl, project) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n    body: project ? JSON.stringify(project) : null,\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiProjectPut = async (serviceUrl, project) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'PUT',\r\n    body: project ? JSON.stringify(project) : null,\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiAddTicketToProject = async (serviceUrl, projectId, ticketId) => {\r\n  const url = `${serviceUrl}/${resource}/${projectId}/tickets/${ticketId}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiAddSubscriptionToProject = async (serviceUrl, projectId, subscriptionId) => {\r\n  const url = `${serviceUrl}/${resource}/${projectId}/subscriptions/${subscriptionId}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiAddUserToProject = async (serviceUrl, projectId, userId) => {\r\n  const url = `${serviceUrl}/${resource}/${projectId}/users/${userId}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiDeletePartnerFromProject = async (serviceUrl, projectId, partnerId) => {\r\n  const url = `${serviceUrl}/${resource}/${projectId}/partners/${partnerId}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiDeleteSubscriptionFromProject = async (serviceUrl, projectId, subscriptionId) => {\r\n  const url = `${serviceUrl}/${resource}/${projectId}/subscriptions/${subscriptionId}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiDeleteUserFromProject = async (serviceUrl, projectId, userId) => {\r\n  const url = `${serviceUrl}/${resource}/${projectId}/users/${userId}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiAddPartnerToProject = async (serviceUrl, projectId, partnerId) => {\r\n  const url = `${serviceUrl}/${resource}/${projectId}/partners/${partnerId}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiGetProjectUsers = async (serviceUrl, projectId) => {\r\n  const url = `${serviceUrl}/${resource}/${projectId}/users/`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiGetProjectSubscriptions = async (serviceUrl, projectId) => {\r\n  const url = `${serviceUrl}/${resource}/${projectId}/subscriptions/`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n  return request(url, options);\r\n};\r\n","export const AuthenticatedView = ({ children, keycloak }) => {\r\n  const authenticated = keycloak && keycloak.initialized && keycloak.authenticated;\r\n  return authenticated ? children : null;\r\n};\r\n\r\nexport const UnauthenticatedView = ({ children, keycloak }) => {\r\n  const authenticated = keycloak && keycloak.initialized && keycloak.authenticated;\r\n  return !authenticated ? children : null;\r\n};\r\n","import React, {Component} from 'react';\r\nimport i18n from '../../i18n';\r\nimport {ModalWrapper, Form, TextInput, Select, SelectItem, TextArea} from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport {apiPartnerPost} from '../../api/partners';\r\nimport {apiProjectsGet, apiAddPartnerToProject} from '../../api/projects';\r\nimport {authenticationChanged, isAuthenticated} from '../../api/helpers';\r\nimport {AuthenticatedView} from '../../auth/KeycloakViews';\r\n\r\nclass AddPartnerModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      projectList: {},\r\n      projectId: '',\r\n      name: '',\r\n      partnerNumber: '',\r\n      notes: '',\r\n      invalid: {},\r\n      submitMsg: '',\r\n      submitColour: 'black',\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (isAuthenticated(this.props)) {\r\n      this.fetchData();\r\n\r\n      const modalOpenButton = document.querySelector('.add-partner-button');\r\n      modalOpenButton.addEventListener('click', this.clearValues, false);\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (authenticationChanged(this.props, prevProps)) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n\r\n  handleValidation() {\r\n    let invalid = {};\r\n    let formIsValid = true;\r\n\r\n    //project\r\n    if (this.state.projectId === '' || this.state.projectId === 'project-list') {\r\n      formIsValid = false;\r\n      invalid['projectId'] = true;\r\n    }\r\n\r\n    if (this.state.name === '') {\r\n      formIsValid = false;\r\n      invalid['name'] = true;\r\n    }\r\n\r\n    if (this.state.partnerNumber === '') {\r\n      formIsValid = false;\r\n      invalid['partnerNumber'] = true;\r\n    }\r\n\r\n    this.setState({ invalid: invalid });\r\n    return formIsValid;\r\n  }\r\n\r\n  handleChanges = e => {\r\n    const input = e.target;\r\n    const name = input.name;\r\n    const value = input.value;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  async fetchData() {\r\n    if (isAuthenticated(this.props)) {\r\n      let projects = {};\r\n      try {\r\n        projects = (await apiProjectsGet(this.props.serviceUrl)).data;\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n      this.setState({\r\n        projectList: projects ? projects : {},\r\n      });\r\n    }\r\n  }\r\n\r\n  async partnerPost(partner) {\r\n    if (isAuthenticated(this.props)) {\r\n      const result = await apiPartnerPost(this.props.serviceUrl, partner);\r\n      return await apiAddPartnerToProject(this.props.serviceUrl, this.state.projectId, result.data.id);\r\n    }\r\n  }\r\n\r\n  handleFormSubmit = () => {\r\n    const formIsValid = this.handleValidation();\r\n\r\n    if (formIsValid) {\r\n      const partner = {\r\n        name: this.state.name,\r\n        partnerNumber: this.state.partnerNumber,\r\n        notes: this.state.notes,\r\n      };\r\n      this.partnerPost(partner)\r\n        .then(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.added'),\r\n            submitColour: '#24a148',\r\n          });\r\n          this.props.updateCustomerList();\r\n        })\r\n        .catch(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.error'),\r\n            submitColour: '#da1e28',\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  clearValues = () => {\r\n    const partnerModalElement = document.querySelector('#modal-form-partner');\r\n    if (!partnerModalElement.className.includes('is-visible')) {\r\n      this.setState({\r\n        projectId: '',\r\n        name: '',\r\n        partnerNumber: '',\r\n        notes: '',\r\n        invalid: {},\r\n        submitMsg: '',\r\n        submitColour: 'black',\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const modalConfirmation = (\r\n      <div className=\"bx--modal-header\">\r\n        <p style={{color: this.state.submitColour}}>{this.state.submitMsg}</p>\r\n      </div>\r\n    );\r\n    const {keycloak} = this.props;\r\n    const modalId = 'modal-form-partner';\r\n    return (\r\n      <AuthenticatedView keycloak={keycloak}>\r\n        <ModalWrapper\r\n          buttonTriggerText={i18n.t('buttons.addPartner')}\r\n          modalHeading={i18n.t('adminDashboard.addPartner.title')}\r\n          buttonTriggerClassName=\"add-partner bx--btn bx--btn--tertiary add-partner-button\"\r\n          className=\"modal-form\"\r\n          id={modalId}\r\n          handleSubmit={this.handleFormSubmit}\r\n          primaryButtonText={i18n.t('modalText.save')}\r\n          secondaryButtonText={i18n.t('modalText.cancel')}\r\n        >\r\n          {modalConfirmation}\r\n          <div className=\"form-container\">\r\n            <Form onSubmit={this.handleFormSubmit}>\r\n              <Select\r\n                id={'projectId' + modalId}\r\n                name=\"projectId\"\r\n                labelText={i18n.t('adminDashboard.addPartner.projectList') + ' *'}\r\n                value={this.state.projectId}\r\n                onChange={this.handleChanges}\r\n                invalidText={i18n.t('validation.invalid.required')}\r\n                invalid={this.state.invalid['projectId']}\r\n              >\r\n                <SelectItem text={i18n.t('adminDashboard.addPartner.selectProject')} value=\"project-list\"/>\r\n                {Object.keys(this.state.projectList).length !== 0\r\n                  ? this.state.projectList.map((project, i) => (\r\n                    <SelectItem key={i} text={project.name} value={project.id}>\r\n                      {project.name}\r\n                    </SelectItem>\r\n                  ))\r\n                  : null}\r\n              </Select>\r\n\r\n              <TextInput\r\n                id={'name' + modalId}\r\n                name=\"name\"\r\n                labelText={i18n.t('adminDashboard.addPartner.partnerName') + ' *'}\r\n                value={this.state.name}\r\n                onChange={this.handleChanges}\r\n                invalidText={i18n.t('validation.invalid.required')}\r\n                invalid={this.state.invalid['name']}\r\n              />\r\n              <TextInput\r\n                id={'partnerNumber' + modalId}\r\n                name=\"partnerNumber\"\r\n                labelText={i18n.t('adminDashboard.addPartner.partnerNumber') + ' *'}\r\n                value={this.state.partnerNumber}\r\n                onChange={this.handleChanges}\r\n                invalidText={i18n.t('validation.invalid.required')}\r\n                invalid={this.state.invalid['partnerNumber']}\r\n              />\r\n              <TextArea\r\n                name=\"notes\"\r\n                labelText={i18n.t('adminDashboard.addPartner.notes')}\r\n                value={this.state.notes}\r\n                onChange={this.handleChanges}\r\n              />\r\n            </Form>\r\n          </div>\r\n          {modalConfirmation}\r\n        </ModalWrapper>\r\n      </AuthenticatedView>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withKeycloak(AddPartnerModal);\r\n","import React, { Component } from 'react';\nimport i18n from '../../i18n';\nimport { ModalWrapper, Form, TextInput, Select, SelectItem, TextArea } from 'carbon-components-react';\nimport withKeycloak from '../../auth/withKeycloak';\nimport { apiCustomersGet, apiAddProjectToCustomer } from '../../api/customers';\nimport {apiProjectPost, apiProjectsGet} from '../../api/projects';\nimport {authenticationChanged, isAuthenticated} from \"../../api/helpers\";\n\nclass AddProjectModal extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      projects: {},\n      customerList: {},\n      customerId: '',\n      name: '',\n      description: '',\n      systemId: '',\n      contactName: '',\n      contactPhone: '',\n      contactEmail: '',\n      notes: '',\n      invalid: {},\n      submitMsg: '',\n      submitColour: 'black',\n    };\n  }\n\n  handleValidation() {\n    let invalid = {};\n    let formIsValid = true;\n\n    //customer\n    if (this.state.customerId === '' || this.state.customerId === 'customer-list') {\n      formIsValid = false;\n      invalid['customerId'] = true;\n    }\n\n    //name\n    if (this.state.name === '') {\n      formIsValid = false;\n      invalid['name'] = true;\n    }\n\n    //description\n    if (this.state.description === '') {\n      formIsValid = false;\n      invalid['description'] = true;\n    }\n\n    this.setState({ invalid: invalid });\n    return formIsValid;\n  }\n\n  async getAllProjects() {\n    let projects = {}\n    try {\n      projects = await apiProjectsGet(this.props.serviceUrl);\n    } catch (err) {\n      console.log(err);\n    }\n    this.setState({\n      projects: projects.data ? projects.data : {},\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (authenticationChanged(this.props, prevProps)) {\n      this.getCustomers();\n      this.getAllProjects();\n    }\n  }\n\n  handleChanges = e => {\n    const input = e.target;\n    const name = input.name;\n    const value = input.value;\n    this.setState({ [name]: value });\n  };\n\n  async getCustomers() {\n    if (isAuthenticated(this.props)) {\n      let customers = {};\n      try {\n        customers = await apiCustomersGet(this.props.serviceUrl);\n      } catch (err) {\n        console.log(err);\n      }\n      this.setState({customerList: customers});\n    }\n  }\n\n  async projectPost(project) {\n    if (isAuthenticated(this.props)) {\n      const result = await apiProjectPost(this.props.serviceUrl, project);\n      return await apiAddProjectToCustomer(this.props.serviceUrl, this.state.customerId, result.data.id);\n    }\n  }\n\n  handleFormSubmit = () => {\n    const formIsValid = this.handleValidation();\n\n    if (formIsValid) {\n      const project = {\n        name: this.state.name,\n        description: this.state.description,\n        systemId: this.state.systemId,\n        contactName: this.state.contactName,\n        contactPhone: this.state.contactPhone,\n        contactEmail: this.state.contactEmail,\n        notes: this.state.notes,\n      };\n      for (var i = 0; i < this.state.projects.length; i++) {\n        if (project.systemId === this.state.projects[i].systemId && project.systemId.trim() !== '') {\n          window.alert('That system id is already in use in another project');\n          return;\n        }\n      }\n      this.projectPost(project)\n        .then(() => {\n          this.setState({\n            submitMsg: i18n.t('submitMessages.added'),\n            submitColour: '#24a148',\n          });\n          this.props.updateCustomerList();\n          this.getAllProjects();\n        })\n        .catch(() => {\n          this.setState({\n            submitMsg: i18n.t('submitMessages.error'),\n            submitColour: '#da1e28',\n          });\n        });\n    }\n  };\n\n  clearValues = () => {\n    const projectModalElement = document.querySelector('#modal-form-project');\n    if (!projectModalElement.className.includes('is-visible')) {\n      this.setState({\n        customerId: '',\n        name: '',\n        description: '',\n        systemId: '',\n        contactName: '',\n        contactPhone: '',\n        contactEmail: '',\n        notes: '',\n        invalid: {},\n      });\n    }\n  };\n\n  componentDidMount() {\n    this.getCustomers();\n    this.getAllProjects();\n\n    const modalOpenButton = document.querySelector('.add-project-button');\n    modalOpenButton.addEventListener('click', this.clearValues, false);\n  }\n\n  render() {\n    const modalConfirmation = (\n      <div className=\"bx--modal-header\">\n        <p style={{color: this.state.submitColour}}>{this.state.submitMsg}</p>\n      </div>\n    );\n    const modalId = 'modal-form-project';\n    return (\n      <ModalWrapper\n        buttonTriggerText={i18n.t('buttons.addProject')}\n        modalHeading={i18n.t('adminDashboard.addProject.title')}\n        buttonTriggerClassName=\"add-project bx--btn bx--btn--tertiary add-project-button\"\n        className=\"modal-form\"\n        id={modalId}\n        handleSubmit={this.handleFormSubmit}\n        primaryButtonText={i18n.t('modalText.save')}\n        secondaryButtonText={i18n.t('modalText.cancel')}\n      >\n        {modalConfirmation}\n        <div className=\"form-container\">\n          <Form onSubmit={this.handleFormSubmit}>\n            <Select\n              id={'customerId' + modalId}\n              name=\"customerId\"\n              labelText={i18n.t('adminDashboard.addProject.customerList') + ' *'}\n              value={this.state.customerId}\n              onChange={this.handleChanges}\n              invalidText={i18n.t('validation.invalid.required')}\n              invalid={this.state.invalid['customerId']}\n            >\n              <SelectItem text={i18n.t('adminDashboard.addProject.selectCustomer')} value=\"customer-list\" />\n              {Object.keys(this.props.allCustomers).length !== 0\n                ? this.props.allCustomers.map((customerList, i) => (\n                    <SelectItem key={i} text={customerList.name} value={customerList.id}>\n                      {customerList.name}\n                    </SelectItem>\n                  ))\n                : null}\n            </Select>\n\n            <TextInput\n              id={'name' + modalId}\n              name=\"name\"\n              labelText={i18n.t('adminDashboard.addProject.projectName') + ' *'}\n              value={this.state.name}\n              onChange={this.handleChanges}\n              invalidText={i18n.t('validation.invalid.required')}\n              invalid={this.state.invalid['name']}\n            />\n            <TextInput\n              id={'description' + modalId}\n              name=\"description\"\n              labelText={i18n.t('adminDashboard.addProject.projectDesc') + ' *'}\n              value={this.state.description}\n              onChange={this.handleChanges}\n              invalidText={i18n.t('validation.invalid.required')}\n              invalid={this.state.invalid['description']}\n            />\n            <TextInput\n              id={'systemId' + modalId}\n              name=\"systemId\"\n              labelText={i18n.t('adminDashboard.addProject.systemId')}\n              value={this.state.systemId}\n              onChange={this.handleChanges}\n            />\n            <TextInput\n              id={'contactName' + modalId}\n              name=\"contactName\"\n              labelText={i18n.t('adminDashboard.addProject.contactName')}\n              value={this.state.contactName}\n              onChange={this.handleChanges}\n            />\n            <TextInput\n              id={'contactPhone' + modalId}\n              name=\"contactPhone\"\n              labelText={i18n.t('adminDashboard.addProject.contactPhone')}\n              value={this.state.contactPhone}\n              onChange={this.handleChanges}\n            />\n            <TextInput\n              id={'contactEmail' + modalId}\n              name=\"contactEmail\"\n              labelText={i18n.t('adminDashboard.addProject.contactEmail')}\n              value={this.state.contactEmail}\n              onChange={this.handleChanges}\n              invalidText={i18n.t('validation.invalid.email')}\n              invalid={this.state.invalid['contactEmail']}\n            />\n            <TextArea\n              id={'notes' + modalId}\n              name=\"notes\"\n              labelText={i18n.t('adminDashboard.addProject.notes')}\n              value={this.state.notes}\n              onChange={this.handleChanges}\n            />\n          </Form>\n        </div>\n        {modalConfirmation}\n      </ModalWrapper>\n    );\n  }\n}\n\nexport default withKeycloak(AddProjectModal);\n","import React, { Component } from 'react';\nimport i18n from '../../i18n';\nimport { ModalWrapper, Form, TextInput, TextArea } from 'carbon-components-react';\nimport withKeycloak from '../../auth/withKeycloak';\nimport { apiCustomersGet } from '../../api/customers';\nimport {apiProjectGet, apiProjectPut, apiProjectsGet} from '../../api/projects';\nimport {authenticationChanged, isAuthenticated} from \"../../api/helpers\";\n\nclass EditProjectModal extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      projects: {},\n      customerList: {},\n      customerId: '',\n      name: '',\n      description: '',\n      systemId: '',\n      contactName: '',\n      contactPhone: '',\n      contactEmail: '',\n      notes: '',\n      invalid: {},\n      modalId: '',\n      buttonId: '',\n      submitMsg: '',\n      submitColour: 'black',\n    };\n  }\n\n  handleValidation() {\n    let invalid = {};\n    let formIsValid = true;\n\n    //name\n    if (this.state.name === '') {\n      formIsValid = false;\n      invalid['name'] = true;\n    }\n\n    //description\n    if (this.state.description === '') {\n      formIsValid = false;\n      invalid['description'] = true;\n    }\n\n    this.setState({ invalid: invalid });\n    return formIsValid;\n  }\n\n  componentDidUpdate(prevProps) {\n    if (authenticationChanged(this.props, prevProps)) {\n      this.getCustomers();\n      this.getAllProjects();\n      this.getProjectDetails();\n    }\n  }\n\n  handleChanges = e => {\n    const input = e.target;\n    const name = input.name;\n    const value = input.value;\n    this.setState({ [name]: value });\n  };\n\n  async getCustomers() {\n    if (isAuthenticated(this.props)) {\n      const customers = await apiCustomersGet(this.props.serviceUrl);\n      this.setState({customerList: customers});\n    }\n  }\n\n  async getProjectDetails() {\n    if (isAuthenticated(this.props)) {\n      const project = await apiProjectGet(this.props.serviceUrl, this.props.project.id);\n      this.setState({\n        name: project.data.name,\n        description: project.data.description,\n        systemId: project.data.systemId,\n        contactName: project.data.contactName,\n        contactPhone: project.data.contactPhone,\n        contactEmail: project.data.contactEmail,\n        notes: project.data.notes,\n        modalId: 'modal-form-project-edit-' + project.data.id,\n        buttonId: 'edit-project-button-' + project.data.id,\n      });\n    }\n  }\n\n  async getAllProjects() {\n    const projects = await apiProjectsGet(this.props.serviceUrl);\n    this.setState({\n      projects: projects.data,\n    });\n  }\n\n  async projectPut(project) {\n    if (isAuthenticated(this.props)) {\n      return await apiProjectPut(this.props.serviceUrl, project);\n    }\n  }\n\n  handleFormSubmit = () => {\n    const formIsValid = this.handleValidation();\n\n    if (formIsValid) {\n      const project = {\n        id: this.props.project.id,\n        customer: this.props.project.customer,\n        name: this.state.name,\n        description: this.state.description,\n        systemId: this.state.systemId,\n        contactName: this.state.contactName,\n        contactPhone: this.state.contactPhone,\n        contactEmail: this.state.contactEmail,\n        notes: this.state.notes,\n      };\n      for (var i = 0; i < this.props.allProjects.length; i++) {\n        if (\n          project.systemId === this.props.allProjects[i].systemId &&\n          project.id !== this.props.allProjects[i].id &&\n          project.systemId.trim() !== ''\n        ) {\n          window.alert('That system id is already in use in another project');\n          return;\n        }\n      }\n      this.projectPut(project)\n        .then(() => {\n          this.setState({\n            submitMsg: i18n.t('submitMessages.updated'),\n            submitColour: '#24a148',\n          });\n          this.props.updateProjectList();\n        })\n        .catch(() => {\n          this.setState({\n            submitMsg: i18n.t('submitMessages.error'),\n            submitColour: '#da1e28',\n          });\n        });\n    }\n  };\n\n  clearValues = () => {\n    const customerModalElement = document.querySelector('#' + this.state.modalId);\n    if (!customerModalElement.className.includes('is-visible')) {\n      this.setState({\n        name: this.props.project.name,\n        description: this.props.project.description,\n        systemId: this.props.project.systemId,\n        contactName: this.props.project.contactName,\n        contactPhone: this.props.project.contactPhone,\n        contactEmail: this.props.project.contactEmail,\n        notes: this.props.project.notes,\n        invalid: {},\n      });\n    }\n  };\n\n  componentDidMount() {\n    if (isAuthenticated(this.props)) {\n      this.getCustomers();\n      this.getAllProjects();\n      this.getProjectDetails();\n\n      const modalOpenButton = document.querySelector('.edit-project-button-' + this.props.project.id);\n      modalOpenButton.addEventListener('click', this.clearValues, false);\n    }\n  }\n\n  render() {\n    const modalConfirmation = (\n      <div className=\"bx--modal-header\">\n        <p style={{color: this.state.submitColour}}>{this.state.submitMsg}</p>\n      </div>\n    );\n    const buttonClassName = 'dropdown-button-button bx--btn bx--btn--ghost edit-project-button-' + this.props.project.id;\n    const modalId = this.state.modalId;\n    return (\n      <ModalWrapper\n        buttonTriggerText={i18n.t('buttons.edit')}\n        modalHeading={i18n.t('adminDashboard.addProject.editTitle')}\n        buttonTriggerClassName={buttonClassName}\n        className=\"modal-form\"\n        id={this.state.modalId}\n        handleSubmit={this.handleFormSubmit}\n        primaryButtonText={i18n.t('modalText.save')}\n        secondaryButtonText={i18n.t('modalText.cancel')}\n      >\n        {modalConfirmation}\n        <div className=\"form-container\">\n          <Form onSubmit={this.handleFormSubmit}>\n            <TextInput\n              id={'name' + modalId}\n              name=\"name\"\n              labelText={i18n.t('adminDashboard.addProject.projectName') + ' *'}\n              value={this.state.name}\n              onChange={this.handleChanges}\n              invalidText={i18n.t('validation.invalid.required')}\n              invalid={this.state.invalid['name']}\n            />\n            <TextInput\n              id={'description' + modalId}\n              name=\"description\"\n              labelText={i18n.t('adminDashboard.addProject.projectDesc') + ' *'}\n              value={this.state.description}\n              onChange={this.handleChanges}\n              invalidText={i18n.t('validation.invalid.required')}\n              invalid={this.state.invalid['description']}\n            />\n            <TextInput\n              id={'systemId' + modalId}\n              name=\"systemId\"\n              labelText={i18n.t('adminDashboard.addProject.systemId')}\n              value={this.state.systemId}\n              onChange={this.handleChanges}\n            />\n            <TextInput\n              id={'contactName' + modalId}\n              name=\"contactName\"\n              labelText={i18n.t('adminDashboard.addProject.contactName')}\n              value={this.state.contactName}\n              onChange={this.handleChanges}\n            />\n            <TextInput\n              id={'contactPhone' + modalId}\n              name=\"contactPhone\"\n              labelText={i18n.t('adminDashboard.addProject.contactPhone')}\n              value={this.state.contactPhone}\n              onChange={this.handleChanges}\n            />\n            <TextInput\n              id={'contactEmail' + modalId}\n              name=\"contactEmail\"\n              labelText={i18n.t('adminDashboard.addProject.contactEmail')}\n              value={this.state.contactEmail}\n              onChange={this.handleChanges}\n              invalidText={i18n.t('validation.invalid.email')}\n              invalid={this.state.invalid['contactEmail']}\n            />\n            <TextArea\n              name=\"notes\"\n              labelText={i18n.t('adminDashboard.addProject.notes')}\n              value={this.state.notes}\n              onChange={this.handleChanges}\n            />\n          </Form>\n        </div>\n        {modalConfirmation}\n      </ModalWrapper>\n    );\n  }\n}\n\nexport default withKeycloak(EditProjectModal);\n","import React, {Component} from 'react';\r\nimport i18n from '../../i18n';\r\nimport {\r\n  Button,\r\n  DataTable,\r\n  ModalWrapper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableHeader,\r\n  TableRow,\r\n} from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport {isPortalAdminOrSupport} from '../../api/helpers';\r\nimport {apiDeletePartnerFromProject} from '../../api/projects';\r\n\r\nclass ManagePartnersModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      projectId: this.props.project.id,\r\n      project: this.props.project,\r\n    };\r\n\r\n    this.headerData = [\r\n      {\r\n        header: i18n.t('adminDashboard.addPartner.partnerName'),\r\n        key: 'partner',\r\n      },\r\n      {\r\n        header: i18n.t('adminDashboard.addPartner.partnerNumber'),\r\n        key: 'partnerNumber',\r\n      },\r\n      {\r\n        header: i18n.t('adminDashboard.addPartner.notes'),\r\n        key: 'notes',\r\n      },\r\n      {\r\n        header: i18n.t('customerDashboard.action'),\r\n        key: 'action',\r\n      },\r\n    ];\r\n  }\r\n\r\n  async removePartner(projectId, partnerId) {\r\n    if (isPortalAdminOrSupport()) {\r\n      return await apiDeletePartnerFromProject(this.props.serviceUrl, projectId, partnerId);\r\n    }\r\n  }\r\n\r\n  handleRemovePartner = (e, projectId, partnerId) => {\r\n    e.preventDefault();\r\n    if (window.confirm('Are you sure you want to remove this partner from the project?')) {\r\n      this.removePartner(projectId, partnerId)\r\n        .then(result => {\r\n          this.setState({\r\n            project: result.data,\r\n            submitMsg: i18n.t('submitMessages.deleted'),\r\n            submitColour: '#24a148',\r\n          });\r\n          this.props.updateProjectList();\r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.error'),\r\n            submitColour: '#da1e28',\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const modalConfirmation = (\r\n      <div className=\"bx--modal-header\">\r\n        <p style={{color: this.state.submitColour}}>{this.state.submitMsg}</p>\r\n      </div>\r\n    );\r\n    const modalId = 'modal-form-manage-partners';\r\n    return (\r\n      <ModalWrapper\r\n        buttonTriggerText={i18n.t('buttons.managePartners')}\r\n        modalHeading={i18n.t('adminDashboard.managePartners.title')}\r\n        buttonTriggerClassName=\"add-partner bx--btn bx--btn--tertiary add-partner-button\"\r\n        className=\"modal-form\"\r\n        id={modalId}\r\n        hasForm={false}\r\n        primaryButtonText={i18n.t('modalText.done')}\r\n        secondaryButtonText={null}\r\n      >\r\n        {modalConfirmation}\r\n        <div>\r\n          <DataTable rows={rowData} headers={this.headerData}>\r\n            {({rows, headers, getHeaderProps, getTableProps}) => (\r\n              <TableContainer description={i18n.t('customerDashboard.tableDesc')}>\r\n                <Table {...getTableProps()}>\r\n                  <TableHead>\r\n                    <TableRow key=\"headerRow\">\r\n                      {headers.map(header => {\r\n                        return <TableHeader {...getHeaderProps({header})}>{header.header}</TableHeader>;\r\n                      })}\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {this.state.project.partners.map((partner, index) => {\r\n                      return (\r\n                        <TableRow key={'partner' + index}>\r\n                          <TableCell>{partner.name}</TableCell>\r\n                          <TableCell>{partner.partnerNumber}</TableCell>\r\n                          <TableCell>{partner.notes}</TableCell>\r\n                          <TableCell>\r\n                            <div>\r\n                              <Button\r\n                                kind=\"ghost\"\r\n                                onClick={e => this.handleRemovePartner(e, this.state.projectId, partner.id)}\r\n                                style={{display: 'block', width: '100%', color: 'red'}}\r\n                              >\r\n                                {i18n.t('buttons.delete')}\r\n                              </Button>\r\n                              <hr style={{margin: '0', border: 'none', borderTop: '1px solid lightgrey'}}/>\r\n                            </div>\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      );\r\n                    })}\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            )}\r\n          </DataTable>\r\n        </div>\r\n        {modalConfirmation}\r\n      </ModalWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nconst rowData = [\r\n  {\r\n    id: 'a',\r\n    name: 'Partner 1',\r\n    partnerNumber: '123',\r\n  },\r\n  {\r\n    id: 'b',\r\n    name: 'Partner 2',\r\n    partnerNumber: '456',\r\n  },\r\n];\r\n\r\nexport default withKeycloak(ManagePartnersModal);\r\n","import React from 'react';\r\nimport i18n from '../../i18n';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport { Button } from 'carbon-components-react';\r\nimport EditProjectModal from '../Admin/EditProjectModal';\r\nimport ManagePartnersModal from '../Admin/ManagePartnersModal';\r\nimport {isPortalAdmin} from '../../api/helpers';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass ProjectActionItems extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      showMenu: false,\r\n    };\r\n  }\r\n\r\n  handleClick = () => {\r\n    if (!this.state.showMenu) {\r\n      document.addEventListener('mousedown', this.handleOutsideClick, false);\r\n    } else {\r\n      document.removeEventListener('mousedown', this.handleOutsideClick, false);\r\n    }\r\n\r\n    this.setState(prevState => ({\r\n      showMenu: !prevState.showMenu,\r\n    }));\r\n  };\r\n\r\n  handleOutsideClick = e => {\r\n    if (this.node && !this.node.contains(e.target)) {\r\n      this.handleClick();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const isAdmin = isPortalAdmin();\r\n    const actionDivider = <hr style={{margin: '0', border: 'none', borderTop: '1px solid lightgrey'}}/>;\r\n    const topButton = (\r\n      <Button onClick={this.handleClick} style={{padding: '10px 20px'}} kind=\"tertiary\">\r\n        +\r\n      </Button>\r\n    );\r\n    const editProject = (\r\n      <>\r\n        <EditProjectModal\r\n          key={this.props.project.id}\r\n          allProjects={this.props.allProjects}\r\n          project={this.props.project}\r\n          serviceUrl={this.props.serviceUrl}\r\n          updateProjectList={this.props.updateProjectList}\r\n        />\r\n        {actionDivider}\r\n      </>\r\n    );\r\n    const subscriptionParam = this.props.subscription ? '/' + this.props.subscription.id : '';\r\n    const newOrRenewSubscription = (\r\n      <>\r\n        <Link to={`/subscription/${this.props.project.id}${subscriptionParam}`}\r\n              style={{textDecoration: 'none'}}>\r\n          <Button kind=\"ghost\" style={{display: 'block', width: '100%'}} value=\"Subscription Request\">\r\n            {i18n.t('buttons.subscriptionRequest')}\r\n          </Button>\r\n        </Link>\r\n        {actionDivider}\r\n      </>\r\n    );\r\n    const managePartners = (\r\n      <>\r\n        <ManagePartnersModal\r\n          key={this.props.project.id}\r\n          project={this.props.project}\r\n          serviceUrl={this.props.serviceUrl}\r\n          updateProjectList={this.props.updateProjectList}\r\n        />\r\n        {actionDivider}\r\n      </>\r\n    );\r\n    const manageUsers = (\r\n      <>\r\n        <Link to={`/manage-users/${this.props.project.id}`} style={{textDecoration: 'none'}}>\r\n          <Button kind=\"ghost\" style={{display: 'block', width: '100%'}} value=\"Manage Users\">\r\n            {i18n.t('buttons.manageUsers')}\r\n          </Button>\r\n        </Link>\r\n        {actionDivider}\r\n      </>\r\n    );\r\n    const manageSubscriptions = (\r\n      <>\r\n        <Link to={`/manage-subscriptions/${this.props.project.id}`} style={{textDecoration: 'none'}}>\r\n          <Button kind=\"ghost\" style={{display: 'block', width: '100%'}} value=\"Manage Subscriptions\">\r\n            {i18n.t('buttons.manageSubscriptions')}\r\n          </Button>\r\n        </Link>\r\n        {actionDivider}\r\n      </>\r\n    );\r\n    const openTicket = (\r\n      <>\r\n        <Link to={`/ticket/${this.props.project.id}`} style={{textDecoration: 'none'}}>\r\n          <Button kind=\"ghost\" style={{display: 'block', width: '100%'}} value=\"Open Ticket\">\r\n            {i18n.t('buttons.openTicket')}\r\n          </Button>\r\n        </Link>\r\n        {actionDivider}\r\n      </>\r\n    );\r\n    const ticketingSystem = this.props.ticketingSystem;\r\n    const viewAllTickets = ticketingSystem && ticketingSystem.url && (\r\n      <>\r\n        <a\r\n          href={\r\n            ticketingSystem.url.substr(0, ticketingSystem.url.indexOf('/rest')) +\r\n            '/issues/?jql=Organizations=' +\r\n            this.props.project.systemId\r\n          }\r\n          style={{textDecoration: 'none'}}\r\n          target=\"_blank\"\r\n          rel=\"noreferrer\"\r\n        >\r\n          <Button kind=\"ghost\" style={{display: 'block', width: '100%'}} value=\"View All Tickets\">\r\n            {i18n.t('buttons.viewAllTickets')}\r\n          </Button>\r\n        </a>\r\n        {actionDivider}\r\n      </>\r\n    );\r\n    const deleteProject = (\r\n      <>\r\n        <Button\r\n          kind=\"ghost\"\r\n          onClick={e => this.props.handleDeleteProject(e, this.props.project.id)}\r\n          style={{display: 'block', width: '100%', color: 'red'}}\r\n        >\r\n          {i18n.t('buttons.delete')}\r\n        </Button>\r\n        {actionDivider}\r\n      </>\r\n    );\r\n    if (!this.props.subscription) {\r\n      return (\r\n        <>\r\n          {topButton}\r\n          {this.state.showMenu && (\r\n            <div\r\n              className=\"menu\"\r\n              style={{zIndex: '100', position: 'absolute', backgroundColor: 'white'}}\r\n              ref={node => {\r\n                this.node = node;\r\n              }}\r\n            >\r\n              {actionDivider}\r\n              {isAdmin && editProject}\r\n              {newOrRenewSubscription}\r\n              {isAdmin && (\r\n                <>\r\n                  {openTicket}\r\n                  {viewAllTickets}\r\n                  {manageSubscriptions}\r\n                  {manageUsers}\r\n                  {managePartners}\r\n                  {deleteProject}\r\n                </>\r\n              )}\r\n            </div>\r\n          )}\r\n        </>\r\n      );\r\n    } else {\r\n      return (\r\n        <>\r\n          {topButton}\r\n          {this.state.showMenu && (\r\n            <div\r\n              className=\"menu\"\r\n              style={{zIndex: '100', position: 'absolute', backgroundColor: 'white'}}\r\n              ref={node => {\r\n                this.node = node;\r\n              }}\r\n            >\r\n              {actionDivider}\r\n              {/*View Project Subscription*/}\r\n              <Link to={`/subscription-details/${this.props.subscription.id}`} style={{textDecoration: 'none'}}>\r\n                <Button kind=\"ghost\" style={{display: 'block', width: '100%'}} value=\"View\">\r\n                  {i18n.t('buttons.view')}\r\n                </Button>\r\n              </Link>\r\n              {actionDivider}\r\n              {isAdmin && editProject}\r\n              {openTicket}\r\n              {viewAllTickets}\r\n              {!isAdmin && newOrRenewSubscription}\r\n              {isAdmin && (\r\n                <>\r\n                  {manageSubscriptions}\r\n                  {manageUsers}\r\n                  {managePartners}\r\n                  {deleteProject}\r\n                </>\r\n              )}\r\n            </div>\r\n          )}\r\n        </>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default withKeycloak(ProjectActionItems);\r\n","import {getDefaultOptions, request} from './helpers';\r\nimport moment from 'moment';\r\n\r\nconst resource = 'api/project-subscriptions';\r\n\r\nexport const formatStartDate = startDate => {\r\n  return String(new Date(startDate).toDateString());\r\n};\r\n\r\nexport const formatEndDate = (startDate, lengthInMonths) => {\r\n  const endDate = new Date(startDate).setMonth(new Date(startDate).getMonth() + lengthInMonths);\r\n  return String(new Date(endDate).toDateString());\r\n};\r\n\r\nexport const stripTime = date => {\r\n  return moment(date).format('MM/DD/YYYY');\r\n};\r\n\r\nexport const apiSubscriptionGet = async (serviceUrl, id) => {\r\n  const url = `${serviceUrl}/${resource}/${id}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\n// Project Subscription creation consists of an object containing a projectSubscription, an entandoVersionId, and a\r\n// project id, see SubscriptionCreationRequest.\r\n/**\r\n * Called to create a new project subscription\r\n *\r\n * @param {string} serviceUrl\r\n * @param {ProjectSubscriptionCreation} projectSubscriptionCreation\r\n * @returns\r\n */\r\nexport const apiProjectSubscriptionPost = async (serviceUrl, projectSubscriptionCreation) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n    body: projectSubscriptionCreation ? JSON.stringify(projectSubscriptionCreation) : null,\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiProjectSubscriptionPut = async (serviceUrl, projectSubscriptionCreation) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'PUT',\r\n    body: projectSubscriptionCreation ? JSON.stringify(projectSubscriptionCreation) : null,\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\n// Same format as {projectSubscriptionCreation}\r\nexport const apiRenewSubscription = async (serviceUrl, projectSubscriptionRenew) => {\r\n  const url = `${serviceUrl}/${resource}/renew`;\r\n\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'PUT',\r\n    body: projectSubscriptionRenew ? JSON.stringify(projectSubscriptionRenew) : null,\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n","import {Component} from 'react';\nimport {\n  DataTable,\n  TableContainer,\n  Table,\n  TableHead,\n  TableRow,\n  TableHeader,\n  TableBody,\n  TableCell\n} from 'carbon-components-react';\nimport '../../index.scss';\nimport {apiDeleteProjectFromCustomer} from '../../api/customers';\nimport withKeycloak from '../../auth/withKeycloak';\nimport {Link} from 'react-router-dom';\nimport i18n from '../../i18n';\nimport {authenticationChanged, getActiveSubscription, isAuthenticated, isPortalAdminOrSupport} from '../../api/helpers';\nimport {apiCurrentTicketingSystemGet} from '../../api/ticketingsystem';\nimport ProjectActionItems from '../Admin/ProjectActionItems';\nimport {formatEndDate, formatStartDate} from '../../api/subscriptions';\nimport {apiProjectsGetByCustomer} from '../../api/projects';\n\nclass CustomerDataTable extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      projects: {},\n      ticketingSystem: {},\n      action: 'Edit',\n      showMenu: {},\n    };\n    this.headerData = [\n      {\n        header: i18n.t('customerDashboard.projectName'),\n        key: 'projectName',\n      },\n      {\n        header: i18n.t('customerDashboard.partners'),\n        key: 'partners',\n      },\n      {\n        header: i18n.t('customerDashboard.entandoVersion'),\n        key: 'entandoVersion',\n      },\n      {\n        header: i18n.t('customerDashboard.status'),\n        key: 'status',\n      },\n      {\n        header: i18n.t('customerDashboard.startDate'),\n        key: 'startDate',\n      },\n      {\n        header: i18n.t('customerDashboard.endDate'),\n        key: 'endDate',\n      },\n      {\n        header: i18n.t('customerDetails.notes'),\n        key: 'notes',\n      },\n      {\n        header: i18n.t('customerDashboard.action'),\n        key: 'action',\n      },\n    ];\n  }\n\n  async fetchData() {\n    if (isAuthenticated(this.props)) {\n      const {customer, serviceUrl} = this.props;\n      try {\n        let projects = {};\n        let ticketingSystem = {};\n        if (customer && customer.id) {\n          projects = (await apiProjectsGetByCustomer(serviceUrl, customer.id)).data;\n          ticketingSystem = await apiCurrentTicketingSystemGet(serviceUrl);\n        }\n        this.setState({\n          projects: projects,\n          ticketingSystem: ticketingSystem,\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    this.render();\n  }\n\n  componentDidMount() {\n    if (isAuthenticated(this.props)) {\n      this.fetchData();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (authenticationChanged(this.props, prevProps)) {\n      this.fetchData();\n    }\n  }\n\n  // fix warning: Can't perform a React state update on an unmounted component\n  componentWillUnmount() {\n    this.setState = (state, callback) => {\n      //no-op\n    };\n  }\n\n  updateProjectList = () => {\n    this.fetchData();\n  };\n\n  async deleteProject(id) {\n    if (isAuthenticated(this.props)) {\n      return await apiDeleteProjectFromCustomer(this.props.serviceUrl, this.props.customer.id, id);\n    }\n  }\n\n  handleDeleteProject = (e, id) => {\n    e.preventDefault();\n    if (window.confirm('Are you sure you want to delete this project?')) {\n      this.deleteProject(id)\n        .then(() => {\n          this.setState({\n            submitMsg: i18n.t('submitMessages.deleted'),\n            submitColour: '#24a148',\n          });\n          this.props.updateCustomerList();\n        })\n        .catch(() => {\n          this.setState({\n            submitMsg: i18n.t('submitMessages.error'),\n            submitColour: '#da1e28',\n          });\n        });\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <DataTable rows={[{id: '1'}]} headers={this.headerData}>\n          {({rows, headers, getHeaderProps, getTableProps}) => (\n            <TableContainer description={i18n.t('customerDashboard.tableDesc')}>\n              <Table {...getTableProps()}>\n                <TableHead>\n                  <TableRow key=\"headerRow\">\n                    {headers.map(header => {\n                      let result;\n                      if (header.header === i18n.t('customerDetails.notes')) {\n                        if (isPortalAdminOrSupport()) {\n                          result = <TableHeader {...getHeaderProps({header})}>{header.header}</TableHeader>;\n                        }\n                      } else {\n                        result = <TableHeader {...getHeaderProps({ header })}>{header.header}</TableHeader>;\n                      }\n                      return result;\n                    })}\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {this.state.projects && Object.keys(this.state.projects).length !== 0\n                    ? this.state.projects.map((project, index) => {\n                      const subscription = getActiveSubscription(project);\n                      if (!subscription) {\n                        return (\n                          <TableRow key={index}>\n                            <TableCell>{project.name}</TableCell>\n                            {project.partners.length !== 0 ? (\n                              <TableCell>\n                                {project.partners.map((partner, partnerIndex) => (\n                                  <div key={partnerIndex}>{partner.name}</div>\n                                ))}\n                              </TableCell>\n                            ) : (\n                              <TableCell>{i18n.t('userMessages.none')}</TableCell>\n                            )}\n                            <TableCell>{i18n.t('userMessages.none')}</TableCell>\n                            <TableCell>{i18n.t('userMessages.none')}</TableCell>\n                            <TableCell>{i18n.t('userMessages.none')}</TableCell>\n                            <TableCell>{i18n.t('userMessages.none')}</TableCell>\n                            {isPortalAdminOrSupport() ?\n                              <TableCell style={{width: '250px'}}>{project.notes}</TableCell> : null}\n                            <TableCell>\n                              <ProjectActionItems\n                                serviceUrl={this.props.serviceUrl}\n                                ticketingSystem={this.state.ticketingSystem}\n                                locale={this.props.locale}\n                                project={project}\n                                allProjects={this.state.projects}\n                                handleDeleteProject={this.handleDeleteProject}\n                                updateProjectList={this.updateProjectList}\n                                />\n                              </TableCell>\n                            </TableRow>\n                          );\n                        } else {\n                          return (\n                            <TableRow key={index}>\n                              <TableCell>\n                                <Link to={`/subscription-details/${subscription.id}`}>{project.name}</Link>\n                              </TableCell>\n                              {project.partners.length !== 0 ? (\n                                <TableCell>\n                                  {project.partners.map((partner, partnerIndex) => (\n                                    <div key={partnerIndex}>{partner.name}</div>\n                                  ))}\n                                </TableCell>\n                              ) : (\n                                <TableCell>{i18n.t('userMessages.none')}</TableCell>\n                              )}\n                              {subscription.entandoVersion ? (\n                                <TableCell>{subscription.entandoVersion.name}</TableCell>\n                              ) : (\n                                <TableCell>{i18n.t('userMessages.none')}</TableCell>\n                              )}\n                              <TableCell>{subscription.status}</TableCell>\n                              <TableCell>{formatStartDate(subscription.startDate)}</TableCell>\n                              <TableCell>{formatEndDate(subscription.startDate, subscription.lengthInMonths)}</TableCell>\n                              {isPortalAdminOrSupport() ?\n                                <TableCell style={{width: '250px'}}>{project.notes}</TableCell> : null}\n                              <TableCell>\n                                <ProjectActionItems\n                                  serviceUrl={this.props.serviceUrl}\n                                  ticketingSystem={this.state.ticketingSystem}\n                                  locale={this.props.locale}\n                                  subscription={subscription}\n                                  project={project}\n                                  allProjects={this.state.projects}\n                                  handleDeleteProject={this.handleDeleteProject}\n                                  updateProjectList={this.updateProjectList}\n                                />\n                              </TableCell>\n                            </TableRow>\n                          );\n                        }\n                      })\n                    : null}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          )}\n        </DataTable>\n      </div>\n    );\n  }\n}\n\nexport default withKeycloak(CustomerDataTable);\n","import {Component} from 'react';\r\nimport i18n from '../../i18n';\r\nimport { Tile } from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\n\r\nclass CustomerDetails extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      customer: {},\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"customer-details\">\r\n        <Tile style={{margin: '2em 0', minHeight: '0', paddingBottom: '0'}}>\r\n          <div>\r\n            <strong>{i18n.t('customerDashboard.customerId')}</strong> {this.props.customer.id}\r\n          </div>\r\n          <div>\r\n            <strong>{i18n.t('customerDashboard.customerName')}</strong> {this.props.customer.name}\r\n          </div>\r\n        </Tile>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withKeycloak(CustomerDetails);\r\n","import React, {Component} from 'react';\nimport i18n from '../../i18n';\nimport {ModalWrapper, Form, TextInput, TextArea} from 'carbon-components-react';\nimport withKeycloak from '../../auth/withKeycloak';\nimport {apiCustomerGet, apiCustomerPut} from '../../api/customers';\nimport {authenticationChanged, isAuthenticated} from '../../api/helpers';\n\nclass EditCustomerModal extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      name: '',\n      customerNumber: '',\n      contactName: '',\n      contactPhone: '',\n      contactEmail: '',\n      notes: '',\n      invalid: {},\n      modalId: '',\n      buttonId: '',\n      submitMsg: '',\n      submitColour: 'black',\n    };\n  }\n\n  handleValidation() {\n    let invalid = {};\n    let formIsValid = true;\n\n    //name\n    if (this.state.name === '') {\n      formIsValid = false;\n      invalid['name'] = true;\n    }\n\n    //customerNumber\n    if (this.state.customerNumber === '') {\n      formIsValid = false;\n      invalid['customerNumber'] = true;\n    }\n\n    this.setState({ invalid: invalid });\n    return formIsValid;\n  }\n\n  handleChanges = e => {\n    const input = e.target;\n    const name = input.name;\n    const value = input.value;\n    this.setState({ [name]: value });\n  };\n\n  async updateCustomer(customer) {\n    if (isAuthenticated(this.props)) {\n      return await apiCustomerPut(this.props.serviceUrl, customer);\n    }\n  }\n\n  getCustomerDetails = customerId => {\n    this.getCustomer(customerId);\n  };\n\n  async getCustomer(customerId) {\n    if (isAuthenticated(this.props)) {\n      const customer = (await apiCustomerGet(this.props.serviceUrl, customerId)).data;\n      this.setState({\n        name: customer.name,\n        customerNumber: customer.customerNumber,\n        contactName: customer.contactName,\n        contactPhone: customer.contactPhone,\n        contactEmail: customer.contactEmail,\n        notes: customer.notes,\n        modalId: 'modal-form-customer-edit-' + customer.id,\n        buttonId: 'edit-customer-button-' + customer.id,\n      });\n    }\n  }\n\n  handleFormSubmit = () => {\n    const formIsValid = this.handleValidation();\n\n    if (formIsValid) {\n      const customer = {\n        id: this.props.customer.id,\n        name: this.state.name,\n        customerNumber: this.state.customerNumber,\n        contactName: this.state.contactName,\n        contactPhone: this.state.contactPhone,\n        contactEmail: this.state.contactEmail,\n        notes: this.state.notes,\n      };\n      this.updateCustomer(customer)\n        .then(() => {\n          this.setState({\n            submitMsg: i18n.t('submitMessages.updated'),\n            submitColour: '#24a148',\n          });\n          this.props.updateCustomerList();\n          this.getCustomerDetails(this.props.customer.id);\n        })\n        .catch(() => {\n          this.setState({\n            submitMsg: i18n.t('submitMessages.error'),\n            submitColour: '#da1e28',\n          });\n        });\n    }\n  };\n\n  clearValues = () => {\n    const customerModalElement = document.querySelector('#' + this.state.modalId);\n    if (!customerModalElement.className.includes('is-visible')) {\n      this.setState({\n        name: this.props.customer.name,\n        customerNumber: this.props.customer.customerNumber,\n        contactName: this.props.customer.contactName,\n        contactPhone: this.props.customer.contactPhone,\n        contactEmail: this.props.customer.contactEmail,\n        notes: this.props.customer.notes,\n        invalid: {},\n      });\n    }\n  };\n\n  componentDidMount() {\n    if (isAuthenticated(this.props)) {\n      if (this.props.customerId) {\n        this.getCustomerDetails(this.props.customerId);\n      }\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (authenticationChanged(this.props, prevProps)) {\n      this.getCustomerDetails(this.props.customerId);\n    }\n  }\n\n  render() {\n    const modalConfirmation = (\n      <div className=\"bx--modal-header\">\n        <p style={{color: this.state.submitColour}}>{this.state.submitMsg}</p>\n      </div>\n    );\n    const modalId = this.state.modalId;\n    const buttonClassName = 'bx--btn bx--btn--ghost edit-customer-button-' + this.props.customerId;\n    return (\n      modalId && (\n        <ModalWrapper\n          buttonTriggerText={i18n.t('buttons.edit')}\n          modalHeading={i18n.t('adminDashboard.editCustomer.title')}\n          buttonTriggerClassName={buttonClassName}\n          className=\"modal-form\"\n          id={modalId}\n          handleSubmit={this.handleFormSubmit}\n          primaryButtonText={i18n.t('modalText.save')}\n          secondaryButtonText={i18n.t('modalText.cancel')}\n        >\n          {modalConfirmation}\n          <div className=\"form-container\">\n            <Form onSubmit={this.handleFormSubmit} id={'form-' + modalId}>\n              <TextInput\n                id={'name' + modalId}\n                name=\"name\"\n                labelText={i18n.t('adminDashboard.addCustomer.customerName') + ' *'}\n                value={this.state.name}\n                onChange={this.handleChanges}\n                invalidText={i18n.t('validation.invalid.required')}\n                invalid={this.state.invalid['name']}\n              />\n              <TextInput\n                id={'customerNumber' + modalId}\n                name=\"customerNumber\"\n                labelText={i18n.t('adminDashboard.addCustomer.customerNumber') + ' *'}\n                value={this.state.customerNumber}\n                onChange={this.handleChanges}\n                invalidText={i18n.t('validation.invalid.required')}\n                invalid={this.state.invalid['customerNumber']}\n              />\n              <TextInput\n                id={'contactName' + modalId}\n                name=\"contactName\"\n                labelText={i18n.t('adminDashboard.addCustomer.contactName')}\n                value={this.state.contactName}\n                onChange={this.handleChanges}\n              />\n              <TextInput\n                id={'contactPhone' + modalId}\n                name=\"contactPhone\"\n                labelText={i18n.t('adminDashboard.addCustomer.contactPhone')}\n                value={this.state.contactPhone}\n                onChange={this.handleChanges}\n              />\n              <TextInput\n                id={'contactEmail' + modalId}\n                name=\"contactEmail\"\n                labelText={i18n.t('adminDashboard.addCustomer.contactEmail')}\n                value={this.state.contactEmail}\n                onChange={this.handleChanges}\n                invalidText={i18n.t('validation.invalid.email')}\n                invalid={this.state.invalid['contactEmail']}\n              />\n              <TextArea\n                name=\"notes\"\n                labelText={i18n.t('adminDashboard.addCustomer.notes')}\n                value={this.state.notes}\n                onChange={this.handleChanges}\n              />\n            </Form>\n          </div>\n          {modalConfirmation}\n        </ModalWrapper>\n      )\n    );\n  }\n}\n\nexport default withKeycloak(EditCustomerModal);\n","import {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {AccordionItem, Button} from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport {apiCustomerGet, apiCustomerDelete} from '../../api/customers';\r\nimport CustomerDataTable from './CustomerDataTable';\r\nimport CustomerDetails from './CustomerDetails';\r\nimport {\r\n  isPortalAdminOrSupport,\r\n  isPortalAdmin,\r\n  isPortalCustomer,\r\n  isAuthenticated,\r\n  authenticationChanged\r\n} from '../../api/helpers';\r\nimport EditCustomerModal from '../Admin/EditCustomerModal';\r\nimport i18n from '../../i18n';\r\n\r\nclass CustomerAccordian extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      projects: {},\r\n      customer: {},\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (isAuthenticated(this.props)) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (authenticationChanged(this.props, prevProps)) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n\r\n  async fetchData() {\r\n    const customerId = this.props.customerId;\r\n    try {\r\n      const customer = await apiCustomerGet(this.props.serviceUrl, customerId);\r\n      this.setState({\r\n        customer: customer.data,\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  async deleteCustomer() {\r\n    return await apiCustomerDelete(this.props.serviceUrl, this.state.customer.id);\r\n  }\r\n\r\n  handleDelete() {\r\n    if (window.confirm('Are you sure you want to delete this customer?')) {\r\n      this.deleteCustomer().then(() => {\r\n        this.props.updateCustomerList();\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div>\r\n          {isPortalCustomer() && <CustomerDetails serviceUrl={this.props.serviceUrl} customer={this.state.customer}/>}\r\n          <AccordionItem title={this.props.title} open={this.props.accordionOpened}>\r\n            <div style={{display: 'flex'}}>\r\n              {isPortalAdminOrSupport() && (\r\n                <Link style={{textDecoration: 'none'}} to={`/customer-details/${this.state.customer.id}`}>\r\n                  <Button kind=\"ghost\">{i18n.t('buttons.viewDetails')}</Button>\r\n                </Link>\r\n              )}\r\n              {isPortalAdmin() && (\r\n                <div style={{display: 'flex'}}>\r\n                  <EditCustomerModal\r\n                    serviceUrl={this.props.serviceUrl}\r\n                    customer={this.state.customer}\r\n                    key={this.state.customer.id}\r\n                    updateCustomerList={this.props.updateCustomerList}\r\n                    customerId={this.state.customer.id}\r\n                  />\r\n                  <Button kind=\"ghost\" style={{color: 'red'}} onClick={() => this.handleDelete()}>\r\n                    {i18n.t('buttons.delete')}\r\n                  </Button>\r\n                </div>\r\n              )}\r\n            </div>\r\n            <CustomerDataTable\r\n              key={new Date().getTime()}\r\n              serviceUrl={this.props.serviceUrl}\r\n              customer={this.state.customer}\r\n              locale={this.props.locale}\r\n              updateCustomerList={this.props.updateCustomerList}\r\n            />\r\n          </AccordionItem>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withKeycloak(CustomerAccordian);\r\n","import React from 'react';\nimport i18n from '../../i18n';\nimport {Accordion, InlineLoading, PaginationNav, Search, Tile} from 'carbon-components-react';\nimport AddCustomerModal from './AddCustomerModal';\nimport AddPartnerModal from './AddPartnerModal';\nimport AddProjectModal from './AddProjectModal';\nimport withKeycloak from '../../auth/withKeycloak';\nimport {apiCustomersGet} from '../../api/customers';\nimport CustomerAccordian from '../Customer/CustomerAccordian';\nimport {\n  authenticationChanged,\n  isPortalAdmin,\n  isPortalSupport,\n  isPortalPartner,\n  isPortalUser,\n  isAuthenticated,\n} from '../../api/helpers';\n\nclass AdminDashboard extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      customers: {},\n      role: '',\n      filteredCustomers: {},\n      currentPage: 0,\n      test: '',\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (authenticationChanged(this.props, prevProps)) {\n      this.fetchData();\n    }\n  }\n\n  async fetchData() {\n    if (isAuthenticated(this.props)) {\n      let customers = {};\n      try {\n        customers = await apiCustomersGet(this.props.serviceUrl);\n      } catch (err) {\n        console.log(err);\n      }\n\n      this.setState({\n        customers: customers.data ? customers.data : {},\n        filteredCustomers: customers.data ? customers.data : {},\n        loading: false\n      });\n    }\n  }\n\n  handleSearch = event => {\n    if (event.key === 'Enter') {\n      //Note: should refactor this to perform filtering in db\n      const newFilteredState = this.state.customers.filter(customer =>\n        customer.name.toLowerCase().includes(event.target.value.toLowerCase())\n      );\n      this.setState({\n        filteredCustomers: newFilteredState,\n        currentPage: 0,\n      });\n    } else {\n      if (event.target.value === '' || event.target.value === undefined) {\n        this.setState({\n          filteredCustomers: this.state.customers,\n        });\n      }\n    }\n  };\n\n  updateCustomerList = () => {\n    this.fetchData();\n  };\n\n  render() {\n    var numberOfPages = 1;\n    if (Object.keys(this.state.filteredCustomers).length !== 0) {\n      numberOfPages = Math.ceil(this.state.filteredCustomers.length / 5);\n    } else {\n      numberOfPages = 1;\n    }\n\n    const props = () => ({\n      loop: Boolean(false),\n      page: Number(this.state.currentPage),\n      totalItems: Number(numberOfPages),\n      itemsShown: Number(1),\n      onChange: event => this.setState({ currentPage: event }),\n    });\n\n    return (\n      <div className=\"admin-dashboard\">\n        {isPortalAdmin() || isPortalSupport() || isPortalPartner() ? (\n          <Tile>\n            <p className=\"title\">{i18n.t('adminDashboard.allCustomers')}</p>\n            <div className=\"bx--row\">\n              <div className=\"bx--col\">\n                <Search\n                  onChange={this.handleSearch}\n                  id=\"search\"\n                  placeholder={i18n.t('adminDashboard.searchText')}\n                  labelText={i18n.t('adminDashboard.searchLabel')}\n                  onKeyPress={this.handleSearch}\n                />\n              </div>\n              {isPortalAdmin() ? (\n                <div className=\"bx--col\">\n                  <div>\n                    <AddPartnerModal serviceUrl={this.props.serviceUrl} updateCustomerList={this.updateCustomerList}/>\n                    <AddCustomerModal serviceUrl={this.props.serviceUrl} updateCustomerList={this.updateCustomerList}/>\n                    <AddProjectModal serviceUrl={this.props.serviceUrl} updateCustomerList={this.updateCustomerList}\n                                     allCustomers={this.state.customers}\n                    />\n                  </div>\n                </div>\n              ) : null}\n            </div>\n          </Tile>\n        ) : null}\n\n        {this.state.loading && <InlineLoading/>}\n        {!this.state.loading && (\n          <div className=\"form-container\">\n            <Accordion>\n              {Object.keys(this.state.customers).length !== 0\n                ? this.state.filteredCustomers.map((customer, index) => {\n                  //Pagination for Admin and Support roles (5 items per page)\n                  //Note: eventually this should be pushed down into paginated microservice calls\n                  var indexOfLastItem = (this.state.currentPage + 1) * 5 - 1;\n                  var firstIndexOfCurrentPage = this.state.currentPage * 5;\n                  var accordionOpened = this.state.customers.length === 1;\n\n                  if (isPortalUser()) {\n                    if (index >= firstIndexOfCurrentPage && index <= indexOfLastItem) {\n                      return (\n                        <CustomerAccordian\n                          key={customer.id}\n                          serviceUrl={this.props.serviceUrl}\n                          customerId={customer.id}\n                          title={customer.name}\n                          updateCustomerList={this.updateCustomerList}\n                          locale={this.props.locale}\n                          accordionOpened={accordionOpened}\n                        />\n                      );\n                    } else {\n                      return null;\n                    }\n                  } else {\n                    return null;\n                  }\n                })\n                : null}\n            </Accordion>\n            <PaginationNav {...props()} className=\"pagination-right\"/>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default withKeycloak(AdminDashboard);\n","import { getDefaultOptions, request, getUrl } from './helpers';\r\n\r\nconst resource = 'api/tickets';\r\n\r\nexport const apiTicketDelete = async (serviceUrl, id) => {\r\n  const url = `${serviceUrl}/${resource}/${id}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiTicketsGet = async serviceUrl => {\r\n  const url = getUrl(`${serviceUrl}/${resource}`);\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiTicketPost = async (serviceUrl, ticket) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n    body: ticket ? JSON.stringify(ticket) : null,\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nconst jiraResource = 'api/tickets/ticketingsystem';\r\n\r\nexport const apiJiraTicketsGet = async (serviceUrl, projectId) => {\r\n  const url = `${serviceUrl}/${jiraResource}/${projectId}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiJiraTicketPost = async (serviceUrl, projectId, ticket) => {\r\n  const url = `${serviceUrl}/${jiraResource}/${projectId}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n    body: ticket ? JSON.stringify(ticket) : null,\r\n  };\r\n  return request(url, options);\r\n};\r\n","import React, { Component } from 'react';\r\nimport {\r\n  DataTable,\r\n  InlineLoading,\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableHeader,\r\n  TableBody,\r\n  TableCell,\r\n  PaginationNav,\r\n  Button,\r\n} from 'carbon-components-react';\r\nimport {apiJiraTicketsGet} from '../../api/tickets';\r\nimport {apiCurrentTicketingSystemGet} from '../../api/ticketingsystem';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport {apiProjectGet} from '../../api/projects';\r\nimport {authenticationChanged, isAuthenticated, isPortalUser} from '../../api/helpers';\r\nimport i18n from '../../i18n';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass TicketList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      tickets: {},\r\n      project: {},\r\n      ticketingSystem: {},\r\n      currentPage: 0,\r\n      loading: true\r\n    };\r\n    this.headerData = [\r\n      {\r\n        header: i18n.t('ticketDetails.issue'),\r\n        key: 'issue',\r\n      },\r\n      {\r\n        header: i18n.t('ticketDetails.summary'),\r\n        key: 'summary',\r\n      },\r\n      {\r\n        header: i18n.t('ticketDetails.status'),\r\n        key: 'status',\r\n      },\r\n      {\r\n        header: i18n.t('ticketDetails.type'),\r\n        key: 'type',\r\n      },\r\n      {\r\n        header: i18n.t('ticketDetails.priority'),\r\n        key: 'priority',\r\n      },\r\n      {\r\n        header: i18n.t('ticketDetails.created'),\r\n        key: 'created',\r\n      },\r\n      {\r\n        header: i18n.t('ticketDetails.updated'),\r\n        key: 'updated',\r\n      },\r\n      {\r\n        header: i18n.t('ticketDetails.link'),\r\n        key: 'link',\r\n      },\r\n    ];\r\n  }\r\n\r\n  async fetchData() {\r\n    if (isPortalUser()) {\r\n      try {\r\n        const project = (await apiProjectGet(this.props.serviceUrl, this.props.projectId)).data;\r\n        const ticketingSystem = await apiCurrentTicketingSystemGet(this.props.serviceUrl);\r\n        const tickets = await apiJiraTicketsGet(this.props.serviceUrl, project.id);\r\n        this.setState({\r\n          tickets: tickets,\r\n          project: project,\r\n          ticketingSystem: ticketingSystem,\r\n          loading: false\r\n        });\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (isAuthenticated(this.props)) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (authenticationChanged(this.props, prevProps)) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var numberOfPages = 1;\r\n    if (Object.keys(this.state.tickets).length !== 0) {\r\n      numberOfPages = Math.ceil(this.state.tickets.data.length / 10);\r\n    }\r\n\r\n    const paginationProps = () => ({\r\n      loop: Boolean(false),\r\n      page: Number(this.state.currentPage),\r\n      totalItems: Number(numberOfPages),\r\n      itemsShown: Number(1),\r\n      onChange: event => this.setState({currentPage: event}),\r\n    });\r\n    const ticketSystemUrl = this.state.ticketingSystem.url;\r\n    const ticketingSystemBaseUrl = ticketSystemUrl != null ? ticketSystemUrl.substr(0, ticketSystemUrl.indexOf('/rest')) : null;\r\n\r\n    return (\r\n      <div>\r\n        {this.state.project.id && (\r\n          <div>\r\n            {/*View All Ticket*/}\r\n            <a\r\n              href={ticketingSystemBaseUrl + '/issues/?jql=Organizations=' + this.state.project.systemId}\r\n              style={{textDecoration: 'none'}}\r\n              target=\"_blank\"\r\n              rel=\"noreferrer\"\r\n            >\r\n              <Button kind=\"ghost\" style={{display: 'block', width: '100%'}} value=\"Open Ticket\">\r\n                {i18n.t('buttons.viewAllTickets')}\r\n              </Button>\r\n            </a>\r\n            {/*Open Ticket*/}\r\n            <Link to={`/ticket/${this.state.project.id}`} style={{textDecoration: 'none'}}>\r\n              <Button kind=\"ghost\" style={{display: 'block', width: '100%'}} value=\"Open Ticket\">\r\n                {i18n.t('buttons.openTicket')}\r\n              </Button>\r\n            </Link>\r\n          </div>\r\n        )}\r\n        {this.state.loading && <InlineLoading/>}\r\n        {!this.state.loading && (\r\n          <>\r\n            <DataTable rows={[{id: '1'}]} headers={this.headerData}>\r\n              {({rows, headers, getHeaderProps, getTableProps}) => (\r\n                <TableContainer title={i18n.t('ticketDetails.listOfTickets')}>\r\n                  <Table {...getTableProps()}>\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        {headers.map(header => (\r\n                          <TableHeader {...getHeaderProps({header})}>{header.header}</TableHeader>\r\n                        ))}\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {Object.keys(this.state.tickets).length !== 0 ? (\r\n                        this.state.tickets.data.map((ticket, index) => {\r\n                          const indexOfLastItem = (this.state.currentPage + 1) * 10 - 1;\r\n                          const firstIndexOfCurrentPage = this.state.currentPage * 10;\r\n                          const ticketUrl = ticketingSystemBaseUrl + '/browse/' + ticket.systemId;\r\n\r\n                          if (index >= firstIndexOfCurrentPage && index <= indexOfLastItem) {\r\n                            return (\r\n                              <TableRow key={ticket.id}>\r\n                                <TableCell>\r\n                                  <a href={ticketUrl} target=\"_blank\" rel=\"noreferrer\">\r\n                                    {ticket.systemId}\r\n                                  </a>\r\n                                </TableCell>\r\n                                <TableCell>{ticket.summary}</TableCell>\r\n                                <TableCell>{ticket.status}</TableCell>\r\n                                <TableCell>{ticket.type}</TableCell>\r\n                                <TableCell>{ticket.priority}</TableCell>\r\n                                <TableCell>{new Date(ticket.createDate).toDateString()}</TableCell>\r\n                                <TableCell>{new Date(ticket.updateDate).toDateString()}</TableCell>\r\n                                <TableCell>\r\n                                  <a href={ticketUrl} target=\"_blank\" rel=\"noreferrer\">\r\n                                    {i18n.t('ticketDetails.viewTicket')}\r\n                                  </a>\r\n                                </TableCell>\r\n                              </TableRow>\r\n                            );\r\n                          } else {\r\n                            return null;\r\n                          }\r\n                        })\r\n                      ) : (\r\n                        <TableRow/>\r\n                      )}\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n              )}\r\n            </DataTable>\r\n            <PaginationNav {...paginationProps()} className=\"pagination-right\"/>\r\n          </>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withKeycloak(TicketList);\r\n","import React from 'react';\r\nimport TicketList from './TicketList';\r\nimport {Tile} from 'carbon-components-react';\r\nimport {apiSubscriptionGet, formatStartDate, formatEndDate} from '../../api/subscriptions';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport {apiGetProjectUsers, apiProjectGet} from '../../api/projects';\r\nimport {isPortalAdminOrSupport, isPortalUser, authenticationChanged} from '../../api/helpers';\r\nimport i18n from '../../i18n';\r\nimport Breadcrumbs from \"../Breadcrumbs/Breadcrumbs\";\r\n\r\nconst subscriptionData = {\r\n  type: 'Product Support Subscription Entando Platform',\r\n  license: 'Free Commercial Open Source',\r\n};\r\n\r\nclass Subscription extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: true,\r\n      subscription: {},\r\n      users: {},\r\n      project: {},\r\n      customer: {},\r\n    };\r\n  }\r\n\r\n  async fetchData() {\r\n    if (isPortalUser()) {\r\n      try {\r\n        let users = {};\r\n        let project = {};\r\n        const subscription = await apiSubscriptionGet(this.props.serviceUrl, this.props.match.params.id);\r\n        if (subscription.data.project) {\r\n          project = await apiProjectGet(this.props.serviceUrl, subscription.data.project.id);\r\n          users = await apiGetProjectUsers(this.props.serviceUrl, project.data.id);\r\n        }\r\n        this.setState({\r\n          subscription: subscription,\r\n          project: project,\r\n          customer: project.customer,\r\n          users: users,\r\n          loading: false,\r\n        });\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n  }\r\n\r\n  updateSubscription = () => {\r\n    this.fetchData();\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (isPortalUser()) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (authenticationChanged(this.props, prevProps) && isPortalUser()) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { type, license } = subscriptionData;\r\n\r\n    if (!this.state.loading) {\r\n      if (isPortalUser()) {\r\n        if (Object.keys(this.state.subscription).length !== 0 && Object.keys(this.state.project).length !== 0) {\r\n          const project = this.state.project.data;\r\n          const subscription = this.state.subscription.data;\r\n          return (\r\n            <div className=\"subscription-details\">\r\n              <div>\r\n                <Breadcrumbs project={project} subscription={subscription} locale={this.props.locale}/>\r\n                <Tile>\r\n                  <div className=\"bx--grid\">\r\n                    <div className=\"bx--row\">\r\n                      <div className=\"bx--col\">\r\n                        <div>\r\n                          <strong>{i18n.t('customerDashboard.customerName')}:</strong> {project.customer.name}\r\n                        </div>\r\n                        <div>\r\n                          <strong>{i18n.t('customerDashboard.projectName')}:</strong> {project.name}\r\n                        </div>\r\n                        <div>\r\n                          <strong>{i18n.t('subscriptionDetails.description')}:</strong> {subscription.project.description}\r\n                        </div>\r\n                        <div>\r\n                          <strong>{i18n.t('subscriptionDetails.partners')}:</strong>\r\n                          {project !== '' && Object.keys(project.partners).length !== 0 ? (\r\n                            <>\r\n                              {project.partners.map((partner, index) => (\r\n                                <div key={index}>\r\n                                  {' '}\r\n                                  {index === project.partners.length - 1 ? partner.name : partner.name + ', '}{' '}\r\n                                </div>\r\n                              ))}\r\n                            </>\r\n                          ) : (\r\n                            <> {i18n.t('userMessages.none')} </>\r\n                          )}\r\n                        </div>\r\n                        <div>\r\n                          <strong>{i18n.t('subscriptionDetails.type')}:</strong> {type}\r\n                        </div>\r\n                        {isPortalAdminOrSupport() ? (\r\n                          <div>\r\n                            <strong>{i18n.t('subscriptionDetails.notes')}:</strong> {subscription.notes}\r\n                          </div>\r\n                        ) : null}\r\n                      </div>\r\n                      <div className=\"bx--col\">\r\n                        <div>\r\n                          <strong>{i18n.t('subscriptionDetails.status')}:</strong> {subscription.status}\r\n                        </div>\r\n                        <div>\r\n                          <strong>{i18n.t('subscriptionDetails.level')}:</strong> {subscription.level}\r\n                        </div>\r\n                        <div>\r\n                          <strong>{i18n.t('subscriptionDetails.startDate')}:</strong>{' '}\r\n                          {formatStartDate(subscription.startDate)}\r\n                        </div>\r\n                        <div>\r\n                          <strong>{i18n.t('subscriptionDetails.endDate')}:</strong>{' '}\r\n                          {formatEndDate(subscription.startDate, subscription.lengthInMonths)}\r\n                        </div>\r\n                        <div>\r\n                          <strong>{i18n.t('subscriptionDetails.license')}:</strong> {license}\r\n                        </div>\r\n                        <div>\r\n                          <strong>{i18n.t('subscriptionDetails.assignedUsers')}:</strong>\r\n                          {this.state.users.data !== '' && Object.keys(this.state.users.data).length !== 0 ? (\r\n                            <>\r\n                              {this.state.users.data.map((user, index) => (\r\n                                <div\r\n                                  key={index}> {index === this.state.users.data.length - 1 ? user.username : user.username + ', '} </div>\r\n                              ))}\r\n                            </>\r\n                          ) : (\r\n                            <> {i18n.t('userMessages.none')} </>\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </Tile>\r\n                <br/>\r\n                <TicketList projectId={project.id} serviceUrl={this.props.serviceUrl} locale={this.props.locale}/>\r\n              </div>\r\n            </div>\r\n          );\r\n        } else {\r\n          return <div>{i18n.t('userMessages.unauthorized')}</div>;\r\n        }\r\n      } else {\r\n        return <div>{i18n.t('userMessages.unauthorized')}</div>;\r\n      }\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport default withKeycloak(Subscription);\r\n","import React from 'react';\nimport {Tile} from 'carbon-components-react';\nimport withKeycloak from '../../auth/withKeycloak';\nimport {apiCustomerGet} from '../../api/customers';\nimport {authenticationChanged, isAuthenticated, isPortalAdminOrSupport} from '../../api/helpers';\nimport i18n from '../../i18n';\nimport Breadcrumbs from '../Breadcrumbs/Breadcrumbs';\nimport CustomerDataTable from './CustomerDataTable';\n\nclass CustomerProjectList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      customer: {},\n    };\n  }\n\n  async fetchData() {\n    if (isAuthenticated(this.props)) {\n      try {\n        const customer = await apiCustomerGet(this.props.serviceUrl, this.props.match.params.id);\n        this.setState({\n          customer: customer.data,\n          loading: false,\n        });\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (authenticationChanged(this.props, prevProps)) {\n      if (isPortalAdminOrSupport()) {\n        this.fetchData();\n      }\n    }\n  }\n\n  render() {\n    if (!this.state.loading) {\n      const customer = this.state.customer;\n      if (customer) {\n        return (\n          <div>\n            <Breadcrumbs customer={customer} locale={this.props.locale}/>\n            <Tile>\n              <div className=\"bx--grid\">\n                <div className=\"bx--row\">\n                  <div className=\"bx--col\">\n                    <p>\n                      <strong>{i18n.t('customerDetails.id')}: </strong> {customer.id}\n                    </p>\n                    <p>\n                      <strong>{i18n.t('customerDetails.name')}: </strong> {customer.name}\n                    </p>\n                    {isPortalAdminOrSupport() &&\n                    <p>\n                      <strong>{i18n.t('customerDetails.notes')}: </strong> {customer.notes}\n                    </p>\n                    }\n                  </div>\n                  <div className=\"bx--col\">\n                    <p>\n                      <strong>{i18n.t('customerDetails.contactName')}: </strong> {customer.contactName}\n                    </p>\n                    <p>\n                      <strong>{i18n.t('customerDetails.contactPhone')}: </strong> {customer.contactPhone}\n                    </p>\n                    <p>\n                      <strong>{i18n.t('customerDetails.contactEmail')}: </strong> {customer.contactEmail}\n                    </p>\n                  </div>\n                </div>\n              </div>\n            </Tile>\n            <CustomerDataTable serviceUrl={this.props.serviceUrl} customer={customer}\n                               locale={this.props.locale}/>\n          </div>\n        );\n      } else {\n        return <p>{i18n.t('userMessages.loading')}...</p>;\n      }\n    } else {\n      return null;\n    }\n  }\n}\n\nexport default withKeycloak(CustomerProjectList);\n","import React, {Component} from 'react';\r\nimport {\r\n  DataTable,\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableHeader,\r\n  TableBody,\r\n  TableCell,\r\n  Button\r\n} from 'carbon-components-react';\r\nimport '../../../index.scss';\r\nimport withKeycloak from '../../../auth/withKeycloak';\r\nimport i18n from '../../../i18n';\r\nimport {isAuthenticated, authenticationChanged} from '../../../api/helpers';\r\nimport {apiDeleteSubscriptionFromProject, apiGetProjectSubscriptions, apiProjectGet} from '../../../api/projects';\r\nimport {formatEndDate, formatStartDate} from '../../../api/subscriptions';\r\nimport Breadcrumbs from \"../../Breadcrumbs/Breadcrumbs\";\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass ManageSubscriptions extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      projectId: '',\r\n      project: {},\r\n      subscriptions: [],\r\n    };\r\n    this.headerData = [\r\n      {\r\n        header: i18n.t('projectDetails.id'),\r\n        key: 'id',\r\n      },\r\n      {\r\n        header: i18n.t('subscriptionDetails.status'),\r\n        key: 'status',\r\n      },\r\n      {\r\n        header: i18n.t('projectDetails.entandoVersion'),\r\n        key: 'entandoVersion',\r\n      },\r\n      {\r\n        header: i18n.t('subscriptionDetails.level'),\r\n        key: 'level',\r\n      },\r\n      {\r\n        header: i18n.t('subscriptionDetails.startDate'),\r\n        key: 'startDate',\r\n      },\r\n      {\r\n        header: i18n.t('subscriptionDetails.endDate'),\r\n        key: 'endDate',\r\n      },\r\n      {\r\n        header: i18n.t('subscriptionDetails.lengthInMonths'),\r\n        key: 'lengthInMonths',\r\n      },\r\n      {\r\n        header: i18n.t('subscriptionDetails.notes'),\r\n        key: 'notes',\r\n      },\r\n      {\r\n        header: i18n.t('customerDashboard.action'),\r\n        key: 'action',\r\n      },\r\n    ];\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (isAuthenticated(this.props)) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (authenticationChanged(this.props, prevProps)) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n\r\n  async fetchData() {\r\n    if (isAuthenticated(this.props)) {\r\n      const projectId = this.props.match.params.id;\r\n\r\n      let project = {};\r\n      let subscriptions = {};\r\n      if (projectId != null) {\r\n        project = (await apiProjectGet(this.props.serviceUrl, projectId)).data;\r\n        subscriptions = (await apiGetProjectSubscriptions(this.props.serviceUrl, projectId)).data;\r\n      }\r\n\r\n      this.setState({\r\n        projectId: projectId,\r\n        project: project,\r\n        subscriptions: subscriptions,\r\n      });\r\n    }\r\n  }\r\n\r\n  async deleteSubscription(subscriptionId) {\r\n    if (isAuthenticated(this.props)) {\r\n      return await apiDeleteSubscriptionFromProject(this.props.serviceUrl, this.state.projectId, subscriptionId);\r\n    }\r\n  }\r\n\r\n  handleDeleteSubscription = (e, id) => {\r\n    e.preventDefault();\r\n    if (window.confirm(i18n.t('submitMessages.confirmDelete'))) {\r\n      console.log('confirmed to delete', id);\r\n      this.deleteSubscription(id)\r\n        .then(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.deleted'),\r\n            submitColour: '#24a148',\r\n          });\r\n          this.fetchData();\r\n        })\r\n        .catch(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.error'),\r\n            submitColour: '#da1e28',\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const project = this.state.project;\r\n    return (\r\n      <div id=\"entando-customer-portal\">\r\n        <Breadcrumbs project={project} locale={this.props.locale}/>\r\n        <h5>{project.name}</h5>\r\n        <Link to={`/subscription/${this.state.projectId}`} style={{textDecoration: 'none'}}>\r\n          <Button kind=\"ghost\" style={{display: 'block', width: '100%'}} value=\"Add Subscription\">\r\n            {i18n.t('buttons.addSubscription')}\r\n          </Button>\r\n        </Link>\r\n        <DataTable rows={[{id: '1'}]} headers={this.headerData}>\r\n          {({headers, getHeaderProps, getTableProps}) => (\r\n            <TableContainer>\r\n              <Table {...getTableProps()}>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    {headers.map(header => (\r\n                      <TableHeader {...getHeaderProps({header})}>{header.header}</TableHeader>\r\n                    ))}\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {Object.keys(this.state.subscriptions).length !== 0 &&\r\n                  this.state.subscriptions.map((subscription, index) => (\r\n                    <TableRow key={index}>\r\n                      <TableCell>{subscription.id}</TableCell>\r\n                      <TableCell>{subscription.status}</TableCell>\r\n                      <TableCell>{subscription.entandoVersion && subscription.entandoVersion.name}</TableCell>\r\n                      <TableCell>{subscription.level}</TableCell>\r\n                      <TableCell>{formatStartDate(subscription.startDate)}</TableCell>\r\n                      <TableCell>{formatEndDate(subscription.startDate, subscription.lengthInMonths)}</TableCell>\r\n                      <TableCell>{subscription.lengthInMonths}</TableCell>\r\n                      <TableCell>{subscription.notes}</TableCell>\r\n                      <TableCell>\r\n                        <Link to={`/subscription/${this.state.projectId}/${subscription.id}`}\r\n                              style={{textDecoration: 'none'}}>\r\n                          <Button kind=\"ghost\" style={{display: 'block', width: '100%'}} value=\"Edit\">\r\n                            {i18n.t('buttons.edit')}\r\n                          </Button>\r\n                        </Link>\r\n                        <Button\r\n                          kind=\"ghost\"\r\n                          onClick={event => this.handleDeleteSubscription(event, subscription.id)}\r\n                          className=\"button-warning\"\r\n                        >\r\n                          {i18n.t('buttons.delete')}\r\n                        </Button>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          )}\r\n        </DataTable>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withKeycloak(ManageSubscriptions);\r\n","import React, {Component} from 'react';\r\nimport i18n from '../../i18n';\r\nimport {\r\n  Form,\r\n  TextInput,\r\n  Select,\r\n  SelectItem,\r\n  Button,\r\n  DatePicker,\r\n  DatePickerInput,\r\n  TextArea\r\n} from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport {apiProjectGet} from '../../api/projects';\r\nimport {\r\n  apiProjectSubscriptionPost,\r\n  apiProjectSubscriptionPut,\r\n  apiRenewSubscription,\r\n  apiSubscriptionGet,\r\n  stripTime,\r\n} from '../../api/subscriptions';\r\nimport {apiProductVersionsGet} from '../../api/productVersion';\r\nimport {authenticationChanged, isAuthenticated, isPortalAdmin, isPortalUser} from '../../api/helpers';\r\nimport {apiAddSubscriptionToProject} from '../../api/projects';\r\nimport moment from 'moment';\r\nimport Breadcrumbs from \"../Breadcrumbs/Breadcrumbs\";\r\n\r\nconst FORM_TYPE = {\r\n  new: 'new',\r\n  renewal: 'renewal',\r\n  edit: 'edit',\r\n};\r\n\r\nconst SUBSCRIPTION_LEVEL = {\r\n  GOLD: 'GOLD',\r\n  PLATINUM: 'PLATINUM',\r\n};\r\n\r\nconst SUBSCRIPTION_STATUS = {\r\n  requested: 'REQUESTED',\r\n  pending: 'PENDING',\r\n  active: 'ACTIVE',\r\n  expired: 'EXPIRED',\r\n};\r\n\r\nclass SubscriptionForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: true,\r\n      project: {},\r\n      projectId: '',\r\n      subscription: {},\r\n      startDate: '',\r\n      level: 'PLATINUM',\r\n      lengthInMonths: '',\r\n      notes: '',\r\n      entandoVersionId: '',\r\n      status: '',\r\n      formType: 'new',\r\n      invalid: {},\r\n      productVersions: [],\r\n      submitSuccess: false,\r\n      submitError: false,\r\n      submitColour: 'black',\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (isAuthenticated(this.props)) {\r\n      this.fetchData();\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (authenticationChanged(this.props, prevProps)) {\r\n      this.fetchData();\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  async fetchData() {\r\n    if (!isPortalUser()) {\r\n      return;\r\n    }\r\n\r\n    const serviceUrl = this.props.serviceUrl;\r\n\r\n    const params = this.props.match.params;\r\n    const subscriptionId = params.subscriptionId;\r\n    let projectId = params.projectId;\r\n\r\n    let subscription = {};\r\n    let project = {};\r\n    let formType = FORM_TYPE.new;\r\n    let status = '';\r\n    const isAdmin = isPortalAdmin();\r\n\r\n    if (typeof subscriptionId !== \"undefined\") {\r\n      subscription = (await apiSubscriptionGet(serviceUrl, subscriptionId)).data;\r\n      status = isAdmin ? subscription.status : SUBSCRIPTION_STATUS.requested;\r\n      formType = isAdmin ? FORM_TYPE.edit : FORM_TYPE.renewal;\r\n      project = subscription.project;\r\n    } else if (projectId !== null) {\r\n      project = (await apiProjectGet(serviceUrl, projectId)).data;\r\n      status = isAdmin ? SUBSCRIPTION_STATUS.pending : SUBSCRIPTION_STATUS.requested;\r\n    } else {\r\n      console.log('Unable to load project and/or subscription');\r\n      return;\r\n    }\r\n\r\n    const productVersions = (await apiProductVersionsGet(serviceUrl)).data;\r\n\r\n    this.setState({\r\n      subscription: subscription,\r\n      level: subscription.level ? subscription.level : '',\r\n      entandoVersionId: subscription.entandoVersion ? subscription.entandoVersion.id : '',\r\n      startDate: stripTime(subscription.startDate),\r\n      lengthInMonths: subscription.lengthInMonths ? subscription.lengthInMonths : '',\r\n      notes: subscription.notes ? subscription.notes : '',\r\n      status: status,\r\n      formType: formType,\r\n      project: project,\r\n      projectId: projectId,\r\n      productVersions: productVersions,\r\n    });\r\n  }\r\n\r\n  isNumeric(str) {\r\n    return !isNaN(str) && !isNaN(parseInt(str));\r\n  }\r\n\r\n  handleValidation() {\r\n    let invalid = {};\r\n\r\n    if (!this.state.startDate || !this.state.startDate.match(/^(0[1-9]|1[0-2])\\/(0[1-9]|1\\d|2\\d|3[01])\\/(19|20)\\d{2}$/)) {\r\n      invalid['startDate'] = true;\r\n    }\r\n\r\n    if (!this.state.lengthInMonths || !this.isNumeric(this.state.lengthInMonths)) {\r\n      invalid['lengthInMonths'] = true;\r\n    }\r\n\r\n    if (!this.state.level) {\r\n      invalid['level'] = true;\r\n    }\r\n\r\n    if (this.state.entandoVersionId === '') {\r\n      invalid['entandoVersionId'] = true;\r\n    }\r\n\r\n    this.setState({ invalid: invalid });\r\n    return Object.keys(invalid).length === 0;\r\n  }\r\n\r\n  handleChanges = e => {\r\n    const input = e.target;\r\n    const name = input.name;\r\n    const value = input.value;\r\n    this.setState({ [name]: value });\r\n    this.setState({\r\n      submitSuccess: false,\r\n      submitError: false,\r\n    });\r\n  };\r\n\r\n  handleStartDateChange = date => {\r\n    let formatted = '';\r\n    if (date && date[0]) {\r\n      formatted = moment(date[0].toISOString()).format('MM/DD/YYYY');\r\n    }\r\n    this.setState({\r\n      startDate: formatted,\r\n    });\r\n  };\r\n\r\n  updateStateForSuccess(success) {\r\n    if (success) {\r\n      this.setState({\r\n        submitSuccess: true,\r\n        submitError: false,\r\n        submitColour: '#24a148',\r\n      });\r\n    } else {\r\n      this.setState({\r\n        submitSuccess: false,\r\n        submitError: true,\r\n        submitColour: '#da1e28',\r\n      });\r\n    }\r\n  }\r\n\r\n  handleFormSubmit = event => {\r\n    event.preventDefault();\r\n    this.setState({\r\n      submitSuccess: false,\r\n      submitError: false,\r\n    });\r\n    const formIsValid = this.handleValidation();\r\n\r\n    if (formIsValid) {\r\n      const formType = this.state.formType;\r\n      const serviceUrl = this.props.serviceUrl;\r\n      const subscriptionRequest = this.stateToSubscription();\r\n\r\n      if (formType === FORM_TYPE.edit) {\r\n        apiProjectSubscriptionPut(serviceUrl, subscriptionRequest)\r\n          .then(() => {\r\n            this.updateStateForSuccess(true);\r\n          })\r\n          .catch(() => {\r\n            this.updateStateForSuccess(false);\r\n          });\r\n      } else if (formType === FORM_TYPE.new) {\r\n        this.newSubscription(subscriptionRequest)\r\n          .then(res => {\r\n            apiAddSubscriptionToProject(serviceUrl, this.state.projectId, res.data.id);\r\n            this.updateStateForSuccess(true);\r\n          })\r\n          .catch(() => {\r\n            this.updateStateForSuccess(false);\r\n          });\r\n      } else if (formType === FORM_TYPE.renewal) {\r\n        this.renewSubscription(subscriptionRequest)\r\n          .then(res => {\r\n            apiAddSubscriptionToProject(serviceUrl, this.state.projectId, res.data.id);\r\n            this.updateStateForSuccess(true);\r\n          })\r\n          .catch(() => {\r\n            this.updateStateForSuccess(false);\r\n          });\r\n      } else {\r\n        console.log('Illegal operation');\r\n      }\r\n    }\r\n  };\r\n\r\n  stateToSubscription() {\r\n    return {\r\n      entandoVersionId: this.state.entandoVersionId,\r\n      projectId: this.state.projectId,\r\n      renewal: this.state.formType === FORM_TYPE.renewal,\r\n      projectSubscription: {\r\n        id: this.state.subscription.id,\r\n        startDate: new Date(this.state.startDate),\r\n        lengthInMonths: this.state.lengthInMonths,\r\n        level: this.state.level,\r\n        status: this.state.status.toUpperCase(),\r\n        notes: this.state.notes,\r\n      },\r\n    };\r\n  }\r\n\r\n  async newSubscription(request) {\r\n    return await apiProjectSubscriptionPost(this.props.serviceUrl, request);\r\n  }\r\n\r\n  async renewSubscription(request) {\r\n    return await apiRenewSubscription(this.props.serviceUrl, request);\r\n  }\r\n\r\n  setupFormComponents() {\r\n    const subscriptionLevelList = Object.entries(SUBSCRIPTION_LEVEL).map(([key, value]) => (\r\n      <SelectItem key={key} text={value} value={key}>\r\n        {value}\r\n      </SelectItem>\r\n    ));\r\n    subscriptionLevelList.unshift(<SelectItem key=\"-1\" text={i18n.t('subscriptionForm.chooseLevel')} value=\"\"/>);\r\n\r\n    const versionList = this.state.productVersions.map(version => {\r\n      // only allow the user to choose from active entando versions\r\n      if (version.status) {\r\n        return (\r\n          <SelectItem key={version.id} text={version.name} value={version.id}>\r\n            {version.name}\r\n          </SelectItem>\r\n        );\r\n      } else {\r\n        return null;\r\n      }\r\n    });\r\n    versionList.unshift(<SelectItem key=\"-1\" text={i18n.t('subscriptionForm.chooseVersion')} value=\"\"/>);\r\n\r\n    const statusList = Object.entries(SUBSCRIPTION_STATUS).map(([key, value]) => (\r\n      <SelectItem key={key} text={value} value={value}>\r\n        {value}\r\n      </SelectItem>\r\n    ));\r\n\r\n    return {subscriptionLevelList, versionList, statusList};\r\n  }\r\n\r\n  renderForm() {\r\n    const {subscriptionLevelList, versionList, statusList} = this.setupFormComponents();\r\n    return (\r\n      <div>\r\n        <div className=\"bx--row\">\r\n          <div className=\"bx--col\">\r\n            <div>\r\n              <span>{i18n.t('subscriptionForm.projectName')}:</span> {this.state.project.name}\r\n            </div>\r\n            <Select\r\n              id=\"status\"\r\n              name=\"status\"\r\n              labelText={i18n.t('subscriptionForm.subscriptionStatus')}\r\n              value={this.state.status}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.required')}\r\n              invalid={this.state.invalid['status']}\r\n              disabled={!isPortalAdmin()}\r\n            >\r\n              {statusList}\r\n            </Select>\r\n            <Select\r\n              id=\"level\"\r\n              name=\"level\"\r\n              labelText={i18n.t('subscriptionForm.subscriptionLevel') + ' *'}\r\n              value={this.state.level || ''}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.required')}\r\n              invalid={this.state.invalid['level']}\r\n            >\r\n              {subscriptionLevelList}\r\n            </Select>\r\n            <Select\r\n              id=\"entandoVersionId\"\r\n              name=\"entandoVersionId\"\r\n              labelText={i18n.t('subscriptionForm.entandoVersion') + ' *'}\r\n              value={this.state.entandoVersionId}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.required')}\r\n              invalid={this.state.invalid['entandoVersionId']}\r\n            >\r\n              {versionList}\r\n            </Select>\r\n          </div>\r\n          <div className=\"bx--col\">\r\n            <DatePicker dateFormat=\"m/d/Y\" datePickerType=\"single\" value={this.state.startDate}\r\n                        onChange={this.handleStartDateChange}>\r\n              <DatePickerInput\r\n                id=\"startDate\"\r\n                name=\"startDate\"\r\n                placeholder=\"mm/dd/yyyy\"\r\n                labelText={i18n.t('subscriptionForm.subscriptionStartDate')}\r\n                type=\"text\"\r\n                invalidText={i18n.t('validation.invalid.date')}\r\n                invalid={this.state.invalid['startDate']}\r\n              />\r\n            </DatePicker>\r\n            <TextInput\r\n              id=\"lengthInMonths\"\r\n              name=\"lengthInMonths\"\r\n              labelText={i18n.t('subscriptionForm.subscriptionLength') + ' *'}\r\n              value={this.state.lengthInMonths}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.number')}\r\n              invalid={this.state.invalid['lengthInMonths']}\r\n            />\r\n            {isPortalAdmin() && (\r\n              <TextArea\r\n                id={'notes'}\r\n                name=\"notes\"\r\n                labelText={i18n.t('adminDashboard.addProject.notes')}\r\n                value={this.state.notes}\r\n                onChange={this.handleChanges}\r\n              />\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  successErrorMessage() {\r\n    const isAdmin = isPortalAdmin();\r\n    const { subscriptionType, submitSuccess, submitError } = this.state;\r\n\r\n    if (subscriptionType === 'new') {\r\n      if (submitSuccess) {\r\n        return isAdmin ? this.createFormMessage('adminSubmitNewSuccess') : this.createFormMessage('customerSubmitSuccess');\r\n      } else if (submitError) {\r\n        return this.createFormMessage('newSubError');\r\n      }\r\n    } else {\r\n      if (submitSuccess) {\r\n        return isAdmin ? this.createFormMessage('adminRenewNewSuccess') : this.createFormMessage('customerSubmitSuccess');\r\n      } else if (submitError) {\r\n        return this.createFormMessage('renewSubError');\r\n      }\r\n    }\r\n  }\r\n\r\n  createFormMessage(subMessageKey) {\r\n    return <p style={{ color: this.state.submitColour }}>{i18n.t(`subscriptionForm.${subMessageKey}`)}</p>;\r\n  }\r\n\r\n  render() {\r\n    const formType = this.state.formType;\r\n    let formLabelKey = 'subscriptionForm.newSubscription';\r\n    if (formType !== 'new') {\r\n      formLabelKey = isPortalAdmin() ? 'subscriptionForm.editSubscription' : 'subscriptionForm.renewSubscription';\r\n    }\r\n\r\n    if (!this.state.loading) {\r\n      if (isPortalUser()) {\r\n        return (\r\n          <div id=\"entando-customer-portal\">\r\n            <Breadcrumbs project={this.state.project} subscription={this.state.subscription}\r\n                         locale={this.props.locale}/>\r\n            <div className=\"form-container\">\r\n              {this.successErrorMessage()}\r\n              <Form onSubmit={this.handleFormSubmit}>\r\n                <div className=\"bx--grid\">\r\n                  <div className=\"bx--row\">\r\n                    <div className=\"bx--col\">\r\n                      <strong>{i18n.t(formLabelKey)}</strong>\r\n                    </div>\r\n                  </div>\r\n                  {this.renderForm()}\r\n                  <Button kind=\"primary\" tabIndex={0} type=\"submit\">\r\n                    {' '}\r\n                    {i18n.t('buttons.submit')}\r\n                  </Button>\r\n                </div>\r\n              </Form>\r\n            </div>\r\n          </div>\r\n        );\r\n      } else {\r\n        return <p>{i18n.t('userMessages.unauthorized')}</p>;\r\n      }\r\n    }\r\n    // Loading\r\n    else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport default withKeycloak(SubscriptionForm);\r\n","import React, {Component} from 'react';\r\nimport i18n from '../../i18n';\r\nimport {Form, Select, SelectItem, Button, TextArea, TextInput} from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport {apiProjectGet} from '../../api/projects';\r\nimport {apiJiraTicketPost} from '../../api/tickets';\r\nimport {authenticationChanged, getActiveSubscription, isAuthenticated, isPortalUser} from '../../api/helpers';\r\nimport Breadcrumbs from \"../Breadcrumbs/Breadcrumbs\";\r\n\r\nclass OpenTicketForm extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      loading: true,\r\n      project: {},\r\n      role: '',\r\n      invalid: {},\r\n      submitMsg: '',\r\n      submitColour: 'black',\r\n      //form fields\r\n      type: 'Support',\r\n      priority: 'Medium',\r\n      status: 'To Do',\r\n      summary: '',\r\n      description: '',\r\n    };\r\n    this.types = ['Support', 'New Feature', 'Bug'];\r\n    this.priorities = ['Critical', 'High', 'Medium', 'Low'];\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (isAuthenticated(this.props)) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (authenticationChanged(this.props, prevProps)) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n\r\n  async fetchData() {\r\n    if (!isPortalUser()) {\r\n      return;\r\n    }\r\n\r\n    const projectId = this.props.match.params.id;\r\n    let project = (await apiProjectGet(this.props.serviceUrl, projectId)).data;\r\n\r\n    if (!project) {\r\n      console.error('Unable to retrieve projectId ', projectId);\r\n      project = {};\r\n    }\r\n\r\n    this.setState({\r\n      project: project,\r\n      loading: false,\r\n    });\r\n  }\r\n\r\n  handleValidation() {\r\n    let invalid = {};\r\n    let formIsValid = true;\r\n\r\n    if (this.state.type === '') {\r\n      formIsValid = false;\r\n      invalid['type'] = true;\r\n    }\r\n\r\n    if (this.state.summary === '') {\r\n      formIsValid = false;\r\n      invalid['summary'] = true;\r\n    }\r\n\r\n    if (this.state.description === '') {\r\n      formIsValid = false;\r\n      invalid['description'] = true;\r\n    }\r\n\r\n    if (this.state.priority === '') {\r\n      formIsValid = false;\r\n      invalid['priority'] = true;\r\n    }\r\n\r\n    this.setState({\r\n      invalid: invalid,\r\n    });\r\n    return formIsValid;\r\n  }\r\n\r\n  handleChanges = e => {\r\n    const input = e.target;\r\n    const name = input.name;\r\n    const value = input.value;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleFormSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    const formIsValid = this.handleValidation();\r\n\r\n    if (formIsValid) {\r\n      const subscription = getActiveSubscription(this.state.project);\r\n      if (subscription) {\r\n        this.createTicket()\r\n          .then(() => {\r\n            this.setState({\r\n              submitMsg: i18n.t('submitMessages.created'),\r\n              submitColour: '#24a148',\r\n            });\r\n          })\r\n          .catch(() => {\r\n            this.setState({\r\n              submitMsg: i18n.t('submitMessages.ticketError'),\r\n              submitColour: '#da1e28',\r\n            });\r\n          });\r\n      }\r\n      // if no subscriptions, don't create ticket\r\n      else {\r\n        this.setState({\r\n          submitMsg: i18n.t('submitMessages.subscriptionRequired'),\r\n          submitColour: '#da1e28',\r\n        });\r\n      }\r\n    } else {\r\n      this.setState({\r\n        submitMsg: i18n.t('submitMessages.error'),\r\n        submitColour: '#da1e28',\r\n      });\r\n    }\r\n  };\r\n\r\n  async createTicket() {\r\n    if (isPortalUser()) {\r\n      const ticket = {\r\n        type: this.state.type,\r\n        summary: this.state.summary,\r\n        description: this.state.description,\r\n        priority: this.state.priority,\r\n        // these fields are just placeholders to validate the POST request (fields will be set in the backend)\r\n        systemId: '999',\r\n        status: 'To Do',\r\n        createDate: '2021-02-22T14:14:09-05:00',\r\n        updateDate: '2021-02-22T14:14:09-05:00',\r\n      };\r\n      return await apiJiraTicketPost(this.props.serviceUrl, this.state.project.id, ticket);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (!this.state.loading) {\r\n      if (isPortalUser()) {\r\n        return (\r\n          <div id=\"entando-customer-portal\">\r\n            <Breadcrumbs project={this.state.project} locale={this.props.locale}/>\r\n            <div className=\"form-container\">\r\n              <p style={{color: this.state.submitColour}}>{this.state.submitMsg}</p>\r\n              <Form onSubmit={this.handleFormSubmit}>\r\n                <div className=\"bx--grid\">\r\n                  <div className=\"bx--row\" style={{padding: '1em 0'}}>\r\n                    <div className=\"bx--col\">\r\n                      <div className=\"form-desc\">\r\n                        <h4>{i18n.t('supportTicketForm.formTitle')}</h4>\r\n                        <div>{i18n.t('supportTicketForm.desc')}</div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"bx--row\">\r\n                    <div className=\"bx--col\">\r\n                      <div>\r\n                        <strong>{i18n.t('projectDetails.project')}:</strong> {this.state.project.name}\r\n                      </div>\r\n                      <Select\r\n                        id=\"type\"\r\n                        name=\"type\"\r\n                        labelText={i18n.t('supportTicketForm.type') + ' *'}\r\n                        value={this.state.type}\r\n                        onChange={this.handleChanges}\r\n                        invalidText={i18n.t('validation.invalid.required')}\r\n                        invalid={this.state.invalid['type']}\r\n                      >\r\n                        {this.types.map((type, i) => (\r\n                          <SelectItem key={i} text={type} value={type}>\r\n                            {type}\r\n                          </SelectItem>\r\n                        ))}\r\n                      </Select>\r\n                      <Select\r\n                        id=\"priority\"\r\n                        name=\"priority\"\r\n                        labelText={i18n.t('supportTicketForm.priority') + ' *'}\r\n                        value={this.state.priority}\r\n                        onChange={this.handleChanges}\r\n                        invalidText={i18n.t('validation.invalid.required')}\r\n                        invalid={this.state.invalid['priority']}\r\n                      >\r\n                        {this.priorities.map((priority, i) => (\r\n                          <SelectItem key={i} text={priority} value={priority}>\r\n                            {priority}\r\n                          </SelectItem>\r\n                        ))}\r\n                      </Select>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"bx--row\">\r\n                    <div className=\"bx--col\">\r\n                      <TextInput\r\n                        labelText={i18n.t('supportTicketForm.ticketSummary') + ' *'}\r\n                        placeholder={i18n.t('supportTicketForm.addticketSummary')}\r\n                        id=\"summary\"\r\n                        name=\"summary\"\r\n                        value={this.state.summary}\r\n                        onChange={this.handleChanges}\r\n                        invalidText={i18n.t('validation.invalid.required')}\r\n                        invalid={this.state.invalid['summary']}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"bx--row\">\r\n                    <div className=\"bx--col\">\r\n                      <TextArea\r\n                        labelText={i18n.t('supportTicketForm.ticketDescription') + ' *'}\r\n                        placeholder={i18n.t('supportTicketForm.addticketDescription')}\r\n                        name=\"description\"\r\n                        value={this.state.description}\r\n                        onChange={this.handleChanges}\r\n                        invalidText={i18n.t('validation.invalid.required')}\r\n                        invalid={this.state.invalid['description']}\r\n                      />\r\n                      <Button kind=\"primary\" tabIndex={0} type=\"submit\">\r\n                        {' '}\r\n                        {i18n.t('buttons.submit')}{' '}\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </Form>\r\n            </div>\r\n          </div>\r\n        );\r\n      } else {\r\n        return <p>{i18n.t('userMessages.unauthorized')}</p>;\r\n      }\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport default withKeycloak(OpenTicketForm);\r\n","import { getDefaultOptions, request, getUrl } from './helpers';\r\n\r\nconst resource = 'api/portal-users';\r\n\r\nexport const apiUserDelete = async (serviceUrl, id) => {\r\n  const url = `${serviceUrl}/${resource}/${id}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE',\r\n  };\r\n  return await request(url, options);\r\n};\r\n\r\nexport const apiUsersPut = async (serviceUrl, user) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'PUT',\r\n    body: user ? JSON.stringify(user) : null,\r\n  };\r\n  return await request(url, options);\r\n};\r\n\r\nexport const apiUsersGet = async serviceUrl => {\r\n  const url = getUrl(`${serviceUrl}/${resource}`);\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return await request(url, options);\r\n};\r\n\r\nexport const apiUserGet = async (serviceUrl, userId) => {\r\n  const url = getUrl(`${serviceUrl}/${resource}/${userId}`);\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return await request(url, options);\r\n};\r\n\r\nexport const apiUserPost = async (serviceUrl, user) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n    body: user ? JSON.stringify(user) : null,\r\n  };\r\n  return await request(url, options);\r\n};\r\n\r\nexport const apiUserGetByUsernameAndEmail = async (serviceUrl, username, email) => {\r\n  const url = getUrl(`${serviceUrl}/${resource}/username/${username}/email/${email}`);\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return await request(url, options);\r\n};\r\n","import { getDefaultKeycloakOptions, request, getUrl } from './helpers';\r\n\r\nexport const apiKeycloakUserGet = async (serviceUrl, realm) => {\r\n  const usersResource = `admin/realms/${realm}/users`;\r\n  const url = `${serviceUrl}/${usersResource}`;\r\n  const options = {\r\n    ...getDefaultKeycloakOptions(),\r\n    method: 'GET',\r\n  };\r\n  return await request(url, options);\r\n};\r\n\r\nexport const apiKeycloakToken = async (serviceUrl, realm) => {\r\n  const tokenResource = `realms/${realm}/protocol/openid-connect/token`;\r\n  const url = getUrl(`${serviceUrl}/${tokenResource}`);\r\n  const keycloakBody = {\r\n    client_id: 'web_app',\r\n    username: 'admin',\r\n    password: 'admin',\r\n    grant_type: 'password',\r\n  };\r\n  const options = {\r\n    ...getDefaultKeycloakOptions(),\r\n    method: 'POST',\r\n    body: keycloakBody ? serialize(keycloakBody) : null,\r\n  };\r\n  return await request(url, options);\r\n};\r\n\r\nfunction serialize(obj) {\r\n  var str = [];\r\n  for (var p in obj)\r\n    if (obj.hasOwnProperty(p)) {\r\n      str.push(encodeURIComponent(p) + '=' + encodeURIComponent(obj[p]));\r\n    }\r\n  return str.join('&');\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Form, Select, SelectItem, Button } from 'carbon-components-react';\r\nimport * as portalUserApi from '../../../api/portalusers';\r\nimport {apiAddUserToProject, apiProjectGet} from '../../../api/projects';\r\nimport withKeycloak from '../../../auth/withKeycloak';\r\nimport { apiKeycloakUserGet } from '../../../api/keycloak';\r\nimport i18n from '../../../i18n';\r\nimport {authenticationChanged, isAuthenticated} from \"../../../api/helpers\";\r\nclass AssignUsers extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      project: null,\r\n      projectId: '',\r\n      assignUser: '',\r\n      users: new Map(),\r\n      invalid: {},\r\n      submitMsg: '',\r\n      submitColour: 'black',\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (isAuthenticated(this.props)) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (authenticationChanged(this.props, prevProps)) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n\r\n  async fetchData() {\r\n    const {keycloak} = this.props;\r\n    const users = this.mapKeycloakUserEmails((await apiKeycloakUserGet(keycloak.authServerUrl, keycloak.realm)).data);\r\n    let projectId = this.props.match.params.id;\r\n    let project = null;\r\n    if (projectId != null) {\r\n      project = (await apiProjectGet(this.props.serviceUrl, projectId)).data;\r\n    } else {\r\n      projectId = '';\r\n    }\r\n\r\n    this.setState({\r\n      projectId: projectId,\r\n      project: project,\r\n      users: users,\r\n    });\r\n  }\r\n\r\n  mapKeycloakUserEmails = keycloakUsers => {\r\n    const usernameEmailMap = new Map();\r\n    keycloakUsers.forEach(keycloakUser => usernameEmailMap.set(keycloakUser.username, keycloakUser.email));\r\n    return usernameEmailMap;\r\n  };\r\n\r\n  handleChanges = e => {\r\n    const input = e.target;\r\n    const name = input.name;\r\n    const value = input.value;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleFormSubmit = event => {\r\n    event.preventDefault();\r\n    const { projectId, assignUser } = this.state;\r\n    const formIsValid = this.handleFormValidation();\r\n\r\n    if (formIsValid) {\r\n      this.assignUserToProject(projectId, assignUser).then(res => {\r\n        if (res && res.status === 201) {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.updated'),\r\n            submitColour: '#24a148',\r\n          });\r\n          window.dispatchEvent(new CustomEvent('cp-user-assigned'));\r\n        } else {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.error'),\r\n            submitColour: '#da1e28',\r\n          });\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  handleFormValidation() {\r\n    let invalid = {};\r\n    let formIsValid = true;\r\n    const { projectId, assignUser } = this.state;\r\n\r\n    //name\r\n    if (projectId === '') {\r\n      formIsValid = false;\r\n      invalid['projectId'] = true;\r\n    }\r\n\r\n    //customerNumber\r\n    if (assignUser === '') {\r\n      formIsValid = false;\r\n      invalid['assignUser'] = true;\r\n    }\r\n\r\n    this.setState({ invalid: invalid });\r\n    return formIsValid;\r\n  }\r\n\r\n  assignUserToProject = async (projectId, username) => {\r\n    const email = this.state.users.get(username);\r\n    if (!email) {\r\n      alert(\"User is missing an email address in keycloak and cannot be assigned.\")\r\n      return null;\r\n    }\r\n    const portalUserId = await this.getPortalUserId({username, email: this.state.users.get(username)});\r\n    return await apiAddUserToProject(this.props.serviceUrl, projectId, portalUserId);\r\n  };\r\n\r\n  getPortalUserId = async keycloakUser => {\r\n    let portalUserId = null;\r\n    try {\r\n      const portalUser = await portalUserApi.apiUserGetByUsernameAndEmail(this.props.serviceUrl,\r\n        keycloakUser.username, keycloakUser.email);\r\n      portalUserId = portalUser.data.id;\r\n    } catch (e) {\r\n      console.warn(e);\r\n    }\r\n\r\n    return portalUserId;\r\n  };\r\n\r\n  setupFormComponents() {\r\n    const users = this.state.users;\r\n    const project = this.state.project;\r\n    let userList;\r\n    let projectList;\r\n\r\n    if (users.size > 0) {\r\n      userList = [...users.keys()].map((assignUser, i) => (\r\n        <SelectItem key={i} text={assignUser} value={assignUser}>\r\n          {assignUser}\r\n        </SelectItem>\r\n      ));\r\n      userList.unshift(<SelectItem key=\"-1\" text={i18n.t('manageUsers.assign.userList')} value=\"\"/>);\r\n    } else {\r\n      userList = <SelectItem text={i18n.t('manageUsers.assign.noUsers')} value=\"\"/>;\r\n    }\r\n\r\n    if (project != null) {\r\n      projectList = <SelectItem key={project.id} text={project.name} value={project.id}/>;\r\n    } else {\r\n      projectList = <SelectItem text={i18n.t('manageUsers.assign.noProjects')} value=\"\"/>;\r\n    }\r\n\r\n    return {userList, projectList};\r\n  }\r\n\r\n  render() {\r\n    const { userList, projectList } = this.setupFormComponents();\r\n\r\n    return (\r\n      <div>\r\n        <p style={{ color: this.state.submitColour }}>{this.state.submitMsg}</p>\r\n        <Form onSubmit={this.handleFormSubmit}>\r\n          <div className=\"bx--grid\">\r\n            <div className=\"bx--row\">\r\n              <div className=\"bx--col\">\r\n                <Select\r\n                  id=\"projectId\"\r\n                  name=\"projectId\"\r\n                  labelText={i18n.t('manageUsers.assign.projectName')}\r\n                  value={this.state.projectId}\r\n                  onChange={this.handleChanges}\r\n                  invalidText={i18n.t('validation.invalid.required')}\r\n                  invalid={this.state.invalid['projectId']}\r\n                >\r\n                  {projectList}\r\n                </Select>\r\n              </div>\r\n            </div>\r\n            <div className=\"bx--row\">\r\n              <div className=\"bx--col\">\r\n                <Select\r\n                  id=\"assignUser\"\r\n                  name=\"assignUser\"\r\n                  labelText={i18n.t('manageUsers.assign.assignUser')}\r\n                  value={this.state.assignUser}\r\n                  onChange={this.handleChanges}\r\n                  invalidText={i18n.t('validation.invalid.required')}\r\n                  invalid={this.state.invalid['assignUser']}\r\n                >\r\n                  {userList}\r\n                </Select>\r\n              </div>\r\n            </div>\r\n            <Button kind=\"primary\" tabIndex={0} type=\"submit\">\r\n              {' '}\r\n              {i18n.t('buttons.submit')}{' '}\r\n            </Button>\r\n          </div>\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withKeycloak(AssignUsers);\r\n","import React, {Component} from 'react';\r\nimport {\r\n  DataTable,\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableHeader,\r\n  TableBody,\r\n  TableCell,\r\n  Button\r\n} from 'carbon-components-react';\r\nimport withKeycloak from '../../../auth/withKeycloak';\r\nimport i18n from '../../../i18n';\r\nimport {apiGetProjectUsers, apiDeleteUserFromProject} from '../../../api/projects';\r\nimport {authenticationChanged, isAuthenticated} from \"../../../api/helpers\";\r\n\r\nclass DeleteUsers extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      users: [],\r\n      displayUsers: [],\r\n      projectId: '',\r\n    };\r\n    this.headerData = [\r\n      {\r\n        header: i18n.t('manageUsers.delete.userName'),\r\n        key: 'username',\r\n      },\r\n      {\r\n        header: i18n.t('manageUsers.delete.userEmail'),\r\n        key: 'email',\r\n      },\r\n      {\r\n        header: i18n.t('manageUsers.delete.userAccess'),\r\n        key: 'userAccess',\r\n      },\r\n    ];\r\n    window.addEventListener('cp-user-assigned', event => {\r\n      this.fetchData();\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (isAuthenticated(this.props)) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (authenticationChanged(this.props, prevProps)) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n\r\n  async fetchData() {\r\n    if (isAuthenticated(this.props)) {\r\n      const projectId = this.props.match.params.id;\r\n      let users = [];\r\n      if (projectId != null) {\r\n        users = (await apiGetProjectUsers(this.props.serviceUrl, projectId)).data;\r\n      }\r\n\r\n      this.setState({\r\n        users,\r\n        projectId,\r\n      });\r\n\r\n      this.handleUserDisplay();\r\n    }\r\n  }\r\n\r\n  handleUserDisplay() {\r\n    const users = this.state.users;\r\n    const projectId = this.state.projectId;\r\n\r\n    const displayUsers = users.map(user => ({\r\n      id: user.username,\r\n      username: user.username,\r\n      email: user.email,\r\n      userAccess: (\r\n        <Button kind=\"ghost\" onClick={event => this.handleRemoveUser(user.id, projectId, event)}\r\n                className=\"button-warning\">\r\n          {i18n.t('manageUsers.delete.removeUser')}\r\n        </Button>\r\n      ),\r\n    }));\r\n\r\n    this.setState({\r\n      displayUsers,\r\n    });\r\n  }\r\n\r\n  handleRemoveUser = (userId, projectId, event) => {\r\n    event.preventDefault();\r\n\r\n    apiDeleteUserFromProject(this.props.serviceUrl, projectId, userId).then(res => {\r\n      if (res.status === 201) {\r\n        this.fetchData();\r\n      } else {\r\n        console.warn('Failed to delete user', res);\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <DataTable rows={this.state.displayUsers} headers={this.headerData}>\r\n        {({ rows, headers, getHeaderProps, getTableProps }) => (\r\n          <TableContainer>\r\n            <Table {...getTableProps()}>\r\n              <TableHead>\r\n                <TableRow>\r\n                  {headers.map(header => (\r\n                    <TableHeader {...getHeaderProps({ header })}>{header.header}</TableHeader>\r\n                  ))}\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {rows.map(row => (\r\n                  <TableRow key={row.id}>\r\n                    {row.cells.map(cell => (\r\n                      <TableCell key={cell.id}>{cell.value}</TableCell>\r\n                    ))}\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        )}\r\n      </DataTable>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withKeycloak(DeleteUsers);\r\n","import React, {Component} from 'react';\r\nimport i18n from '../../../i18n';\r\nimport {Accordion, AccordionItem} from 'carbon-components-react';\r\nimport AssignUsers from './AssignUsers';\r\nimport DeleteUsers from './DeleteUsers';\r\nimport {authenticationChanged, isAuthenticated, isPortalAdmin} from '../../../api/helpers';\r\nimport withKeycloak from '../../../auth/withKeycloak';\r\nimport Breadcrumbs from \"../../Breadcrumbs/Breadcrumbs\";\r\n\r\nclass ManageUsers extends Component {\r\n  userFunctionality;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: true,\r\n    };\r\n    this.userFunctionality = [\r\n      {\r\n        label: (\r\n          <div>\r\n            <p className=\"title\">{i18n.t('manageUsers.manage.title')}</p>\r\n            <p className=\"desc\">{i18n.t('manageUsers.manage.desc')}</p>\r\n          </div>\r\n        ),\r\n        content: <DeleteUsers {...props} serviceUrl={this.props.serviceUrl}/>,\r\n        open: true,\r\n      },\r\n      {\r\n        label: (\r\n          <div>\r\n            <p className=\"title\">{i18n.t('manageUsers.assign.title')}</p>\r\n            <p className=\"desc\">{i18n.t('manageUsers.assign.desc')}</p>\r\n          </div>\r\n        ),\r\n        content: <AssignUsers {...props} serviceUrl={this.props.serviceUrl}/>,\r\n        open: true,\r\n      },\r\n    ];\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (isAuthenticated(this.props)) {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (authenticationChanged(this.props, prevProps)) {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (!this.state.loading) {\r\n      if (isPortalAdmin()) {\r\n        return (\r\n          <div id=\"entando-customer-portal\">\r\n            <Breadcrumbs locale={this.props.locale}/>\r\n            <div className=\"form-container\">\r\n              <Accordion>\r\n                {this.userFunctionality.map((item, index) => (\r\n                  <AccordionItem key={index.toString()} index={index} title={item.label} description={item.description}\r\n                                 open={item.open}>\r\n                    {item.content}\r\n                  </AccordionItem>\r\n                ))}\r\n              </Accordion>\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n      // Unauthorized\r\n      else {\r\n        return <p>{i18n.t('userMessages.unauthorized')}</p>;\r\n      }\r\n    }\r\n    // Loading\r\n    else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport default withKeycloak(ManageUsers);\r\n","import React, {Component} from 'react';\r\nimport {HashRouter, Route, Switch} from 'react-router-dom';\r\nimport AdminDashboard from './Admin/AdminDashboard';\r\nimport Subscription from './SubscriptionDetails/Subscription';\r\nimport withKeycloak from '../auth/withKeycloak';\r\nimport {AuthenticatedView, UnauthenticatedView} from '../auth/KeycloakViews';\r\nimport {authenticationChanged, isAuthenticated, isPortalUser} from '../api/helpers';\r\nimport CustomerProjectList from './Customer/CustomerProjectList';\r\nimport i18n from '../i18n';\r\nimport ManageSubscriptions from './Admin/ManageSubscriptions/ManageSubscriptions';\r\nimport SubscriptionForm from './Forms/SubscriptionForm';\r\nimport OpenTicketForm from './Forms/OpenTicketForm';\r\nimport ManageUsers from './Admin/ManageUsers/ManageUsers';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: true,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (isAuthenticated(this.props)) {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (authenticationChanged(this.props, prevProps)) {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var { keycloak } = this.props;\r\n\r\n    if (!this.state.loading) {\r\n      if (isPortalUser()) {\r\n        return (\r\n          <div id=\"entando-customer-portal\">\r\n            <AuthenticatedView keycloak={keycloak}>\r\n              <HashRouter>\r\n                <Switch>\r\n                  <Route\r\n                    path={'**/customer-details/:id'}\r\n                    render={props => <CustomerProjectList {...props} serviceUrl={this.props.serviceUrl}\r\n                                                          locale={this.props.locale}/>}\r\n                  />\r\n                  <Route\r\n                    path={'**/subscription/:projectId/:subscriptionId?'}\r\n                    render={props => <SubscriptionForm {...props} serviceUrl={this.props.serviceUrl}\r\n                                                       locale={this.props.locale}/>}\r\n                  />\r\n                  <Route\r\n                    path={'**/manage-subscriptions/:id'}\r\n                    render={props => <ManageSubscriptions {...props} serviceUrl={this.props.serviceUrl}\r\n                                                          locale={this.props.locale}/>}\r\n                  />\r\n                  <Route\r\n                    path={'**/manage-users/:id'}\r\n                    render={props => <ManageUsers {...props} serviceUrl={this.props.serviceUrl}\r\n                                                  locale={this.props.locale}/>}\r\n                  />\r\n                  <Route\r\n                    path={'**/subscription-details/:id'}\r\n                    render={props => <Subscription {...props} serviceUrl={this.props.serviceUrl}\r\n                                                   locale={this.props.locale}/>}\r\n                  />\r\n                  <Route\r\n                    path={'**/ticket/:id'}\r\n                    render={props => <OpenTicketForm {...props} serviceUrl={this.props.serviceUrl}\r\n                                                     locale={this.props.locale}/>}\r\n                  />\r\n                  <Route\r\n                    path=\"**/\"\r\n                    render={props => <AdminDashboard {...props} serviceUrl={this.props.serviceUrl}\r\n                                                     locale={this.props.locale}/>}\r\n                  />\r\n                </Switch>\r\n              </HashRouter>\r\n            </AuthenticatedView>\r\n            <UnauthenticatedView keycloak={keycloak}>\r\n              <p>{i18n.t('userMessages.unauthorized')}</p>\r\n            </UnauthenticatedView>\r\n          </div>\r\n        );\r\n      } else {\r\n        return <p>{i18n.t('userMessages.unauthorized')}</p>;\r\n      }\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport default withKeycloak(App);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport '../index.scss';\r\nimport * as Locale from '../i18n';\r\n\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\nimport App from '../components/App';\r\n\r\nimport { subscribeToWidgetEvent } from '../helpers/widgetEvents';\r\nimport { KEYCLOAK_EVENT_TYPE } from './widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window && window.entando && window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\nconst ATTRIBUTES = {\r\n  hidden: 'hidden',\r\n  locale: 'locale',\r\n  paginationMode: 'pagination-mode',\r\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n  serviceUrl: 'service-url',\r\n};\r\n\r\nclass AppElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    //retargetEvents(shadowRoot);\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n    const locale = this.getAttribute(ATTRIBUTES.locale) || '';\r\n    Locale.setLocale(locale);\r\n\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <App serviceUrl={serviceUrl} locale={locale} />\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.get('cp-app') || customElements.define('cp-app', AppElement);\r\n","import React, {Component} from 'react';\nimport {authenticationChanged, getPageUrl, isAuthenticated, isPortalUser} from \"../../api/helpers\";\nimport i18n from \"../../i18n\";\nimport withKeycloak from \"../../auth/withKeycloak\";\nimport {PAGE_CUSTOMER_PORTAL} from '../../api/constants';\n\nconst KEYCLOAK_EVENT_ID = 'keycloak';\n\nclass Login extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      loading: true\n    };\n    this.keycloakEventHandler = this.keycloakEventHandler.bind(this);\n  }\n\n  keycloakEventHandler(event) {\n    const keycloakEvent = event.detail.eventType;\n    const {keycloak} = this.props;\n    switch (keycloakEvent) {\n      //Wait until keycloak is ready before displaying the nav elements\n      case 'onReady':\n        this.setState({\n          loading: false\n        });\n        break;\n      case 'onAuthRefreshError':\n        keycloak.logout();\n        break;\n      default:\n        break;\n    }\n  }\n\n  componentDidMount() {\n    window.addEventListener(KEYCLOAK_EVENT_ID, this.keycloakEventHandler);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (authenticationChanged(this.props, prevProps)) {\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(KEYCLOAK_EVENT_ID, this.keycloakEventHandler);\n  }\n\n  render() {\n    const {keycloak} = this.props;\n    const loginUrl = window.location;\n    const handleLogin = () => keycloak.login({redirectUri: loginUrl});\n    const handleLogout = () => keycloak.logout({redirectUri: window.location.origin});\n\n    if (!this.state.loading) {\n      return (\n        <span className=\"entando-login\">\n          {!isAuthenticated(this.props) ? (\n            <>\n              <a className=\"log-in\" href=\"#entando-customer-portal\" onClick={handleLogin}\n                 title={i18n.t('userMessages.login')}>\n                {i18n.t('userMessages.login')}<i className=\"fas fa-sign-in-alt\"/>\n              </a>\n            </>\n          ) : (\n            <>\n              {isPortalUser() && (\n                <>\n                  <a\n                    href={getPageUrl(PAGE_CUSTOMER_PORTAL, this.props.locale)}>{i18n.t('customerDashboard.customerPortal')}</a>\n                  <span className=\"divider\">&nbsp;|&nbsp;</span>\n                </>\n              )}\n              <a className=\"log-out\" href=\"#entando-customer-portal\" onClick={handleLogout}\n                 title={i18n.t('userMessages.logout')}>\n                {i18n.t('userMessages.logout')}<i className=\"fas fa-sign-out-alt\"/>\n              </a>\n            </>\n          )}\n        </span>\n      );\n    } else {\n      return null;\n    }\n  }\n}\n\nexport default withKeycloak(Login);\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport '../index.scss';\r\n\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\n\r\nimport {subscribeToWidgetEvent} from '../helpers/widgetEvents';\r\nimport {KEYCLOAK_EVENT_TYPE} from './widgetEventTypes';\r\nimport * as Locale from '../i18n';\r\nimport Login from '../components/Login/Login';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window && window.entando && window.entando.keycloak && {...window.entando.keycloak, initialized: true}) || {\r\n    initialized: false,\r\n  };\r\n\r\nconst ATTRIBUTES = {\r\n  hidden: 'hidden',\r\n  locale: 'locale',\r\n  paginationMode: 'pagination-mode',\r\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n  serviceUrl: 'service-url',\r\n};\r\n\r\nclass LoginElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('span');\r\n    this.keycloak = {...getKeycloakInstance(), initialized: true};\r\n\r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = {...getKeycloakInstance(), initialized: true};\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    //retargetEvents(shadowRoot);\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n    const locale = this.getAttribute(ATTRIBUTES.locale) || '';\r\n    Locale.setLocale(locale);\r\n\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <Login serviceUrl={serviceUrl} locale={locale}/>\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.get('cp-login') || customElements.define('cp-login', LoginElement);\r\n","import React, {Component} from 'react';\r\nimport {BrowserRouter, Route, Switch, Link} from 'react-router-dom';\r\nimport App from '../components/App';\r\nimport withKeycloak from '../auth/withKeycloak';\r\nimport AdminConfiguration from '../components/Admin/Configuration/AdminConfiguration';\r\nimport {authenticationChanged, getPageUrl, isAuthenticated, isPortalAdmin} from '../api/helpers';\r\nimport {\r\n  PAGE_ADMIN_CONFIG,\r\n  PAGE_CUSTOMER_PORTAL\r\n} from \"../api/constants\";\r\nimport Login from \"../components/Login/Login\";\r\n\r\nclass LocalApp extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: true,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (isAuthenticated(this.props)) {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (authenticationChanged(this.props, prevProps)) {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {locale, serviceUrl} = this.props;\r\n    if (!this.state.loading) {\r\n      return (\r\n        <div>\r\n          <BrowserRouter forceRefresh={true}>\r\n            <Login locale={locale}/>\r\n            <div>\r\n              <ul>\r\n                {isPortalAdmin() && (\r\n                  <li>\r\n                    <Link to={getPageUrl(PAGE_ADMIN_CONFIG, locale)}>Admin</Link>\r\n                  </li>\r\n                )}\r\n              </ul>\r\n            </div>\r\n            <Switch>\r\n              <Route path={getPageUrl(PAGE_ADMIN_CONFIG, locale)}>\r\n                <AdminConfiguration serviceUrl={serviceUrl} locale={locale}/>\r\n              </Route>\r\n              <Route path={getPageUrl(PAGE_CUSTOMER_PORTAL, locale)}>\r\n                <App serviceUrl={serviceUrl} locale={locale}/>\r\n              </Route>\r\n              <Route path=\"/\" exact={true}>\r\n                <App serviceUrl={serviceUrl} locale={locale}/>\r\n              </Route>\r\n            </Switch>\r\n          </BrowserRouter>\r\n        </div>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport default withKeycloak(LocalApp);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '../index.scss';\n// import './entando.css';\nimport * as Locale from '../i18n';\n\nimport KeycloakContext from '../auth/KeycloakContext';\nimport LocalApp from '../local/LocalApp';\n\nimport {subscribeToWidgetEvent} from '../helpers/widgetEvents';\nimport {KEYCLOAK_EVENT_TYPE} from '../custom-elements/widgetEventTypes';\n\nconst getKeycloakInstance = () =>\n  (window && window.entando && window.entando.keycloak && {...window.entando.keycloak, initialized: true}) || {\n    initialized: false,\n  };\n\nconst ATTRIBUTES = {\n  hidden: 'hidden',\n  locale: 'locale',\n  paginationMode: 'pagination-mode',\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\n  serviceUrl: 'service-url',\n};\n\nclass LocalAppElement extends HTMLElement {\n  container;\n\n  mountPoint;\n\n  unsubscribeFromKeycloakEvent;\n\n  keycloak = getKeycloakInstance();\n\n  connectedCallback() {\n    this.mountPoint = document.createElement('div');\n    this.keycloak = {...getKeycloakInstance(), initialized: true};\n\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\n      this.keycloak = {...getKeycloakInstance(), initialized: true};\n      this.render();\n    });\n\n    this.render();\n\n    //retargetEvents(shadowRoot);\n    this.appendChild(this.mountPoint);\n  }\n\n  render() {\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\n    const locale = this.getAttribute(ATTRIBUTES.locale) || '';\n    Locale.setLocale(locale);\n\n    ReactDOM.render(\n      <KeycloakContext.Provider value={this.keycloak}>\n        <LocalApp serviceUrl={serviceUrl} locale={locale}/>\n      </KeycloakContext.Provider>,\n      this.mountPoint\n    );\n  }\n}\n\ncustomElements.get('cp-local-app') || customElements.define('cp-local-app', LocalAppElement);\n"],"sourceRoot":""}