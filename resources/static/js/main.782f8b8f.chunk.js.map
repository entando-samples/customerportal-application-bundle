{"version":3,"sources":["i18n.js","auth/KeycloakContext.js","components/__types__/ref.js","auth/withKeycloak.js","api/helpers.js","api/customers.js","components/Admin/AddCustomerModal.js","api/partners.js","api/projects.js","components/Admin/AddPartnerModal.js","components/Admin/AddProjectModal.js","components/Admin/EditProjectModal.js","components/Customer/customDataTable.js","components/Customer/customerDetails.js","components/Admin/EditCustomerModal.js","components/Customer/CustomerAccordian.js","components/Admin/AdminDashboard.js","helpers/widgetEvents.js","custom-elements/widgetEventTypes.js","custom-elements/AdminDashboardElement.js","api/tickets.js","api/ticketingsystem.js","components/SubscriptionDetails/TicketList.js","api/subscriptions.js","components/Admin/EditSubscriptionModal.js","components/SubscriptionDetails/subscription.js","auth/KeycloakViews.js","components/Customer/CustomerProjectList.js","components/App.js","custom-elements/AdminAddCustomerElement.js","components/Admin/RoleCheck.js","custom-elements/AdminRoleCheckElement.js","custom-elements/CustomDataTableElement.js","custom-elements/CustomerDetailsElement.js","custom-elements/SubscriptionElement.js","components/Forms/openTicket.js","custom-elements/FormsOpenTicketElement.js","components/Navigation/Navigation.js","custom-elements/NavigationElement.js","components/Forms/enhancementRequest.js","custom-elements/FormsEnhancementRequestElement.js","custom-elements/AppElement.js","custom-elements/TicketListElement.js","components/Admin/Configuration/TicketingSystem.js","api/productVersion.js","components/Admin/AddProductVersionModal.js","components/Admin/EditVersionModal.js","components/Admin/Configuration/ProductVersion.js","components/Admin/Configuration/AdminConfiguration.js","custom-elements/AdminConfigurationElement.js","custom-elements/OpenTicketElement.js","api/portalusers.js","api/keycloak.js","components/Admin/ManageUser/AssignUser.js","components/Admin/ManageUser/DeleteUser.js","components/Admin/ManageUser/ManageUser.js","custom-elements/ManageUserElement.js","custom-elements/AssignUserElement.js","custom-elements/DeleteUserElement.js","custom-elements/TicketingSystemElement.js","custom-elements/ProductVersionElement.js","components/Forms/SubscriptionForm.js","custom-elements/SubscriptionFormElement.js"],"names":["i18n","defaultLocale","locale","fallbacks","translations","en","it","setLocale","KeycloakContext","PropTypes","oneOfType","func","shape","current","elementType","React","createContext","withKeycloak","WrappedComponent","WithKeycloakComponent","renderWrappedComponent","value","props","forwardedRef","rest","ref","keycloak","Consumer","this","Component","defaultProps","forwardRef","getKeycloakToken","window","entando","authenticated","token","isPortalAdmin","hasKeycloakClientRole","isPortalSupport","isPortalPartner","isPortalCustomer","isPortalAdminOrSupport","isPortalCustomerOrPartner","isPortalUser","clientRole","resourceAccess","client","item","roles","includes","getDefaultOptions","headers","Headers","Authorization","getDefaultKeycloakOptions","getUrl","url","request","options","a","fetch","response","has","parseInt","get","status","data","json","Promise","reject","Error","statusText","resource","apiCustomerDelete","serviceUrl","id","method","apiCustomersGet","apiCustomerGet","apiCustomerPost","customer","body","JSON","stringify","apiCustomerPut","apiGetCustomersProjects","customerId","apiAddProjectToCustomer","projectId","adminResource","apiAdminCustomersGet","apiAdminCustomerGet","myResource","apiMyCustomersGet","apiGetMyCustomersProjects","handleChanges","e","input","target","name","setState","handleFormSubmit","handleValidation","state","customerNumber","contactName","contactPhone","contactEmail","notes","customerPost","then","result","submitMsg","t","submitColour","updateCustomerList","catch","err","clearValues","document","querySelector","className","baseState","invalid","formIsValid","lastAtPos","lastIndexOf","lastDotPos","indexOf","length","initialized","addEventListener","ModalWrapper","buttonTriggerText","modalHeading","buttonTriggerClassName","handleSubmit","primaryButtonText","secondaryButtonText","modalLabel","style","color","Form","onSubmit","TextInput","labelText","onChange","invalidText","TextArea","apiPartnerPost","partner","apiProjectsGet","apiProjectGet","apiProjectPost","project","apiProjectPut","apiAddTicketToProject","ticketId","apiAddSubscriptionToProject","subscriptionId","apiAddUserToProject","userId","apiAddPartnerToProject","partnerId","apiGetProjectsUsers","apiGetProjectSubscriptions","apiGetProjectIdNames","apiGetMyProjectIdNames","apiAdminProjectsGet","apiMyProjectsGet","partnerNumber","partnerPost","projectList","prevProps","changedAuth","getProjects","projects","Select","defaultValue","SelectItem","text","Object","keys","allProjects","map","i","description","systemId","trim","alert","projectPost","getAllProjects","customerList","getCustomers","customers","label","allCustomers","projectPut","updateProjectList","modalId","buttonId","getProjectDetails","buttonClassName","CustomTable","fetchData","headerData","header","key","console","log","render","DataTable","rows","rowData","getHeaderProps","getTableProps","TableContainer","Table","TableHead","TableRow","TableHeader","TableBody","index","projectSubscriptions","TableCell","partners","tickets","width","sub","to","entandoVersion","String","Date","startDate","toDateString","setMonth","getMonth","lengthInMonths","projectName","href","partnerName","endDate","openTickets","getCustomer","Tile","getCustomerDetails","updateCustomer","getCustomersProjects","confirm","deleteCustomer","AccordionItem","title","open","accordionOpened","display","textDecoration","Button","kind","onClick","handleDelete","getTime","handleSearch","event","newFilteredState","filter","toLowerCase","filteredCustomers","currentPage","undefined","forceUpdate","customersProjects","role","test","numberOfPages","Math","ceil","Search","placeHolderText","onKeyPress","Accordion","indexOfLastItem","firstIndexOfCurrentPage","PaginationNav","loop","Boolean","page","Number","totalItems","itemsShown","cssClass","subscribeToWidgetEvent","eventType","eventHandler","removeEventListener","KEYCLOAK_EVENT_TYPE","getKeycloakInstance","ATTRIBUTES","AdminDashboardElement","mountPoint","createElement","unsubscribeFromKeycloakEvent","appendChild","getAttribute","ReactDOM","Provider","HTMLElement","customElements","define","jiraResource","apiJiraTicketsGet","organization","apiJiraTicketPost","ticket","apiTicketingSystemDelete","apiTicketingSystemsGet","apiTicketingSystemPost","ticketingsystem","apiTicketingSystemPut","TicketList","currentTicketingSystem","ticketingSystems","substr","type","priority","createDate","updateDate","creationDate","openTicket","apiSubscriptionGet","apiProjectSubscriptionPost","projectSubscriptionCreation","apiProjectSubscriptionPut","apiGetMySubscription","apiRenewSubscription","projectSubscriptionRenew","subscriptionRequest","projectSubscription","subscription","level","moment","format","subscriptionPut","updateSubscription","handleStartDateChange","date","toISOString","isNumeric","match","str","isNaN","parseFloat","getSubscriptionDetails","disabled","DatePicker","dateFormat","datePickerType","DatePickerInput","placeholder","subscriptionData","getSubscription","loading","users","params","license","user","username","AuthenticatedView","children","UnauthenticatedView","path","AdminAddCustomerElement","RoleCheck","roleType","renderForm","AdminRoleCheckElement","CustomDataTableElement","CustomerDetailsElement","SubscriptionElement","parse","preventDefault","fetchProjectSubscription","createTicket","res","error","types","priorities","ticketingSystem","fetchProjects","getTicketingSystem","tabIndex","FormsOpenTicketElement","Navigation","NavigationElement","EnhancementRequest","ticketNo","customerName","openedBy","enhancementDescription","FormsEnhancementRequestElement","hidden","paginationMode","disableDefaultEventHandler","AppElement","Locale","TicketListCustomerElement","createTicketingSystem","updateTicketingSystem","ticketingSystemType","serviceAccount","serviceAccountSecret","getTicketingSystems","deleteTicketingSystem","apiProductVersionsGet","apiProductVersionGet","versionId","apiUpdateProductVersionsStatus","apiProductVersionPost","productVersion","apiProductVersionPut","apiProductVersionDelete","addProductVersion","updateProductVersions","handleEndDateChange","version","versionPut","getVersionDetails","ProductVersion","handleDeleteVersion","deleteVersion","getProductVersions","productVersions","ToggleSmall","handleToggleChange","aria-label","defaultToggled","EditVersionModal","marginTop","fill","entVersion","adminConfig","content","toString","AdminConfigurationElement","OpenTicketElement","apiUserDelete","apiUsersGet","apiUserPost","apiUserGetByUsername","usersResource","process","apiKeycloakUserGet","mapKeycloakUserEmails","keycloakUsers","usernameEmailMap","Map","forEach","keycloakUser","set","email","assignUser","handleFormValidation","assignUserToProject","getPortalUserId","portalUserId","portalUserApi","portalUser","message","createPortalUser","authServerUrl","keycloakUrl","userList","projectIdsNames","size","unshift","setupFormComponents","handleRemoveUser","portalUsers","updatedPortalUsers","delete","handleUserDisplay","displayUsers","filterText","handleMapFormatting","portalUsernames","values","dateAdded","createdTimestamp","toLocaleString","month","getFullYear","userAccess","row","cells","cell","userFunctionality","ManageUserElement","AssignUserElement","DeleteUserElement","TicketingSystemElement","ProductVersionElement","subscriptionLevel","GOLD","PLATINUM","subscriptionStatus","subscriptionTypes","submitSuccess","submitError","subscriptionType","newSubscription","renewSubscription","subscriptionLength","entandoVersionId","selectedProjectId","subscriptionLevelList","entries","versionList","formInputs","formComponents","isAdmin","createFormMessage","subMessageKey","successErrorMessage","required","SubsciptionFormElement"],"mappings":"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","file":"static/js/main.782f8b8f.chunk.js","sourcesContent":["import i18n from 'i18n-js';\r\n\r\nimport en from './i18n/locales/en.json';\r\nimport it from './i18n/locales/it.json';\r\n\r\ni18n.defaultLocale = 'en';\r\ni18n.locale = 'en';\r\ni18n.fallbacks = true;\r\ni18n.translations = { en, it };\r\n\r\nexport const setLocale = (locale) => {\r\n    i18n.locale = locale;\r\n}\r\n\r\nexport default i18n;","import React from 'react';\r\n\r\nconst KeycloakContext = React.createContext(null);\r\n\r\nexport default KeycloakContext;\r\n","import PropTypes from 'prop-types';\r\n\r\nexport default PropTypes.oneOfType([\r\n  PropTypes.func,\r\n  PropTypes.shape({ current: PropTypes.elementType }),\r\n  PropTypes.shape(null),\r\n]);\r\n","/* eslint-disable react/jsx-props-no-spreading */\r\nimport React, { forwardRef, Component } from 'react';\r\nimport refType from '../components/__types__/ref';\r\nimport KeycloakContext from './KeycloakContext';\r\n\r\nexport default function withKeycloak(WrappedComponent) {\r\n  class WithKeycloakComponent extends Component {\r\n    renderWrappedComponent = value => {\r\n      const { forwardedRef, ...rest } = this.props;\r\n      return <WrappedComponent {...rest} ref={forwardedRef} keycloak={value} />;\r\n    };\r\n\r\n    render() {\r\n      return <KeycloakContext.Consumer>{this.renderWrappedComponent}</KeycloakContext.Consumer>;\r\n    }\r\n  }\r\n\r\n  \r\n  WithKeycloakComponent.propTypes = {\r\n    forwardedRef: refType,\r\n  };\r\n  \r\n\r\n  WithKeycloakComponent.defaultProps = {\r\n    forwardedRef: () => {},\r\n  };\r\n\r\n  return forwardRef((props, ref) => <WithKeycloakComponent {...props} forwardedRef={ref} />);\r\n}\r\n","export const getKeycloakToken = () => {\n  if (\n    window &&\n    window.entando &&\n    window.entando.keycloak &&\n    window.entando.keycloak.authenticated\n  ) {\n    return window.entando.keycloak.token;\n  }\n  return '';\n};\n\nconst ADMIN = 'cp-admin';\nconst SUPPORT = 'cp-support';\nconst PARTNER = 'cp-partner';\nconst CUSTOMER = 'cp-customer';\n\nexport const isPortalAdmin = () => {\n  return hasKeycloakClientRole(ADMIN);\n}\n\nexport const isPortalSupport = () => {\n  return hasKeycloakClientRole(SUPPORT);\n}\n\nexport const isPortalPartner = () => {\n  return hasKeycloakClientRole(PARTNER);\n}\n\nexport const isPortalCustomer = () => {\n  return hasKeycloakClientRole(CUSTOMER);\n}\n\nexport const isPortalAdminOrSupport = () => {\n  return isPortalAdmin() || isPortalSupport();\n}\n\nexport const isPortalCustomerOrPartner = () => {\n  return isPortalCustomer() || isPortalPartner();\n}\n\nexport const isPortalUser = () => {\n  return isPortalAdminOrSupport() || isPortalCustomerOrPartner();\n}\n\nexport const hasKeycloakClientRole = (clientRole) => {\n  if (getKeycloakToken()) {\n    const { resourceAccess } = window.entando.keycloak;\n    if (resourceAccess) {\n      for (const client in resourceAccess) {\n        const item = resourceAccess[client];\n        if (item.roles && item.roles.includes(clientRole)) {\n          // console.debug(\"Found role {} with client {} \", clientRole, client);\n          return true;\n        }\n      }\n    }\n  }\n  return false;\n};\n\nexport const getDefaultOptions = () => ({\n  headers: new Headers({\n    Authorization: `Bearer ${getKeycloakToken()}`,\n    'Content-Type': 'application/json'\n  }),\n});\n\nexport const getDefaultKeycloakOptions = () => ({\n  headers: new Headers({\n    Authorization: `Bearer ${getKeycloakToken()}`,\n    'Content-Type': 'application/x-www-form-urlencoded'\n  }),\n});\n\nexport const getUrl = (url) => {\n  return `${url}`;\n};\n\nexport const request = async (url, options) => {\n  const response = await fetch(url, options);\n\n  const headers = {\n    ...(response.headers.has('X-Total-Count')\n      ? { 'X-Total-Count': parseInt(response.headers.get('X-Total-Count'), 10) }\n      : {}),\n  };\n\n  if (response.status === 204) {\n    return { data: '', status: response.status};\n  }\n\n  return response.status >= 200 && response.status < 300\n    ? { data: await response.json(), headers, status: response.status }\n    : Promise.reject(new Error(response.statusText || response.status));\n};\n","import { getDefaultOptions, request, getUrl } from './helpers';\r\n\r\nconst resource = 'api/customers';\r\n\r\nexport const apiCustomerDelete = async (serviceUrl, id) => {\r\n  const url = `${serviceUrl}/${resource}/${id}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE'\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiCustomersGet = async serviceUrl => {\r\n  const url = getUrl(`${serviceUrl}/${resource}`);\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET'\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiCustomerGet = async (serviceUrl, id) => {\r\n  const url = getUrl(`${serviceUrl}/${resource}/${id}`);\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET'\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiCustomersGetForAdminDashboard = async serviceUrl => {\r\n  const url = `${serviceUrl}/${resource}/all`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET'\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiCustomerPost = async (serviceUrl, customer) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n    body: customer ? JSON.stringify(customer) : null\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiCustomerPut = async (serviceUrl, customer) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'PUT',\r\n    body: customer ? JSON.stringify(customer) : null\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiGetCustomersProjects = async (serviceUrl, customerId) => {\r\n  const url = `${serviceUrl}/${resource}/${customerId}/projects`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET'\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiAddProjectToCustomer = async (serviceUrl, customerId, projectId) => {\r\n  const url = `${serviceUrl}/${resource}/${customerId}/projects/${projectId}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST'\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\n\r\n// Endpoints for backend security\r\nconst adminResource = 'api/customers/admin';\r\nexport const apiAdminCustomersGet = async (serviceUrl) => {\r\n  const url = getUrl(`${serviceUrl}/${adminResource}`);\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET'\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiAdminCustomerGet = async (serviceUrl, customerId) => {\r\n  const url = getUrl(`${serviceUrl}/${adminResource}/${customerId}`);\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET'\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nconst myResource = 'api/customers/mycustomers';\r\nexport const apiMyCustomersGet = async (serviceUrl) => {\r\n  const url = getUrl(`${serviceUrl}/${myResource}`);\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET'\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiGetMyCustomersProjects = async (serviceUrl, customerId) => {\r\n  const url = `${serviceUrl}/${myResource}/${customerId}/projects`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET'\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n","import React, { Component } from 'react';\r\nimport i18n from '../../i18n';\r\nimport { ModalWrapper, Form, TextInput, TextArea } from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport { apiCustomerPost } from '../../api/customers';\r\n\r\nclass AddCustomerModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            name: '',\r\n            customerNumber: '',\r\n            contactName: '',\r\n            contactPhone: '',\r\n            contactEmail: '',\r\n            notes: '',\r\n            invalid: {},\r\n            submitMsg: '',\r\n            submitColour: 'black'\r\n        };\r\n\r\n        this.baseState = this.state\r\n    }\r\n\r\n    handleValidation() {\r\n        let invalid = {};\r\n        let formIsValid = true;\r\n\r\n        if (this.state.name === '') {\r\n            formIsValid = false;\r\n            invalid['name'] = true;\r\n        }\r\n\r\n        if (this.state.customerNumber === '') {\r\n            formIsValid = false;\r\n            invalid['customerNumber'] = true;\r\n        }\r\n\r\n        if (typeof this.state.contactEmail !== 'undefined') {\r\n            let lastAtPos = this.state.contactEmail.lastIndexOf('@');\r\n            let lastDotPos = this.state.contactEmail.lastIndexOf('.');\r\n\r\n            if (\r\n                !(\r\n                    lastAtPos < lastDotPos &&\r\n                    lastAtPos > 0 &&\r\n                    this.state.contactEmail.indexOf('@@') == -1 &&\r\n                    lastDotPos > 2 &&\r\n                    this.state.contactEmail.length - lastDotPos > 2\r\n                )\r\n            ) {\r\n                formIsValid = false;\r\n                invalid['contactEmail'] = true;\r\n            }\r\n        }\r\n\r\n        this.setState({ invalid: invalid });\r\n        return formIsValid;\r\n    }\r\n\r\n    handleChanges = e => {\r\n        const input = e.target;\r\n        const name = input.name;\r\n        const value = input.value;\r\n        this.setState({ [name]: value });\r\n    };\r\n\r\n    async customerPost(customer) {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n        if (authenticated) {\r\n            return await apiCustomerPost(this.props.serviceUrl, customer);\r\n        }\r\n    }\r\n\r\n\r\n    handleFormSubmit = e => {\r\n        const formIsValid = this.handleValidation();\r\n\r\n        if (formIsValid) {\r\n            const customer = {\r\n                name: this.state.name,\r\n                customerNumber: this.state.customerNumber,\r\n                contactName: this.state.contactName,\r\n                contactPhone: this.state.contactPhone,\r\n                contactEmail: this.state.contactEmail,\r\n                notes: this.state.notes\r\n              };\r\n\r\n            this.customerPost(customer).then(result => {\r\n                this.setState({\r\n                    submitMsg: i18n.t('submitMessages.added'),\r\n                    submitColour: '#24a148'\r\n                })\r\n                this.props.updateCustomerList();\r\n            }).catch(err => {\r\n                this.setState({\r\n                    submitMsg: i18n.t('submitMessages.error'),\r\n                    submitColour: '#da1e28'\r\n                })\r\n            });\r\n        }\r\n        //this.props.testFunction();\r\n        //super.componentDidMount();\r\n    };\r\n\r\n    clearValues = () => {\r\n        const customerModalElement = document.querySelector('#modal-form-customer');\r\n        if(!customerModalElement.className.includes(\"is-visible\")) {\r\n            this.setState(this.baseState);\r\n        }\r\n    }\r\n    \r\n    componentDidMount() {\r\n        const modalOpenButton = document.querySelector('.add-customer-button');\r\n        modalOpenButton.addEventListener(\"click\", this.clearValues, false);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ModalWrapper\r\n                buttonTriggerText={i18n.t('buttons.addCustomer')}\r\n                modalHeading={i18n.t('adminDashboard.addCustomer.title')}\r\n                buttonTriggerClassName=\"add-customer bx--btn bx--btn--tertiary add-customer-button\"\r\n                className=\"modal-form\"\r\n                id=\"modal-form-customer\"\r\n                handleSubmit={this.handleFormSubmit}\r\n                primaryButtonText={i18n.t('modalText.save')}\r\n                secondaryButtonText={i18n.t('modalText.cancel')}\r\n                modalLabel={<p style={{color: this.state.submitColour}}>{this.state.submitMsg}</p>}\r\n            >\r\n                <div className=\"form-container\">\r\n                    <Form onSubmit={this.handleFormSubmit}>\r\n                        <TextInput\r\n                            name=\"name\"\r\n                            labelText={i18n.t('adminDashboard.addCustomer.customerName') + \" *\"}\r\n                            value={this.state.name}\r\n                            onChange={this.handleChanges}\r\n                            invalidText={i18n.t('validation.invalid.required')}\r\n                            invalid={this.state.invalid['name']}\r\n                        />\r\n                        <TextInput\r\n                            name=\"customerNumber\"\r\n                            labelText={i18n.t('adminDashboard.addCustomer.customerNumber') + \" *\"}\r\n                            value={this.state.customerNumber}\r\n                            onChange={this.handleChanges}\r\n                            invalidText={i18n.t('validation.invalid.required')}\r\n                            invalid={this.state.invalid['customerNumber']}\r\n                        />\r\n                        <TextInput\r\n                            name=\"contactName\"\r\n                            labelText={i18n.t('adminDashboard.addCustomer.contactName')}\r\n                            value={this.state.contactName}\r\n                            onChange={this.handleChanges}\r\n                        />\r\n                        <TextInput\r\n                            name=\"contactPhone\"\r\n                            labelText={i18n.t('adminDashboard.addCustomer.contactPhone')}\r\n                            value={this.state.contactPhone}\r\n                            onChange={this.handleChanges}\r\n                        />\r\n                        <TextInput\r\n                            name=\"contactEmail\"\r\n                            labelText={i18n.t('adminDashboard.addCustomer.contactEmail') + \" *\"}\r\n                            value={this.state.contactEmail}\r\n                            onChange={this.handleChanges}\r\n                            invalidText={i18n.t('validation.invalid.email')}\r\n                            invalid={this.state.invalid['contactEmail']}\r\n                        />\r\n                        <TextArea\r\n                            name=\"notes\"\r\n                            labelText={i18n.t('adminDashboard.addCustomer.notes')}\r\n                            value={this.state.notes}\r\n                            onChange={this.handleChanges}\r\n                        />\r\n                    </Form>\r\n                </div>\r\n            </ModalWrapper>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withKeycloak(AddCustomerModal);\r\n","import { getDefaultOptions, request, getUrl } from './helpers';\r\n\r\nconst resource = 'api/partners';\r\n\r\nexport const apiPartnerDelete = async (serviceUrl, id) => {\r\n  const url = `${serviceUrl}/${resource}/${id}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiPartnersGet = async (serviceUrl) => {\r\n  const url = getUrl(\r\n    `${serviceUrl}/${resource}`\r\n  );\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiPartnerPost = async (serviceUrl, partner) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n    body: partner ? JSON.stringify(partner) : null,\r\n  };\r\n  return request(url, options);\r\n};\r\n","import { getDefaultOptions, request, getUrl } from './helpers';\r\n\r\nconst resource = 'api/projects';\r\n\r\nexport const apiProjectsDelete = async (serviceUrl, id) => {\r\n  const url = `${serviceUrl}/${resource}/${id}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiProjectsGet = async (serviceUrl) => {\r\n  const url = getUrl(\r\n    `${serviceUrl}/${resource}`\r\n  );\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiProjectGet = async (serviceUrl, id) => {\r\n  const url = getUrl(\r\n    `${serviceUrl}/${resource}/${id}`\r\n  );\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiProjectsGetForCustomer = async (serviceUrl, customerNumber) => {\r\n  const url = `${serviceUrl}/${resource}/subscriptions/customer/${customerNumber}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiProjectPost = async (serviceUrl, project) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n    body: project ? JSON.stringify(project) : null,\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiProjectPut = async (serviceUrl, project) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'PUT',\r\n    body: project ? JSON.stringify(project) : null,\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiAddTicketToProject = async (serviceUrl, projectId, ticketId) => {\r\n  const url = `${serviceUrl}/${resource}/${projectId}/tickets/${ticketId}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiAddSubscriptionToProject = async (serviceUrl, projectId, subscriptionId) => {\r\n  const url = `${serviceUrl}/${resource}/${projectId}/subscriptions/${subscriptionId}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiAddUserToProject = async (serviceUrl, projectId, userId) => {\r\n  const url = `${serviceUrl}/${resource}/${projectId}/users/${userId}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiAddPartnerToProject = async (serviceUrl, projectId, partnerId) => {\r\n  const url = `${serviceUrl}/${resource}/${projectId}/partners/${partnerId}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiGetProjectsUsers = async (serviceUrl, projectId) => {\r\n  const url = `${serviceUrl}/${resource}/${projectId}/users/`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiGetProjectsTickets = async (serviceUrl, projectId) => {\r\n  const url = `${serviceUrl}/${resource}/${projectId}/tickets/`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiGetProjectSubscriptions = async (serviceUrl, projectId) => {\r\n  const url = `${serviceUrl}/${resource}/${projectId}/subscriptions/`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiGetProjectIdNames = async (serviceUrl) => {\r\n  const url = `${serviceUrl}/${resource}/nameId/`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiGetMyProjectIdNames = async (serviceUrl) => {\r\n  const url = `${serviceUrl}/${resource}/myprojects/nameId/`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\n// Endpoints for backend security\r\nconst adminResource = 'api/projects/admin';\r\nexport const apiAdminProjectsGet = async (serviceUrl) => {\r\n  const url = getUrl(`${serviceUrl}/${adminResource}`);\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET'\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nconst myResource = 'api/projects/myprojects';\r\nexport const apiMyProjectsGet = async (serviceUrl) => {\r\n  const url = getUrl(`${serviceUrl}/${myResource}`);\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET'\r\n  };\r\n\r\n  return request(url, options);\r\n};","import React, { Component } from 'react';\r\nimport i18n from '../../i18n';\r\nimport { ModalWrapper, Form, TextInput, Select, SelectItem, TextArea } from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport { apiPartnerPost } from '../../api/partners';\r\nimport { apiProjectPost, apiProjectsGet, apiAddPartnerToProject } from '../../api/projects';\r\n\r\nclass AddPartnerModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      projectList: {},\r\n      projectId: '',\r\n      name: '',\r\n      partnerNumber: '',\r\n      notes: '',\r\n      invalid: {},\r\n      submitMsg: '',\r\n      submitColour: 'black'\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n    const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n\r\n    if (authenticated && changedAuth) {\r\n      this.getProjects();\r\n    }\r\n  }\r\n\r\n  handleValidation() {\r\n    let invalid = {};\r\n    let formIsValid = true;\r\n\r\n    //project\r\n    if (this.state.projectId === '' || this.state.projectId === 'project-list') {\r\n      formIsValid = false;\r\n      invalid['projectId'] = true;\r\n    }\r\n\r\n    if (this.state.name === '') {\r\n      formIsValid = false;\r\n      invalid['name'] = true;\r\n    }\r\n\r\n    if (this.state.partnerNumber === '') {\r\n      formIsValid = false;\r\n      invalid['partnerNumber'] = true;\r\n    }\r\n\r\n    this.setState({ invalid: invalid });\r\n    return formIsValid;\r\n  }\r\n\r\n  handleChanges = e => {\r\n    const input = e.target;\r\n    const name = input.name;\r\n    const value = input.value;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  async getProjects() {\r\n    const { t, keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n    if (authenticated) {\r\n      const projects = await apiProjectsGet(this.props.serviceUrl);\r\n      this.setState({ projectList: projects });\r\n    }\r\n  }\r\n\r\n  async partnerPost(partner) {\r\n    const { t, keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n    if (authenticated) {\r\n      const result = await apiPartnerPost(this.props.serviceUrl, partner);\r\n      return await apiAddPartnerToProject(this.props.serviceUrl, this.state.projectId, result.data.id);\r\n    }\r\n  }\r\n\r\n  handleFormSubmit = e => {\r\n    const formIsValid = this.handleValidation();\r\n\r\n    if (formIsValid) {\r\n      const partner = {\r\n        name: this.state.name,\r\n        partnerNumber: this.state.partnerNumber,\r\n        notes: this.state.notes\r\n      };\r\n      this.partnerPost(partner).then(result => {\r\n        this.setState({\r\n            submitMsg: i18n.t('submitMessages.added'),\r\n            submitColour: '#24a148'\r\n        })\r\n        this.props.updateCustomerList();\r\n      }).catch(err => {\r\n          this.setState({\r\n              submitMsg: i18n.t('submitMessages.error'),\r\n              submitColour: '#da1e28'\r\n          })\r\n      });\r\n    }\r\n  };\r\n\r\n  clearValues = () => {\r\n    const partnerModalElement = document.querySelector('#modal-form-partner');\r\n    if(!partnerModalElement.className.includes(\"is-visible\")) {\r\n      this.setState({\r\n        projectId: '',\r\n        name: '',\r\n        partnerNumber: '',\r\n        notes: '',\r\n        invalid: {},\r\n        submitMsg: '',\r\n        submitColour: 'black'\r\n      })\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getProjects();\r\n\r\n    const modalOpenButton = document.querySelector('.add-partner-button');\r\n    modalOpenButton.addEventListener(\"click\", this.clearValues, false);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <ModalWrapper\r\n        buttonTriggerText={i18n.t('buttons.addPartner')}\r\n        modalHeading={i18n.t('adminDashboard.addPartner.title')}\r\n        buttonTriggerClassName=\"add-partner bx--btn bx--btn--tertiary add-partner-button\"\r\n        className=\"modal-form\"\r\n        id=\"modal-form-partner\"\r\n        handleSubmit={this.handleFormSubmit}\r\n        primaryButtonText={i18n.t('modalText.save')}\r\n        secondaryButtonText={i18n.t('modalText.cancel')}\r\n        modalLabel={<p style={{color: this.state.submitColour}}>{this.state.submitMsg}</p>}\r\n      >\r\n        <div className=\"form-container\">\r\n          {/*<p> {i18n.t('adminDashboard.addPartner.desc')}</p>*/}\r\n          <Form onSubmit={this.handleFormSubmit}>\r\n            <Select\r\n              defaultValue=\"project-list\"\r\n              name=\"projectId\"\r\n              labelText={i18n.t('adminDashboard.addPartner.projectList') + \" *\"}\r\n              value={this.state.projectId}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.required')}\r\n              invalid={this.state.invalid['projectId']}\r\n            >\r\n              <SelectItem text={i18n.t('adminDashboard.addPartner.selectProject')} value=\"project-list\" />\r\n              {Object.keys(this.props.allProjects).length !== 0\r\n                ? this.props.allProjects.map((projectList, i) => (\r\n                    <SelectItem key={i} text={projectList.name} value={projectList.id}>\r\n                      {projectList.name}\r\n                    </SelectItem>\r\n                  ))\r\n                : null}\r\n            </Select>\r\n\r\n            <TextInput\r\n              name=\"name\"\r\n              labelText={i18n.t('adminDashboard.addPartner.partnerName') + \" *\"}\r\n              value={this.state.name}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.required')}\r\n              invalid={this.state.invalid['name']}\r\n            />\r\n            <TextInput\r\n              name=\"partnerNumber\"\r\n              labelText={i18n.t('adminDashboard.addPartner.partnerNumber') + \" *\"}\r\n              value={this.state.partnerNumber}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.required')}\r\n              invalid={this.state.invalid['partnerNumber']}\r\n            />\r\n            <TextArea\r\n              name=\"notes\"\r\n              labelText={i18n.t('adminDashboard.addPartner.notes')}\r\n              value={this.state.notes}\r\n              onChange={this.handleChanges}\r\n            />\r\n          </Form>\r\n        </div>\r\n      </ModalWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withKeycloak(AddPartnerModal);\r\n","import React, { Component } from 'react';\r\nimport i18n from '../../i18n';\r\nimport { ModalWrapper, Form, TextInput, Select, SelectItem, TextArea } from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport { apiCustomersGet, apiAddProjectToCustomer } from '../../api/customers';\r\nimport { apiProjectPost, apiProjectsGet } from '../../api/projects';\r\n\r\nclass AddProjectModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      projects: {},\r\n      customerList: {},\r\n      customerId: '',\r\n      name: '',\r\n      description: '',\r\n      systemId: '',\r\n      contactName: '',\r\n      contactPhone: '',\r\n      contactEmail: '',\r\n      notes: '',\r\n      invalid: {},\r\n      submitMsg: '',\r\n      submitColour: 'black'\r\n    };\r\n  }\r\n\r\n  handleValidation() {\r\n    let invalid = {};\r\n    let formIsValid = true;\r\n\r\n    //customer\r\n    if (this.state.customerId === '' || this.state.customerId === 'customer-list') {\r\n      formIsValid = false;\r\n      invalid['customerId'] = true;\r\n    }\r\n\r\n    //name\r\n    if (this.state.name === '') {\r\n      formIsValid = false;\r\n      invalid['name'] = true;\r\n    }\r\n\r\n    //description\r\n    if (this.state.description === '') {\r\n      formIsValid = false;\r\n      invalid['description'] = true;\r\n    }\r\n\r\n    //contactEmail\r\n    if (typeof this.state.contactEmail !== 'undefined') {\r\n      let lastAtPos = this.state.contactEmail.lastIndexOf('@');\r\n      let lastDotPos = this.state.contactEmail.lastIndexOf('.');\r\n\r\n      if (\r\n        !(\r\n          lastAtPos < lastDotPos &&\r\n          lastAtPos > 0 &&\r\n          this.state.contactEmail.indexOf('@@') == -1 &&\r\n          lastDotPos > 2 &&\r\n          this.state.contactEmail.length - lastDotPos > 2\r\n        )\r\n      ) {\r\n        formIsValid = false;\r\n        invalid['contactEmail'] = true;\r\n      }\r\n    }\r\n\r\n    this.setState({ invalid: invalid });\r\n    return formIsValid;\r\n  }\r\n\r\n  async getAllProjects() {\r\n    const projects = await apiProjectsGet(this.props.serviceUrl);\r\n    this.setState({\r\n      projects: projects.data\r\n    });\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n    const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n\r\n    if (authenticated && changedAuth) {\r\n      this.getCustomers();\r\n      this.getAllProjects();\r\n    }\r\n  }\r\n\r\n  handleChanges = e => {\r\n    const input = e.target;\r\n    const name = input.name;\r\n    const value = input.value;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  async getCustomers() {\r\n    const { t, keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n    if (authenticated) {\r\n      const customers = await apiCustomersGet(this.props.serviceUrl);\r\n      this.setState({ customerList: customers });\r\n    }\r\n  }\r\n\r\n  async projectPost(project) {\r\n    const { t, keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n    if (authenticated) {\r\n      const result = await apiProjectPost(this.props.serviceUrl, project);\r\n      return await apiAddProjectToCustomer(this.props.serviceUrl, this.state.customerId, result.data.id);\r\n    }\r\n  }\r\n\r\n  handleFormSubmit = e => {\r\n    const formIsValid = this.handleValidation();\r\n\r\n    if (formIsValid) {\r\n      const project = {\r\n        name: this.state.name,\r\n        description: this.state.description,\r\n        systemId: this.state.systemId,\r\n        contactName: this.state.contactName,\r\n        contactPhone: this.state.contactPhone,\r\n        contactEmail: this.state.contactEmail,\r\n        notes: this.state.notes\r\n      };\r\n      for (var i = 0; i < this.state.projects.length; i++) {\r\n        if (project.systemId === this.state.projects[i].systemId && project.systemId.trim() !== \"\") {\r\n          window.alert('That system id is already in use in another project');\r\n          return;\r\n        }\r\n      }\r\n      this.projectPost(project).then(result => {\r\n        this.setState({\r\n            submitMsg: i18n.t('submitMessages.added'),\r\n            submitColour: '#24a148'\r\n        })\r\n        this.props.updateCustomerList();\r\n        this.getAllProjects();\r\n      }).catch(err => {\r\n          this.setState({\r\n              submitMsg: i18n.t('submitMessages.error'),\r\n              submitColour: '#da1e28'\r\n          })\r\n      });\r\n    }\r\n  };\r\n\r\n  clearValues = () => {\r\n    const projectModalElement = document.querySelector('#modal-form-project');\r\n    if(!projectModalElement.className.includes(\"is-visible\")) {\r\n      this.setState({\r\n        customerId: '',\r\n        name: '',\r\n        description: '',\r\n        systemId: '',\r\n        contactName: '',\r\n        contactPhone: '',\r\n        contactEmail: '',\r\n        notes: '',\r\n        invalid: {}\r\n      })\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getCustomers();\r\n    this.getAllProjects();\r\n\r\n    const modalOpenButton = document.querySelector('.add-project-button');\r\n    modalOpenButton.addEventListener(\"click\", this.clearValues, false);\r\n  }\r\n  \r\n  render() {\r\n    const customerList = ['Customer1', 'Customer2', 'Customer3'];\r\n    return (\r\n      <ModalWrapper\r\n        buttonTriggerText={i18n.t('buttons.addProject')}\r\n        modalHeading={i18n.t('adminDashboard.addProject.title')}\r\n        buttonTriggerClassName=\"add-project bx--btn bx--btn--tertiary add-project-button\"\r\n        className=\"modal-form\"\r\n        id=\"modal-form-project\"\r\n        handleSubmit={this.handleFormSubmit}\r\n        primaryButtonText={i18n.t('modalText.save')}\r\n        secondaryButtonText={i18n.t('modalText.cancel')}\r\n        modalLabel={<p style={{color: this.state.submitColour}}>{this.state.submitMsg}</p>}\r\n      >\r\n        <div className=\"form-container\">\r\n          {/*<p> {i18n.t('adminDashboard.addProject.desc')} </p>*/}\r\n          <Form onSubmit={this.handleFormSubmit}>\r\n            <Select\r\n              defaultValue=\"customer-list\"\r\n              name=\"customerId\"\r\n              labelText={i18n.t('adminDashboard.addProject.customerList') + \" *\"}\r\n              defaultValue={{ label: \"Select Dept\", value: 0 }}\r\n              value={this.state.customerId}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.required')}\r\n              invalid={this.state.invalid['customerId']}\r\n            >\r\n              <SelectItem text={i18n.t('adminDashboard.addProject.selectCustomer')} value=\"customer-list\" />\r\n              {Object.keys(this.props.allCustomers).length !== 0\r\n                ? this.props.allCustomers.map((customerList, i) => (\r\n                    <SelectItem key={i} text={customerList.name} value={customerList.id}>\r\n                      {customerList.name}\r\n                    </SelectItem>\r\n                  ))\r\n                : null}\r\n            </Select>\r\n\r\n            <TextInput\r\n              name=\"name\"\r\n              labelText={i18n.t('adminDashboard.addProject.projectName') + \" *\"}\r\n              value={this.state.name}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.required')}\r\n              invalid={this.state.invalid['name']}\r\n            />\r\n            <TextInput\r\n              name=\"description\"\r\n              labelText={i18n.t('adminDashboard.addProject.projectDesc') + \" *\"}\r\n              value={this.state.description}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.required')}\r\n              invalid={this.state.invalid['description']}\r\n            />\r\n            <TextInput\r\n              name=\"systemId\"\r\n              labelText={i18n.t('adminDashboard.addProject.systemId')}\r\n              value={this.state.systemId}\r\n              onChange={this.handleChanges}\r\n            />\r\n            <TextInput\r\n              name=\"contactName\"\r\n              labelText={i18n.t('adminDashboard.addProject.contactName')}\r\n              value={this.state.contactName}\r\n              onChange={this.handleChanges}\r\n            />\r\n            <TextInput\r\n              name=\"contactPhone\"\r\n              labelText={i18n.t('adminDashboard.addProject.contactPhone')}\r\n              value={this.state.contactPhone}\r\n              onChange={this.handleChanges}\r\n            />\r\n            <TextInput\r\n              name=\"contactEmail\"\r\n              labelText={i18n.t('adminDashboard.addProject.contactEmail') + \" *\"}\r\n              value={this.state.contactEmail}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.email')}\r\n              invalid={this.state.invalid['contactEmail']}\r\n            />\r\n            <TextArea\r\n              name=\"notes\"\r\n              labelText={i18n.t('adminDashboard.addProject.notes')}\r\n              value={this.state.notes}\r\n              onChange={this.handleChanges}\r\n            />\r\n          </Form>\r\n        </div>\r\n      </ModalWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withKeycloak(AddProjectModal);\r\n","import React, { Component } from 'react';\r\nimport i18n from '../../i18n';\r\nimport { ModalWrapper, Form, TextInput, Select, SelectItem, TextArea } from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport { apiCustomersGet, apiAddProjectToCustomer } from '../../api/customers';\r\nimport { apiProjectGet, apiProjectPut, apiProjectsGet } from '../../api/projects';\r\n\r\nclass EditProjectModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        this.state = {\r\n            projects: {},\r\n            customerList: {},\r\n            customerId: '',\r\n            name: '',\r\n            description: '',\r\n            systemId: '',\r\n            contactName: '',\r\n            contactPhone: '',\r\n            contactEmail:'',\r\n            notes:'',\r\n            invalid: {},\r\n            modalId: '',\r\n            buttonId: '',\r\n            submitMsg: '',\r\n            submitColour: 'black'\r\n        };\r\n    }\r\n\r\n    handleValidation() {\r\n        let invalid = {};\r\n        let formIsValid = true;\r\n\r\n        //name\r\n        if(this.state.name === ''){\r\n          formIsValid = false;\r\n          invalid[\"name\"] = true;\r\n        }\r\n\r\n        //description\r\n        if(this.state.description === ''){\r\n            formIsValid = false;\r\n            invalid[\"description\"] = true;\r\n        }\r\n\r\n        //contactEmail\r\n        if(typeof this.state.contactEmail !== \"undefined\"){\r\n          let lastAtPos = this.state.contactEmail.lastIndexOf('@');\r\n          let lastDotPos = this.state.contactEmail.lastIndexOf('.');\r\n    \r\n          if (!(lastAtPos < lastDotPos && lastAtPos > 0 && this.state.contactEmail.indexOf('@@') == -1 && lastDotPos > 2 && (this.state.contactEmail.length - lastDotPos) > 2)) {\r\n            formIsValid = false;\r\n            invalid[\"contactEmail\"] = true;\r\n          }\r\n        }\r\n    \r\n        this.setState({invalid: invalid});\r\n        return formIsValid;\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const { keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n    \r\n        const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n    \r\n        if (authenticated && changedAuth) {\r\n          this.getCustomers();\r\n          this.getAllProjects();\r\n          this.getProjectDetails();\r\n        }\r\n      }\r\n\r\n    handleChanges = e => {\r\n        const input = e.target;\r\n        const name = input.name;\r\n        const value = input.value;\r\n        this.setState({ [name]: value });\r\n    };\r\n\r\n    async getCustomers() {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n        if (authenticated) {\r\n            const customers = await apiCustomersGet(this.props.serviceUrl);\r\n            this.setState({customerList: customers})\r\n        }\r\n    }\r\n\r\n    async getProjectDetails() {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n        if (authenticated) {\r\n            const project = await apiProjectGet(this.props.serviceUrl, this.props.project.id);\r\n            this.setState({\r\n                name: project.data.name,\r\n                description: project.data.description,\r\n                systemId: project.data.systemId,\r\n                contactName: project.data.contactName,\r\n                contactPhone: project.data.contactPhone,\r\n                contactEmail:project.data.contactEmail,\r\n                notes:project.data.notes,\r\n                modalId: \"modal-form-project-edit-\" + project.data.id,\r\n                buttonId: \"edit-project-button-\" + project.data.id\r\n            })\r\n        }\r\n    }\r\n\r\n    async getAllProjects() {\r\n        const projects = await apiProjectsGet(this.props.serviceUrl);\r\n        this.setState({\r\n          projects: projects.data\r\n        });\r\n      }\r\n\r\n    async projectPut(project) {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n        if (authenticated) {\r\n            return await apiProjectPut(this.props.serviceUrl, project);\r\n        }\r\n    }\r\n\r\n    handleFormSubmit = (e) => {\r\n        const formIsValid = this.handleValidation();\r\n\r\n        if (formIsValid) {\r\n            const project = {\r\n                id: this.props.project.id,\r\n                customer: this.props.project.customer,\r\n                name: this.state.name,\r\n                description: this.state.description,\r\n                systemId: this.state.systemId,\r\n                contactName: this.state.contactName,\r\n                contactPhone: this.state.contactPhone,\r\n                contactEmail: this.state.contactEmail,\r\n                notes: this.state.notes\r\n            }\r\n            for (var i = 0; i < this.props.allProjects.length; i++) {\r\n                if((project.systemId === this.props.allProjects[i].systemId) && (project.id !== this.props.allProjects[i].id) && (project.systemId.trim() !== \"\")) {\r\n                    window.alert('That system id is already in use in another project');\r\n                    return;\r\n                }\r\n            }\r\n            this.projectPut(project).then(result => {\r\n                this.setState({\r\n                    submitMsg: i18n.t('submitMessages.updated'),\r\n                    submitColour: '#24a148'\r\n                })\r\n                this.props.updateProjectList();\r\n            }).catch(err => {\r\n                this.setState({\r\n                    submitMsg: i18n.t('submitMessages.error'),\r\n                    submitColour: '#da1e28'\r\n                })\r\n            });\r\n        }\r\n    };\r\n\r\n    clearValues = () => {\r\n        const { keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n        const customerModalElement = document.querySelector('#' + this.state.modalId);\r\n        if(!customerModalElement.className.includes(\"is-visible\") && authenticated) {\r\n            this.setState({\r\n                name: this.props.project.name,\r\n                description: this.props.project.description,\r\n                systemId: this.props.project.systemId,\r\n                contactName: this.props.project.contactName,\r\n                contactPhone: this.props.project.contactPhone,\r\n                contactEmail:this.props.project.contactEmail,\r\n                notes:this.props.project.notes,\r\n                invalid: {}\r\n            })\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n    \r\n        if (authenticated) {\r\n            this.getCustomers();\r\n            this.getAllProjects();\r\n            this.getProjectDetails();\r\n\r\n            const modalOpenButton = document.querySelector('.edit-project-button-' + this.props.project.id);\r\n            modalOpenButton.addEventListener(\"click\", this.clearValues, false);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const buttonClassName = \"bx--btn bx--btn--ghost edit-project-button-\" + this.props.project.id;\r\n        return (\r\n            <ModalWrapper\r\n                buttonTriggerText={i18n.t('buttons.edit')}\r\n                modalHeading={i18n.t('adminDashboard.addProject.editTitle')}\r\n                buttonTriggerClassName={buttonClassName}\r\n                className=\"modal-form\"\r\n                id={this.state.modalId}\r\n                handleSubmit={this.handleFormSubmit}\r\n                primaryButtonText={i18n.t('modalText.save')}\r\n                secondaryButtonText={i18n.t('modalText.cancel')}\r\n                modalLabel={<p style={{color: this.state.submitColour}}>{this.state.submitMsg}</p>}\r\n            >\r\n                <div className=\"form-container\">\r\n                    {/*<p> {i18n.t('adminDashboard.addProject.desc')} </p>*/}\r\n                    <Form onSubmit={this.handleFormSubmit}>\r\n                        <TextInput \r\n                            name=\"name\" \r\n                            labelText={i18n.t('adminDashboard.addProject.projectName') + \" *\"} \r\n                            value={this.state.name} \r\n                            onChange={this.handleChanges} \r\n                            invalidText={i18n.t('validation.invalid.required')} \r\n                            invalid={this.state.invalid[\"name\"]} \r\n                        />\r\n                        <TextInput \r\n                            name=\"description\" \r\n                            labelText={i18n.t('adminDashboard.addProject.projectDesc') + \" *\"} \r\n                            value={this.state.description} \r\n                            onChange={this.handleChanges} \r\n                            invalidText={i18n.t('validation.invalid.required')} \r\n                            invalid={this.state.invalid[\"description\"]} \r\n                        />\r\n                        <TextInput \r\n                            name=\"systemId\" \r\n                            labelText={i18n.t('adminDashboard.addProject.systemId')} \r\n                            value={this.state.systemId}\r\n                            onChange={this.handleChanges} \r\n                        />\r\n                        <TextInput \r\n                            name=\"contactName\" \r\n                            labelText={i18n.t('adminDashboard.addProject.contactName')} \r\n                            value={this.state.contactName} \r\n                            onChange={this.handleChanges} \r\n                        />\r\n                        <TextInput \r\n                            name=\"contactPhone\" \r\n                            labelText={i18n.t('adminDashboard.addProject.contactPhone')} \r\n                            value={this.state.contactPhone} \r\n                            onChange={this.handleChanges} \r\n                        />\r\n                        <TextInput \r\n                            name=\"contactEmail\" \r\n                            labelText={i18n.t('adminDashboard.addProject.contactEmail') + \" *\"} \r\n                            value={this.state.contactEmail} \r\n                            onChange={this.handleChanges} \r\n                            invalidText={i18n.t('validation.invalid.email')} \r\n                            invalid={this.state.invalid[\"contactEmail\"]} \r\n                        />\r\n                        <TextArea \r\n                            name=\"notes\" \r\n                            labelText={i18n.t('adminDashboard.addProject.notes')} \r\n                            value={this.state.notes} \r\n                            onChange={this.handleChanges} \r\n                        />\r\n                    </Form>\r\n                </div> \r\n            </ModalWrapper>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default withKeycloak(EditProjectModal)","import React, { Component } from 'react';\nimport { DataTable, TableContainer, Table, TableHead, TableRow, TableHeader, TableBody, TableCell } from 'carbon-components-react';\nimport '../../index.scss';\nimport { apiGetCustomersProjects, apiGetMyCustomersProjects } from '../../api/customers';\nimport withKeycloak from '../../auth/withKeycloak';\nimport { Link } from 'react-router-dom';\nimport i18n from '../../i18n';\nimport EditProjectModal from '../Admin/EditProjectModal'\nimport { isPortalAdmin, isPortalAdminOrSupport } from '../../api/helpers';\n\nclass CustomTable extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      projects: {}\n     }\n     this.headerData = [\n      {\n        header: i18n.t('customerDashboard.projectName'),\n        key: 'projectName',\n      },\n      {\n        header: i18n.t('customerDashboard.partners'),\n        key: 'partners',\n      },\n      {\n        header: i18n.t('customerDashboard.entandoVersion'),\n        key: 'entandoVersion',\n      },\n      {\n        header: i18n.t('customerDashboard.status'),\n        key: 'status',\n      },\n      {\n        header: i18n.t('customerDashboard.startDate'),\n        key: 'startDate',\n      },\n      {\n          header: i18n.t('customerDashboard.endDate'),\n          key: 'endDate',\n      },\n      {\n          header: i18n.t('customerDashboard.openTickets'),\n          key: 'openTickets',\n      },\n      {\n          header: i18n.t('customerDashboard.action'),\n          key: 'action',\n      }\n    ];\n  }\n\n  async fetchData() {\n    const { t, keycloak } = this.props;\n    const authenticated = keycloak.initialized && keycloak.authenticated;\n\n    if (authenticated) {\n      try {\n      var projects;\n      if (isPortalAdminOrSupport()) {\n        projects = await apiGetCustomersProjects(this.props.serviceUrl, this.props.customerNumber);\n      }\n      else {\n        projects = await apiGetMyCustomersProjects(this.props.serviceUrl, this.props.customerNumber);\n      }\n\n      this.setState({\n          projects: projects\n      });\n    } catch(error) {\n      console.log(error)\n    }\n    }\n    this.render();\n}\n\ncomponentDidMount(){\n  const { keycloak } = this.props;\n    const authenticated = keycloak.initialized && keycloak.authenticated;\n\n    if (authenticated) {\n      this.fetchData();\n    }\n}\n\nupdateProjectList = () => {\n  this.fetchData();\n}\n\ncomponentDidUpdate(prevProps) {\n    const { keycloak } = this.props;\n    const authenticated = keycloak.initialized && keycloak.authenticated;\n\n    const changedAuth = prevProps.keycloak.authenticated !== authenticated;\n\n    if (authenticated && changedAuth) {\n      this.fetchData();\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <DataTable rows={rowData} headers={this.headerData}>\n        {({ rows, headers, getHeaderProps, getTableProps }) => (\n          <TableContainer description={i18n.t('customerDashboard.tableDesc')}>\n            <Table {...getTableProps()}>\n              <TableHead>\n                <TableRow>\n                  {headers.map((header) => (\n                    <TableHeader {...getHeaderProps({ header })}>\n                      {header.header}\n                    </TableHeader>\n                  ))}\n                  {isPortalAdminOrSupport() ? <TableHeader>Notes</TableHeader> : null}\n                </TableRow>\n              </TableHead>\n              <TableBody>\n              {Object.keys(this.state.projects).length !== 0 ?\n                  this.state.projects.data.map((project, index) => {\n                    if (project.projectSubscriptions.length === 0) {\n                      return(\n                        <TableRow key={index} >\n                          <TableCell>{project.name}</TableCell>\n                          {project.partners.length !== 0 ?\n                            <TableCell>\n                              {project.partners.map(partner => (\n                                <p>{partner.name}</p>\n                              ))}\n                            </TableCell>\n                          : <TableCell>{i18n.t('userMessages.none')}</TableCell>}\n                          <TableCell>{i18n.t('userMessages.none')}</TableCell>\n                          <TableCell>{i18n.t('userMessages.none')}</TableCell>\n                          <TableCell>{i18n.t('userMessages.none')}</TableCell>\n                          <TableCell>{i18n.t('userMessages.none')}</TableCell>\n                          <TableCell>{project.tickets.length}</TableCell>\n                          <TableCell>{isPortalAdmin() ? <EditProjectModal key={project.id} allProjects={this.state.projects.data} project={project} serviceUrl={this.props.serviceUrl} updateProjectList={this.updateProjectList}/> : null}</TableCell>\n                          {isPortalAdminOrSupport() ? <TableCell style={{width: '350px'}}>{project.notes}</TableCell> : null}\n                      </TableRow>\n                      )\n                    }\n                    else {\n                      var sub = project.projectSubscriptions[project.projectSubscriptions.length - 1];\n                      return(\n                        <TableRow key={index} >\n                            <TableCell><Link to={`/subscription-details/${sub.id}`}>{project.name}</Link></TableCell>\n                            {project.partners.length !== 0 ?\n                              <TableCell>\n                                {project.partners.map(partner => (\n                                  <p>{partner.name}</p>\n                                ))}\n                              </TableCell>\n                              : <TableCell>{i18n.t('userMessages.none')}</TableCell>}\n                            {sub.entandoVersion ? <TableCell>{sub.entandoVersion.name}</TableCell> : <TableCell>{i18n.t('userMessages.none')}</TableCell>}\n                            <TableCell>{sub.status}</TableCell>\n                            <TableCell>{String(new Date(sub.startDate).toDateString())}</TableCell>\n                            <TableCell>{String(new Date(new Date(sub.startDate).setMonth(new Date(sub.startDate).getMonth() + sub.lengthInMonths)).toDateString())}</TableCell>\n                            <TableCell>{project.tickets.length}</TableCell>\n                            <TableCell>{isPortalAdmin() ? <EditProjectModal key={project.id} allProjects={this.state.projects.data} project={project} serviceUrl={this.props.serviceUrl} updateProjectList={this.updateProjectList}/> : null}</TableCell>\n                            {isPortalAdminOrSupport() ? <TableCell>{project.notes}</TableCell> : null}\n                        </TableRow>\n                      )\n                    }\n                  }) : null\n              }\n              </TableBody>\n            </Table>\n          </TableContainer>\n        )}\n      </DataTable>\n    </div>\n  )}\n}\n\n\nconst rowData = [\n  {\n       id: 'a',\n       projectName: <a href=\"\">Supplier Portal</a>,\n       partnerName: 'Leonardo',\n       entandoVersion: 5.2,\n       startDate: 'October, 2019',\n       endDate: 'October, 2022',\n       openTickets: '5',\n    },\n    {\n      id: 'b',\n      projectName: <a href=\"\">Task Manager</a>,\n      partnerName: 'Veriday',\n      entandoVersion: 5.2,\n      startDate: 'July, 2019',\n      endDate: 'July, 2022',\n      openTickets: '2',\n    },\n    {\n      id: 'c',\n      projectName: <a href=\"\">Sales Coordination App</a>,\n      partnerName: 'Accenture',\n      entandoVersion: 6.2,\n      startDate: 'September, 2019',\n      endDate: 'September, 2022',\n      openTickets: '2',\n    },\n    {\n      id: 'd',\n      projectName: <a href=\"\">Website</a>,\n      partnerName: 'Veriday',\n      entandoVersion: 5.2,\n      startDate: 'October, 2019',\n      endDate: 'October, 2022',\n      openTickets: '1',\n    }\n];\n\nexport default withKeycloak(CustomTable);\n","import React from 'react';\r\nimport i18n from '../../i18n';\r\nimport { Tile } from 'carbon-components-react';\r\nimport { apiCustomerGet } from '../../api/customers';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\n\r\nconst customerData = {\r\n  name: 'Ford',\r\n  id: '5564 4563 3345',\r\n  startDate: '01/01/2020'\r\n};\r\n\r\nclass CustomerDetails extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      customer: {}\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    const { keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n    if (authenticated) {\r\n      this.getCustomer(this.props.customerNumber);\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n    const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n\r\n    if (authenticated && changedAuth) {\r\n      this.getCustomer(this.props.customerNumber);\r\n    }\r\n  }\r\n\r\n  async getCustomer() {\r\n    const { keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n    if (authenticated) {\r\n      const customer = await apiCustomerGet(this.props.serviceUrl, this.props.customerNumber);\r\n      this.setState({\r\n        customer: customer.data\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { name, id, startDate } = customerData; //destructuring\r\n    return (\r\n      <div className=\"customer-details\">\r\n        <Tile>\r\n          <p>\r\n            <strong>{i18n.t('customerDashboard.customerName')}</strong> {this.state.customer.name}\r\n          </p>\r\n          <p>\r\n            <strong>{i18n.t('customerDashboard.customerId')}</strong> {this.state.customer.id}\r\n          </p>\r\n        </Tile>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withKeycloak(CustomerDetails);\r\n","import React, { Component } from 'react';\r\nimport i18n from '../../i18n';\r\nimport { ModalWrapper, Form, TextInput, TextArea } from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport { apiCustomerGet, apiCustomerPut } from '../../api/customers';\r\n\r\nclass EditCustomerModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            name: '',\r\n            customerNumber: '',\r\n            contactName: '',\r\n            contactPhone: '',\r\n            contactEmail: '',\r\n            notes: '',\r\n            invalid: {},\r\n            modalId: '',\r\n            buttonId: '',\r\n            submitMsg: '',\r\n            submitColour: 'black'\r\n        };\r\n    }\r\n\r\n    handleValidation() {\r\n        let invalid = {};\r\n        let formIsValid = true;\r\n\r\n        //name\r\n        if (this.state.name === '') {\r\n            formIsValid = false;\r\n            invalid['name'] = true;\r\n        }\r\n\r\n        //customerNumber\r\n        if (this.state.customerNumber === '') {\r\n            formIsValid = false;\r\n            invalid['customerNumber'] = true;\r\n        }\r\n\r\n        //contactEmail\r\n        if (typeof this.state.contactEmail !== 'undefined') {\r\n            let lastAtPos = this.state.contactEmail.lastIndexOf('@');\r\n            let lastDotPos = this.state.contactEmail.lastIndexOf('.');\r\n\r\n            if (\r\n                !(\r\n                    lastAtPos < lastDotPos &&\r\n                    lastAtPos > 0 &&\r\n                    this.state.contactEmail.indexOf('@@') == -1 &&\r\n                    lastDotPos > 2 &&\r\n                    this.state.contactEmail.length - lastDotPos > 2\r\n                )\r\n            ) {\r\n                formIsValid = false;\r\n                invalid['contactEmail'] = true;\r\n            }\r\n        }\r\n\r\n        this.setState({ invalid: invalid });\r\n        return formIsValid;\r\n    }\r\n\r\n    handleChanges = e => {\r\n        const input = e.target;\r\n        const name = input.name;\r\n        const value = input.value;\r\n        this.setState({ [name]: value });\r\n\r\n    };\r\n\r\n    async updateCustomer(customer) {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n        if (authenticated) {\r\n            return await apiCustomerPut(this.props.serviceUrl, customer);\r\n        }\r\n    }\r\n\r\n    getCustomerDetails = (customerId) => {\r\n        this.getCustomer(customerId)\r\n    }\r\n\r\n    async getCustomer(customerId) {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n        if (authenticated) {\r\n            const customer = await apiCustomerGet(this.props.serviceUrl, customerId);\r\n            this.setState({\r\n                name: customer.data.name,\r\n                customerNumber: customer.data.customerNumber,\r\n                contactName: customer.data.contactName,\r\n                contactPhone: customer.data.contactPhone,\r\n                contactEmail:customer.data.contactEmail,\r\n                notes:customer.data.notes,\r\n                modalId: \"modal-form-customer-edit-\" + customer.data.id,\r\n                buttonId: \"edit-customer-button-\" + customer.data.id\r\n              })\r\n        }\r\n    }\r\n\r\n    handleFormSubmit = e => {\r\n        const formIsValid = this.handleValidation();\r\n\r\n        if (formIsValid) {\r\n            const customer = {\r\n                id: this.props.customer.id,\r\n                name: this.state.name,\r\n                customerNumber: this.state.customerNumber,\r\n                contactName: this.state.contactName,\r\n                contactPhone: this.state.contactPhone,\r\n                contactEmail:this.state.contactEmail,\r\n                notes:this.state.notes\r\n            }\r\n            this.updateCustomer(customer).then(result => {\r\n                this.setState({\r\n                    submitMsg: i18n.t('submitMessages.updated'),\r\n                    submitColour: '#24a148'\r\n                })\r\n                this.props.updateCustomerList();\r\n                this.getCustomerDetails(this.props.customer.id);\r\n\r\n            }).catch(err => {\r\n                this.setState({\r\n                    submitMsg: i18n.t('submitMessages.error'),\r\n                    submitColour: '#da1e28'\r\n                })\r\n            });\r\n        }\r\n    };\r\n\r\n    clearValues = () => {\r\n        const { keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n        const customerModalElement = document.querySelector('#' + this.state.modalId);\r\n        if(!customerModalElement.className.includes(\"is-visible\") && authenticated) {\r\n            this.setState({\r\n                name: this.props.customer.name,\r\n                customerNumber: this.props.customer.customerNumber,\r\n                contactName: this.props.customer.contactName,\r\n                contactPhone: this.props.customer.contactPhone,\r\n                contactEmail:this.props.customer.contactEmail,\r\n                notes:this.props.customer.notes,\r\n                invalid: {}\r\n            })\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n    \r\n        if (authenticated) {\r\n            if (this.props.customerId) {\r\n                this.getCustomerDetails(this.props.customerId);\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n    \r\n        const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n    \r\n        if (authenticated && changedAuth) {\r\n              this.getCustomerDetails(this.props.customerId);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const buttonClassName = \"bx--btn bx--btn--ghost edit-customer-button-\" + this.props.customer.id;\r\n        return (\r\n            <ModalWrapper\r\n                buttonTriggerText={i18n.t('buttons.edit')}\r\n                modalHeading={i18n.t('adminDashboard.editCustomer.title')}\r\n                buttonTriggerClassName={buttonClassName}\r\n                className=\"modal-form\"\r\n                id={this.state.modalId}\r\n                handleSubmit={this.handleFormSubmit}\r\n                primaryButtonText={i18n.t('modalText.save')}\r\n                secondaryButtonText={i18n.t('modalText.cancel')}\r\n                modalLabel={<p style={{color: this.state.submitColour}}>{this.state.submitMsg}</p>}\r\n            >\r\n                <div className=\"form-container\">\r\n                    <Form onSubmit={this.handleFormSubmit}>\r\n                        <TextInput\r\n                            name=\"name\"\r\n                            labelText={i18n.t('adminDashboard.addCustomer.customerName') + \" *\"}\r\n                            value={this.state.name}\r\n                            onChange={this.handleChanges}\r\n                            invalidText={i18n.t('validation.invalid.required')}\r\n                            invalid={this.state.invalid['name']}\r\n                        />\r\n                        <TextInput\r\n                            name=\"customerNumber\"\r\n                            labelText={i18n.t('adminDashboard.addCustomer.customerNumber') + \" *\"}\r\n                            value={this.state.customerNumber}\r\n                            onChange={this.handleChanges}\r\n                            invalidText={i18n.t('validation.invalid.required')}\r\n                            invalid={this.state.invalid['customerNumber']}\r\n                        />\r\n                        <TextInput\r\n                            name=\"contactName\"\r\n                            labelText={i18n.t('adminDashboard.addCustomer.contactName')}\r\n                            value={this.state.contactName}\r\n                            onChange={this.handleChanges}\r\n                        />\r\n                        <TextInput\r\n                            name=\"contactPhone\"\r\n                            labelText={i18n.t('adminDashboard.addCustomer.contactPhone')}\r\n                            value={this.state.contactPhone}\r\n                            onChange={this.handleChanges}\r\n                        />\r\n                        <TextInput\r\n                            name=\"contactEmail\"\r\n                            labelText={i18n.t('adminDashboard.addCustomer.contactEmail') + \" *\"}\r\n                            value={this.state.contactEmail}\r\n                            onChange={this.handleChanges}\r\n                            invalidText={i18n.t('validation.invalid.email')}\r\n                            invalid={this.state.invalid['contactEmail']}\r\n                        />\r\n                        <TextArea\r\n                            name=\"notes\"\r\n                            labelText={i18n.t('adminDashboard.addCustomer.notes')}\r\n                            value={this.state.notes}\r\n                            onChange={this.handleChanges}\r\n                        />\r\n                    </Form>\r\n                </div>\r\n            </ModalWrapper>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withKeycloak(EditCustomerModal);\r\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { AccordionItem, Button } from 'carbon-components-react';\nimport withKeycloak from '../../auth/withKeycloak';\nimport { apiCustomerGet, apiCustomerDelete, apiGetCustomersProjects,  apiGetMyCustomersProjects } from '../../api/customers';\nimport CustomTable from './customDataTable';\nimport CustomerDetails from './customerDetails';\nimport { isPortalAdminOrSupport, isPortalAdmin, isPortalCustomer } from '../../api/helpers';\nimport EditCustomerModal from '../Admin/EditCustomerModal';\nimport i18n from '../../i18n';\n\nclass CustomerAccordian extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            projects: {},\n            customer: {},\n            authenticated: false\n        }\n    }\n\n    componentDidMount(){\n        const { keycloak } = this.props;\n        const authenticated = keycloak.initialized && keycloak.authenticated;\n\n        if (authenticated) {\n            this.getCustomersProjects(this.props.customerNumber);\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        const { keycloak } = this.props;\n        const authenticated = keycloak.initialized && keycloak.authenticated;\n\n        const changedAuth = prevProps.keycloak.authenticated !== authenticated;\n\n        if (authenticated && changedAuth) {\n            this.getCustomersProjects(this.props.customerNumber);\n        }\n      }\n\n    async getCustomersProjects(id) {\n        const { t, keycloak } = this.props;\n        const authenticated = keycloak.initialized && keycloak.authenticated;\n        if (authenticated) {\n            const customer = await apiCustomerGet(this.props.serviceUrl, id);\n\n            var projects;\n            try {\n                if (isPortalAdminOrSupport()) {\n                    projects = await apiGetCustomersProjects(this.props.serviceUrl, id);\n                }\n                else {\n                    projects = await apiGetMyCustomersProjects(this.props.serviceUrl, id);\n                }\n\n                this.setState({\n                    projects: projects.data,\n                    customer: customer.data\n                })\n            } catch(error) {\n                console.log(error)\n            }\n        }\n    }\n\n    async deleteCustomer() {\n        return await apiCustomerDelete(this.props.serviceUrl, this.state.customer.id);\n    }\n\n    handleDelete(e) {\n        if (window.confirm(\"Are you sure you want to delete this customer?\")) {\n            this.deleteCustomer().then(result => {\n                this.props.updateCustomerList();\n            });\n        }\n    }\n\n    render() {\n        var { t, keycloak } = this.props;\n        var authenticated = keycloak.initialized && keycloak.authenticated;\n\n        return(\n            <div>\n                <div>\n                    {isPortalCustomer() ?\n                        <CustomerDetails serviceUrl={this.props.serviceUrl} customerNumber={this.props.customerNumber} /> : null\n                    }\n                    <AccordionItem title={this.props.title} open={this.props.accordionOpened}>\n                        <div style={{display: 'flex'}}>\n                            {isPortalAdminOrSupport() ?\n                                <Link style={{textDecoration: 'none'}} to={`/customer-details/${this.state.customer.id}`}><Button kind='ghost'>{i18n.t('buttons.viewDetails')}</Button></Link>  : null\n                            }\n                            {isPortalAdmin() ?\n                                <div style={{display: 'flex'}}>\n                                    <EditCustomerModal serviceUrl={this.props.serviceUrl} customer={this.state.customer} key={this.state.customer.id} updateCustomerList={this.props.updateCustomerList} customerId={this.state.customer.id}/>\n                                    <Button kind='ghost' style={{color: 'red'}} onClick={() => this.handleDelete()}>{i18n.t('buttons.delete')}</Button>\n                                </div>  : null\n                            }\n                        </div>\n                        <CustomTable key={(new Date).getTime()} serviceUrl={this.props.serviceUrl} customerNumber={this.props.customerNumber} locale={this.props.locale} />\n                    </AccordionItem>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default withKeycloak(CustomerAccordian);\n","import React from 'react';\nimport i18n from '../../i18n';\nimport { Accordion, PaginationNav, Search, Tile} from 'carbon-components-react';\nimport AddCustomerModal from './AddCustomerModal';\nimport AddPartnerModal from './AddPartnerModal';\nimport AddProjectModal from './AddProjectModal'\nimport withKeycloak from '../../auth/withKeycloak';\nimport { apiAdminCustomersGet, apiMyCustomersGet } from '../../api/customers';\nimport CustomerAccordian from '../Customer/CustomerAccordian';\nimport {\n  isPortalAdmin,\n  isPortalSupport,\n  isPortalPartner,\n  isPortalCustomer,\n  isPortalAdminOrSupport, isPortalUser\n} from '../../api/helpers';\nimport { apiProjectsGet, apiMyProjectsGet } from '../../api/projects';\n\nclass AdminDashboard extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            customers: {},\n            projects: {},\n            customersProjects: {},\n            role: '',\n            filteredCustomers: {},\n            currentPage: 0,\n            test: ''\n        }\n    }\n\n    componentDidMount(){\n        this.getCustomers();\n        this.getProjects();\n    }\n\n    componentDidUpdate(prevProps) {\n        const { keycloak } = this.props;\n        const authenticated = keycloak.initialized && keycloak.authenticated;\n\n        const changedAuth = prevProps.keycloak.authenticated !== authenticated;\n\n        if (authenticated && changedAuth) {\n          this.getCustomers();\n          this.getProjects();\n        }\n      }\n\n    async getProjects() {\n        const { keycloak } = this.props;\n        const authenticated = keycloak.initialized && keycloak.authenticated;\n        if (authenticated) {\n            var projects = ''\n            if (isPortalAdminOrSupport()) {\n                projects = await apiProjectsGet(this.props.serviceUrl);\n            }\n            else {\n                projects = await apiMyProjectsGet(this.props.serviceUrl);\n            }\n            this.setState({\n                projects: projects.data,\n            })\n        }\n    }\n\n\n    async getCustomers() {\n        const { keycloak } = this.props;\n        const authenticated = keycloak.initialized && keycloak.authenticated;\n        if (authenticated) {\n            var customers;\n            if (isPortalAdminOrSupport()) {\n                customers = await apiAdminCustomersGet(this.props.serviceUrl);\n            }\n            else {\n                customers = await apiMyCustomersGet(this.props.serviceUrl);\n            }\n\n            this.setState({\n                customers: customers.data,\n                filteredCustomers: customers.data\n            })\n        }\n    }\n\n    handleSearch = (event) => {\n        if (event.key === 'Enter') {\n            const newFilteredState = this.state.customers.filter(customer => customer.name.toLowerCase().includes(event.target.value.toLowerCase()))\n            this.setState({\n                filteredCustomers: newFilteredState,\n                currentPage: 0\n            })\n        }\n        else {\n            if (event.target.value === '' || event.target.value === undefined) {\n                this.setState({\n                    filteredCustomers: this.state.customers\n                })\n            }\n        }\n        this.forceUpdate();\n    }\n\n    updateCustomerList = () => {\n        this.getCustomers();\n        this.getProjects();\n    }\n\n    render(){\n        var numberOfPages = 1;\n        if (Object.keys(this.state.filteredCustomers).length !== 0) {\n            numberOfPages = Math.ceil(this.state.filteredCustomers.length / 5);\n        }\n        else {\n            numberOfPages = 1;\n        }\n\n        const props = () => ({\n            loop: Boolean(false),\n            page: Number(this.state.currentPage),\n            totalItems: Number(numberOfPages),\n            itemsShown: Number(1),\n            onChange: (event) => this.setState({currentPage: event}),\n        });\n\n        return(\n            <div className=\"admin-dashboard\">\n                {isPortalAdmin() ?\n                    <h3 className=\"pageTitle\">{i18n.t('adminDashboard.adminTitle')}</h3> :\n                  isPortalSupport() ?\n                    <h3 className=\"pageTitle\">{i18n.t('adminDashboard.supportTitle')}</h3> :\n                  isPortalCustomer() ?\n                    <h3 className=\"pageTitle\">{i18n.t('adminDashboard.customerTitle')}</h3> :\n                  isPortalPartner() ?\n                    <h3 className=\"pageTitle\">{i18n.t('adminDashboard.partnerTitle')}</h3> :\n                null}\n            {isPortalAdmin() || isPortalSupport() || isPortalPartner() ?\n                <Tile>\n                    <p className=\"title\">{i18n.t('adminDashboard.allCustomers')}</p>\n                    <div className=\"bx--row\">\n                        <div className=\"bx--col\">\n                            <Search onChange={this.handleSearch} id=\"search\" placeHolderText={i18n.t('adminDashboard.searchText')} onKeyPress={this.handleSearch}/>\n                        </div>\n                        {isPortalAdmin() ?\n                        <div className=\"bx--col\">\n\n                            <div>\n                                <AddPartnerModal serviceUrl={this.props.serviceUrl} updateCustomerList={this.updateCustomerList} allProjects={this.state.projects} />\n                                <AddCustomerModal serviceUrl={this.props.serviceUrl} updateCustomerList={this.updateCustomerList} />\n                                <AddProjectModal serviceUrl={this.props.serviceUrl} updateCustomerList={this.updateCustomerList} allCustomers={this.state.customers} />\n                            </div>\n                        </div> : null}\n                    </div>\n                </Tile>\n                : null\n            }\n\n                <div className=\"form-container\">\n                    <Accordion>\n                        {Object.keys(this.state.customers).length !== 0 ? this.state.filteredCustomers.map((customer, index) => {\n                            // Pagination for Admin and Support roles (5 items per page)\n                            var indexOfLastItem = ((this.state.currentPage + 1) * 5) - 1;\n                            var firstIndexOfCurrentPage = this.state.currentPage * 5;\n                            var accordionOpened = this.state.customers.length === 1;\n\n                            if (isPortalUser()) {\n                                if (index >= firstIndexOfCurrentPage && index <= indexOfLastItem) {\n                                    return(\n                                        <CustomerAccordian key={customer.id} serviceUrl={this.props.serviceUrl} customerNumber={customer.id} title={customer.name} updateCustomerList={this.updateCustomerList} locale={this.props.locale} accordionOpened={accordionOpened}/>\n                                    )\n                                }\n                                else {\n                                    return null\n                                }\n                            }\n                            else {\n                                return null\n                            }\n                        }) : null}\n                    </Accordion>\n                    <PaginationNav {...props()} cssClass='pagination-right' />\n                </div>\n            </div>\n        )\n    }\n\n}\n\nexport default withKeycloak(AdminDashboard);\n","export const publishWidgetEvent = (eventId, payload) => {\r\n  const widgetEvent = new CustomEvent(eventId, {\r\n    detail: {\r\n      payload,\r\n    },\r\n  });\r\n  window.dispatchEvent(widgetEvent);\r\n};\r\n\r\nexport const createWidgetEventPublisher = eventType => payload =>\r\n  publishWidgetEvent(eventType, payload);\r\n\r\nexport const subscribeToWidgetEvent = (eventType, eventHandler) => {\r\n  window.addEventListener(eventType, eventHandler);\r\n\r\n  return () => {\r\n    window.removeEventListener(eventType, eventHandler);\r\n  };\r\n};\r\n\r\nexport const subscribeToWidgetEvents = (widgetEvents, eventHandler) => {\r\n  widgetEvents.forEach(eventType => window.addEventListener(eventType, eventHandler));\r\n\r\n  return () => {\r\n    widgetEvents.forEach(eventType => window.removeEventListener(eventType, eventHandler));\r\n  };\r\n};\r\n\r\nexport const widgetEventToFSA = widgetEvent => {\r\n  // for info about Flux Standard Action (FSA) see https://github.com/redux-utilities/flux-standard-action\r\n  const {\r\n    type,\r\n    detail: { payload, error, meta },\r\n  } = widgetEvent;\r\n  return { type, payload, error, meta };\r\n};\r\n","export const INPUT_EVENT_TYPES = {\r\n    formUpdate: 'customer.form.update',\r\n    formCreate: 'customer.form.create',\r\n    formDelete: 'customer.form.delete',\r\n  };\r\n  \r\n  export const OUTPUT_EVENT_TYPES = {\r\n    select: 'customer.table.select',\r\n    add: 'customer.table.add',\r\n    error: 'customer.table.error',\r\n    delete: 'customer.table.delete',\r\n  };\r\n  \r\n  export const KEYCLOAK_EVENT_TYPE = 'keycloak';\r\n  ","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport AdminDashboard from '../components/Admin/AdminDashboard';\r\nimport '../index.scss'\r\nimport './dashboard.css'\r\n\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\n\r\nimport {\r\n  subscribeToWidgetEvent\r\n} from '../helpers/widgetEvents';\r\nimport {\r\n  KEYCLOAK_EVENT_TYPE,\r\n} from '../custom-elements/widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window &&\r\n    window.entando &&\r\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\nconst ATTRIBUTES = {\r\n  hidden: 'hidden',\r\n  locale: 'locale',\r\n  paginationMode: 'pagination-mode',\r\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n  serviceUrl: 'service-url',\r\n};\r\n\r\nclass AdminDashboardElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    \r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    //retargetEvents(shadowRoot);\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <AdminDashboard serviceUrl={serviceUrl} />\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.define('admin-dashboard-widget', AdminDashboardElement);\r\n","import { getDefaultOptions, request, getUrl } from './helpers';\r\n\r\nconst resource = 'api/tickets';\r\n\r\nexport const apiTicketDelete = async (serviceUrl, id) => {\r\n  const url = `${serviceUrl}/${resource}/${id}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiTicketsGet = async (serviceUrl ) => {\r\n\r\n  const url = getUrl(\r\n    `${serviceUrl}/${resource}`\r\n  );\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiTicketPost = async (serviceUrl, ticket) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n    body: ticket ? JSON.stringify(ticket) : null,\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\n\r\nconst jiraResource = 'api/tickets/ticketingsystem';\r\nexport const apiJiraTicketDelete = async (serviceUrl, id) => {\r\n  const url = `${serviceUrl}/${jiraResource}/${id}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiJiraTicketsGet = async (serviceUrl, projectName, organization) => {\r\n  const url = `${serviceUrl}/${jiraResource}/${projectName}/${organization}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiJiraTicketPost = async (serviceUrl, projectName, organization, ticket) => {\r\n  const url = `${serviceUrl}/${jiraResource}/${projectName}/${organization}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n    body: ticket ? JSON.stringify(ticket) : null,\r\n  };\r\n  return request(url, options);\r\n};","import { getDefaultOptions, request, getUrl } from './helpers';\r\n\r\nconst resource = 'api/ticketing-systems';\r\n\r\nexport const apiTicketingSystemDelete = async (serviceUrl, id) => {\r\n  const url = `${serviceUrl}/${resource}/${id}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiTicketingSystemsGet = async (serviceUrl) => {\r\n  const url = getUrl(\r\n    `${serviceUrl}/${resource}`\r\n  );\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiTicketingSystemPost = async (serviceUrl, ticketingsystem) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n    body: ticketingsystem ? JSON.stringify(ticketingsystem) : null,\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiTicketingSystemPut = async (serviceUrl, ticketingsystem) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'PUT',\r\n    body: ticketingsystem ? JSON.stringify(ticketingsystem) : null,\r\n  };\r\n  return request(url, options);\r\n};","import React, { Component } from 'react';\nimport { DataTable, TableContainer, Table, TableHead, TableRow, TableHeader, TableBody, TableCell, PaginationNav } from 'carbon-components-react';\nimport { apiJiraTicketsGet } from '../../api/tickets';\nimport { apiTicketingSystemsGet } from '../../api/ticketingsystem';\nimport withKeycloak from '../../auth/withKeycloak';\nimport { apiProjectGet, apiAddTicketToProject } from '../../api/projects';\nimport { isPortalUser } from '../../api/helpers';\nimport i18n from '../../i18n';\n\nclass TicketList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tickets: {},\n      project: {},\n      currentTicketingSystem: {},\n      currentPage: 0\n     }\n     this.headerData = [\n      {\n        header: i18n.t('ticketDetails.issue'),\n        key: 'issue',\n      },\n      {\n        header: i18n.t('ticketDetails.description'),\n        key: 'description',\n      },\n      {\n        header: i18n.t('ticketDetails.status'),\n        key: 'status',\n      },\n      {\n        header: i18n.t('ticketDetails.type'),\n        key: 'type',\n      },\n      {\n        header: i18n.t('ticketDetails.priority'),\n        key: 'priority',\n      },\n      {\n        header: i18n.t('ticketDetails.created'),\n        key: 'created',\n      },\n      {\n        header: i18n.t('ticketDetails.updated'),\n        key: 'updated',\n      },\n      {\n        header: i18n.t('ticketDetails.link'),\n        key: 'link',\n      }\n    ];\n  }\n\n  async fetchData() {\n    const { t, keycloak } = this.props;\n    var authenticated = keycloak.initialized && keycloak.authenticated;\n\n    if (authenticated) {\n      try {\n          const project = await apiProjectGet(this.props.serviceUrl, this.props.projectId);\n          const ticketingSystems = await apiTicketingSystemsGet(this.props.serviceUrl);\n          const currentTicketingSystem = ticketingSystems.data[ticketingSystems.data.length-1]\n          var tickets = await apiJiraTicketsGet(this.props.serviceUrl, currentTicketingSystem.systemId, project.data.systemId);\n          for(var i = 0; i < tickets.data.length; i++) {\n            apiAddTicketToProject(this.props.serviceUrl, this.props.projectId, tickets.data[i].id);\n          }\n\n          this.setState({\n              tickets: tickets,\n              project: project,\n              currentTicketingSystem: currentTicketingSystem\n          });\n      }\n      catch(err) {\n        console.log(err)\n      }\n    }\n}\n\ncomponentDidMount(){\n  if (isPortalUser()) {\n    this.fetchData();\n  }\n}\n\ncomponentDidUpdate(prevProps) {\n  const { keycloak } = this.props;\n  const authenticated = keycloak.initialized && keycloak.authenticated;\n\n  const changedAuth = prevProps.keycloak.authenticated !== authenticated;\n\n  if (authenticated && changedAuth && isPortalUser()) {\n    this.fetchData();\n  }\n}\n\n  render() {\n    var numberOfPages = 1;\n    if (Object.keys(this.state.tickets).length !== 0) {\n        numberOfPages = Math.ceil(this.state.tickets.data.length / 10);\n    }\n\n    const paginationProps = () => ({\n      loop: Boolean(false),\n      page: Number(this.state.currentPage),\n      totalItems: Number(numberOfPages),\n      itemsShown: Number(1),\n      onChange: (event) => this.setState({currentPage: event}),\n    });\n\n    return (\n      <div>\n        <DataTable rows={rowData} headers={this.headerData}>\n        {({ rows, headers, getHeaderProps, getTableProps }) => (\n          <TableContainer\n            title={i18n.t('ticketDetails.listOfTickets')}\n            description={Object.keys(this.state.tickets).length !== 0 && Object.keys(this.state.project).length !== 0  ? <a href={this.state.currentTicketingSystem.url.substr(0, this.state.currentTicketingSystem.url.indexOf(\"/rest\")) + \"/browse/\" + this.state.tickets.data[0].systemId + \"?jql=Organizations=\" + this.state.project.data.systemId} style={{textDecoration: 'none'}} target=\"_blank\" >{i18n.t('ticketDetails.tickets')}</a> : <a>{i18n.t('ticketDetails.tickets')}</a>}\n          >\n            <Table {...getTableProps()}>\n              <TableHead>\n                <TableRow>\n                  {headers.map((header) => (\n                    <TableHeader {...getHeaderProps({ header })}>\n                      {header.header}\n                    </TableHeader>\n                  ))}\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {Object.keys(this.state.tickets).length !== 0 ? this.state.tickets.data.map((ticket, index) => {\n                  var indexOfLastItem = ((this.state.currentPage + 1) * 10) - 1;\n                  var firstIndexOfCurrentPage = this.state.currentPage * 10;\n\n                  if (index >= firstIndexOfCurrentPage && index <= indexOfLastItem) {\n                    return (\n                      <TableRow key={ticket.id}>\n                        <TableCell key={ticket.id}>{ticket.systemId}</TableCell>\n                        <TableCell key={ticket.id}>{ticket.description}</TableCell>\n                        <TableCell key={ticket.id}>{ticket.status}</TableCell>\n                        <TableCell key={ticket.id}>{ticket.type}</TableCell>\n                        <TableCell key={ticket.id}>{ticket.priority}</TableCell>\n                        <TableCell key={ticket.id}>{new Date(ticket.createDate).toDateString()}</TableCell>\n                        <TableCell key={ticket.id}>{new Date(ticket.updateDate).toDateString()}</TableCell>\n                        <TableCell key={ticket.id}><a href={this.state.currentTicketingSystem.url.substr(0, this.state.currentTicketingSystem.url.indexOf(\"/rest\")) + \"/browse/\" + ticket.systemId} target=\"_blank\">{i18n.t('ticketDetails.viewTicket')}</a></TableCell>\n                      </TableRow>\n                    )\n                  }\n                  else {\n                    return(null)\n                  }\n                }) : <p></p> }\n              </TableBody>\n            </Table>\n          </TableContainer>\n        )}\n      </DataTable>\n      <PaginationNav {...paginationProps()} cssClass='pagination-right' />\n    </div>\n  )}\n}\n\nconst rowData = [\n  {\n       id: 'a',\n       projectName: 'Ticket1',\n       project: 'Leonardo',\n       entandoVersion: 6.2,\n       creationDate: 'October, 2019',\n       openTicket: <a href=\"\">Open Ticket</a>,\n    },\n    {\n        id: 'a',\n        projectName: 'Ticket1',\n        project: 'Leonardo',\n        entandoVersion: 6.2,\n        creationDate: 'October, 2019',\n        openTicket: <a href=\"\">Open Ticket</a>,\n    },\n    {\n        id: 'a',\n        projectName: 'Ticket1',\n        project: 'Leonardo',\n        entandoVersion: 6.2,\n        creationDate: 'October, 2019',\n        openTicket: <a href=\"\">Open Ticket</a>,\n     },\n\n];\n\nexport default withKeycloak(TicketList);\n","import { getDefaultOptions, request } from './helpers';\r\n\r\nconst resource = 'api/project-subscriptions'\r\n\r\nexport const apiSubscriptionGet = async (serviceUrl, id) => {\r\n    const url = `${serviceUrl}/${resource}/${id}`;\r\n    const options = {\r\n        ...getDefaultOptions(),\r\n        method: 'GET',\r\n    };\r\n    return request(url, options);\r\n};\r\n\r\n\r\nexport const apiSubscriptionGetAll = async (serviceUrl) => {\r\n    const url = `${serviceUrl}/${resource}`;\r\n    const options = {\r\n        ...getDefaultOptions(),\r\n        method: 'GET',\r\n    };\r\n    return request(url, options);\r\n};\r\n\r\n// Project Subscription creation consists of an object containing a projectSubscription, an entandoVersionId, and a\r\n// project id, see SubscriptionCreationRequest.\r\n/**\r\n * Called to create a new project subscription\r\n * \r\n * @param {string} serviceUrl \r\n * @param {ProjectSubscriptionCreation} projectSubscriptionCreation \r\n * @returns \r\n */\r\nexport const apiProjectSubscriptionPost = async (serviceUrl, projectSubscriptionCreation) => {\r\n    const url = `${serviceUrl}/${resource}`;\r\n    const options = {\r\n        ...getDefaultOptions(),\r\n        method: 'POST',\r\n        body: projectSubscriptionCreation ? JSON.stringify(projectSubscriptionCreation) : null,\r\n    };\r\n    return request(url, options);\r\n};\r\n\r\nexport const apiProjectSubscriptionPut = async (serviceUrl, projectSubscriptionCreation) => {\r\n    const url = `${serviceUrl}/${resource}`;\r\n    const options = {\r\n        ...getDefaultOptions(),\r\n        method: 'PUT',\r\n        body: projectSubscriptionCreation ? JSON.stringify(projectSubscriptionCreation) : null,\r\n    };\r\n    return request(url, options);\r\n};\r\n\r\nconst myResource = 'api/project-subscriptions/mysubscription'\r\nexport const apiGetMySubscription = async (serviceUrl, customerId) => {\r\n    const url = `${serviceUrl}/${myResource}/${customerId}`;\r\n    const options = {\r\n      ...getDefaultOptions(),\r\n      method: 'GET'\r\n    };\r\n  \r\n    return request(url, options);\r\n  };\r\n\r\n  // Same format as {projectSubscriptionCreation}\r\nexport const apiRenewSubscription = async (serviceUrl, projectSubscriptionRenew) => {\r\n    const url = `${serviceUrl}/${resource}/renew`;\r\n\r\n    const options = {\r\n        ...getDefaultOptions(),\r\n        method: 'PUT',\r\n        body: projectSubscriptionRenew ? JSON.stringify(projectSubscriptionRenew) : null\r\n    };\r\n\r\n    return request(url, options);\r\n};","import React, { Component } from 'react';\r\nimport i18n from '../../i18n';\r\nimport { ModalWrapper, Form, TextInput, TextArea, Select, SelectItem, DatePicker, DatePickerInput} from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport { apiProjectSubscriptionPut, apiSubscriptionGet } from '../../api/subscriptions';\r\nimport moment from 'moment';\r\n\r\nclass EditSubscriptionModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            level: '',\r\n            status: '',\r\n            lengthInMonths: '',\r\n            startDate: '',\r\n            notes: '',\r\n            invalid: {},\r\n            submitMsg: '',\r\n            submitColour: 'black'\r\n        };\r\n    }\r\n\r\n    handleValidation() {\r\n        let invalid = {};\r\n        let formIsValid = true;\r\n\r\n        if (this.state.level === 'level') {\r\n            formIsValid = false;\r\n            invalid['level'] = true;\r\n        }\r\n\r\n        if (this.state.status === 'status') {\r\n            formIsValid = false;\r\n            invalid['status'] = true;\r\n        }\r\n\r\n        if (this.state.lengthInMonths === '' || !this.isNumeric(String(this.state.lengthInMonths))) {\r\n            formIsValid = false;\r\n            invalid['lengthInMonths'] = true;\r\n        }\r\n\r\n        if(typeof this.state.startDate !== \"undefined\"){\r\n            if(!this.state.startDate.match(/^(0[1-9]|1[0-2])\\/(0[1-9]|1\\d|2\\d|3[01])\\/(19|20)\\d{2}$/)){\r\n              formIsValid = false;\r\n              invalid['startDate'] = true;\r\n            }\r\n        }\r\n\r\n        this.setState({ invalid: invalid });\r\n        return formIsValid;\r\n    }\r\n\r\n    isNumeric(str) {\r\n        if (typeof str != \"string\")\r\n            return false\r\n        return !isNaN(str) && !isNaN(parseFloat(str))\r\n    }\r\n\r\n    handleChanges = e => {\r\n        const input = e.target;\r\n        const name = input.name;\r\n        const value = input.value;\r\n        this.setState({ [name]: value });\r\n    };\r\n\r\n    handleFormSubmit = (e) => {\r\n        const formIsValid = this.handleValidation();\r\n\r\n        if (formIsValid) {\r\n            const subscriptionRequest = {\r\n                projectSubscription : {\r\n                    id: this.props.subscription.id,\r\n                    level: this.state.level,\r\n                    status: this.state.status,\r\n                    lengthInMonths: this.state.lengthInMonths,\r\n                    startDate: moment(this.state.startDate).format(),\r\n                    notes: this.state.notes,\r\n                    project: this.props.project,\r\n                    entandoVersion: this.props.subscription.entandoVersion\r\n                }\r\n            }\r\n            this.subscriptionPut(subscriptionRequest).then(result => {\r\n                this.setState({\r\n                    submitMsg: i18n.t('submitMessages.updated'),\r\n                    submitColour: '#24a148'\r\n                })\r\n                this.props.updateSubscription();\r\n            }).catch(err => {\r\n                this.setState({\r\n                    submitMsg: i18n.t('submitMessages.error'),\r\n                    submitColour: '#da1e28'\r\n                })\r\n            });\r\n        }\r\n    };\r\n\r\n    componentDidMount() {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n        if (authenticated) {\r\n            this.getSubscriptionDetails();\r\n\r\n        }\r\n    }\r\n\r\n    handleStartDateChange = (date) => {\r\n        this.setState({\r\n            startDate: moment(date[0].toISOString()).format('MM/DD/YYYY')\r\n        })\r\n    }\r\n\r\n    async getSubscriptionDetails() {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n        if (authenticated) {\r\n            const subscription =  await apiSubscriptionGet(this.props.serviceUrl, this.props.subscription.id);\r\n            this.setState({\r\n                level: subscription.data.level,\r\n                status: subscription.data.status,\r\n                lengthInMonths: subscription.data.lengthInMonths,\r\n                startDate: moment(subscription.data.startDate).format('MM/DD/YYYY'),\r\n                notes: subscription.data.notes,\r\n                submitMsg: ''\r\n            })\r\n        }\r\n    }\r\n\r\n    async subscriptionPut(subscription) {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n        if (authenticated) {\r\n            return await apiProjectSubscriptionPut(this.props.serviceUrl, subscription);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const levelList = ['GOLD', 'PLATINUM'];\r\n        const statusList = ['REQUESTED', 'PENDING', 'ACTIVE', 'EXPIRED'];\r\n        return (\r\n            <ModalWrapper\r\n                buttonTriggerText={i18n.t('buttons.edit')}\r\n                modalHeading={i18n.t('editSubscription.title')}\r\n                buttonTriggerClassName=\"add-project bx--btn bx--btn--tertiary edit-sub-button\"\r\n                className=\"modal-form\"\r\n                id=\"modal-form-sub-edit\"\r\n                handleSubmit={this.handleFormSubmit}\r\n                primaryButtonText={i18n.t('modalText.save')}\r\n                secondaryButtonText={i18n.t('modalText.cancel')}\r\n                modalLabel={<p style={{color: this.state.submitColour}}>{this.state.submitMsg}</p>}\r\n            >\r\n                {/*<p> Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse cursus fermentum risus, sit amet fringilla nunc pellentesque quis. </p>*/}\r\n                <div className=\"form-container\">\r\n                    <Form onSubmit={this.handleFormSubmit}>\r\n                        <Select\r\n                            name=\"level\"\r\n                            labelText={i18n.t('subscriptionDetails.level') + \" *\"}\r\n                            value={this.state.level}\r\n                            onChange={this.handleChanges}\r\n                            invalidText={i18n.t('validation.invalid.required')}\r\n                            invalid={this.state.invalid['level']}\r\n                            >\r\n                            <SelectItem disabled text=\"Select Level\" value=\"level\" />\r\n                            {levelList.map((level, i) => (\r\n                                    <SelectItem key={i} text={level} value={level}>\r\n                                        {level}\r\n                                    </SelectItem>\r\n                            ))}\r\n                        </Select>\r\n                        <Select\r\n                            name=\"status\"\r\n                            labelText={i18n.t('subscriptionDetails.status') + \" *\"}\r\n                            value={this.state.status}\r\n                            onChange={this.handleChanges}\r\n                            invalidText={i18n.t('validation.invalid.required')}\r\n                            invalid={this.state.invalid['status']}\r\n                            >\r\n                            <SelectItem disabled text=\"Select Status\" value=\"status\" />\r\n                            {statusList.map((status, i) => (\r\n                                <SelectItem key={i} text={status} value={status}>\r\n                                    {status}\r\n                                </SelectItem>\r\n                            ))}\r\n                        </Select>\r\n                        <DatePicker dateFormat=\"m/d/Y\" datePickerType=\"single\" onChange={this.handleStartDateChange} value={this.state.startDate}>\r\n                            <DatePickerInput\r\n                                name=\"startDate\"\r\n                                placeholder=\"mm/dd/yyyy\"\r\n                                labelText={i18n.t('subscriptionDetails.startDate') + \" *\"}\r\n                                //onChange={this.handleChanges}\r\n                                type=\"text\"\r\n                                invalidText={i18n.t('validation.invalid.date')}\r\n                                invalid={this.state.invalid['startDate']}\r\n                            />\r\n                        </DatePicker>\r\n                        <TextInput\r\n                            name=\"lengthInMonths\"\r\n                            labelText={i18n.t('subscriptionDetails.lengthInMonths') + \" *\"}\r\n                            value={this.state.lengthInMonths}\r\n                            onChange={this.handleChanges}\r\n                            invalidText={i18n.t('validation.invalid.number')}\r\n                            invalid={this.state.invalid['lengthInMonths']}\r\n                        />\r\n                        <TextArea\r\n                            name=\"notes\"\r\n                            labelText={i18n.t('adminDashboard.addProject.notes')}\r\n                            value={this.state.notes}\r\n                            onChange={this.handleChanges}\r\n                        />\r\n                    </Form>\r\n                </div>\r\n            </ModalWrapper>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withKeycloak(EditSubscriptionModal)\r\n\r\n\r\n","import React from 'react';\nimport TicketList from './TicketList';\nimport { Tile } from 'carbon-components-react';\nimport { apiSubscriptionGet, apiGetMySubscription } from '../../api/subscriptions'\nimport withKeycloak from '../../auth/withKeycloak';\nimport { apiGetProjectsUsers, apiProjectGet } from '../../api/projects';\nimport { isPortalAdminOrSupport, isPortalCustomerOrPartner, isPortalUser, isPortalAdmin } from '../../api/helpers';\nimport EditSubscriptionModal from '../Admin/EditSubscriptionModal';\nimport i18n from '../../i18n';\n\nconst subscriptionData = {\n    description: 'Entando Product Support Subscription Suplier Portal',\n    commitment: 'Leonardo',\n    type: 'Product Support Subscription Entando Platform',\n    quantityRequest: '1(8 Core)',\n    components: '',\n    level: 'Gold',\n    startDate: 'May 2019',\n    endDate: 'May 2020',\n    license: 'Free Commercial Open Source',\n};\n\nclass Subscription extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: true,\n            subscription: {},\n            users: {},\n            project: {},\n            customer: {}\n        }\n    }\n\n    async getSubscription() {\n        const { t, keycloak } = this.props;\n        const authenticated = keycloak.initialized && keycloak.authenticated;\n        if (authenticated) {\n            try {\n                var subscription;\n                var users = '';\n                if (isPortalAdminOrSupport()) {\n                    subscription = await apiSubscriptionGet(this.props.serviceUrl, this.props.match.params.id);\n                    var project = '';\n                    if (subscription.data.project) {\n                        project = await apiProjectGet(this.props.serviceUrl, subscription.data.project.id)\n                        users = await apiGetProjectsUsers(this.props.serviceUrl, project.data.id)\n                    }\n                }\n                else if (isPortalCustomerOrPartner()) {\n                    subscription = await apiGetMySubscription(this.props.serviceUrl, this.props.match.params.id);\n                    var project = '';\n                    if (subscription.data.project) {\n                        project = await apiProjectGet(this.props.serviceUrl, subscription.data.project.id)\n                    }\n                }\n                this.setState({\n                    subscription: subscription,\n                    project: project,\n                    customer: project.customer,\n                    users: users,\n                    loading: false\n                })\n            }\n            catch(err) {\n                console.log(err)\n            }\n        }\n    }\n\n    updateSubscription = () => {\n        this.getSubscription();\n    }\n\n    componentDidMount(){\n        if (isPortalUser()) {\n            this.getSubscription();\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        const { keycloak } = this.props;\n        const authenticated = keycloak.initialized && keycloak.authenticated;\n\n        const changedAuth = prevProps.keycloak.authenticated !== authenticated;\n\n        if (authenticated && changedAuth && isPortalUser()) {\n            this.getSubscription();\n        }\n      }\n\n    render() {\n        const { description, commitment, type, quantityRequest, components, level, startDate, endDate, license } = subscriptionData\n\n        if (!this.state.loading) {\n            if (isPortalUser()) {\n                if (Object.keys(this.state.subscription).length !== 0 && Object.keys(this.state.project).length !== 0) {\n                    return (\n                        <div className=\"subscription-details\">\n                            <div>\n                            <Tile>\n                                <div className=\"bx--grid\">\n                                    <div className=\"bx--row\">\n                                        <div className=\"bx--col\">\n                                            <p><strong>{i18n.t('customerDashboard.customerName')}:</strong> {this.state.project.data.customer.name}</p>\n                                            <p><strong>{i18n.t('customerDashboard.projectName')}:</strong> {this.state.project.data.name}</p>\n                                            <p><strong>{i18n.t('subscriptionDetails.description')}:</strong> {this.state.subscription.data.project.description}</p>\n                                            <p><strong>{i18n.t('subscriptionDetails.partners')}:</strong>\n                                            {this.state.project.data !== '' && Object.keys(this.state.project.data.partners).length !== 0 ?\n                                                <>\n                                                    {this.state.project.data.partners.map((partner, index) => (\n                                                        <> {index === this.state.project.data.partners.length - 1 ? partner.name : partner.name + \", \"} </>\n                                                    ))}\n                                                </>\n                                                : <> None </>\n                                            }\n                                            </p>\n                                            <p><strong>{i18n.t('subscriptionDetails.type')}:</strong> {type}</p>\n                                            {isPortalAdminOrSupport() ?\n                                                <p><strong>{i18n.t('subscriptionDetails.notes')}:</strong> {this.state.subscription.data.notes}</p> : null\n                                            }\n                                        </div>\n                                        <div className=\"bx--col\">\n                                            <p><strong>{i18n.t('subscriptionDetails.status')}:</strong> {this.state.subscription.data.status}</p>\n                                            <p><strong>{i18n.t('subscriptionDetails.level')}:</strong> {this.state.subscription.data.level}</p>\n                                            <p><strong>{i18n.t('subscriptionDetails.startDate')}:</strong> {String(new Date(this.state.subscription.data.startDate).toDateString())}</p>\n                                            <p><strong>{i18n.t('subscriptionDetails.endDate')}:</strong> {String(new Date(new Date(this.state.subscription.data.startDate).setMonth(new Date(this.state.subscription.data.startDate).getMonth() + this.state.subscription.data.lengthInMonths)).toDateString())}</p>\n                                            <p><strong>{i18n.t('subscriptionDetails.license')}:</strong> {license}</p>\n                                            {isPortalAdminOrSupport() ?\n                                                <>\n                                                    <p><strong>{i18n.t('subscriptionDetails.assignedUsers')}:</strong>\n                                                    {this.state.project.data !== '' && Object.keys(this.state.users.data).length !== 0 ?\n                                                        <>\n                                                            {this.state.users.data.map((user, index) => (\n                                                                <> {index === this.state.users.data.length - 1 ? user.username : user.username + \", \"} </>\n                                                            ))}\n                                                        </>\n                                                        : <> None </>\n                                                    }\n                                                    </p>\n                                                </> : null\n                                            }\n                                        </div>\n                                    </div>\n                                </div>\n                                {isPortalAdmin() ?\n                                    <EditSubscriptionModal project={this.state.project.data} subscription={this.state.subscription.data} serviceUrl={this.props.serviceUrl} updateSubscription={this.updateSubscription}/>\n                                : null}\n                            </Tile>\n                            <br/>\n                            <TicketList projectId={this.state.project.data.id} serviceUrl={this.props.serviceUrl} />\n                            </div>\n                        </div>\n                    )\n                }\n                else {\n                    return(<p>{i18n.t('userMessages.unauthorized')}</p>)\n                }\n            }\n            else {\n                return(<p>{i18n.t('userMessages.unauthorized')}</p>)\n            }\n        }\n        else {\n            return null\n        }\n    }\n}\n\nexport default withKeycloak(Subscription);\n","export const AuthenticatedView = ({ children, keycloak }) => {\r\n  const authenticated = keycloak.initialized && keycloak.authenticated;\r\n  return authenticated ? children : null;\r\n};\r\n\r\nexport const UnauthenticatedView = ({ children, keycloak }) => {\r\n  const authenticated = keycloak.initialized && keycloak.authenticated;\r\n  return !authenticated ? children : null;\r\n};\r\n","import React from 'react';\nimport { Tile } from 'carbon-components-react';\nimport CustomTable from './customDataTable';\nimport withKeycloak from '../../auth/withKeycloak';\nimport { apiAdminCustomerGet, apiGetCustomersProjects } from '../../api/customers';\nimport { isPortalAdminOrSupport } from '../../api/helpers';\nimport i18n from '../../i18n';\n\nclass CustomerProjectList extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: true,\n            projects: {},\n            customer: {}\n        }\n    }\n\n    async getCustomer() {\n        const { keycloak } = this.props;\n        const authenticated = keycloak.initialized && keycloak.authenticated;\n        if (authenticated) {\n            try {\n                const customer = await apiAdminCustomerGet(this.props.serviceUrl, this.props.match.params.id);\n                const projects = await apiGetCustomersProjects(this.props.serviceUrl, customer.data.id);\n                this.setState({\n                    customer: customer.data,\n                    projects: projects.data,\n                    loading: false\n                })\n            }\n            catch(err) {\n                console.log(err)\n            }\n        }\n    }\n\n    updateCustomer = () => {\n        this.getCustomer();\n    }\n\n    componentDidMount(){\n        if (isPortalAdminOrSupport()) {\n            this.getCustomer();\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        const { keycloak } = this.props;\n        const authenticated = keycloak.initialized && keycloak.authenticated;\n\n        const changedAuth = prevProps.keycloak.authenticated !== authenticated;\n\n        if (authenticated && changedAuth) {\n            if (isPortalAdminOrSupport()) {\n                this.getCustomer();\n            }\n        }\n      }\n\n    render() {\n        if (!this.state.loading) {\n            if (isPortalAdminOrSupport()) {\n                if (Object.keys(this.state.customer).length !== 0) {\n                    return (\n                        <div>\n                            <Tile>\n                                <div className=\"bx--grid\">\n                                    <div className=\"bx--row\">\n                                        <div className=\"bx--col\">\n                                            <p><strong>{i18n.t('customerDetails.id')}: </strong> {this.state.customer.id}</p>\n                                            <p><strong>{i18n.t('customerDetails.name')}: </strong> {this.state.customer.name}</p>\n                                            <p><strong>{i18n.t('customerDetails.notes')}: </strong> {this.state.customer.notes}</p>\n                                        </div>\n                                        <div className=\"bx--col\">\n                                            <p><strong>{i18n.t('customerDetails.contactName')}: </strong> {this.state.customer.contactName}</p>\n                                            <p><strong>{i18n.t('customerDetails.contactPhone')}: </strong> {this.state.customer.contactPhone}</p>\n                                            <p><strong>{i18n.t('customerDetails.contactEmail')}: </strong> {this.state.customer.contactEmail}</p>\n                                        </div>\n                                    </div>\n                                </div>\n                            </Tile>\n                            <CustomTable serviceUrl={this.props.serviceUrl} customerNumber={this.state.customer.id} locale={this.props.locale} />\n                        </div>\n                    )\n                }\n                else {\n                    return(<p>{i18n.t('userMessages.loading')}...</p>)\n                }\n            }\n            else {\n                return(<p>{i18n.t('userMessages.unauthorized')}</p>)\n            }\n        }\n        else {\n            return null;\n        }\n    }\n}\n\nexport default withKeycloak(CustomerProjectList);\n","import React, { Component } from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport AdminDashboard from './Admin/AdminDashboard';\nimport Subscription from './SubscriptionDetails/subscription';\nimport withKeycloak from '../auth/withKeycloak';\nimport { AuthenticatedView, UnauthenticatedView } from '../auth/KeycloakViews';\nimport { isPortalUser } from '../api/helpers';\nimport CustomerProjectList from './Customer/CustomerProjectList';\nimport i18n from '../i18n';\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: true\n        }\n    }\n\n    componentDidMount() {\n        const { t, keycloak } = this.props;\n        const authenticated = keycloak.initialized && keycloak.authenticated;\n\n        if (authenticated) {\n            this.setState({\n                loading: false\n            })\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        const { t, keycloak } = this.props;\n        const authenticated = keycloak.initialized && keycloak.authenticated;\n\n        const changedAuth = prevProps.keycloak.authenticated !== authenticated;\n\n        if (authenticated && changedAuth) {\n            this.setState({\n                loading: false\n            })\n        }\n    }\n\n    render() {\n        var { t, keycloak } = this.props;\n        var authenticated = keycloak.initialized && keycloak.authenticated;\n\n        if (!this.state.loading) {\n            if (isPortalUser()) {\n                return (\n                    <div id=\"entando-customer-portal\">\n                        <AuthenticatedView keycloak={keycloak}>\n                            <HashRouter>\n                                <Switch>\n                                    <Route path={\"**/customer-details/:id\"} render={(props) => (\n                                        <CustomerProjectList {...props} serviceUrl={this.props.serviceUrl} locale={this.props.locale} />\n                                    )}/>\n                                    <Route path={\"**/subscription-details/:id\"} render={(props) => (\n                                        <Subscription {...props} serviceUrl={this.props.serviceUrl} locale={this.props.locale} />\n                                    )}/>\n                                    <Route path=\"**/\" render={(props) => (\n                                        <AdminDashboard {...props} serviceUrl={this.props.serviceUrl} locale={this.props.locale} />\n                                    )}/>\n                                </Switch>\n                            </HashRouter>\n                        </AuthenticatedView>\n                        <UnauthenticatedView keycloak={keycloak}>\n                            <p>{i18n.t('userMessages.unauthorized')}</p>\n                        </UnauthenticatedView>\n                    </div>\n                )\n            }\n            else {\n                return (<p>{i18n.t('userMessages.unauthorized')}</p>)\n            }\n        }\n        else {\n            return null\n        }\n     }\n  }\n\nexport default withKeycloak(App);\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport AddCustomerModal from '../components/Admin/AddCustomerModal';\r\nimport '../index.scss'\r\nimport './dashboard.css'\r\n\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\nimport App from '../components/App';\r\n\r\nimport {\r\n  subscribeToWidgetEvent\r\n} from '../helpers/widgetEvents';\r\nimport {\r\n  KEYCLOAK_EVENT_TYPE,\r\n} from '../custom-elements/widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window &&\r\n    window.entando &&\r\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\nconst ATTRIBUTES = {\r\n  hidden: 'hidden',\r\n  locale: 'locale',\r\n  paginationMode: 'pagination-mode',\r\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n  serviceUrl: 'service-url',\r\n};\r\n\r\nclass AdminAddCustomerElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    \r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    //retargetEvents(shadowRoot);\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <AddCustomerModal serviceUrl={serviceUrl}/>\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.define('admin-add-customer-widget', AdminAddCustomerElement);\r\n\r\n","import React, {Component} from 'react';\r\nimport { Select, SelectItem} from 'carbon-components-react';\r\nimport CustomerDetails from '../Customer/customerDetails';\r\nimport CustomTable from '../Customer/customDataTable';\r\nimport AdminDashboard from './AdminDashboard';\r\nimport '../../index.scss';\r\n\r\nexport default class RoleCheck extends Component {\r\n    state = {\r\n        roleType: 'customer'\r\n    };\r\n\r\n    handleChanges = (e) => {\r\n        const input = e.target;\r\n        const name = input.name;\r\n        const value = input.value;\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    render() {\r\n        const roleType = ['Admin', 'Customer'];\r\n        return (\r\n            \r\n                <div className='role-check'>  \r\n                <Select defaultValue=\"role-type\" name=\"roleType\" labelText=\"Select Role(Testing)\" value={this.state.roleType} onChange={this.handleChanges}>\r\n                        <SelectItem\r\n                                text=\"Select Role\"\r\n                                value=\"role-type\"\r\n                        />\r\n                        {roleType.map((roleType, i) => <SelectItem key={i} text={roleType} value={roleType.toLowerCase()}>{roleType}</SelectItem>)}\r\n                        </Select>\r\n                    { this.renderForm()}\r\n                </div>\r\n            \r\n            );\r\n    }\r\n\r\n    // Render Dashboard based on role\r\n    renderForm() {\r\n        if (this.state.roleType === 'customer') return (\r\n            <div>\r\n                 <h3 className=\"pageTitle\">Welcome to Entando Customer Portal</h3>\r\n                <CustomerDetails />\r\n                <CustomTable />\r\n            </div>\r\n        )\r\n        if (this.state.roleType === 'admin') return (\r\n            <div>\r\n                 <h3 className=\"pageTitle\">Welcome to Entando Admin View</h3>\r\n                <AdminDashboard />\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport RoleCheck from '../components/Admin/RoleCheck';\r\nimport '../index.scss'\r\nimport './dashboard.css'\r\n\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\n\r\nimport {\r\n  subscribeToWidgetEvent\r\n} from '../helpers/widgetEvents';\r\nimport {\r\n  KEYCLOAK_EVENT_TYPE,\r\n} from '../custom-elements/widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window &&\r\n    window.entando &&\r\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\n  const ATTRIBUTES = {\r\n    hidden: 'hidden',\r\n    locale: 'locale',\r\n    paginationMode: 'pagination-mode',\r\n    disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n    serviceUrl: 'service-url',\r\n  };\r\n\r\nclass AdminRoleCheckElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    \r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    //retargetEvents(shadowRoot);\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <RoleCheck serviceUrl={serviceUrl}/>\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.define('admin-rolecheck-widget', AdminRoleCheckElement);\r\n\r\n//export default AdminRoleCheckElement;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport CustomDataTable from '../components/Customer/customDataTable';\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\nimport '../index.scss'\r\nimport './dashboard.css'\r\n\r\nimport {\r\n  subscribeToWidgetEvent\r\n} from '../helpers/widgetEvents';\r\nimport {\r\n  KEYCLOAK_EVENT_TYPE,\r\n} from '../custom-elements/widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window &&\r\n    window.entando &&\r\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\n  const ATTRIBUTES = {\r\n    hidden: 'hidden',\r\n    locale: 'locale',\r\n    paginationMode: 'pagination-mode',\r\n    disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n    serviceUrl: 'service-url',\r\n  };\r\n\r\nclass CustomDataTableElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    \r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <CustomDataTable serviceUrl={serviceUrl}/>\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.define('custom-datatable-widget', CustomDataTableElement);\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport CustomerDetails from '../components/Customer/customerDetails';\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\nimport './dashboard.css'\r\n\r\nimport {\r\n  subscribeToWidgetEvent\r\n} from '../helpers/widgetEvents';\r\nimport {\r\n  KEYCLOAK_EVENT_TYPE,\r\n} from '../custom-elements/widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window &&\r\n    window.entando &&\r\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\n  const ATTRIBUTES = {\r\n    hidden: 'hidden',\r\n    locale: 'locale',\r\n    paginationMode: 'pagination-mode',\r\n    disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n    serviceUrl: 'service-url',\r\n  };\r\n\r\nclass CustomerDetailsElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    \r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <CustomerDetails serviceUrl={serviceUrl}/>\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\ncustomElements.define('customer-details-widget', CustomerDetailsElement);\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Subscription from '../components/SubscriptionDetails/subscription';\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\nimport './dashboard.css'\r\n\r\nimport {\r\n  subscribeToWidgetEvent\r\n} from '../helpers/widgetEvents';\r\nimport {\r\n  KEYCLOAK_EVENT_TYPE,\r\n} from '../custom-elements/widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window &&\r\n    window.entando &&\r\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\nconst ATTRIBUTES = {\r\n  hidden: 'hidden',\r\n  locale: 'locale',\r\n  paginationMode: 'pagination-mode',\r\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n  serviceUrl: 'service-url',\r\n};\r\n\r\n\r\nclass SubscriptionElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    \r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    //retargetEvents(shadowRoot);\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <Subscription serviceUrl={serviceUrl}/>\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.define('subscription-widget', SubscriptionElement);\r\n\r\n","import React, { Component } from 'react';\nimport i18n from '../../i18n';\nimport { Form, Select, SelectItem, Button, TextArea } from 'carbon-components-react';\nimport withKeycloak from '../../auth/withKeycloak';\nimport { apiAdminProjectsGet, apiMyProjectsGet, apiGetProjectSubscriptions } from '../../api/projects';\nimport { apiJiraTicketPost } from '../../api/tickets';\nimport { apiTicketingSystemsGet } from '../../api/ticketingsystem';\nimport { isPortalUser, isPortalAdminOrSupport, isPortalCustomerOrPartner, isPortalCustomer, isPortalAdmin, isPortalPartner, isPortalSupport } from '../../api/helpers';\n\nclass OpenTicket extends Component {\n    constructor() {\n        super();\n        this.state = {\n            loading: true,\n            project: {},\n            projects: [],\n            systemId: '',\n            type: 'Bug',\n            description: '',\n            priority: 'Medium',\n            status: 'To Do',\n            createDate: '',\n            updateDate: '',\n            role: '',\n            invalid: {},\n            submitMsg: '',\n            submitColour: 'black'\n        };\n        this.types = [\"Bug\", \"Task\"];\n        this.priorities = ['Highest', 'High', 'Medium', 'Low', 'Lowest'];\n    }\n\n    handleValidation() {\n        let invalid = {};\n        let formIsValid = true;\n\n        if(this.state.project.systemId === undefined || this.state.project.systemId === 'project-list'){\n          formIsValid = false;\n          invalid['project'] = true;\n        }\n\n        if(this.state.type === '' || this.state.type === 'Select'){\n            formIsValid = false;\n            invalid['type'] = true;\n        }\n\n        if(this.state.description === '' || this.state.description === 'Select'){\n            formIsValid = false;\n            invalid['description'] = true;\n        }\n\n        if(this.state.priority === '' || this.state.priority === 'Select'){\n            formIsValid = false;\n            invalid['priority'] = true;\n        }\n\n        this.setState({invalid: invalid});\n        return formIsValid;\n    }\n\n    handleChanges = (e) => {\n        const input = e.target;\n        const name = input.name;\n        const value = input.value;\n\n        if (name === \"project\" && value != '' && value != 'project-list') {\n            this.setState({\n                project: JSON.parse(value),\n            })\n        }\n        else {\n            this.setState({ [name]: value });\n        }\n    }\n\n    handleFormSubmit = (event) => {\n        event.preventDefault();\n\n        const formIsValid = this.handleValidation();\n\n        if (formIsValid) {\n            // check if project has subscription\n            this.fetchProjectSubscription(this.state.project.id).then(result => {\n                // if project has subscription, create ticket\n                if(result.data.length > 0) {\n                    this.createTicket().then(res => {\n                        this.setState({\n                            submitMsg: i18n.t('submitMessages.created'),\n                            submitColour: '#24a148'\n                        })\n                    }).catch(err => {\n                        this.setState({\n                            submitMsg: i18n.t('submitMessages.ticketError'),\n                            submitColour: '#da1e28'\n                        })\n                    });\n                }\n                // if no subscriptions, don't create ticket\n                else {\n                    this.setState({\n                        submitMsg: i18n.t('submitMessages.subscriptionRequired'),\n                        submitColour: '#da1e28'\n                    })\n                }\n            }).catch(error => {\n                this.setState({\n                    submitMsg: i18n.t('submitMessages.error'),\n                    submitColour: '#da1e28'\n                })\n            });\n        }\n    };\n\n    async fetchProjectSubscription(projectId) {\n        return await apiGetProjectSubscriptions(this.props.serviceUrl, projectId);\n    }\n\n    async fetchProjects() {\n        if (isPortalAdminOrSupport()) {\n            var projects = await apiAdminProjectsGet(this.props.serviceUrl)\n            this.setState({\n                projects: projects.data\n            })\n        }\n        else if (isPortalCustomerOrPartner()) {\n            var projects = await apiMyProjectsGet(this.props.serviceUrl)\n            this.setState({\n                projects: projects.data\n            })\n        }\n\n        this.render();\n    }\n\n    async createTicket() {\n        const { t, keycloak } = this.props;\n        var authenticated = keycloak.initialized && keycloak.authenticated;\n\n        if (authenticated) {\n            const ticket = {\n                systemId: this.state.project.systemId,\n                type: this.state.type,\n                description: this.state.description,\n                priority: this.state.priority,\n                status: 'To Do',\n                // these dates are just placeholder to validate the POST request (date will be updated in the backend)\n                createDate: '2021-02-22T14:14:09-05:00',\n                updateDate: '2021-02-22T14:14:09-05:00'\n            }\n            return await apiJiraTicketPost(this.props.serviceUrl, this.state.ticketingSystem.systemId, this.state.project.systemId, ticket);\n            //const addedTicket = await apiAddTicketToProject(this.props.serviceUrl, this.state.project.id, result.data.id);\n        }\n    }\n\n    async getTicketingSystem() {\n        if (isPortalUser()) {\n            const ticketingSystems = await apiTicketingSystemsGet(this.props.serviceUrl);\n            const currentTicketingSystem = ticketingSystems.data[ticketingSystems.data.length-1]\n            this.setState({\n                ticketingSystem: currentTicketingSystem\n            })\n        }\n    }\n\n    componentDidMount() {\n        const { t, keycloak } = this.props;\n        const authenticated = keycloak.initialized && keycloak.authenticated;\n\n        if (authenticated) {\n            this.fetchProjects();\n            this.getTicketingSystem();\n            this.setState({\n                loading: false\n            });\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        const { t, keycloak } = this.props;\n        const authenticated = keycloak.initialized && keycloak.authenticated;\n\n        const changedAuth = prevProps.keycloak.authenticated !== authenticated;\n\n        if (authenticated && changedAuth) {\n            this.fetchProjects();\n            this.getTicketingSystem();\n            this.setState({\n                loading: false\n              });\n        }\n    }\n\n    render() {\n        if (!this.state.loading) {\n            if (isPortalUser()) {\n                return (\n                    <div>\n                        {isPortalAdmin() ?\n                            <h3 className=\"pageTitle\">{i18n.t('adminDashboard.adminTitle')}</h3> :\n                        isPortalSupport() ?\n                            <h3 className=\"pageTitle\">{i18n.t('adminDashboard.supportTitle')}</h3> :\n                        isPortalCustomer() ?\n                            <h3 className=\"pageTitle\">{i18n.t('adminDashboard.customerTitle')}</h3> :\n                        isPortalPartner() ?\n                            <h3 className=\"pageTitle\">{i18n.t('adminDashboard.partnerTitle')}</h3> :\n                        null}\n                        <div className=\"form-container\">\n                            <p style={{color: this.state.submitColour}}>{this.state.submitMsg}</p>\n                            <Form onSubmit={this.handleFormSubmit}>\n                                <div className=\"form-desc\">\n                                    <h4>{i18n.t('supportTicketForm.formTitle')}</h4>\n                                    <p>{i18n.t('supportTicketForm.desc')}</p>\n                                </div>\n                                <div className=\"bx--grid\">\n                                    <div className=\"bx--row\">\n                                        <div className=\"bx--col\">\n                                            <Select\n                                                name=\"project\"\n                                                defaultValue={{ label: \"Select Proj\", value: 0 }}\n                                                labelText={i18n.t('supportTicketForm.selectProject') + \" *\"}\n                                                value={JSON.stringify(this.state.project)}\n                                                onChange={this.handleChanges}\n                                                invalidText={i18n.t('validation.invalid.required')}\n                                                invalid={this.state.invalid['project']}\n                                            >\n                                                <SelectItem text={i18n.t('adminDashboard.addPartner.selectProject')} value=\"project-list\" />\n                                                {Object.keys(this.state.projects).length !== 0 ? this.state.projects.map((project, i) => {\n                                                        return (\n                                                            <SelectItem key={i} text={project.name} value={JSON.stringify(project)}>{project.name}</SelectItem>\n                                                        )\n                                                }) : null}\n                                            </Select>\n                                            <Select\n                                                name=\"type\"\n                                                labelText={i18n.t('supportTicketForm.type') + \" *\"}\n                                                value={this.state.type}\n                                                onChange={this.handleChanges}\n                                                invalidText={i18n.t('validation.invalid.required')}\n                                                invalid={this.state.invalid['type']}\n                                            >\n                                                {this.types.map((type, i) => (\n                                                    <SelectItem key={i} text={type} value={type}>{type}</SelectItem>\n                                                ))}\n                                            </Select>\n                                            <Select\n                                                name=\"priority\"\n                                                labelText={i18n.t('supportTicketForm.priority') + \" *\"}\n                                                value={this.state.priority}\n                                                onChange={this.handleChanges}\n                                                invalidText={i18n.t('validation.invalid.required')}\n                                                invalid={this.state.invalid['priority']}\n                                            >\n                                                {this.priorities.map((priority, i) => (\n                                                    <SelectItem key={i} text={priority} value={priority}>{priority}</SelectItem>\n                                                ))}\n                                            </Select>\n                                        </div>\n                                    </div>\n                                    <div className=\"bx--row\">\n                                        <div className=\"bx--col\">\n                                            <TextArea\n                                                labelText={i18n.t('supportTicketForm.ticketDescription') + \" *\"}\n                                                placeholder={i18n.t('supportTicketForm.addticketDescription')}\n                                                name=\"description\"\n                                                value={this.state.description}\n                                                onChange={this.handleChanges}\n                                                invalidText={i18n.t('validation.invalid.required')}\n                                                invalid={this.state.invalid['description']}\n                                            />\n                                            <Button kind=\"primary\" tabIndex={0} type=\"submit\" > {i18n.t('buttons.submit')}  </Button>\n                                        </div>\n                                    </div>\n                                </div>\n                            </Form>\n                        </div>\n                    </div>\n                );\n            }\n            else {\n                return(<p>{i18n.t('userMessages.unauthorized')}</p>)\n            }\n        }\n        else {\n            return(null)\n        }\n    }\n}\n\nexport default withKeycloak(OpenTicket);\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport OpenTicket from '../components/Forms/openTicket';\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\nimport './dashboard.css'\r\n\r\nimport {\r\n  subscribeToWidgetEvent\r\n} from '../helpers/widgetEvents';\r\nimport {\r\n  KEYCLOAK_EVENT_TYPE,\r\n} from '../custom-elements/widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window &&\r\n    window.entando &&\r\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\nconst ATTRIBUTES = {\r\n  hidden: 'hidden',\r\n  locale: 'locale',\r\n  paginationMode: 'pagination-mode',\r\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n  serviceUrl: 'service-url',\r\n};\r\n\r\n\r\nclass FormsOpenTicketElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    \r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    //retargetEvents(shadowRoot);\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <OpenTicket serviceUrl={serviceUrl}/>\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.define('forms-openticket-widget', FormsOpenTicketElement);\r\n\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n \r\nconst Navigation = () => {\r\n    return (\r\n       <ul id='navigation'>\r\n          <li><NavLink to=\"/\">Home</NavLink></li>\r\n          <li><NavLink to=\"/subscription-details\">Subscription Details</NavLink></li>\r\n          <li><NavLink to=\"/subscription\">New or Renew Subscription</NavLink></li>\r\n          <li><NavLink to=\"/service-ticket\">Open Service Ticket</NavLink></li>\r\n          <li><NavLink to=\"/enhancement\">Request for Enhancement Process</NavLink></li>\r\n          <li><NavLink to=\"/manage-users\">Manage Users</NavLink></li>\r\n          <li><NavLink to=\"/configuration-settings\">Configuration Settings</NavLink></li>\r\n      </ul>\r\n    );\r\n}\r\n \r\nexport default Navigation;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Navigation from '../components/Navigation/Navigation';\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\nimport './dashboard.css'\r\n\r\nimport {\r\n  subscribeToWidgetEvent\r\n} from '../helpers/widgetEvents';\r\nimport {\r\n  KEYCLOAK_EVENT_TYPE,\r\n} from '../custom-elements/widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window &&\r\n    window.entando &&\r\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\nconst ATTRIBUTES = {\r\n  hidden: 'hidden',\r\n  locale: 'locale',\r\n  paginationMode: 'pagination-mode',\r\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n  serviceUrl: 'service-url',\r\n};\r\n\r\n\r\nclass NavigationElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    \r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    //retargetEvents(shadowRoot);\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <Navigation serviceUrl={serviceUrl}/>\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.define('navigation-widget', NavigationElement);\r\n","import React, {Component} from 'react';\r\nimport { Form, TextInput, TextArea, Button } from 'carbon-components-react';\r\nimport i18n from '../../i18n';\r\n\r\nexport default class EnhancementRequest extends Component {\r\n    state = {\r\n        ticketNo: '',\r\n        customerName: '',\r\n        projectName: '',\r\n        openedBy: '',\r\n        priority: '',\r\n        partnerName: '',\r\n        enhancementDescription: '',\r\n        invalid: {}\r\n    };\r\n\r\n    handleValidation() {\r\n        let invalid = {};\r\n        let formIsValid = true;\r\n\r\n        if(this.state.ticketNo === ''){\r\n          formIsValid = false;\r\n          invalid['ticketNo'] = true;\r\n        }\r\n\r\n        if(this.state.customerName === ''){\r\n            formIsValid = false;\r\n            invalid['customerName'] = true;\r\n        }\r\n\r\n        if(this.state.projectName === ''){\r\n            formIsValid = false;\r\n            invalid['projectName'] = true;\r\n        }\r\n\r\n        if(this.state.openedBy === ''){\r\n            formIsValid = false;\r\n            invalid['openedBy'] = true;\r\n        }\r\n\r\n        if(this.state.partnerName === ''){\r\n            formIsValid = false;\r\n            invalid['partnerName'] = true;\r\n        }\r\n\r\n        if(this.state.enhancementDescription === ''){\r\n            formIsValid = false;\r\n            invalid['enhancementDescription'] = true;\r\n        }\r\n\r\n        this.setState({invalid: invalid});\r\n        return formIsValid;\r\n    }\r\n\r\n    handleChanges = (e) => {\r\n        const input = e.target;\r\n        const name = input.name;\r\n        const value = input.value;\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    handleFormSubmit = (event) => {\r\n        console.log(this.state.ticketNo)\r\n        event.preventDefault();\r\n\r\n        const formIsValid = this.handleValidation();\r\n\r\n        if (formIsValid) {\r\n            // placeholder\r\n        }\r\n    };\r\n      \r\n    render() {\r\n        return (\r\n            <div>\r\n                <h3 className=\"pageTitle\">{i18n.t('enhancementForm.title')}</h3>\r\n                <div className=\"form-container\">\r\n                    <Form onSubmit={this.handleFormSubmit}>\r\n                        <div className=\"form-desc\">\r\n                            <h4>{i18n.t('enhancementForm.formTitle')}</h4>\r\n                            <p>{i18n.t('enhancementForm.desc')}</p>\r\n                        </div>\r\n                        <div className=\"bx--grid\">\r\n                            <div className=\"bx--row\">\r\n                                <div className=\"bx--col\">\r\n                                    <TextInput \r\n                                        name=\"ticketNo\" \r\n                                        labelText={i18n.t('enhancementForm.ticketNumber')} \r\n                                        value={this.state.ticketNo} \r\n                                        onChange={this.handleChanges}\r\n                                        invalidText={i18n.t('validation.invalid.required')}\r\n                                        invalid={this.state.invalid['ticketNo']} \r\n                                    />\r\n                                    <TextInput \r\n                                        name=\"projectName\" \r\n                                        labelText={i18n.t('enhancementForm.projectName')} \r\n                                        value={this.state.projectName} \r\n                                        onChange={this.handleChanges}\r\n                                        invalidText={i18n.t('validation.invalid.required')}\r\n                                        invalid={this.state.invalid['projectName']} \r\n                                    />\r\n                                    <TextInput \r\n                                        name=\"priority\" \r\n                                        labelText={i18n.t('enhancementForm.priority')} \r\n                                        value={this.state.priority} \r\n                                        onChange={this.handleChanges}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"bx--col\">\r\n                                    <TextInput \r\n                                        name=\"customerName\" \r\n                                        labelText={i18n.t('enhancementForm.customerName')} \r\n                                        value={this.state.customerName} \r\n                                        onChange={this.handleChanges}\r\n                                        invalidText={i18n.t('validation.invalid.required')}\r\n                                        invalid={this.state.invalid['customerName']} \r\n                                    />\r\n                                    <TextInput \r\n                                        name=\"openedBy\" \r\n                                        labelText={i18n.t('enhancementForm.ticketOpenedBy')} \r\n                                        value={this.state.openedBy} \r\n                                        onChange={this.handleChanges}\r\n                                        invalidText={i18n.t('validation.invalid.required')}\r\n                                        invalid={this.state.invalid['openedBy']} \r\n                                    />\r\n                                    <TextInput \r\n                                        name=\"partnerName\" \r\n                                        labelText={i18n.t('enhancementForm.partnerName')} \r\n                                        value={this.state.partnerName} \r\n                                        onChange={this.handleChanges}\r\n                                        invalidText={i18n.t('validation.invalid.required')}\r\n                                        invalid={this.state.invalid['partnerName']} \r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"bx--row\">\r\n                                <div className=\"bx--col\">\r\n                                    <TextArea \r\n                                        labelText={i18n.t('enhancementForm.enhancementDescription')} \r\n                                        placeholder={i18n.t('enhancementForm.addenhancementDescription')} \r\n                                        name=\"enhancementDescription\"  \r\n                                        value={this.state.enhancementDescription} \r\n                                        onChange={this.handleChanges}  \r\n                                        invalidText={i18n.t('validation.invalid.required')}\r\n                                        invalid={this.state.invalid['enhancementDescription']} \r\n                                    />\r\n                                    <Button kind=\"primary\" tabIndex={0} type=\"submit\"> {i18n.t('buttons.submit')}  </Button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Form>\r\n                </div>\r\n            </div>    \r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport EnhancementRequest from '../components/Forms/enhancementRequest';\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\nimport './dashboard.css'\r\n\r\nimport {\r\n  subscribeToWidgetEvent\r\n} from '../helpers/widgetEvents';\r\nimport {\r\n  KEYCLOAK_EVENT_TYPE,\r\n} from '../custom-elements/widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window &&\r\n    window.entando &&\r\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\nconst ATTRIBUTES = {\r\n  hidden: 'hidden',\r\n  locale: 'locale',\r\n  paginationMode: 'pagination-mode',\r\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n  serviceUrl: 'service-url',\r\n};\r\n\r\n\r\nclass FormsEnhancementRequestElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    \r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    //retargetEvents(shadowRoot);\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <EnhancementRequest serviceUrl={serviceUrl}/>\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.define('forms-enhancement-request-widget', FormsEnhancementRequestElement);\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport retargetEvents from 'react-shadow-dom-retarget-events';\r\nimport '../index.scss'\r\nimport './dashboard.css'\r\nimport * as Locale from '../i18n';\r\n\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\nimport App from '../components/App';\r\n\r\nimport {\r\n  subscribeToWidgetEvent\r\n} from '../helpers/widgetEvents';\r\nimport {\r\n  KEYCLOAK_EVENT_TYPE,\r\n} from '../custom-elements/widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window &&\r\n    window.entando &&\r\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\nconst ATTRIBUTES = {\r\n  hidden: 'hidden',\r\n  locale: 'locale',\r\n  paginationMode: 'pagination-mode',\r\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n  serviceUrl: 'service-url',\r\n  locale: 'locale'\r\n};\r\n\r\n\r\nclass AppElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    \r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    //retargetEvents(shadowRoot);\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n    const locale = this.getAttribute(ATTRIBUTES.locale) || '';\r\n    Locale.setLocale(locale);\r\n\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <App serviceUrl={serviceUrl} locale={locale} />\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.define('app-element', AppElement);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport TicketList from '../components/SubscriptionDetails/TicketList';\r\nimport '../index.scss'\r\n//import './dashboard.css'\r\n\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\n\r\nimport {\r\n  subscribeToWidgetEvent\r\n} from '../helpers/widgetEvents';\r\nimport {\r\n  KEYCLOAK_EVENT_TYPE,\r\n} from '../custom-elements/widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window &&\r\n    window.entando &&\r\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\nconst ATTRIBUTES = {\r\n  hidden: 'hidden',\r\n  locale: 'locale',\r\n  paginationMode: 'pagination-mode',\r\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n  serviceUrl: 'service-url',\r\n};\r\n\r\nclass TicketListCustomerElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    \r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    //retargetEvents(shadowRoot);\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <TicketList serviceUrl={serviceUrl}/>\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.define('ticket-list-widget', TicketListCustomerElement);\r\n\r\n","import React, { Component } from 'react';\nimport i18n from '../../../i18n';\nimport { Form, TextInput, Select, SelectItem, Button} from 'carbon-components-react';\nimport { apiTicketingSystemPost, apiTicketingSystemsGet, apiTicketingSystemPut, apiTicketingSystemDelete } from '../../../api/ticketingsystem';\nimport { isPortalAdmin } from '../../../api/helpers';\nimport withKeycloak from '../../../auth/withKeycloak';\n\nclass TicketingSystem extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ticketingSystem: '',\n            ticketingSystemType:'',\n            url: '',\n            serviceAccount: '',\n            systemId: '',\n            submitMsg: '',\n            submitColour: 'black'\n        }\n    }\n\n    handleChanges = (e) => {\n        const input = e.target;\n        const name = input.name;\n        const value = input.value;\n        this.setState({ [name]: value });\n    }\n\n    async createTicketingSystem() {\n        const ticketingSystem = {\n            url: this.state.url,\n            serviceAccount: this.state.serviceAccount,\n            serviceAccountSecret: this.state.serviceAccountSecret,\n            systemId: this.state.systemId\n        }\n        return await apiTicketingSystemPost(this.props.serviceUrl, ticketingSystem);\n    }\n\n    async updateTicketingSystem() {\n        const ticketingSystem = {\n            id: this.state.ticketingSystem.id,\n            url: this.state.url,\n            serviceAccount: this.state.serviceAccount,\n            serviceAccountSecret: this.state.serviceAccountSecret,\n            systemId: this.state.systemId\n        }\n        return await apiTicketingSystemPut(this.props.serviceUrl, ticketingSystem);\n    }\n\n    async getTicketingSystems() {\n        const ticketingSystems = await apiTicketingSystemsGet(this.props.serviceUrl)\n        if (ticketingSystems.data.length > 0) {\n            const currentTicketingSystem = ticketingSystems.data[ticketingSystems.data.length-1]\n\n            this.setState({\n                ticketingSystem: currentTicketingSystem,\n                url: currentTicketingSystem.url,\n                serviceAccount: currentTicketingSystem.serviceAccount,\n                serviceAccountSecret: currentTicketingSystem.serviceAccountSecret,\n                systemId: currentTicketingSystem.systemId\n            })\n        }\n    }\n\n    componentDidMount() {\n        const { t, keycloak } = this.props;\n        const authenticated = keycloak.initialized && keycloak.authenticated;\n\n        if (authenticated) {\n            this.getTicketingSystems();\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        const { t, keycloak } = this.props;\n        const authenticated = keycloak.initialized && keycloak.authenticated;\n\n        const changedAuth = prevProps.keycloak.authenticated !== authenticated;\n\n        if (authenticated && changedAuth) {\n            this.getTicketingSystems();\n        }\n    }\n\n    async deleteTicketingSystem() {\n        return await apiTicketingSystemDelete(this.props.serviceUrl, this.state.ticketingSystem.id);\n    }\n\n    handleDelete(e) {\n        if (window.confirm(\"Are you sure you want to delete this ticketing system?\")) {\n            this.deleteTicketingSystem().then(result => {\n                this.setState({\n                    submitMsg: i18n.t('submitMessages.deleted'),\n                    submitColour: '#24a148'\n                })\n            }).catch(err => {\n                this.setState({\n                    submitMsg: i18n.t('submitMessages.error'),\n                    submitColour: '#da1e28'\n                })\n            });\n        }\n    }\n\n    handleFormSubmit = (event) => {\n        event.preventDefault();\n        if (this.state.ticketingSystem === '') {\n            this.createTicketingSystem().then(result => {\n                this.setState({\n                    submitMsg: i18n.t('submitMessages.created'),\n                    submitColour: '#24a148'\n                })\n            }).catch(err => {\n                this.setState({\n                    submitMsg: i18n.t('submitMessages.error'),\n                    submitColour: '#da1e28'\n                })\n            });\n        }\n        else {\n            this.updateTicketingSystem().then(result => {\n                this.setState({\n                    submitMsg: i18n.t('submitMessages.updated'),\n                    submitColour: '#24a148'\n                })\n            }).catch(err => {\n                this.setState({\n                    submitMsg: i18n.t('submitMessages.error'),\n                    submitColour: '#da1e28'\n                })\n            });\n        }\n    };\n\n    render() {\n        const ticketingSystem = ['Jira', 'Other'];\n        if (isPortalAdmin()) {\n            return (\n                <div className=\"cp-form\">\n                    <p style={{color: this.state.submitColour}}>{this.state.submitMsg}</p>\n                    <Form onSubmit={this.handleFormSubmit}>\n                        <div className=\"bx--grid\">\n                            <div className=\"bx--row\">\n                                <div className=\"bx--col\">\n                                    <Select defaultValue=\"ticketing-system\" name=\"ticketingSystemType\" labelText={i18n.t('adminConfig.integrationTicketingSystem.selectBackendTicketingSystem')} value={this.state.ticketingSystemType} onChange={this.handleChanges}>\n                                        <SelectItem\n                                            text={i18n.t('adminConfig.integrationTicketingSystem.select')}\n                                            value=\"ticketing-system\"\n                                        />\n                                        {ticketingSystem.map((ticketingSystem, i) => <SelectItem key={i} text={ticketingSystem} value={ticketingSystem.toLowerCase()}>{ticketingSystem}</SelectItem>)}\n                                    </Select>\n                                    <TextInput name=\"serviceAccount\" labelText={i18n.t('adminConfig.integrationTicketingSystem.userName')} value={this.state.serviceAccount} onChange={this.handleChanges}/>\n                                    <TextInput name=\"systemId\" labelText={i18n.t('adminConfig.integrationTicketingSystem.projectName')} value={this.state.systemId} onChange={this.handleChanges}/>\n                                </div>\n                                <div className=\"bx--col\">\n                                    <TextInput name=\"url\" labelText={i18n.t('adminConfig.integrationTicketingSystem.url')} value={this.state.url} onChange={this.handleChanges}/>\n                                    <TextInput name=\"serviceAccountSecret\" type=\"password\" labelText={i18n.t('adminConfig.integrationTicketingSystem.password')} value={this.state.serviceAccountSecret} onChange={this.handleChanges}/>\n                                </div>\n                            </div>\n                            <Button kind=\"primary\" tabIndex={0} type=\"submit\"> {i18n.t('buttons.submit')}  </Button>\n                            {this.state.ticketingSystem ?\n                                <Button kind=\"danger\" onClick={() => this.handleDelete()}> Delete </Button> : null\n                            }\n                        </div>\n                    </Form>\n                </div>\n            );\n        }\n        // Unauthorized\n        else {\n            return(<p>{i18n.t('userMessages.unauthorized')}</p>)\n        }\n    }\n}\n\nexport default withKeycloak(TicketingSystem);\n","import { getDefaultOptions, request, getUrl } from './helpers';\r\n\r\nconst resource = 'api/entando-versions';\r\n\r\nexport const apiProductVersionsGet = async (serviceUrl) => {\r\n    const url = `${serviceUrl}/${resource}`;\r\n    const options = {\r\n        ...getDefaultOptions(),\r\n        method: 'GET',\r\n    };\r\n\r\n    return request(url, options);\r\n};\r\n\r\nexport const apiProductVersionGet = async (serviceUrl, versionId) => {\r\n  const url = `${serviceUrl}/${resource}/${versionId}`;\r\n  const options = {\r\n      ...getDefaultOptions(),\r\n      method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiUpdateProductVersionsStatus = async (serviceUrl, id) => {\r\n    const url = `${serviceUrl}/${resource}/${id}`;\r\n    const options = {\r\n      ...getDefaultOptions(),\r\n      method: 'PUT',\r\n    };\r\n    return request(url, options);\r\n};\r\n\r\nexport const apiProductVersionPost = async (serviceUrl, productVersion) => {\r\n    const url = `${serviceUrl}/${resource}`;\r\n    const options = {\r\n      ...getDefaultOptions(),\r\n      method: 'POST',\r\n      body: productVersion ? JSON.stringify(productVersion) : null,\r\n    };\r\n    return request(url, options);\r\n};\r\n\r\nexport const apiProductVersionPut = async (serviceUrl, productVersion) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'PUT',\r\n    body: productVersion ? JSON.stringify(productVersion) : null,\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiProductVersionDelete = async (serviceUrl, id) => {\r\n  const url = `${serviceUrl}/${resource}/${id}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE',\r\n  };\r\n  return request(url, options);\r\n};","import React, { Component } from 'react';\r\nimport i18n from '../../i18n';\r\nimport { ModalWrapper, Form, TextInput, DatePicker, DatePickerInput } from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport { apiProductVersionPost } from '../../api/productVersion';\r\nimport moment from 'moment';\r\n\r\nclass AddProductVersionModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      name: '',\r\n      startDate: '',\r\n      endDate: '',\r\n      invalid: {},\r\n      submitMsg: '',\r\n      submitColour: 'black'\r\n    };\r\n\r\n    this.baseState = this.state\r\n  }\r\n\r\n  handleValidation() {\r\n    let invalid = {};\r\n    let formIsValid = true;\r\n\r\n    //name\r\n    if (this.state.name === '') {\r\n      formIsValid = false;\r\n      invalid['name'] = true;\r\n    }\r\n\r\n    if (typeof this.state.startDate !== 'undefined') {\r\n      if (!this.state.startDate.match(/^(0[1-9]|1[0-2])\\/(0[1-9]|1\\d|2\\d|3[01])\\/(19|20)\\d{2}$/)) {\r\n        formIsValid = false;\r\n        invalid['startDate'] = true;\r\n      }\r\n    }\r\n\r\n    if (typeof this.state.endDate !== 'undefined') {\r\n      if (!this.state.endDate.match(/^(0[1-9]|1[0-2])\\/(0[1-9]|1\\d|2\\d|3[01])\\/(19|20)\\d{2}$/)) {\r\n        formIsValid = false;\r\n        invalid['endDate'] = true;\r\n      }\r\n    }\r\n\r\n    this.setState({ invalid: invalid });\r\n    return formIsValid;\r\n  }\r\n\r\n  handleChanges = e => {\r\n    const input = e.target;\r\n    const name = input.name;\r\n    const value = input.value;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  async addProductVersion() {\r\n    const { t, keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n    if (authenticated) {\r\n      return await apiProductVersionPost(this.props.serviceUrl, this.state);\r\n    }\r\n  }\r\n\r\n  handleFormSubmit = e => {\r\n    const formIsValid = this.handleValidation();\r\n\r\n    if (formIsValid) {\r\n      this.addProductVersion().then(result => {\r\n        this.setState({\r\n            submitMsg: i18n.t('submitMessages.added'),\r\n            submitColour: '#24a148'\r\n        })\r\n        this.props.updateProductVersions();\r\n      }).catch(err => {\r\n          this.setState({\r\n              submitMsg: i18n.t('submitMessages.error'),\r\n              submitColour: '#da1e28'\r\n          })\r\n      });\r\n    }\r\n  };\r\n\r\n  clearValues = () => {\r\n    const customerModalElement = document.querySelector('#modal-form-product-version');\r\n    if(!customerModalElement.className.includes(\"is-visible\")) {\r\n      this.setState(this.baseState);\r\n    }\r\n  }\r\n\r\n  handleStartDateChange = (date) => {\r\n    this.setState({\r\n        startDate: moment(date[0].toISOString()).format('MM/DD/YYYY')\r\n    })\r\n  }\r\n\r\n  handleEndDateChange = (date) => {\r\n    this.setState({\r\n        endDate: moment(date[0].toISOString()).format('MM/DD/YYYY')\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    const modalOpenButton = document.querySelector('.add-product-version-button');\r\n    modalOpenButton.addEventListener(\"click\", this.clearValues, false);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <ModalWrapper\r\n        buttonTriggerText={i18n.t('buttons.addProductVersion')}\r\n        modalHeading={i18n.t('adminDashboard.addProductVersion.title')}\r\n        buttonTriggerClassName=\"add-product-version bx--btn bx--btn--tertiary add-product-version-button\"\r\n        className=\"modal-form\"\r\n        id=\"modal-form-product-version\"\r\n        handleSubmit={this.handleFormSubmit}\r\n        modalLabel={<p style={{color: this.state.submitColour}}>{this.state.submitMsg}</p>}\r\n      >\r\n        <div className=\"form-container\">\r\n          <p> {i18n.t('adminDashboard.addProductVersion.desc')} </p>\r\n          <Form onSubmit={this.handleFormSubmit}>\r\n            <TextInput\r\n              name=\"name\"\r\n              labelText={i18n.t('adminDashboard.addProductVersion.productVersion')}\r\n              value={this.state.name}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.required')}\r\n              invalid={this.state.invalid['name']}\r\n            />\r\n            <DatePicker dateFormat=\"m/d/Y\" datePickerType=\"single\" onChange={this.handleStartDateChange}>\r\n              <DatePickerInput\r\n                name=\"startDate\"\r\n                placeholder=\"mm/dd/yyyy\"\r\n                labelText={i18n.t('adminDashboard.addProductVersion.productVersionStartDate')}\r\n                value={this.state.startDate}\r\n                //onChange={this.handleChanges}\r\n                type=\"text\"\r\n                invalidText={i18n.t('validation.invalid.date')}\r\n                invalid={this.state.invalid['startDate']}\r\n              />\r\n            </DatePicker>\r\n            <DatePicker dateFormat=\"m/d/Y\" datePickerType=\"single\" onChange={this.handleEndDateChange}>\r\n              <DatePickerInput\r\n                name=\"endDate\"\r\n                placeholder=\"mm/dd/yyyy\"\r\n                labelText={i18n.t('adminDashboard.addProductVersion.productVersionEndDate')}\r\n                value={this.state.endDate}\r\n                //onChange={this.handleChanges}\r\n                type=\"text\"\r\n                invalidText={i18n.t('validation.invalid.date')}\r\n                invalid={this.state.invalid['endDate']}\r\n              />\r\n            </DatePicker>\r\n          </Form>\r\n        </div>\r\n      </ModalWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withKeycloak(AddProductVersionModal);\r\n","import React, { Component } from 'react';\r\nimport i18n from '../../i18n';\r\nimport { ModalWrapper, Form, TextInput, DatePicker, DatePickerInput } from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport { apiProductVersionGet, apiProductVersionPut } from '../../api/productVersion';\r\nimport moment from 'moment';\r\n\r\nclass EditProjectModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            name: '',\r\n            startDate: '',\r\n            endDate: '',\r\n            invalid: {},\r\n            modalId: '',\r\n            buttonId: '',\r\n            submitMsg: '',\r\n            submitColour: 'black'\r\n        };\r\n    }\r\n\r\n    handleValidation() {\r\n        let invalid = {};\r\n        let formIsValid = true;\r\n\r\n        //name\r\n        if(this.state.name === ''){\r\n          formIsValid = false;\r\n          invalid[\"name\"] = true;\r\n        }\r\n\r\n        if(typeof this.state.startDate !== \"undefined\"){\r\n            if(!this.state.startDate.match(/^(0[1-9]|1[0-2])\\/(0[1-9]|1\\d|2\\d|3[01])\\/(19|20)\\d{2}$/)){\r\n              formIsValid = false;\r\n              invalid['startDate'] = true;\r\n            }\r\n        }\r\n\r\n        if(typeof this.state.endDate !== \"undefined\"){\r\n            if(!this.state.endDate.match(/^(0[1-9]|1[0-2])\\/(0[1-9]|1\\d|2\\d|3[01])\\/(19|20)\\d{2}$/)){\r\n              formIsValid = false;\r\n              invalid['endDate'] = true;\r\n            }\r\n        }\r\n\r\n\r\n        this.setState({ invalid: invalid });\r\n        return formIsValid;\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const { keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n        const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n\r\n        if (authenticated && changedAuth) {\r\n            this.getVersionDetails();\r\n        }\r\n      }\r\n\r\n    handleChanges = (e) => {\r\n        const input = e.target;\r\n        const name = input.name;\r\n        const value = input.value;\r\n        this.setState({ [name]: value });\r\n    };\r\n\r\n    handleStartDateChange = (date) => {\r\n        this.setState({\r\n            startDate: moment(date[0].toISOString()).format('MM/DD/YYYY')\r\n        })\r\n    }\r\n\r\n    handleEndDateChange = (date) => {\r\n        this.setState({\r\n            endDate: moment(date[0].toISOString()).format('MM/DD/YYYY')\r\n        })\r\n    }\r\n\r\n\r\n    async getVersionDetails() {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n        if (authenticated) {\r\n            const version = await apiProductVersionGet(this.props.serviceUrl, this.props.version.id);\r\n            this.setState({\r\n                name: version.data.name,\r\n                startDate: moment(version.data.startDate).format('MM/DD/YYYY'),\r\n                endDate: moment(version.data.endDate).format('MM/DD/YYYY'),\r\n                modalId: \"modal-form-version-edit-\" + version.data.id,\r\n                buttonId: \"edit-version-button-\" + version.data.id\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    async versionPut(version) {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n        if (authenticated) {\r\n            return await apiProductVersionPut(this.props.serviceUrl, version);\r\n        }\r\n    }\r\n\r\n    handleFormSubmit = (e) => {\r\n        const formIsValid = this.handleValidation();\r\n\r\n        if (formIsValid) {\r\n            const version = {\r\n                id: this.props.version.id,\r\n                name: this.state.name,\r\n                startDate: moment(this.state.startDate).format(),\r\n                endDate: moment(this.state.endDate).format()\r\n            }\r\n            this.versionPut(version).then(result => {\r\n                this.setState({\r\n                    submitMsg: i18n.t('submitMessages.updated'),\r\n                    submitColour: '#24a148'\r\n                })\r\n                this.props.updateProductVersions();\r\n            }).catch(err => {\r\n                this.setState({\r\n                    submitMsg: i18n.t('submitMessages.error'),\r\n                    submitColour: '#da1e28'\r\n                })\r\n            });\r\n        }\r\n    };\r\n\r\n    componentDidMount() {\r\n        const { keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n        if (authenticated) {\r\n            this.getVersionDetails();\r\n            const modalOpenButton = document.querySelector('.edit-version-button-' + this.props.version.id);\r\n            modalOpenButton.addEventListener(\"click\", this.clearValues, false);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const buttonClassName = \"bx--btn bx--btn--ghost edit-version-button-\" + this.props.version.id;\r\n        return (\r\n            <ModalWrapper\r\n                buttonTriggerText={i18n.t('buttons.edit')}\r\n                modalHeading={i18n.t('adminDashboard.addProject.editTitle')}\r\n                buttonTriggerClassName={buttonClassName}\r\n                className=\"modal-form\"\r\n                id={this.state.modalId}\r\n                handleSubmit={this.handleFormSubmit}\r\n                primaryButtonText={i18n.t('modalText.save')}\r\n                secondaryButtonText={i18n.t('modalText.cancel')}\r\n                modalLabel={<p style={{color: this.state.submitColour}}>{this.state.submitMsg}</p>}\r\n            >\r\n                <div className=\"form-container\">\r\n                    <Form onSubmit={this.handleFormSubmit}>\r\n                        <TextInput\r\n                            name=\"name\"\r\n                            labelText={i18n.t('adminDashboard.addProject.projectName') + \" *\"}\r\n                            value={this.state.name}\r\n                            onChange={this.handleChanges}\r\n                            invalidText={i18n.t('validation.invalid.required')}\r\n                            invalid={this.state.invalid[\"name\"]}\r\n                        />\r\n                        <DatePicker dateFormat=\"m/d/Y\" datePickerType=\"single\" onChange={this.handleStartDateChange} value={this.state.startDate}>\r\n                            <DatePickerInput\r\n                                name=\"startDate\"\r\n                                placeholder=\"mm/dd/yyyy\"\r\n                                labelText={i18n.t('subscriptionDetails.startDate') + \" *\"}\r\n                                onChange={this.handleChanges}\r\n                                type=\"text\"\r\n                                invalidText={i18n.t('validation.invalid.date')}\r\n                                invalid={this.state.invalid['startDate']}\r\n                            />\r\n                        </DatePicker>\r\n                        <DatePicker dateFormat=\"m/d/Y\" datePickerType=\"single\" onChange={this.handleEndDateChange} name=\"endDate\" value={this.state.endDate}>\r\n                            <DatePickerInput\r\n                                name=\"endDate\"\r\n                                placeholder=\"mm/dd/yyyy\"\r\n                                labelText={i18n.t('subscriptionDetails.endDate') + \" *\"}\r\n                                onChange={this.handleChanges}\r\n                                type=\"text\"\r\n                                invalidText={i18n.t('validation.invalid.date')}\r\n                                invalid={this.state.invalid['endDate']}\r\n                            />\r\n                        </DatePicker>\r\n                    </Form>\r\n                </div>\r\n            </ModalWrapper>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default withKeycloak(EditProjectModal)\r\n","import React, { Component } from 'react';\nimport i18n from '../../../i18n';\nimport {\n  DataTable,\n  TableContainer,\n  Table,\n  TableHead,\n  TableRow,\n  TableHeader,\n  TableBody,\n  TableCell,\n  ToggleSmall,\n  Button\n} from 'carbon-components-react';\nimport { SubtractAlt16 } from '@carbon/icons-react';\nimport { apiProductVersionDelete, apiProductVersionsGet, apiUpdateProductVersionsStatus } from '../../../api/productVersion';\nimport withKeycloak from '../../../auth/withKeycloak';\nimport AddProductVersionModal from '../AddProductVersionModal';\nimport { isPortalAdminOrSupport } from '../../../api/helpers';\nimport EditVersionModal from '../EditVersionModal';\n\nclass ProductVersion extends Component {\n  constructor() {\n    super();\n    this.state = {\n      data: ''\n    };\n  }\n\n  componentDidMount() {\n    if (isPortalAdminOrSupport()) {\n      this.getProductVersions();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { keycloak } = this.props;\n    const authenticated = keycloak.initialized && keycloak.authenticated;\n\n    const changedAuth = prevProps.keycloak.authenticated !== authenticated;\n\n    if (authenticated && changedAuth) {\n      if (isPortalAdminOrSupport()) {\n        this.getProductVersions();\n      }\n    }\n  }\n\n  async getProductVersions() {\n    const { t, keycloak } = this.props;\n    const authenticated = keycloak.initialized && keycloak.authenticated;\n    if (authenticated) {\n      const productVersions = await apiProductVersionsGet(this.props.serviceUrl);\n\n      this.setState({\n        data: productVersions\n      });\n    }\n  }\n\n  async deleteVersion(id) {\n    const { t, keycloak } = this.props;\n    const authenticated = keycloak.initialized && keycloak.authenticated;\n    if (authenticated) {\n      return await apiProductVersionDelete(this.props.serviceUrl, id);\n    }\n  }\n\n  handleDeleteVersion = (e, id) => {\n    e.preventDefault();\n    if (window.confirm(\"Are you sure you want to delete this Entando version?\")) {\n      this.deleteVersion(id).then(result => {\n        this.setState({\n            submitMsg: i18n.t('submitMessages.deleted'),\n            submitColour: '#24a148'\n        })\n        this.updateProductVersions();\n      }).catch(err => {\n        this.setState({\n            submitMsg: i18n.t('submitMessages.error'),\n            submitColour: '#da1e28'\n        })\n      });\n    }\n  }\n\n  updateProductVersions = () => {\n    this.getProductVersions();\n  }\n\n  async handleToggleChange(id) {\n    await apiUpdateProductVersionsStatus(this.props.serviceUrl, id);\n  }\n\n  render() {\n    if (isPortalAdminOrSupport()) {\n      return (\n        <div>\n          <DataTable rows={rowData} headers={headerData}>\n            {({ rows, headers, getHeaderProps, getTableProps }) => (\n              <TableContainer>\n                <Table {...getTableProps()}>\n                  <TableHead>\n                    <TableRow>\n                      {headers.map(header => (\n                        <TableHeader {...getHeaderProps({ header })}>{header.header}</TableHeader>\n                      ))}\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {Object.keys(this.state.data).length !== 0\n                      ? this.state.data.data.map((productVersion, index) => (\n                          <TableRow key={index}>\n                            <TableCell>{productVersion.name}</TableCell>\n                            <TableCell>\n                              <ToggleSmall\n                                onClick={() => this.handleToggleChange(productVersion.id)}\n                                aria-label=\"toggle button\"\n                                id={productVersion.id}\n                                defaultToggled={productVersion.status ? true : false}\n                              />\n                            </TableCell>\n                            <TableCell>{productVersion.startDate}</TableCell>\n                            <TableCell>{productVersion.endDate}</TableCell>\n                            <TableCell>\n                              <div style={{display: 'flex'}}>\n                                <EditVersionModal key={productVersion.id} version={productVersion} serviceUrl={this.props.serviceUrl} updateProductVersions={this.updateProductVersions} />\n                                <a onClick={(e) => this.handleDeleteVersion(e, productVersion.id)} href=\"\" style={{display: 'flex', marginTop: '12px'}}>\n                                  <SubtractAlt16 fill=\"red\" style={{marginTop: '4px'}} />\n                                  <p>{i18n.t('buttons.delete')}</p>\n                                </a>\n                              </div>\n                            </TableCell>\n                          </TableRow>\n                        ))\n                      : null}\n                  </TableBody>\n                </Table>\n              </TableContainer>\n            )}\n          </DataTable>\n          <br />\n          <AddProductVersionModal serviceUrl={this.props.serviceUrl} updateProductVersions={this.updateProductVersions} />\n        </div>\n      );\n    }\n    else {\n      return(<p>{i18n.t('userMessages.unauthorized')}</p>)\n    }\n  }\n}\n\nconst headerData = [\n  {\n    header: i18n.t('adminConfig.manageProductVersion.entandoVersion'),\n    key: 'entVersion'\n  },\n  {\n    header: i18n.t('adminConfig.manageProductVersion.status'),\n    key: 'status'\n  },\n  {\n    header: i18n.t('adminConfig.manageProductVersion.startDate'),\n    key: 'startDate'\n  },\n  {\n    header: i18n.t('adminConfig.manageProductVersion.supportEndDate'),\n    key: 'endDate'\n  },\n  {\n    header: i18n.t('customerDashboard.action'),\n    key: 'action',\n}\n];\n\nconst rowData = [\n  {\n    id: 'a',\n    entVersion: '5.2',\n    status: <ToggleSmall aria-label=\"toggle button\" defaultToggled id=\"status-1\" />,\n    startDate: 'April, 2018',\n    endDate: 'April, 2022'\n  },\n  {\n    id: 'b',\n    entVersion: '6.3',\n    status: <ToggleSmall aria-label=\"toggle button\" id=\"status-2\" />,\n    startDate: 'Jile, 2019',\n    endDate: 'April, 2023'\n  },\n  {\n    id: 'c',\n    entVersion: '6.2',\n    status: <ToggleSmall aria-label=\"toggle button\" defaultToggled id=\"status-3\" />,\n    startDate: 'September, 2020',\n    endDate: 'April, 2024'\n  }\n];\n\nexport default withKeycloak(ProductVersion);\n","import React from 'react';\nimport i18n from '../../../i18n';\nimport { Accordion, AccordionItem, Tile } from 'carbon-components-react';\nimport TicketingSystem from './TicketingSystem';\nimport ProductVersion from './ProductVersion';\nimport { isPortalAdmin } from '../../../api/helpers';\nimport withKeycloak from '../../../auth/withKeycloak';\n\nclass AdminConfiguration extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true\n    }\n    this.adminConfig = [\n      {\n        label: (\n          <div>\n            <p className=\"title\">{i18n.t('adminConfig.integrationTicketingSystem.title')}</p>\n            <p className=\"desc\">{i18n.t('adminConfig.integrationTicketingSystem.desc')}</p>\n          </div>\n        ),\n        content: <TicketingSystem serviceUrl={this.props.serviceUrl} />\n      },\n      {\n        label: (\n          <div>\n            <p className=\"title\">{i18n.t('adminConfig.manageProductVersion.title')}</p>\n            <p className=\"desc\">{i18n.t('adminConfig.manageProductVersion.desc')}</p>\n          </div>\n        ),\n        content: <ProductVersion serviceUrl={this.props.serviceUrl} />\n      }\n    ];\n  }\n\ncomponentDidMount() {\n  const { keycloak } = this.props;\n  const authenticated = keycloak.initialized && keycloak.authenticated;\n\n  if (authenticated) {\n    this.setState({\n      loading: false\n    })\n  }\n}\n\ncomponentDidUpdate(prevProps) {\n  const { keycloak } = this.props;\n  const authenticated = keycloak.initialized && keycloak.authenticated;\n\n  const changedAuth = prevProps.keycloak.authenticated !== authenticated;\n\n  if (authenticated && changedAuth) {\n    this.setState({\n      loading: false\n    });\n  }\n}\n\nrender() {\n  if (!this.state.loading) {\n    // Authorized\n    if (isPortalAdmin()) {\n      return(\n        <div>\n          <h3 className=\"pageTitle\">{i18n.t('adminDashboard.adminTitle')}</h3>\n          <div className=\"form-container\">\n            <Tile>\n              <p className=\"title\">{i18n.t('adminConfig.title')}</p>\n              <p className=\"desc\">{i18n.t('adminConfig.desc')}</p>\n            </Tile>\n            <Accordion>\n              {this.adminConfig.map((item, index) => (\n                <AccordionItem key={index.toString()} index={index} title={item.label} description={item.description}>\n                  <p>{item.content}</p>\n                </AccordionItem>\n              ))}\n            </Accordion>\n          </div>\n        </div>\n      )\n    }\n    // Unauthorized\n    else {\n      return(<p>{i18n.t('userMessages.unauthorized')}</p>)\n    }\n  }\n  // Loading\n  else {\n    return(null)\n  }\n}\n\n}\nexport default withKeycloak(AdminConfiguration);\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport AdminConfiguration from '../components/Admin/Configuration/AdminConfiguration';\r\nimport '../index.scss'\r\nimport './dashboard.css'\r\nimport * as Locale from '../i18n';\r\n\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\n\r\nimport {\r\n  subscribeToWidgetEvent\r\n} from '../helpers/widgetEvents';\r\nimport {\r\n  KEYCLOAK_EVENT_TYPE,\r\n} from './widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window &&\r\n    window.entando &&\r\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\nconst ATTRIBUTES = {\r\n  hidden: 'hidden',\r\n  locale: 'locale',\r\n  paginationMode: 'pagination-mode',\r\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n  serviceUrl: 'service-url',\r\n  locale: 'locale'\r\n};\r\n\r\nclass AdminConfigurationElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    \r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    //retargetEvents(shadowRoot);\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n    const locale = this.getAttribute(ATTRIBUTES.locale) || '';\r\n    Locale.setLocale(locale);\r\n\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <AdminConfiguration serviceUrl={serviceUrl}/>\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.define('admin-configuration-widget', AdminConfigurationElement);\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport OpenTicket from '../components/Forms/openTicket';\r\nimport '../index.scss'\r\nimport './dashboard.css'\r\nimport * as Locale from '../i18n';\r\n\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\n\r\nimport {\r\n  subscribeToWidgetEvent\r\n} from '../helpers/widgetEvents';\r\nimport {\r\n  KEYCLOAK_EVENT_TYPE,\r\n} from '../custom-elements/widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window &&\r\n    window.entando &&\r\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\nconst ATTRIBUTES = {\r\n  hidden: 'hidden',\r\n  locale: 'locale',\r\n  paginationMode: 'pagination-mode',\r\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n  serviceUrl: 'service-url',\r\n  locale: 'locale'\r\n};\r\n\r\nclass OpenTicketElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    \r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    //retargetEvents(shadowRoot);\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n    const locale = this.getAttribute(ATTRIBUTES.locale) || '';\r\n    Locale.setLocale(locale);\r\n\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <OpenTicket serviceUrl={serviceUrl}/>\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.define('open-ticket-widget', OpenTicketElement);\r\n\r\n","import { getDefaultOptions, request, getUrl } from './helpers';\r\n\r\nconst resource = 'api/portal-users';\r\n\r\nexport const apiUserDelete = async (serviceUrl, id) => {\r\n  const url = `${serviceUrl}/${resource}/${id}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE',\r\n  };\r\n  return await request(url, options);\r\n};\r\n\r\nexport const apiUsersPut = async (serviceUrl, user) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'PUT',\r\n    body: user ? JSON.stringify(user) : null,\r\n  };\r\n  return await request(url, options);\r\n};\r\n\r\nexport const apiUsersGet = async (serviceUrl) => {\r\n  const url = getUrl(\r\n    `${serviceUrl}/${resource}`\r\n  );\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return await request(url, options);\r\n};\r\n\r\nexport const apiUserGet = async (serviceUrl, userId) => {\r\n  const url = getUrl(\r\n    `${serviceUrl}/${resource}/${userId}`\r\n  );\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return await request(url, options);\r\n};\r\n\r\nexport const apiUserPost = async (serviceUrl, user) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n    body: user ? JSON.stringify(user) : null,\r\n  };\r\n  return await request(url, options);\r\n};\r\n\r\nexport const apiUserGetByUsername = async (serviceUrl, username) => {\r\n  const url = getUrl(\r\n    `${serviceUrl}/${resource}/username/${username}`\r\n  );\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return await request(url, options);\r\n};","import { getDefaultKeycloakOptions, request, getUrl } from './helpers';\n\nconst usersResource = `admin/realms/${process.env.REACT_APP_KEYCLOAK_REALM}/users`;\nconst tokenResource = `realms/${process.env.REACT_APP_KEYCLOAK_REALM}/protocol/openid-connect/token`;\n \nexport const apiKeycloakUserGet = async (serviceUrl) => {\n  const url = `${serviceUrl}/${usersResource}`;\n  const options = {\n    ...getDefaultKeycloakOptions(),\n    method: 'GET',\n  };\n  return await request(url, options);\n};\n\nexport const apiKeycloakToken = async (serviceUrl) => {\n  const url = getUrl(\n    `${serviceUrl}/${tokenResource}`\n  );\n  const keycloakBody = {\n    client_id: \"web_app\",\n    username: \"admin\",\n    password: \"admin\",\n    grant_type: \"password\"\n  }\n  const options = {\n    ...getDefaultKeycloakOptions(),\n    method: 'POST',\n    body: keycloakBody ? serialize(keycloakBody) : null,\n  };\n  return await request(url, options);\n};\n\nfunction serialize(obj) {\n  var str = [];\n  for (var p in obj)\n    if (obj.hasOwnProperty(p)) {\n      str.push(encodeURIComponent(p) + \"=\" + encodeURIComponent(obj[p]));\n    }\n  return str.join(\"&\");\n}\n","import React, { Component } from 'react';\r\nimport { Form, TextInput, Select, SelectItem, Button } from 'carbon-components-react';\r\nimport * as portalUserApi from '../../../api/portalusers';\r\nimport { apiAddUserToProject, apiGetProjectIdNames } from '../../../api/projects';\r\nimport withKeycloak from '../../../auth/withKeycloak';\r\nimport { apiKeycloakUserGet } from '../../../api/keycloak';\r\nimport i18n from '../../../i18n';\r\nclass AssignUser extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            projectId: '',\r\n            assignUser: '',\r\n            users: new Map(),\r\n            projects: {},\r\n            invalid: {},\r\n            submitMsg: '',\r\n            submitColour: 'black'\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { t, keycloak } = this.props;\r\n\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n        if (authenticated) {\r\n            this.fetchData(keycloak.authServerUrl);\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n      \r\n        const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n      \r\n        if (authenticated && changedAuth) {\r\n            this.fetchData(keycloak.authServerUrl);\r\n        }\r\n    }\r\n\r\n    async fetchData(keycloakUrl) {\r\n        const users = this.mapKeycloakUserEmails((await apiKeycloakUserGet(keycloakUrl)).data);\r\n        const projects = (await apiGetProjectIdNames(this.props.serviceUrl)).data;\r\n        this.setState({\r\n            users,\r\n            projects\r\n        });\r\n    }\r\n\r\n    mapKeycloakUserEmails = keycloakUsers => {\r\n        const usernameEmailMap = new Map();\r\n        keycloakUsers.forEach(keycloakUser => usernameEmailMap.set(keycloakUser.username, keycloakUser.email));\r\n        return usernameEmailMap;\r\n    };\r\n\r\n    handleChanges = e => {\r\n        const input = e.target;\r\n        const name = input.name;\r\n        const value = input.value;\r\n        this.setState({ [name]: value });\r\n    };\r\n\r\n    handleFormSubmit = event => {\r\n        event.preventDefault();\r\n        const { projectId, assignUser } = this.state;\r\n        const formIsValid = this.handleFormValidation();\r\n\r\n        if (formIsValid) {\r\n            this.assignUserToProject(projectId, assignUser).then(res => {\r\n                if (res.status === 201) {\r\n                    this.setState({\r\n                        submitMsg: i18n.t('submitMessages.updated'),\r\n                        submitColour: '#24a148'\r\n                    })\r\n                } else {\r\n                    this.setState({\r\n                        submitMsg: i18n.t('submitMessages.error'),\r\n                        submitColour: '#da1e28'\r\n                    })\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    handleFormValidation() {\r\n        let invalid = {};\r\n        let formIsValid = true;\r\n        const { projectId, assignUser } = this.state;\r\n\r\n        //name\r\n        if (projectId === '') {\r\n            formIsValid = false;\r\n            invalid['projectId'] = true;\r\n        }\r\n\r\n        //customerNumber\r\n        if (assignUser === '') {\r\n            formIsValid = false;\r\n            invalid['assignUser'] = true;\r\n        }\r\n\r\n        this.setState({ invalid: invalid });\r\n        return formIsValid;\r\n    }\r\n\r\n    assignUserToProject = async (projectId, username) => {\r\n        const portalUserId = await this.getPortalUserId({ username, email: this.state.users.get(username) });\r\n        return await apiAddUserToProject(this.props.serviceUrl, projectId, portalUserId);\r\n    };\r\n\r\n    getPortalUserId = async keycloakUser => {\r\n        let portalUserId = null;\r\n        try {\r\n            const portalUser = await portalUserApi.apiUserGetByUsername(this.props.serviceUrl, keycloakUser.username);\r\n            portalUserId = portalUser.data.id;\r\n        } catch (e) {\r\n            if (e.message.toLowerCase().includes('not found')) {\r\n                const portalUser = await this.createPortalUser(keycloakUser);\r\n                portalUserId = portalUser.data.id;\r\n            }\r\n        }\r\n\r\n        return portalUserId;\r\n    };\r\n\r\n    createPortalUser = async keycloakUser => {\r\n        return await portalUserApi.apiUserPost(this.props.serviceUrl, { username: keycloakUser.username, email: keycloakUser.email });\r\n    };\r\n\r\n    setupFormComponents() {\r\n        const users = this.state.users;\r\n        const projectIdsNames = this.state.projects;\r\n        let userList, projectList = (userList = null);\r\n\r\n        if (users.size > 0) {\r\n            userList = [...users.keys()].map((assignUser, i) => (\r\n                <SelectItem key={i} text={assignUser} value={assignUser}>\r\n                    {assignUser}\r\n                </SelectItem>\r\n            ));\r\n            userList.unshift(<SelectItem key=\"-1\" text={i18n.t('manageUsers.assign.userList')} value=\"\" />);\r\n        } else {\r\n            userList = <SelectItem text={i18n.t('manageUsers.assign.noUsers')} value=\"\" />;\r\n        }\r\n\r\n        if (projectIdsNames != null && Object.keys(projectIdsNames).length > 0) {\r\n            projectList = Object.keys(projectIdsNames).map((projectId, i) => (\r\n                <SelectItem key={i} text={projectIdsNames[projectId]} value={projectId}>\r\n                    test\r\n                </SelectItem>\r\n            ));\r\n            projectList.unshift(<SelectItem key=\"-1\" text={i18n.t('manageUsers.assign.projectList')} value=\"\" />);\r\n        } else {\r\n            projectList = <SelectItem text={i18n.t('manageUsers.assign.noProjects')} value=\"\" />;\r\n        }\r\n\r\n        return { userList, projectList };\r\n    }\r\n\r\n    render() {\r\n        const { userList, projectList } = this.setupFormComponents();\r\n\r\n        return (\r\n            <div>\r\n                <p style={{color: this.state.submitColour}}>{this.state.submitMsg}</p>\r\n                <Form onSubmit={this.handleFormSubmit}>\r\n                    <div className=\"bx--grid\">\r\n                        <div className=\"bx--row\">\r\n                            <div className=\"bx--col\">\r\n                                <Select\r\n                                    name=\"projectId\"\r\n                                    labelText={i18n.t('manageUsers.assign.projectName')}\r\n                                    value={this.state.projectId}\r\n                                    onChange={this.handleChanges}\r\n                                    invalidText={i18n.t('validation.invalid.required')}\r\n                                    invalid={this.state.invalid['projectId']}\r\n                                >\r\n                                    {projectList}\r\n                                </Select>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"bx--row\">\r\n                            <div className=\"bx--col\">\r\n                                <Select\r\n                                    name=\"assignUser\"\r\n                                    labelText={i18n.t('manageUsers.assign.assignUser')}\r\n                                    value={this.state.assignUser}\r\n                                    onChange={this.handleChanges}\r\n                                    invalidText={i18n.t('validation.invalid.required')}\r\n                                    invalid={this.state.invalid['assignUser']}\r\n                                >\r\n                                    {userList}\r\n                                </Select>\r\n                            </div>\r\n                        </div>\r\n                        <Button kind=\"primary\" tabIndex={0} type=\"submit\">\r\n                            {' '}\r\n                            {i18n.t('buttons.submit')}{' '}\r\n                        </Button>\r\n                    </div>\r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withKeycloak(AssignUser);\r\n","import React, { Component } from 'react';\r\nimport { DataTable, TableContainer, Table, TableHead, TableRow, TableHeader, TableBody, TableCell } from 'carbon-components-react';\r\nimport { SubtractAlt16 } from '@carbon/icons-react';\r\nimport { apiUsersGet, apiUserDelete } from '../../../api/portalusers';\r\nimport withKeycloak from '../../../auth/withKeycloak';\r\nimport { apiKeycloakUserGet } from '../../../api/keycloak';\r\nimport i18n from '../../../i18n';\r\n\r\nclass DeleteUser extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            portalUsers: new Map(),\r\n            keycloakUsers: new Map(),\r\n            displayUsers: [],\r\n            filterText: ''\r\n        };\r\n        this.headerData = [\r\n            {\r\n                header: i18n.t('manageUsers.delete.userName'),\r\n                key: 'username',\r\n            },\r\n            {\r\n                header: i18n.t('manageUsers.delete.userEmail'),\r\n                key: 'email',\r\n            },\r\n            {\r\n                header: i18n.t('manageUsers.delete.dateAdded'),\r\n                key: 'dateAdded',\r\n            },\r\n            {\r\n                header: i18n.t('manageUsers.delete.userAccess'),\r\n                key: 'userAccess',\r\n            }\r\n        ];\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n      \r\n        if (authenticated) {\r\n            this.fetchData(keycloak.authServerUrl);\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n      \r\n        const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n      \r\n        if (authenticated && changedAuth) {\r\n            this.fetchData(keycloak.authServerUrl);\r\n        }\r\n    }\r\n\r\n    async fetchData(keycloakUrl) {\r\n        const { keycloak } = this.props;\r\n\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n        if (authenticated) {\r\n            const portalUsers = this.handleMapFormatting((await apiUsersGet(this.props.serviceUrl)).data);\r\n            const keycloakUsers = this.handleMapFormatting((await apiKeycloakUserGet(keycloakUrl)).data);\r\n\r\n            this.setState({\r\n                portalUsers,\r\n                keycloakUsers\r\n            });\r\n\r\n            this.handleUserDisplay();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Turns the list of user objects into a map where the key is the unique username.\r\n     */\r\n    handleMapFormatting(users) {\r\n        return new Map(users.map(user => [user.username, user]));\r\n    }\r\n\r\n    handleUserDisplay() {\r\n        const { portalUsers, keycloakUsers } = this.state;\r\n        const portalUsernames = [...portalUsers.keys()];\r\n        const keycloakUserObjects = [...keycloakUsers.values()];\r\n\r\n        const displayUsers = keycloakUserObjects.map(keycloakUser => (\r\n            {\r\n                id:  keycloakUser.username,\r\n                username: keycloakUser.username,\r\n                email: keycloakUser.email,\r\n                dateAdded: `${new Date(keycloakUser.createdTimestamp).toLocaleString('default', { month: 'long'})} ${new Date(keycloakUser.createdTimestamp).getFullYear()}`,\r\n                userAccess: portalUsernames.includes(keycloakUser.username) ? <a onClick={event => this.handleRemoveUser(keycloakUser.username, event)} href=\"\"><SubtractAlt16 fill=\"red\" />{i18n.t('manageUsers.delete.removeUser')}</a> : ''\r\n            }\r\n        ));\r\n\r\n        this.setState({\r\n            displayUsers\r\n        });\r\n    }\r\n\r\n    handleRemoveUser = (username, event) => {\r\n        event.preventDefault();\r\n        const userId = this.state.portalUsers.get(username).id;\r\n        apiUserDelete(this.props.serviceUrl, userId).then(res => {\r\n            if (res.status === 204) {\r\n                const updatedPortalUsers = this.state.portalUsers;\r\n                updatedPortalUsers.delete(username);\r\n                this.setState({\r\n                    portalUsers: updatedPortalUsers\r\n                });\r\n                this.handleUserDisplay();\r\n            } else {\r\n                // TODO: Error message\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <DataTable rows={this.state.displayUsers} headers={this.headerData}>\r\n                {({ rows, headers, getHeaderProps, getTableProps }) => (\r\n                    <TableContainer>\r\n                        <Table {...getTableProps()}>\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    {headers.map((header) => (\r\n                                        <TableHeader {...getHeaderProps({ header })}>\r\n                                            {header.header}\r\n                                        </TableHeader>\r\n                                    ))}\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {rows.map((row) => (\r\n                                    <TableRow key={row.id}>\r\n                                        {row.cells.map((cell) => (\r\n                                            <TableCell key={cell.id}>{cell.value}</TableCell>\r\n                                        ))}\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                )}\r\n            </DataTable>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withKeycloak(DeleteUser);","import React, { Component } from 'react';\nimport i18n from '../../../i18n';\nimport { Accordion, AccordionItem } from 'carbon-components-react';\nimport AssignUser from './AssignUser';\nimport DeleteUser from './DeleteUser';\nimport { isPortalAdmin } from '../../../api/helpers';\nimport withKeycloak from '../../../auth/withKeycloak';\n\nclass ManageUser extends Component {\n  userFunctionality;\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true\n    }\n    this.userFunctionality = [\n      {\n        label: (\n          <div>\n            <p className=\"title\">{i18n.t('manageUsers.assign.title')}</p>\n            <p className=\"desc\">{i18n.t('manageUsers.assign.desc')}</p>\n          </div>\n        ),\n        content: <AssignUser serviceUrl={this.props.serviceUrl} />,\n        open: true\n      },\n      {\n        label: (\n          <div>\n            <p className=\"title\">{i18n.t('manageUsers.manage.title')}</p>\n            <p className=\"desc\">{i18n.t('manageUsers.manage.desc')}</p>\n          </div>\n        ),\n        content: <DeleteUser serviceUrl={this.props.serviceUrl} />,\n        open: false\n      }\n    ];\n  }\n\n  componentDidMount() {\n    const { keycloak } = this.props;\n    const authenticated = keycloak.initialized && keycloak.authenticated;\n\n    if (authenticated) {\n      this.setState({\n        loading: false\n      })\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { keycloak } = this.props;\n    const authenticated = keycloak.initialized && keycloak.authenticated;\n\n    const changedAuth = prevProps.keycloak.authenticated !== authenticated;\n\n    if (authenticated && changedAuth) {\n      this.setState({\n        loading: false\n      });\n    }\n  }\n\n  render() {\n    if (!this.state.loading) {\n      if (isPortalAdmin()) {\n        return (\n          <div>\n            <h3 className=\"pageTitle\">{i18n.t('adminDashboard.adminTitle')}</h3>\n            <div className=\"form-container\">\n              <Accordion>\n                {this.userFunctionality.map((item, index) => (\n                  <AccordionItem key={index.toString()} index={index} title={item.label} description={item.description} open={item.open}>\n                    <p>{item.content}</p>\n                  </AccordionItem>\n                ))}\n              </Accordion>\n            </div>\n          </div>\n        )\n      }\n      // Unauthorized\n      else {\n        return(<p>{i18n.t('userMessages.unauthorized')}</p>)\n      }\n    }\n    // Loading\n    else {\n      return(null)\n    }\n  }\n}\n\nexport default withKeycloak(ManageUser);\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport ManageUser from '../components/Admin/ManageUser/ManageUser';\r\nimport '../index.scss'\r\nimport './dashboard.css'\r\nimport * as Locale from '../i18n';\r\n\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\n\r\nimport {\r\n  subscribeToWidgetEvent\r\n} from '../helpers/widgetEvents';\r\nimport {\r\n  KEYCLOAK_EVENT_TYPE,\r\n} from '../custom-elements/widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window &&\r\n    window.entando &&\r\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\nconst ATTRIBUTES = {\r\n  hidden: 'hidden',\r\n  locale: 'locale',\r\n  paginationMode: 'pagination-mode',\r\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n  serviceUrl: 'service-url',\r\n  locale: 'locale'\r\n};\r\n\r\nclass ManageUserElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    \r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    //retargetEvents(shadowRoot);\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n    const locale = this.getAttribute(ATTRIBUTES.locale) || '';\r\n    Locale.setLocale(locale);\r\n\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <ManageUser serviceUrl={serviceUrl}/>\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.define('manage-user-widget', ManageUserElement);\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport AssignUser from '../components/Admin/ManageUser/AssignUser';\r\nimport '../index.scss'\r\nimport './dashboard.css'\r\n\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\n\r\nimport {\r\n  subscribeToWidgetEvent\r\n} from '../helpers/widgetEvents';\r\nimport {\r\n  KEYCLOAK_EVENT_TYPE,\r\n} from '../custom-elements/widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window &&\r\n    window.entando &&\r\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\nconst ATTRIBUTES = {\r\n  hidden: 'hidden',\r\n  locale: 'locale',\r\n  paginationMode: 'pagination-mode',\r\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n  serviceUrl: 'service-url'\r\n};\r\n\r\nclass AssignUserElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    \r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    //retargetEvents(shadowRoot);\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n    \r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <AssignUser serviceUrl={serviceUrl} />\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.define('assign-user-widget', AssignUserElement);\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport DeleteUser from '../components/Admin/ManageUser/DeleteUser';\r\nimport '../index.scss'\r\nimport './dashboard.css'\r\n\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\n\r\nimport {\r\n  subscribeToWidgetEvent\r\n} from '../helpers/widgetEvents';\r\nimport {\r\n  KEYCLOAK_EVENT_TYPE,\r\n} from '../custom-elements/widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window &&\r\n    window.entando &&\r\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\nconst ATTRIBUTES = {\r\n  hidden: 'hidden',\r\n  locale: 'locale',\r\n  paginationMode: 'pagination-mode',\r\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n  serviceUrl: 'service-url',\r\n};\r\n\r\nclass DeleteUserElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    \r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    //retargetEvents(shadowRoot);\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n    \r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <DeleteUser serviceUrl={serviceUrl} />\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.define('delete-user-widget', DeleteUserElement);\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport TicketingSystem from '../components/Admin/Configuration/TicketingSystem';\r\nimport '../index.scss'\r\nimport './dashboard.css'\r\n\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\n\r\nimport {\r\n  subscribeToWidgetEvent\r\n} from '../helpers/widgetEvents';\r\nimport {\r\n  KEYCLOAK_EVENT_TYPE,\r\n} from './widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window &&\r\n    window.entando &&\r\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\nconst ATTRIBUTES = {\r\n  hidden: 'hidden',\r\n  locale: 'locale',\r\n  paginationMode: 'pagination-mode',\r\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n  serviceUrl: 'service-url',\r\n};\r\n\r\nclass TicketingSystemElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    \r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    //retargetEvents(shadowRoot);\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <TicketingSystem serviceUrl={serviceUrl}/>\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.define('ticketing-system-widget', TicketingSystemElement);\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport ProductVersion from '../components/Admin/Configuration/ProductVersion';\r\nimport '../index.scss'\r\nimport './dashboard.css'\r\n\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\n\r\nimport {\r\n  subscribeToWidgetEvent\r\n} from '../helpers/widgetEvents';\r\nimport {\r\n  KEYCLOAK_EVENT_TYPE,\r\n} from './widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window &&\r\n    window.entando &&\r\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\nconst ATTRIBUTES = {\r\n  hidden: 'hidden',\r\n  locale: 'locale',\r\n  paginationMode: 'pagination-mode',\r\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n  serviceUrl: 'service-url',\r\n};\r\n\r\nclass ProductVersionElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    \r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    //retargetEvents(shadowRoot);\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <ProductVersion serviceUrl={serviceUrl}/>\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.define('product-version-widget', ProductVersionElement);\r\n\r\n","import React, { Component } from 'react';\nimport i18n from '../../i18n';\nimport { Form, TextInput, Select, SelectItem, Button, DatePicker, DatePickerInput } from 'carbon-components-react';\nimport { apiGetProjectIdNames, apiGetMyProjectIdNames } from '../../api/projects';\nimport withKeycloak from '../../auth/withKeycloak';\nimport { apiProjectSubscriptionPost, apiRenewSubscription } from '../../api/subscriptions';\nimport { apiProductVersionsGet } from '../../api/productVersion';\nimport {\n  isPortalAdmin,\n  isPortalAdminOrSupport,\n  isPortalCustomer, isPortalPartner,\n  isPortalSupport,\n  isPortalUser\n} from '../../api/helpers';\nimport { apiAddSubscriptionToProject } from '../../api/projects';\nimport moment from 'moment';\n\nconst subscriptionLevel = {\n    GOLD: 'Gold',\n    PLATINUM: 'Platinum'\n}\n\nconst subscriptionStatus = {\n    requested: 'REQUESTED',\n    pending: 'PENDING',\n    active: 'ACTIVE',\n    expired: 'EXPIRED'\n}\n\nconst subscriptionTypes = ['New', 'Existing'];\n\nclass SubscriptionForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: true,\n            subscriptionType: '',\n            projectId: '',\n            startDate: '',\n            subscriptionLevel: '',\n            subscriptionLength: '',\n            entandoVersionId: '',\n            invalid: {},\n            projects: {},\n            productVersions: [],\n            selectedProjectId: '',\n            submitSuccess: false,\n            submitError: false,\n            submitColour: 'black'\n        };\n    }\n\n    componentDidMount() {\n        const {keycloak } = this.props;\n\n        const authenticated = keycloak.initialized && keycloak.authenticated;\n        if (authenticated) {\n            if (isPortalUser()) {\n                this.fetchData();\n            }\n            this.setState({\n                loading: false\n            })\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        const { keycloak } = this.props;\n        const authenticated = keycloak.initialized && keycloak.authenticated;\n\n        const changedAuth = prevProps.keycloak.authenticated !== authenticated;\n\n        if (authenticated && changedAuth) {\n            if (isPortalUser()) {\n                this.fetchData();\n            }\n            this.setState({\n                loading: false\n            })\n        }\n    }\n\n    async fetchData() {\n        var projects = ''\n        if (isPortalAdminOrSupport()) {\n            projects = (await apiGetProjectIdNames(this.props.serviceUrl)).data;\n        }\n        else {\n            projects = (await apiGetMyProjectIdNames(this.props.serviceUrl)).data;\n        }\n        const productVersions = (await apiProductVersionsGet(this.props.serviceUrl)).data;\n\n        this.setState({\n            projects,\n            productVersions\n        });\n    }\n\n    isNumeric(str) {\n        if (typeof str != \"string\")\n            return false\n        return !isNaN(str) && !isNaN(parseFloat(str))\n    }\n\n    handleValidation() {\n        let invalid = {};\n        let formIsValid = true;\n\n        if (this.state.subscriptionType === '') {\n            formIsValid = false;\n            invalid['subscriptionType'] = true;\n        }\n\n        if (this.state.projectId === '') {\n            formIsValid = false;\n            invalid['projectId'] = true;\n        }\n\n        if (typeof this.state.startDate !== \"undefined\") {\n            if (!this.state.startDate.match(/^(0[1-9]|1[0-2])\\/(0[1-9]|1\\d|2\\d|3[01])\\/(19|20)\\d{2}$/)) {\n                formIsValid = false;\n                invalid[\"startDate\"] = true;\n            }\n        }\n\n        if (this.state.subscriptionLength === '' || !this.isNumeric(this.state.subscriptionLength)) {\n            formIsValid = false;\n            invalid['subscriptionLength'] = true;\n        }\n\n        if (this.state.subscriptionLevel === '') {\n            formIsValid = false;\n            invalid['level'] = true;\n        }\n\n        if (this.state.entandoVersionId === '') {\n            formIsValid = false;\n            invalid['entandoVersionId'] = true;\n        }\n\n        this.setState({ invalid: invalid });\n        return formIsValid;\n    }\n\n    handleChanges = (e) => {\n        const input = e.target;\n        const name = input.name;\n        const value = input.value;\n        this.setState({ [name]: value });\n        this.setState({\n            submitSuccess: false,\n            submitError: false\n        });\n    }\n\n    handleStartDateChange = (date) => {\n        if (date !== \"\") {\n            this.setState({\n                startDate: moment(date[0].toISOString()).format('MM/DD/YYYY')\n            })\n        }\n    }\n\n    handleFormSubmit = (event) => {\n        event.preventDefault();\n        this.setState({\n            submitSuccess: false,\n            submitError: false\n        });\n        const formIsValid = this.handleValidation();\n\n        if (formIsValid) {\n            if (this.state.subscriptionType === 'new') {\n                this.newSubscription().then(res => {\n                    apiAddSubscriptionToProject(this.props.serviceUrl, this.state.projectId, res.data.id)\n                    this.setState({\n                        submitSuccess: true,\n                        submitError: false,\n                        submitColour: '#24a148'\n                    });\n                }).catch(err => {\n                    this.setState({\n                        submitSuccess: false,\n                        submitError: true,\n                        submitColour: '#da1e28'\n                    });\n                });\n            } else if (this.state.subscriptionType === 'existing') {\n                this.renewSubscription().then(res => {\n                    apiAddSubscriptionToProject(this.props.serviceUrl, this.state.projectId, res.data.id)\n                    this.setState({\n                        submitSuccess: true,\n                        submitError: false,\n                        submitColour: '#24a148'\n                    });\n                }).catch(err => {\n                    this.setState({\n                        submitSuccess: false,\n                        submitError: true,\n                        submitColour: '#da1e28'\n                    });\n                });\n            }\n        }\n    };\n\n    async newSubscription() {\n        const subscriptionRequest = {\n            entandoVersionId: this.state.entandoVersionId,\n            projectId: this.state.projectId,\n            projectSubscription: {\n                startDate: new Date(this.state.startDate),\n                lengthInMonths: this.state.subscriptionLength,\n                level: this.state.subscriptionLevel,\n                status: this.subscriptionStatus()\n            }\n        }\n\n        return await apiProjectSubscriptionPost(this.props.serviceUrl, subscriptionRequest);\n    }\n\n    async renewSubscription() {\n        const subscriptionRequest = {\n            entandoVersionId: this.state.entandoVersionId,\n            projectId: this.state.projectId,\n            projectSubscription: {\n                startDate: new Date(this.state.startDate),\n                lengthInMonths: this.state.subscriptionLength,\n                level: this.state.subscriptionLevel,\n                status: this.subscriptionStatus()\n            }\n        }\n\n        return await apiRenewSubscription(this.props.serviceUrl, subscriptionRequest);\n    }\n\n    subscriptionStatus() {\n        return isPortalAdmin() ? subscriptionStatus.active : subscriptionStatus.requested;\n    }\n\n    setupFormComponents() {\n        const projectIdsNames = this.state.projects;\n        let projectList = null;\n\n        if (projectIdsNames != null && Object.keys(projectIdsNames).length > 0) {\n            projectList = Object.keys(projectIdsNames).map((projectId, i) => (\n                <SelectItem key={i} text={projectIdsNames[projectId]} value={projectId}>{projectIdsNames[projectId]}</SelectItem>\n            ));\n            projectList.unshift(<SelectItem key=\"-1\" text={i18n.t('manageUsers.assign.projectList')} value=\"\" />);\n        } else {\n            projectList = <SelectItem text={i18n.t('manageUsers.assign.noProjects')} value=\"\" />;\n        }\n\n        const subscriptionLevelList = Object.entries(subscriptionLevel).map(([key, value]) => (\n            <SelectItem key={key} text={value} value={key}>{value}</SelectItem>\n        ));\n        subscriptionLevelList.unshift(<SelectItem key=\"-1\" text={i18n.t('subscriptionForm.chooseLevel')} value=\"\" />)\n\n        const versionList = this.state.productVersions.map(version => {\n            // only allow the user to choose from active entando versions\n            if (version.status) {\n                return(<SelectItem key={version.id} text={version.name} value={version.id}>{version.name}</SelectItem>)\n            }\n            else {\n                return(null)\n            }\n        });\n        versionList.unshift(<SelectItem key=\"-1\" text={i18n.t('subscriptionForm.chooseVersion')} value=\"\" />)\n\n        return { projectList, subscriptionLevelList, versionList }\n    }\n\n    renderForm() {\n        const formComponents = this.setupFormComponents()\n        const { projectList, subscriptionLevelList, versionList } = formComponents;\n        let formInputs;\n\n        if (this.state.subscriptionType === 'new') {\n            formInputs = (\n                <div>\n                    <p><strong>{i18n.t('subscriptionForm.newSubscription')}</strong></p><br />\n                    <div className=\"bx--row\">\n                        <div className=\"bx--col\">\n                            <Select\n                                id=\"projectId\"\n                                name=\"projectId\"\n                                labelText={i18n.t('subscriptionForm.projectName')}\n                                value={this.state.projectId}\n                                onChange={this.handleChanges}\n                                invalidText={i18n.t('validation.invalid.required')}\n                                invalid={this.state.invalid['projectId']}\n                            >\n                                {projectList}\n                            </Select>\n                            <Select\n                                id=\"subscriptionLevel\"\n                                name=\"subscriptionLevel\"\n                                labelText={i18n.t('subscriptionForm.desiredSubscriptionLevel') + \" *\"}\n                                value={this.state.subscriptionLevel} onChange={this.handleChanges}\n                                invalidText={i18n.t('validation.invalid.required')}\n                                invalid={this.state.invalid['level']}\n                            >\n                                {subscriptionLevelList}\n                            </Select>\n                            <Select\n                                id=\"entandoVersionId\"\n                                name=\"entandoVersionId\"\n                                labelText={i18n.t('subscriptionForm.entandoVersion') + \" *\"}\n                                value={this.state.entandoVersionId}\n                                onChange={this.handleChanges}\n                                invalidText={i18n.t('validation.invalid.required')}\n                                invalid={this.state.invalid['entandoVersionId']}\n                            >\n                                {versionList}\n                            </Select>\n                        </div>\n                        <div className=\"bx--col\">\n                            <DatePicker dateFormat=\"m/d/Y\" datePickerType=\"single\" onChange={this.handleStartDateChange}>\n                                <DatePickerInput\n                                    id=\"startDate\"\n                                    name=\"startDate\"\n                                    placeholder=\"mm/dd/yyyy\"\n                                    labelText={i18n.t('subscriptionForm.desiredSubscriptionStartDate')}\n                                    value={this.state.startDate}\n                                    //onChange={this.handleChanges}\n                                    type=\"text\"\n                                    invalidText={i18n.t('validation.invalid.date')}\n                                    invalid={this.state.invalid['startDate']}\n                                />\n                            </DatePicker>\n                            <TextInput\n                                id=\"subscriptionLength\"\n                                name=\"subscriptionLength\"\n                                labelText={i18n.t('subscriptionForm.desiredSubscriptionLength') + \" *\"}\n                                value={this.state.subscriptionLength}\n                                onChange={this.handleChanges}\n                                invalidText={i18n.t('validation.invalid.number')}\n                                invalid={this.state.invalid['subscriptionLength']}\n                            />\n                        </div>\n                    </div>\n                </div>\n            )\n        } else if (this.state.subscriptionType === 'existing') {\n            formInputs = (\n                <div>\n                    <p><strong>{i18n.t('subscriptionForm.renewSubscription')}</strong></p><br />\n                    <div className=\"bx--row\">\n                        <div className=\"bx--col\">\n                            <Select\n                                id=\"projectId\"\n                                name=\"projectId\"\n                                labelText={i18n.t('subscriptionForm.projectName')}\n                                value={this.state.projectId}\n                                onChange={this.handleChanges}\n                                invalidText={i18n.t('validation.invalid.required')}\n                                invalid={this.state.invalid['projectId']}\n                            >\n                                {projectList}\n                            </Select>\n                            <Select\n                                id=\"subscriptionLevel\"\n                                name=\"subscriptionLevel\"\n                                labelText={i18n.t('subscriptionForm.desiredSubscriptionLevel') + \" *\"}\n                                value={this.state.subscriptionLevel}\n                                onChange={this.handleChanges}\n                                invalidText={i18n.t('validation.invalid.required')}\n                                invalid={this.state.invalid['level']}\n                            >\n                                {subscriptionLevelList}\n                            </Select>\n                            <Select\n                                id=\"entandoVersionId\"\n                                name=\"entandoVersionId\"\n                                labelText={i18n.t('subscriptionForm.entandoVersion') + \" *\"}\n                                value={this.state.entandoVersionId}\n                                onChange={this.handleChanges}\n                                invalidText={i18n.t('validation.invalid.required')}\n                                invalid={this.state.invalid['entandoVersionId']}\n                            >\n                                {versionList}\n                            </Select>\n                        </div>\n                        <div className=\"bx--col\">\n                            <DatePicker dateFormat=\"m/d/Y\" datePickerType=\"single\" onChange={this.handleStartDateChange}>\n                                <DatePickerInput\n                                    id=\"startDate\"\n                                    name=\"startDate\"\n                                    placeholder=\"mm/dd/yyyy\"\n                                    labelText={i18n.t('subscriptionForm.desiredSubscriptionStartDate')}\n                                    value={this.state.startDate}\n                                    //onChange={this.handleChanges}\n                                    type=\"text\"\n                                    invalidText={i18n.t('validation.invalid.date')}\n                                    invalid={this.state.invalid['startDate']}\n                                />\n                            </DatePicker>\n                            <TextInput\n                                id=\"subscriptionLength\"\n                                name=\"subscriptionLength\"\n                                labelText={i18n.t('subscriptionForm.desiredSubscriptionLength') + \" *\"}\n                                value={this.state.subscriptionLength}\n                                onChange={this.handleChanges}\n                                invalidText={i18n.t('validation.invalid.number')}\n                                invalid={this.state.invalid['subscriptionLength']}\n                            />\n                        </div>\n                    </div>\n                </div>\n            )\n        }\n\n        return formInputs;\n    }\n\n    successErrorMessage() {\n        const isAdmin = isPortalAdmin();\n        const { subscriptionType, submitSuccess, submitError } = this.state;\n\n        if (subscriptionType === 'new') {\n            if (submitSuccess) {\n                return isAdmin ? this.createFormMessage('adminSubmitNewSuccess') : this.createFormMessage('customerSubmitSuccess');\n            } else if (submitError) {\n                return this.createFormMessage('newSubError');\n            }\n        } else {\n            if (submitSuccess) {\n                return isAdmin ? this.createFormMessage('adminRenewNewSuccess') : this.createFormMessage('customerSubmitSuccess');\n            } else if (submitError) {\n                return this.createFormMessage('renewSubError');\n            }\n        }\n    }\n\n    createFormMessage(subMessageKey) {\n        return <p style={{color: this.state.submitColour}}>{i18n.t(`subscriptionForm.${subMessageKey}`)}</p>\n    }\n\n    render() {\n        if (!this.state.loading) {\n            if (isPortalUser()) {\n                return (\n                    <div>\n                        {isPortalAdmin() ?\n                            <h3 className=\"pageTitle\">{i18n.t('adminDashboard.adminTitle')}</h3> :\n                        isPortalSupport() ?\n                            <h3 className=\"pageTitle\">{i18n.t('adminDashboard.supportTitle')}</h3> :\n                        isPortalCustomer() ?\n                            <h3 className=\"pageTitle\">{i18n.t('adminDashboard.customerTitle')}</h3> :\n                        isPortalPartner() ?\n                            <h3 className=\"pageTitle\">{i18n.t('adminDashboard.partnerTitle')}</h3> :\n                        null}\n                        <div className=\"form-container\">\n                            {this.successErrorMessage()}\n                            <Form onSubmit={this.handleFormSubmit}>\n                                <div className=\"form-desc\">\n                                    <h4>{i18n.t('subscriptionForm.formTitle')}</h4>\n                                </div>\n                                <div className=\"bx--grid\">\n                                    <div className=\"bx--row\">\n                                        <div className=\"bx--col\">\n                                            <Select id=\"subscriptionType\" name=\"subscriptionType\" labelText={i18n.t('subscriptionForm.subscriptionType')} required value={this.state.subscriptionType} onChange={this.handleChanges}>\n                                                <SelectItem\n                                                    text={i18n.t('subscriptionForm.selectType')}\n                                                    value=\"\"\n                                                />\n                                                {subscriptionTypes.map((subscriptionType, i) => <SelectItem key={i} text={subscriptionType} required value={subscriptionType.toLowerCase()}>{subscriptionType}</SelectItem>)}\n                                            </Select>\n                                        </div>\n                                    </div>\n                                    {this.renderForm()}\n                                    {this.state.subscriptionType ? <Button kind=\"primary\" tabIndex={0} type=\"submit\" > {i18n.t('buttons.submit')}</Button> : ''}\n                                </div>\n                            </Form>\n                        </div>\n                    </div>\n                );\n            }\n            else {\n                return(<p>{i18n.t('userMessages.unauthorized')}</p>)\n            }\n        }\n        else {\n            return(null)\n        }\n    }\n}\n\nexport default withKeycloak(SubscriptionForm);\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport SubsciptionForm from '../components/Forms/SubscriptionForm';\r\nimport '../index.scss'\r\nimport './dashboard.css'\r\nimport * as Locale from '../i18n';\r\n\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\n\r\nimport {\r\n  subscribeToWidgetEvent\r\n} from '../helpers/widgetEvents';\r\nimport {\r\n  KEYCLOAK_EVENT_TYPE,\r\n} from '../custom-elements/widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window &&\r\n    window.entando &&\r\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\nconst ATTRIBUTES = {\r\n  hidden: 'hidden',\r\n  locale: 'locale',\r\n  paginationMode: 'pagination-mode',\r\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n  serviceUrl: 'service-url',\r\n  locale: 'locale'\r\n};\r\n\r\nclass SubsciptionFormElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    \r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    //retargetEvents(shadowRoot);\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n    const locale = this.getAttribute(ATTRIBUTES.locale) || '';\r\n    Locale.setLocale(locale);\r\n\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <SubsciptionForm serviceUrl={serviceUrl}/>\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.define('subscription-form-widget', SubsciptionFormElement);\r\n\r\n"],"sourceRoot":""}