{"version":3,"sources":["i18n.js","api/constants.js","api/helpers.js","api/ticketingsystem.js","auth/KeycloakContext.js","components/__types__/ref.js","auth/withKeycloak.js","components/Admin/Configuration/TicketingSystem.js","api/productVersion.js","components/Admin/AddProductVersionModal.js","components/Admin/EditVersionModal.js","components/Admin/Configuration/ProductVersion.js","components/Breadcrumbs/Breadcrumbs.js","api/manageFieldConfigurations.js","components/Admin/Configuration/TicketTypeConfiguration.js","components/Admin/Configuration/ServiceSubLevelConfiguration.js","components/Admin/Configuration/ProductNameConfiguration.js","components/Admin/Configuration/JiraConfiguration.js","components/Admin/Configuration/AdminConfiguration.js","helpers/widgetEvents.js","custom-elements/widgetEventTypes.js","custom-elements/AdminConfigurationElement.js","api/customers.js","components/Admin/AddCustomerModal.js","api/partners.js","api/projects.js","auth/KeycloakViews.js","components/Admin/AddPartnerModal.js","components/Admin/EditProjectModal.js","components/Admin/ManagePartnersModal.js","components/Admin/ProjectActionItems.js","api/subscriptions.js","components/Customer/CustomerDataTable.js","components/Customer/CustomerDetails.js","components/Buttons/ButtonBody.js","helpers/icons.js","components/Admin/EditCustomerModal.js","components/Admin/AddProjectModal.js","components/Buttons/GhostButton.js","components/Customer/CustomerAccordian.js","components/Admin/AdminDashboard.js","api/tickets.js","components/SubscriptionDetails/TicketList.js","components/SubscriptionDetails/Subscription.js","components/Customer/CustomerProjectList.js","components/Admin/ManageSubscriptions/ManageSubscriptions.js","components/Forms/SubscriptionForm.js","components/Forms/OpenTicketForm.js","api/portalusers.js","api/keycloak.js","components/Admin/ManageUsers/AssignUsers.js","components/Admin/ManageUsers/DeleteUsers.js","components/Admin/ManageUsers/ManageUsers.js","components/App.js","custom-elements/AppElement.js","components/Login/Login.js","custom-elements/LoginElement.js","local/LocalApp.js","local/LocalAppElement.js"],"names":["i18n","defaultLocale","locale","fallbacks","translations","en","it","setLocale","PAGE_CUSTOMER_PORTAL","process","REACT_APP_PATH","PAGE_ADMIN_CONFIG","TICKETING_SYSTEM_CONFIG_ENUM","TICKET_TYPE","SUBSCRIPTION_LEVEL","PRODUCT_NAME","JIRA_CUSTOM_FIELD","Object","freeze","VALIDATION_VARS","getKeycloakToken","window","entando","keycloak","authenticated","token","isAuthenticated","props","initialized","authenticationChanged","prevProps","changedAuth","isPortalAdmin","hasKeycloakClientRole","isPortalSupport","isPortalPartner","isPortalCustomer","isPortalAdminOrSupport","isPortalUser","clientRole","resourceAccess","client","item","roles","includes","getDefaultOptions","headers","Headers","Authorization","getDefaultKeycloakOptions","getActiveSubscription","project","projectSubscriptions","find","status","setAppContext","resourceUrl","index","indexOf","cp","appContext","substring","getPageUrl","pageCode","url","getUrl","request","options","a","fetch","response","has","parseInt","get","data","json","Promise","reject","Error","statusText","resource","apiTicketingSystemDelete","serviceUrl","id","method","apiCurrentTicketingSystemGet","currentTicketingSystem","apiTicketingSystemsGet","ticketingSystems","length","apiTicketingSystemPost","ticketingSystem","secret","tsRequest","body","JSON","stringify","apiTicketingSystemPut","getTicketSystemBaseUrl","substr","getAllTicketsUrl","organizationId","result","getTicketUrl","ticketId","KeycloakContext","PropTypes","oneOfType","func","shape","current","elementType","React","createContext","withKeycloak","WrappedComponent","WithKeycloakComponent","renderWrappedComponent","value","forwardedRef","rest","ref","Consumer","this","Component","defaultProps","forwardRef","handleChanges","e","input","target","name","setState","handleFormSubmit","event","preventDefault","state","updateTicketingSystem","then","submitMsg","t","submitColour","catch","createTicketingSystem","ticketingSystemType","serviceAccount","serviceAccountSecret","systemId","fetchData","confirm","deleteTicketingSystem","className","style","color","Form","onSubmit","Select","labelText","onChange","SelectItem","text","map","type","i","TextInput","Button","kind","tabIndex","onClick","handleDelete","apiProductVersionsGet","apiProductVersionGet","versionId","apiUpdateProductVersionsStatus","apiProductVersionPost","productVersion","apiProductVersionPut","apiProductVersionDelete","handleValidation","addProductVersion","updateProductVersions","clearValues","document","querySelector","baseState","handleStartDateChange","date","startDate","moment","toISOString","format","handleEndDateChange","endDate","invalid","formIsValid","match","addEventListener","modalConfirmation","modalId","ModalWrapper","buttonTriggerText","renderTriggerButtonIcon","Add16","modalHeading","buttonTriggerClassName","handleSubmit","invalidText","DatePicker","dateFormat","datePickerType","DatePickerInput","placeholder","version","versionPut","buttonId","getVersionDetails","buttonClassName","primaryButtonText","secondaryButtonText","ProductVersion","handleDeleteVersion","deleteVersion","getProductVersions","versions","productVersions","DataTable","rows","rowData","headerData","getHeaderProps","getTableProps","TableContainer","Table","TableHead","TableRow","header","TableHeader","key","productName","TableBody","keys","TableCell","Toggle","size","handleToggleChange","aria-label","defaultToggled","display","width","entVersion","homeUrl","customer","subscription","Breadcrumb","margin","BreadcrumbItem","href","apiTicketingSystemConfigResourceGet","apiTicketingSystemConfigResourcePost","typeOfData","Data","keyBuilder","payloadBuilder","flag","TicketTypeConfiguration","ticketName","validations","isError","errorMsg","ticketTypeRowData","ticket","toLocaleLowerCase","ticketListBuilder","getTicketAndSubLevel","updateTicketTypeRowData","console","error","setFormData","timeoutId","setTimeout","trimStart","handleDeleteTicketType","updateTicketTypeAfterDeletedTicket","filter","ticketType","getTicketTypes","ticketTypeRecord","forEach","push","head","padding","paddingLeft","onBlur","trimEnd","renderIcon","paddingRight","ServiceSubLevelConfiguration","subscriptionLevel","serviceSubTypeRowData","subsListBuilder","updateserviceSubTypeRowData","levelName","handleDeleteServiceSubType","updateServiceSubTypeAfterDeletedSubscr","getSubscription","subLevel","subLevelRecord","subscr","subLeveRecord","ProductNameConfiguration","onEditProductNameHandle","changedProductName","open","onEditProductNameSave","updatedProdName","productOnChangeHandler","ComposedModal","onClose","title","data-modal-primary-focus","onMouseDown","JiraConfiguration","onClickJiraConfigEdit","onClickJiraConfigSave","jiraOnChangedValue","jiraConfigBuilder","jiraConfig","jiraConfigOnChangeHandler","getEleId","getEleValue","updateJiraconfig","errorUpdate","updateStateOfJiraConfig","onClickCloseModal","initJira","initializeJiraConfigObj","el","toString","getJiraConfigValues","content","config","idx","versionIdIsValid","organizationIdIsValid","subscriptionLevelIdIsValid","errMsg","jiraCustomField","getJiraConfig","subscriptionLevelId","getTicketingSystemConfig","ticketTypesAndSubLevelsData","actualData","refinedTicketType","parse","refinedSubLevel","hasOwnProperty","jiraItem","jiraCustomFieldBuilder","refinedJiraCustomField","initAdminConfig","setAdminConfig","label","adminConfig","loading","prevState","Tile","Accordion","AccordionItem","description","subscribeToWidgetEvent","eventType","eventHandler","removeEventListener","KEYCLOAK_EVENT_TYPE","getKeycloakInstance","ATTRIBUTES","AdminConfigurationElement","mountPoint","createElement","unsubscribeFromKeycloakEvent","render","appendChild","baseUrl","getAttribute","Locale","ReactDOM","Provider","HTMLElement","customElements","define","apiCustomerDelete","apiCustomersGet","apiCustomerGet","apiCustomerPost","apiCustomerPut","apiAddProjectToCustomer","customerId","projectId","apiDeleteProjectFromCustomer","customerNumber","contactName","contactPhone","contactEmail","notes","customerPost","updateCustomerList","TextArea","apiPartnerPost","partner","apiProjectsGet","apiProjectsGetByCustomer","apiProjectGet","apiProjectPost","apiProjectPut","apiAddSubscriptionToProject","subscriptionId","apiAddUserToProject","userId","apiDeletePartnerFromProject","partnerId","apiDeleteSubscriptionFromProject","apiDeleteUserFromProject","apiAddPartnerToProject","apiGetProjectUsers","apiGetProjectSubscriptions","AuthenticatedView","children","UnauthenticatedView","partnerNumber","partnerPost","componentDidMount","projectList","projects","log","allProjects","trim","alert","projectPut","updateProjectList","customerList","customers","getCustomers","getAllProjects","getProjectDetails","Modal","onRequestClose","closeModal","onRequestSubmit","ManagePartnersModal","handleRemovePartner","removePartner","err","partners","border","borderTop","ProjectActionItems","handleCloseModal","openEditProject","openManagePartners","isAdmin","history","deleteProject","OverflowMenuItem","itemText","handleDeleteProject","isDelete","editProject","editProjectModal","managePartners","managePartnersModal","manageSubscriptions","manageUsers","subscriptionParam","newOrRenewSubscription","openTicket","viewAllTickets","ticketsUrl","viewSubscription","overflowModals","OverflowMenu","flipped","menuOptionsClass","withRouter","formatStartDate","String","Date","toDateString","formatEndDate","lengthInMonths","setMonth","getMonth","apiSubscriptionGet","apiProjectSubscriptionPost","projectSubscriptionCreation","apiProjectSubscriptionPut","apiRenewSubscription","projectSubscriptionRenew","action","showMenu","initializeHeaderData","callback","to","fontWeight","partnerIndex","entandoVersion","minHeight","paddingBottom","ButtonBody","icon","IconDelete","height","viewBox","fill","xmlns","d","IconDetails","IconEdit","IconPlus","fillRule","clipRule","mask-type","maskUnits","x","y","mask","getCustomerDetails","getCustomer","updateCustomer","projectPost","GhostButton","deleteCustomer","accordionOpened","textDecoration","ticketSystemConfig","getTime","handleSearch","newFilteredState","toLowerCase","filteredCustomers","currentPage","undefined","role","test","numberOfPages","Math","ceil","customerCount","Search","onKeyPress","InlineLoading","indexOfLastItem","firstIndexOfCurrentPage","PaginationNav","loop","Boolean","page","Number","totalItems","itemsShown","jiraResource","apiJiraTicketsGet","apiJiraTicketPost","tickets","ticketCount","rel","ticketUrl","summary","priority","createDate","updateDate","subscriptionData","updateSubscription","users","params","license","level","user","username","handleDeleteSubscription","deleteSubscription","subscriptions","FORM_TYPE","SUBSCRIPTION_STATUS","requested","pending","active","expired","submitSuccess","submitError","formatted","formType","subscriptionRequest","stateToSubscription","updateStateForSuccess","newSubscription","res","renewSubscription","entandoVersionId","subsList","getLevelList","subLists","str","isNaN","isNumeric","success","renewal","projectSubscription","toUpperCase","subscriptionLevelList","unshift","versionList","statusList","entries","setupFormComponents","disabled","subscriptionType","createFormMessage","subMessageKey","formLabelKey","successErrorMessage","renderForm","createTicket","setSubmitMessage","message","types","priorities","getTicketingSystem","ticketTypes","ticketTypesArr","sort","b","localeCompare","viewTicket","apiUserGetByUsernameAndEmail","email","apiKeycloakUserGet","realm","usersResource","mapKeycloakUserEmails","keycloakUsers","usernameEmailMap","Map","keycloakUser","set","assignUser","handleFormValidation","assignUserToProject","dispatchEvent","CustomEvent","getPortalUserId","portalUserId","portalUserApi","portalUser","warn","authServerUrl","userList","handleRemoveUser","displayUsers","handleUserDisplay","userAccess","row","cells","cell","userFunctionality","path","AppElement","KEYCLOAK_EVENT_ID","keycloakEventHandler","bind","keycloakEvent","detail","logout","loginUrl","location","redirectUri","origin","login","LoginElement","forceRefresh","exact","LocalAppElement"],"mappings":"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","file":"static/js/main.2162ebcb.chunk.js","sourcesContent":["import i18n from 'i18n-js';\r\n\r\nimport en from './i18n/locales/en.json';\r\nimport it from './i18n/locales/it.json';\r\n\r\ni18n.defaultLocale = 'en';\r\ni18n.locale = 'en';\r\ni18n.fallbacks = true;\r\ni18n.translations = { en, it };\r\n\r\nexport const setLocale = locale => {\r\n  i18n.locale = locale;\r\n};\r\n\r\nexport default i18n;\r\n","export const DOMAIN = process.env.REACT_APP_PATH || ''; // eslint-disable-line import/prefer-default-export\r\n\r\n//Customer Portal roles\r\nexport const ADMIN = 'cp-admin';\r\nexport const SUPPORT = 'cp-support';\r\nexport const PARTNER = 'cp-partner';\r\nexport const CUSTOMER = 'cp-customer';\r\n\r\n//Page codes\r\nexport const PAGE_CUSTOMER_PORTAL = 'customer_portal.page'\r\nexport const PAGE_ADMIN_CONFIG = 'cp_admin_config.page'\r\n\r\n// TICKETING_SYSTEM_CONFIG ENUM\r\nexport const TICKETING_SYSTEM_CONFIG_ENUM = {\r\n    TICKET_TYPE: \"TICKET_TYPE\",\r\n    SUBSCRIPTION_LEVEL: \"SUBSCRIPTION_LEVEL\",\r\n    PRODUCT_NAME: \"PRODUCT_NAME\",\r\n    JIRA_CUSTOM_FIELD: \"JIRA_CUSTOM_FIELD\"\r\n};\r\nObject.freeze(TICKETING_SYSTEM_CONFIG_ENUM);\r\n\r\nexport const VALIDATION_VARS = {\r\n    CHAR_LIMIT_MSG_APPEAR_TIME: 2000,\r\n    CHAR_MIN_LIMIT: 3,\r\n    CHAR_MAX_LIMIT: 100\r\n}","import {ADMIN, SUPPORT, CUSTOMER, PARTNER} from './constants';\r\n\r\nexport const getKeycloakToken = () => {\r\n  if (window && window.entando && window.entando.keycloak && window.entando.keycloak.authenticated) {\r\n    return window.entando.keycloak.token;\r\n  }\r\n  return '';\r\n};\r\n\r\nexport const isAuthenticated = props => {\r\n  const {keycloak} = props;\r\n  return keycloak.initialized && keycloak.authenticated;\r\n};\r\n\r\nexport const authenticationChanged = (props, prevProps) => {\r\n  const authenticated = isAuthenticated(props);\r\n  const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n  return authenticated && changedAuth;\r\n};\r\n\r\nexport const isPortalAdmin = () => {\r\n  return hasKeycloakClientRole(ADMIN);\r\n};\r\n\r\nexport const isPortalSupport = () => {\r\n  return hasKeycloakClientRole(SUPPORT);\r\n};\r\n\r\nexport const isPortalPartner = () => {\r\n  return hasKeycloakClientRole(PARTNER);\r\n};\r\n\r\nexport const isPortalCustomer = () => {\r\n  return hasKeycloakClientRole(CUSTOMER);\r\n};\r\n\r\nexport const isPortalAdminOrSupport = () => {\r\n  return isPortalAdmin() || isPortalSupport();\r\n};\r\n\r\nexport const isPortalCustomerOrPartner = () => {\r\n  return isPortalCustomer() || isPortalPartner();\r\n};\r\n\r\nexport const isPortalUser = () => {\r\n  return isPortalAdminOrSupport() || isPortalCustomerOrPartner();\r\n};\r\n\r\nexport const hasKeycloakClientRole = clientRole => {\r\n  if (getKeycloakToken()) {\r\n    const { resourceAccess } = window.entando.keycloak;\r\n    if (resourceAccess) {\r\n      for (const client in resourceAccess) {\r\n        const item = resourceAccess[client];\r\n        if (item.roles && item.roles.includes(clientRole)) {\r\n          // console.debug(\"Found role {} with client {} \", clientRole, client);\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return false;\r\n};\r\n\r\nexport const getDefaultOptions = () => ({\r\n  headers: new Headers({\r\n    Authorization: `Bearer ${getKeycloakToken()}`,\r\n    'Content-Type': 'application/json',\r\n  }),\r\n});\r\n\r\nexport const getDefaultKeycloakOptions = () => ({\r\n  headers: new Headers({\r\n    Authorization: `Bearer ${getKeycloakToken()}`,\r\n    'Content-Type': 'application/x-www-form-urlencoded',\r\n  }),\r\n});\r\n\r\nexport const getActiveSubscription = project => {\r\n  return (\r\n    project &&\r\n    project.projectSubscriptions &&\r\n    project.projectSubscriptions.find(item => {\r\n      return item.status === 'ACTIVE' ? item : null;\r\n    })\r\n  );\r\n};\r\n\r\n//Expected resourceUrl - <@wp.resourceURL /> = /entando-de-app/cmsresources/ or /cmsresources/\r\nexport const setAppContext = resourceUrl => {\r\n  const index = resourceUrl.indexOf('cmsresources');\r\n  const cp = {\r\n    appContext: '/'\r\n  }\r\n  if (index > 0) {\r\n    cp.appContext = resourceUrl.substring(0, index)\r\n  }\r\n  window.entando = {\r\n    ...(window.entando || {}),\r\n    cp,\r\n  };\r\n}\r\n\r\nexport const getPageUrl = (pageCode, locale) => {\r\n  var appContext = window.entando.cp.appContext;\r\n  const url = `${appContext}${locale}/${pageCode}`;\r\n  return getUrl(url);\r\n}\r\n\r\nexport const getUrl = url => {\r\n  return `${url}`;\r\n};\r\n\r\nexport const request = async (url, options) => {\r\n  const response = await fetch(url, options);\r\n\r\n  const headers = {\r\n    ...(response.headers.has('X-Total-Count') ? {'X-Total-Count': parseInt(response.headers.get('X-Total-Count'), 10)} : {}),\r\n  };\r\n\r\n  if (response.status === 204) {\r\n    return { data: '', status: response.status };\r\n  }\r\n\r\n  return response.status >= 200 && response.status < 300\r\n    ? { data: await response.json(), headers, status: response.status }\r\n    : Promise.reject(new Error(response.statusText || response.status));\r\n};\r\n","import {getDefaultOptions, request, isPortalAdminOrSupport} from './helpers';\n\nconst resource = 'api/ticketing-systems';\n\nexport const apiTicketingSystemDelete = async (serviceUrl, id) => {\n  const url = `${serviceUrl}/${resource}/${id}`;\n  const options = {\n    ...getDefaultOptions(),\n    method: 'DELETE',\n  };\n  return request(url, options);\n};\n\n//Simplifying assumptions\n// 1) Take the latest ticketing system as the current config. There should be only 1.\n// 2) Only load it once in the current context\nexport const apiCurrentTicketingSystemGet = async serviceUrl => {\n  if (window.entando.currentTicketingSystem == null) {\n    const ticketingSystems = (await apiTicketingSystemsGet(serviceUrl)).data;\n    window.entando.currentTicketingSystem = ticketingSystems && ticketingSystems.length ? ticketingSystems[ticketingSystems.length - 1] : null;\n  }\n  return window.entando.currentTicketingSystem;\n};\n\nexport const apiTicketingSystemsGet = async serviceUrl => {\n  const url = `${serviceUrl}/${resource}`;\n  const options = {\n    ...getDefaultOptions(),\n    method: 'GET',\n  };\n\n  return request(url, options);\n};\n\n//Note: post and put both use a ticketingsystemrequest\nexport const apiTicketingSystemPost = async (serviceUrl, ticketingSystem, secret) => {\n  const url = `${serviceUrl}/${resource}`;\n  const tsRequest = {\n    \"ticketingSystem\": ticketingSystem,\n    \"secret\": secret\n  }\n  const options = {\n    ...getDefaultOptions(),\n    method: 'POST',\n    body: JSON.stringify(tsRequest),\n  };\n  return request(url, options);\n};\n\nexport const apiTicketingSystemPut = async (serviceUrl, ticketingSystem, secret) => {\n  const url = `${serviceUrl}/${resource}`;\n  const tsRequest = {\n    \"ticketingSystem\": ticketingSystem,\n    \"secret\": secret\n  }\n  const options = {\n    ...getDefaultOptions(),\n    method: 'PUT',\n    body: JSON.stringify(tsRequest),\n  };\n  return request(url, options);\n};\n\nconst getTicketSystemBaseUrl = (ticketingSystem) => {\n  const url = ticketingSystem.url;\n  return (url != null) ? url.substr(0, url.indexOf('/rest')) : '';\n}\n\nexport const getAllTicketsUrl = (ticketingSystem, organizationId) => {\n  let result = getTicketSystemBaseUrl(ticketingSystem);\n  if (isPortalAdminOrSupport()) {\n      result += '/issues/?jql=Organizations=' + organizationId;\n  } else {\n      result += '/servicedesk/customer/user/requests?page=1&reporter=org-' + organizationId;\n  }\n  return result;\n}\n\nexport const getTicketUrl = (ticketingSystem, ticketId) => {\n  let result = getTicketSystemBaseUrl(ticketingSystem);\n  if (isPortalAdminOrSupport()) {\n    result += '/browse/' + ticketId;\n  } else {\n    result += '/servicedesk/customer/portal/1/' + ticketId;\n  }\n  return result;\n}\n\n","import React from 'react';\r\n\r\nconst KeycloakContext = React.createContext(null);\r\n\r\nexport default KeycloakContext;\r\n","import PropTypes from 'prop-types';\r\n\r\nexport default PropTypes.oneOfType([PropTypes.func, PropTypes.shape({ current: PropTypes.elementType }), PropTypes.shape(null)]);\r\n","/* eslint-disable react/jsx-props-no-spreading */\r\nimport React, { forwardRef, Component } from 'react';\r\nimport refType from '../components/__types__/ref';\r\nimport KeycloakContext from './KeycloakContext';\r\n\r\nexport default function withKeycloak(WrappedComponent) {\r\n  class WithKeycloakComponent extends Component {\r\n    renderWrappedComponent = value => {\r\n      const { forwardedRef, ...rest } = this.props;\r\n      return <WrappedComponent {...rest} ref={forwardedRef} keycloak={value} />;\r\n    };\r\n\r\n    render() {\r\n      return <KeycloakContext.Consumer>{this.renderWrappedComponent}</KeycloakContext.Consumer>;\r\n    }\r\n  }\r\n\r\n  WithKeycloakComponent.propTypes = {\r\n    forwardedRef: refType,\r\n  };\r\n\r\n  WithKeycloakComponent.defaultProps = {\r\n    forwardedRef: () => {},\r\n  };\r\n\r\n  return forwardRef((props, ref) => <WithKeycloakComponent {...props} forwardedRef={ref} />);\r\n}\r\n","import React, { Component } from 'react';\r\nimport i18n from '../../../i18n';\r\nimport { Form, TextInput, Select, SelectItem, Button } from 'carbon-components-react';\r\nimport {\r\n  apiCurrentTicketingSystemGet,\r\n  apiTicketingSystemDelete,\r\n  apiTicketingSystemPost,\r\n  apiTicketingSystemPut,\r\n} from '../../../api/ticketingsystem';\r\nimport {authenticationChanged, isAuthenticated, isPortalAdmin} from '../../../api/helpers';\r\nimport withKeycloak from '../../../auth/withKeycloak';\r\n\r\nclass TicketingSystem extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      ticketingSystem: {},\r\n      ticketingSystemType: 'Jira',\r\n      url: '',\r\n      serviceAccount: '',\r\n      serviceAccountSecret: '',\r\n      systemId: '',\r\n      submitMsg: '',\r\n      submitColour: 'black',\r\n    };\r\n  }\r\n\r\n  handleChanges = e => {\r\n    const input = e.target;\r\n    const name = input.name;\r\n    const value = input.value;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  async createTicketingSystem() {\r\n    const ticketingSystem = {\r\n      url: this.state.url,\r\n      serviceAccount: this.state.serviceAccount,\r\n      systemId: this.state.systemId,\r\n    };\r\n    const response = (await apiTicketingSystemPost(this.props.serviceUrl, ticketingSystem, this.state.serviceAccountSecret)).data;\r\n    this.setState({\r\n      ticketingSystem: response,\r\n    });\r\n  }\r\n\r\n  async updateTicketingSystem() {\r\n    const ticketingSystem = {\r\n      id: this.state.ticketingSystem.id,\r\n      url: this.state.url,\r\n      serviceAccount: this.state.serviceAccount,\r\n      systemId: this.state.systemId,\r\n    };\r\n    return await apiTicketingSystemPut(this.props.serviceUrl, ticketingSystem, this.state.serviceAccountSecret);\r\n  }\r\n\r\n  async fetchData() {\r\n    const ticketingSystem = await apiCurrentTicketingSystemGet(this.props.serviceUrl);\r\n    this.setState({\r\n      ticketingSystem: ticketingSystem,\r\n      url: ticketingSystem ? ticketingSystem.url : '',\r\n      serviceAccount: ticketingSystem ? ticketingSystem.serviceAccount : '',\r\n      //Secret needs to be entered each time\r\n      systemId: ticketingSystem ? ticketingSystem.systemId : '',\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (isAuthenticated(this.props)) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (authenticationChanged(this.props, prevProps)) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n\r\n  async deleteTicketingSystem() {\r\n    return await apiTicketingSystemDelete(this.props.serviceUrl, this.state.ticketingSystem.id);\r\n  }\r\n\r\n  handleDelete() {\r\n    if (window.confirm('Are you sure you want to delete this ticketing system?')) {\r\n      this.deleteTicketingSystem()\r\n        .then(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.deleted'),\r\n            submitColour: '#24a148',\r\n          });\r\n          this.fetchData();\r\n        })\r\n        .catch(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.error'),\r\n            submitColour: '#da1e28',\r\n          });\r\n        });\r\n    }\r\n  }\r\n\r\n  handleFormSubmit = event => {\r\n    event.preventDefault();\r\n    if (!this.state.ticketingSystem) {\r\n      this.createTicketingSystem()\r\n        .then(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.created'),\r\n            submitColour: '#24a148',\r\n          });\r\n        })\r\n        .catch(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.error'),\r\n            submitColour: '#da1e28',\r\n          });\r\n        });\r\n    } else {\r\n      this.updateTicketingSystem()\r\n        .then(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.updated'),\r\n            submitColour: '#24a148',\r\n          });\r\n        })\r\n        .catch(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.error'),\r\n            submitColour: '#da1e28',\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const ticketingSystemTypes = ['Jira'];\r\n    if (isPortalAdmin()) {\r\n      return (\r\n        <div className=\"cp-form\">\r\n          <p style={{ color: this.state.submitColour }}>{this.state.submitMsg}</p>\r\n          <Form onSubmit={this.handleFormSubmit}>\r\n            <div className=\"bx--grid\">\r\n              <div className=\"bx--row\">\r\n                <div className=\"bx--col\">\r\n                  <Select\r\n                    id=\"ticketingSystemType\"\r\n                    name=\"ticketingSystemType\"\r\n                    labelText={i18n.t('adminConfig.integrationTicketingSystem.selectBackendTicketingSystem')}\r\n                    value={this.state.ticketingSystemType}\r\n                    onChange={this.handleChanges}\r\n                  >\r\n                    <SelectItem text={i18n.t('adminConfig.integrationTicketingSystem.select')}\r\n                                value=\"ticketing-system\"/>\r\n                    {ticketingSystemTypes.map((type, i) => (\r\n                      <SelectItem key={i} text={type} value={type}>\r\n                        {type}\r\n                      </SelectItem>\r\n                    ))}\r\n                  </Select>\r\n                  <TextInput\r\n                    id=\"serviceAccount\"\r\n                    name=\"serviceAccount\"\r\n                    labelText={i18n.t('adminConfig.integrationTicketingSystem.userName')}\r\n                    value={this.state.serviceAccount}\r\n                    onChange={this.handleChanges}\r\n                  />\r\n                  <TextInput\r\n                    id=\"systemId\"\r\n                    name=\"systemId\"\r\n                    labelText={i18n.t('adminConfig.integrationTicketingSystem.projectName')}\r\n                    value={this.state.systemId}\r\n                    onChange={this.handleChanges}\r\n                  />\r\n                </div>\r\n                <div className=\"bx--col\">\r\n                  <TextInput\r\n                    id=\"url\"\r\n                    name=\"url\"\r\n                    labelText={i18n.t('adminConfig.integrationTicketingSystem.url')}\r\n                    value={this.state.url}\r\n                    onChange={this.handleChanges}\r\n                  />\r\n                  <TextInput\r\n                    id=\"serviceAccountSecret\"\r\n                    name=\"serviceAccountSecret\"\r\n                    type=\"password\"\r\n                    labelText={i18n.t('adminConfig.integrationTicketingSystem.password')}\r\n                    value={this.state.serviceAccountSecret}\r\n                    onChange={this.handleChanges}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <Button kind=\"primary\" tabIndex={0} type=\"submit\">\r\n                {' '}\r\n                {i18n.t('buttons.submit')}{' '}\r\n              </Button>\r\n              {this.state.ticketingSystem ? (\r\n                <Button kind=\"danger\" onClick={() => this.handleDelete()}>\r\n                  {' '}\r\n                  Delete{' '}\r\n                </Button>\r\n              ) : null}\r\n            </div>\r\n          </Form>\r\n        </div>\r\n      );\r\n    }\r\n    // Unauthorized\r\n    else {\r\n      return <p>{i18n.t('userMessages.unauthorized')}</p>;\r\n    }\r\n  }\r\n}\r\n\r\nexport default withKeycloak(TicketingSystem);\r\n","import { getDefaultOptions, request } from './helpers';\r\n\r\nconst resource = 'api/entando-versions';\r\n\r\nexport const apiProductVersionsGet = async serviceUrl => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiProductVersionGet = async (serviceUrl, versionId) => {\r\n  const url = `${serviceUrl}/${resource}/${versionId}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiUpdateProductVersionsStatus = async (serviceUrl, id) => {\r\n  const url = `${serviceUrl}/${resource}/${id}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'PUT',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiProductVersionPost = async (serviceUrl, productVersion) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n    body: productVersion ? JSON.stringify(productVersion) : null,\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiProductVersionPut = async (serviceUrl, productVersion) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'PUT',\r\n    body: productVersion ? JSON.stringify(productVersion) : null,\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiProductVersionDelete = async (serviceUrl, id) => {\r\n  const url = `${serviceUrl}/${resource}/${id}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE',\r\n  };\r\n  return request(url, options);\r\n};\r\n","import React, { Component } from 'react';\r\nimport i18n from '../../i18n';\r\nimport { ModalWrapper, Form, TextInput, DatePicker, DatePickerInput } from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport { apiProductVersionPost } from '../../api/productVersion';\r\nimport moment from 'moment';\r\nimport {isAuthenticated} from \"../../api/helpers\";\r\nimport { Add16 } from '@carbon/icons-react'\r\n\r\nclass AddProductVersionModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      name: '',\r\n      startDate: '',\r\n      endDate: '',\r\n      invalid: {},\r\n      submitMsg: '',\r\n      submitColour: 'black',\r\n    };\r\n\r\n    this.baseState = this.state;\r\n  }\r\n\r\n  handleValidation() {\r\n    let invalid = {};\r\n    let formIsValid = true;\r\n\r\n    //name\r\n    if (this.state.name === '') {\r\n      formIsValid = false;\r\n      invalid['name'] = true;\r\n    }\r\n\r\n    if (typeof this.state.startDate !== 'undefined') {\r\n      if (!this.state.startDate.match(/^(0[1-9]|1[0-2])\\/(0[1-9]|1\\d|2\\d|3[01])\\/(19|20)\\d{2}$/)) {\r\n        formIsValid = false;\r\n        invalid['startDate'] = true;\r\n      }\r\n    }\r\n\r\n    if (typeof this.state.endDate !== 'undefined') {\r\n      if (!this.state.endDate.match(/^(0[1-9]|1[0-2])\\/(0[1-9]|1\\d|2\\d|3[01])\\/(19|20)\\d{2}$/)) {\r\n        formIsValid = false;\r\n        invalid['endDate'] = true;\r\n      }\r\n    }\r\n\r\n    this.setState({ invalid: invalid });\r\n    return formIsValid;\r\n  }\r\n\r\n  handleChanges = e => {\r\n    const input = e.target;\r\n    const name = input.name;\r\n    const value = input.value;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  async addProductVersion() {\r\n    if (isAuthenticated(this.props)) {\r\n      return await apiProductVersionPost(this.props.serviceUrl, this.state);\r\n    }\r\n  }\r\n\r\n  handleFormSubmit = () => {\r\n    const formIsValid = this.handleValidation();\r\n\r\n    if (formIsValid) {\r\n      this.addProductVersion()\r\n        .then(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.added'),\r\n            submitColour: '#24a148',\r\n          });\r\n          this.props.updateProductVersions();\r\n        })\r\n        .catch(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.error'),\r\n            submitColour: '#da1e28',\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  clearValues = () => {\r\n    const customerModalElement = document.querySelector('#modal-form-product-version');\r\n    if (!customerModalElement.className.includes('is-visible')) {\r\n      this.setState(this.baseState);\r\n    }\r\n  };\r\n\r\n  handleStartDateChange = date => {\r\n    this.setState({\r\n      startDate: moment(date[0].toISOString()).format('MM/DD/YYYY'),\r\n    });\r\n  };\r\n\r\n  handleEndDateChange = date => {\r\n    this.setState({\r\n      endDate: moment(date[0].toISOString()).format('MM/DD/YYYY'),\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    const modalOpenButton = document.querySelector('.add-product-version-button');\r\n    modalOpenButton.addEventListener('click', this.clearValues, false);\r\n  }\r\n\r\n  render() {\r\n    const modalConfirmation = (\r\n      <div className=\"bx--modal-header\">\r\n        <p style={{color: this.state.submitColour}}>{this.state.submitMsg}</p>\r\n      </div>\r\n    );\r\n    const modalId = 'modal-form-product-version';\r\n    return (\r\n      <ModalWrapper\r\n        buttonTriggerText={i18n.t('buttons.addProductVersion')}\r\n        renderTriggerButtonIcon={Add16}\r\n        modalHeading={i18n.t('adminDashboard.addProductVersion.title')}\r\n        buttonTriggerClassName=\"add-product-version bx--btn bx--btn--tertiary add-product-version-button\"\r\n        className=\"modal-form\"\r\n        id={modalId}\r\n        handleSubmit={this.handleFormSubmit}\r\n      >\r\n        {modalConfirmation}\r\n        <div className=\"form-container\">\r\n          <Form onSubmit={this.handleFormSubmit}>\r\n            <TextInput\r\n              id={'name' + modalId}\r\n              name=\"name\"\r\n              labelText={i18n.t('adminDashboard.addProductVersion.productVersion')}\r\n              value={this.state.name}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.required')}\r\n              invalid={this.state.invalid['name']}\r\n            />\r\n            <DatePicker dateFormat=\"m/d/Y\" datePickerType=\"single\" onChange={this.handleStartDateChange}>\r\n              <DatePickerInput\r\n                id={'startDate' + modalId}\r\n                name=\"startDate\"\r\n                placeholder=\"mm/dd/yyyy\"\r\n                labelText={i18n.t('adminDashboard.addProductVersion.productVersionStartDate')}\r\n                value={this.state.startDate}\r\n                //onChange={this.handleChanges}\r\n                type=\"text\"\r\n                invalidText={i18n.t('validation.invalid.date')}\r\n                invalid={this.state.invalid['startDate']}\r\n              />\r\n            </DatePicker>\r\n            <DatePicker dateFormat=\"m/d/Y\" datePickerType=\"single\" onChange={this.handleEndDateChange}>\r\n              <DatePickerInput\r\n                id={'endDate' + modalId}\r\n                name=\"endDate\"\r\n                placeholder=\"mm/dd/yyyy\"\r\n                labelText={i18n.t('adminDashboard.addProductVersion.productVersionEndDate')}\r\n                value={this.state.endDate}\r\n                type=\"text\"\r\n                invalidText={i18n.t('validation.invalid.date')}\r\n                invalid={this.state.invalid['endDate']}\r\n              />\r\n            </DatePicker>\r\n          </Form>\r\n        </div>\r\n        {modalConfirmation}\r\n      </ModalWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withKeycloak(AddProductVersionModal);\r\n","import React, { Component } from 'react';\r\nimport i18n from '../../i18n';\r\nimport { ModalWrapper, Form, TextInput, DatePicker, DatePickerInput } from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport { apiProductVersionGet, apiProductVersionPut } from '../../api/productVersion';\r\nimport moment from 'moment';\r\nimport {authenticationChanged, isAuthenticated} from '../../api/helpers';\r\n\r\nclass EditVersionModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      name: '',\r\n      startDate: '',\r\n      endDate: '',\r\n      invalid: {},\r\n      modalId: '',\r\n      buttonId: '',\r\n      submitMsg: '',\r\n      submitColour: 'black',\r\n    };\r\n  }\r\n\r\n  handleValidation() {\r\n    let invalid = {};\r\n    let formIsValid = true;\r\n\r\n    //name\r\n    if (this.state.name === '') {\r\n      formIsValid = false;\r\n      invalid['name'] = true;\r\n    }\r\n\r\n    if (typeof this.state.startDate !== 'undefined') {\r\n      if (!this.state.startDate.match(/^(0[1-9]|1[0-2])\\/(0[1-9]|1\\d|2\\d|3[01])\\/(19|20)\\d{2}$/)) {\r\n        formIsValid = false;\r\n        invalid['startDate'] = true;\r\n      }\r\n    }\r\n\r\n    if (typeof this.state.endDate !== 'undefined') {\r\n      if (!this.state.endDate.match(/^(0[1-9]|1[0-2])\\/(0[1-9]|1\\d|2\\d|3[01])\\/(19|20)\\d{2}$/)) {\r\n        formIsValid = false;\r\n        invalid['endDate'] = true;\r\n      }\r\n    }\r\n\r\n    this.setState({ invalid: invalid });\r\n    return formIsValid;\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (authenticationChanged(this.props, prevProps)) {\r\n      this.getVersionDetails();\r\n    }\r\n  }\r\n\r\n  handleChanges = e => {\r\n    const input = e.target;\r\n    const name = input.name;\r\n    const value = input.value;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleStartDateChange = date => {\r\n    this.setState({\r\n      startDate: moment(date[0].toISOString()).format('MM/DD/YYYY'),\r\n    });\r\n  };\r\n\r\n  handleEndDateChange = date => {\r\n    this.setState({\r\n      endDate: moment(date[0].toISOString()).format('MM/DD/YYYY'),\r\n    });\r\n  };\r\n\r\n  async getVersionDetails() {\r\n    const version = await apiProductVersionGet(this.props.serviceUrl, this.props.version.id);\r\n    this.setState({\r\n      name: version.data.name,\r\n      startDate: moment(version.data.startDate).format('MM/DD/YYYY'),\r\n      endDate: moment(version.data.endDate).format('MM/DD/YYYY'),\r\n      modalId: 'modal-form-version-edit-' + version.data.id,\r\n      buttonId: 'edit-version-button-' + version.data.id,\r\n    });\r\n  }\r\n\r\n  async versionPut(version) {\r\n    return await apiProductVersionPut(this.props.serviceUrl, version);\r\n  }\r\n\r\n  handleFormSubmit = () => {\r\n    const formIsValid = this.handleValidation();\r\n\r\n    if (formIsValid) {\r\n      const version = {\r\n        id: this.props.version.id,\r\n        name: this.state.name,\r\n        startDate: moment(this.state.startDate).format(),\r\n        endDate: moment(this.state.endDate).format(),\r\n      };\r\n      this.versionPut(version)\r\n        .then(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.updated'),\r\n            submitColour: '#24a148',\r\n          });\r\n          this.props.updateProductVersions();\r\n        })\r\n        .catch(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.error'),\r\n            submitColour: '#da1e28',\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (isAuthenticated(this.props)) {\r\n      this.getVersionDetails();\r\n      const modalOpenButton = document.querySelector('.edit-version-button-' + this.props.version.id);\r\n      modalOpenButton.addEventListener('click', this.clearValues, false);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const modalConfirmation = (\r\n      <div className=\"bx--modal-header\">\r\n        <p style={{color: this.state.submitColour}}>{this.state.submitMsg}</p>\r\n      </div>\r\n    );\r\n    const buttonClassName = 'bx--btn bx--btn--ghost edit-version-button-' + this.props.version.id;\r\n    const modalId = this.state.modalId;\r\n    return (\r\n      <ModalWrapper\r\n        buttonTriggerText={i18n.t('buttons.edit')}\r\n        modalHeading={i18n.t('adminDashboard.addProject.editTitle')}\r\n        buttonTriggerClassName={buttonClassName}\r\n        className=\"modal-form\"\r\n        id={this.state.modalId}\r\n        handleSubmit={this.handleFormSubmit}\r\n        primaryButtonText={i18n.t('modalText.save')}\r\n        secondaryButtonText={i18n.t('modalText.cancel')}\r\n      >\r\n        {modalConfirmation}\r\n        <div className=\"form-container\">\r\n          <Form onSubmit={this.handleFormSubmit} id={'form' + modalId}>\r\n            <TextInput\r\n              id={'name' + modalId}\r\n              name=\"name\"\r\n              labelText={i18n.t('adminDashboard.addProject.projectName') + ' *'}\r\n              value={this.state.name}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.required')}\r\n              invalid={this.state.invalid['name']}\r\n            />\r\n            <DatePicker dateFormat=\"m/d/Y\" datePickerType=\"single\" onChange={this.handleStartDateChange}\r\n                        value={this.state.startDate}>\r\n              <DatePickerInput\r\n                id={'startDate' + modalId}\r\n                name=\"startDate\"\r\n                placeholder=\"mm/dd/yyyy\"\r\n                labelText={i18n.t('subscriptionDetails.startDate') + ' *'}\r\n                onChange={this.handleChanges}\r\n                type=\"text\"\r\n                invalidText={i18n.t('validation.invalid.date')}\r\n                invalid={this.state.invalid['startDate']}\r\n              />\r\n            </DatePicker>\r\n            <DatePicker\r\n              dateFormat=\"m/d/Y\"\r\n              datePickerType=\"single\"\r\n              onChange={this.handleEndDateChange}\r\n              id={'endDate' + modalId}\r\n              name=\"endDate\"\r\n              value={this.state.endDate}\r\n            >\r\n              <DatePickerInput\r\n                id={'endDate' + modalId}\r\n                name=\"endDate\"\r\n                placeholder=\"mm/dd/yyyy\"\r\n                labelText={i18n.t('subscriptionDetails.endDate') + ' *'}\r\n                onChange={this.handleChanges}\r\n                type=\"text\"\r\n                invalidText={i18n.t('validation.invalid.date')}\r\n                invalid={this.state.invalid['endDate']}\r\n              />\r\n            </DatePicker>\r\n          </Form>\r\n        </div>\r\n        {modalConfirmation}\r\n      </ModalWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withKeycloak(EditVersionModal);\r\n","import React, { Component } from 'react';\r\nimport i18n from '../../../i18n';\r\nimport {\r\n  DataTable,\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableHeader,\r\n  TableBody,\r\n  TableCell,\r\n  Toggle,\r\n  Button,\r\n} from 'carbon-components-react';\r\nimport { apiProductVersionDelete, apiProductVersionsGet, apiUpdateProductVersionsStatus } from '../../../api/productVersion';\r\nimport withKeycloak from '../../../auth/withKeycloak';\r\nimport AddProductVersionModal from '../AddProductVersionModal';\r\nimport {authenticationChanged, isAuthenticated, isPortalAdminOrSupport} from '../../../api/helpers';\r\nimport EditVersionModal from '../EditVersionModal';\r\n\r\nclass ProductVersion extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      versions: '',\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (isPortalAdminOrSupport()) {\r\n      this.getProductVersions();\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (authenticationChanged(this.props, prevProps) && isPortalAdminOrSupport()) {\r\n      this.getProductVersions();\r\n    }\r\n  }\r\n\r\n  async getProductVersions() {\r\n    if (isAuthenticated(this.props)) {\r\n      const productVersions = await apiProductVersionsGet(this.props.serviceUrl);\r\n\r\n      this.setState({\r\n        versions: productVersions.data,\r\n      });\r\n    }\r\n  }\r\n\r\n  async deleteVersion(id) {\r\n    if (isAuthenticated(this.props)) {\r\n      return await apiProductVersionDelete(this.props.serviceUrl, id);\r\n    }\r\n  }\r\n\r\n  handleDeleteVersion = (e, id) => {\r\n    e.preventDefault();\r\n    if (window.confirm('Are you sure you want to delete this Entando version?')) {\r\n      this.deleteVersion(id)\r\n        .then(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.deleted'),\r\n            submitColour: '#24a148',\r\n          });\r\n          this.updateProductVersions();\r\n        })\r\n        .catch(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.error'),\r\n            submitColour: '#da1e28',\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  updateProductVersions = () => {\r\n    this.getProductVersions();\r\n  };\r\n\r\n  async handleToggleChange(id) {\r\n    return await apiUpdateProductVersionsStatus(this.props.serviceUrl, id);\r\n  }\r\n\r\n  render() {\r\n    if (isPortalAdminOrSupport()) {\r\n      return (\r\n        <>\r\n          <DataTable rows={rowData} headers={headerData}>\r\n            {({rows, headers, getHeaderProps, getTableProps}) => (\r\n              <TableContainer>\r\n                <Table {...getTableProps()}>\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      {headers.map(header => (\r\n                        <TableHeader {...getHeaderProps({ header })}>{header.key === 'entVersion' ? `${this.props.productName} Version` : header.header}</TableHeader>\r\n                      ))}\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {Object.keys(this.state.versions).length !== 0\r\n                      ? this.state.versions.map((productVersion, index) => (\r\n                        <TableRow key={index}>\r\n                          <TableCell>{productVersion.name}</TableCell>\r\n                          <TableCell>\r\n                            <Toggle\r\n                              size=\"sm\"\r\n                              onClick={() => this.handleToggleChange(productVersion.id)}\r\n                              aria-label=\"toggle button\"\r\n                              id={'toggle' + productVersion.id}\r\n                              defaultToggled={productVersion.status}\r\n                            />\r\n                          </TableCell>\r\n                          <TableCell>{productVersion.startDate}</TableCell>\r\n                          <TableCell>{productVersion.endDate}</TableCell>\r\n                          <TableCell>\r\n                            <div style={{display: 'flex'}}>\r\n                              <EditVersionModal\r\n                                key={productVersion.id}\r\n                                version={productVersion}\r\n                                serviceUrl={this.props.serviceUrl}\r\n                                updateProductVersions={this.updateProductVersions}\r\n                              />\r\n                                <Button\r\n                                  kind=\"ghost\"\r\n                                  onClick={e => this.handleDeleteVersion(e, productVersion.id)}\r\n                                  style={{ display: 'flex', width: '100%', color: 'red' }}\r\n                                >\r\n                                  {i18n.t('buttons.delete')}\r\n                                </Button>\r\n                              </div>\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        ))\r\n                      : null}\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            )}\r\n          </DataTable>\r\n          <br />\r\n          <AddProductVersionModal serviceUrl={this.props.serviceUrl} updateProductVersions={this.updateProductVersions} />\r\n        </>\r\n      );\r\n    } else {\r\n      return <p>{i18n.t('userMessages.unauthorized')}</p>;\r\n    }\r\n  }\r\n}\r\n\r\nconst headerData = [\r\n  {\r\n    header: i18n.t('adminConfig.manageProductVersion.entandoVersion'),\r\n    key: 'entVersion',\r\n  },\r\n  {\r\n    header: i18n.t('adminConfig.manageProductVersion.status'),\r\n    key: 'status',\r\n  },\r\n  {\r\n    header: i18n.t('adminConfig.manageProductVersion.startDate'),\r\n    key: 'startDate',\r\n  },\r\n  {\r\n    header: i18n.t('adminConfig.manageProductVersion.supportEndDate'),\r\n    key: 'endDate',\r\n  },\r\n  {\r\n    header: i18n.t('customerDashboard.action'),\r\n    key: 'action',\r\n  },\r\n];\r\n\r\nconst rowData = [\r\n  {\r\n    id: 'a',\r\n    entVersion: '5.2',\r\n    status: <Toggle size=\"sm\" aria-label=\"toggle button\" defaultToggled id=\"status-1\" />,\r\n    startDate: 'April, 2018',\r\n    endDate: 'April, 2022',\r\n  },\r\n  {\r\n    id: 'b',\r\n    entVersion: '6.3',\r\n    status: <Toggle size=\"sm\" aria-label=\"toggle button\" id=\"status-2\"/>,\r\n    startDate: 'Jile, 2019',\r\n    endDate: 'April, 2023',\r\n  },\r\n  {\r\n    id: 'c',\r\n    entVersion: '6.2',\r\n    status: <Toggle size=\"sm\" aria-label=\"toggle button\" defaultToggled id=\"status-3\"/>,\r\n    startDate: 'September, 2020',\r\n    endDate: 'April, 2024',\r\n  },\r\n];\r\n\r\nexport default withKeycloak(ProductVersion);\r\n","import {Component} from 'react';\r\nimport withKeycloak from \"../../auth/withKeycloak\";\r\nimport {Breadcrumb, BreadcrumbItem} from \"carbon-components-react\";\r\nimport {getActiveSubscription, getPageUrl} from \"../../api/helpers\";\r\nimport {PAGE_CUSTOMER_PORTAL} from \"../../api/constants\";\r\nimport i18n from \"../../i18n\";\r\n\r\nclass Breadcrumbs extends Component {\r\n\r\n  render() {\r\n    const homeUrl = getPageUrl(PAGE_CUSTOMER_PORTAL, this.props.locale);\r\n\r\n    let customer = this.props.customer || {};\r\n    const project = this.props.project;\r\n    if (project) {\r\n      customer = project.customer || {};\r\n    }\r\n    const subscription = this.props.subscription ? this.props.subscription : getActiveSubscription(project);\r\n\r\n    return (\r\n      <Breadcrumb style={{margin: \"1em 0\"}}>\r\n        <BreadcrumbItem href={`${homeUrl}#`}>{i18n.t('customerDashboard.customerPortal')}</BreadcrumbItem>\r\n        {customer && customer.name && (\r\n          <BreadcrumbItem href={`${homeUrl}#/customer-details/${customer.id}`}>\r\n            {customer.name}\r\n          </BreadcrumbItem>\r\n        )}\r\n        {project && project.name && subscription && subscription.id && (\r\n          <BreadcrumbItem href={`${homeUrl}#/subscription-details/${subscription.id}`}>\r\n            {project.name}\r\n          </BreadcrumbItem>\r\n        )}\r\n      </Breadcrumb>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withKeycloak(Breadcrumbs);\r\n","import { TICKETING_SYSTEM_CONFIG_ENUM } from './constants';\r\nimport { getDefaultOptions, request, getUrl } from './helpers';\r\n\r\nconst resource = 'api/ticketing-system-config/';\r\n\r\n/**\r\n *\r\n * @param {*} serviceUrl\r\n * @returns\r\n */\r\nexport const apiTicketingSystemConfigResourceGet = async serviceUrl => {\r\n    const url = getUrl(`${serviceUrl}/${resource}`);\r\n    const options = {\r\n        ...getDefaultOptions(),\r\n        method: 'GET',\r\n    };\r\n\r\n    return request(url, options)\r\n};\r\n\r\n/**\r\n *\r\n * @param {*} serviceUrl\r\n * @param {*} active\r\n * @param {*} productName\r\n * @param {*} subscriptionLevel\r\n * @param {*} ticketType\r\n * @returns\r\n */\r\nexport const apiTicketingSystemConfigResourcePost = async (serviceUrl, typeOfData, Data) => {\r\n    const url = `${serviceUrl}/${resource}`\r\n    let keyBuilder = typeOfData === TICKETING_SYSTEM_CONFIG_ENUM.JIRA_CUSTOM_FIELD ? 'jiraCustomFields' : 'values';\r\n    const payloadBuilder = {\r\n        flag: typeOfData,\r\n        [keyBuilder]: Data\r\n    }\r\n    const options = {\r\n        ...getDefaultOptions(),\r\n        method: 'PUT',\r\n        body: JSON.stringify(payloadBuilder)\r\n    }\r\n    return request(url, options)\r\n}","import React, { Component } from \"react\";\r\nimport { isPortalAdminOrSupport } from \"../../../api/helpers\";\r\nimport withKeycloak from \"../../../auth/withKeycloak\";\r\nimport i18n from \"../../../i18n\";\r\nimport { Button, Form, Table, TableBody, TableCell, TableContainer, TableHead, TableHeader, TableRow, TextInput } from 'carbon-components-react';\r\nimport { Add16 } from '@carbon/icons-react'\r\nimport { apiTicketingSystemConfigResourcePost } from \"../../../api/manageFieldConfigurations\";\r\nimport { TICKETING_SYSTEM_CONFIG_ENUM, VALIDATION_VARS } from \"../../../api/constants\";\r\n\r\nclass TicketTypeConfiguration extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            ticketName: '',\r\n            ticketTypeRowData: [],\r\n            validations: [\r\n                { isError: false, errorMsg: '' }\r\n            ]\r\n        };\r\n        this.timeoutId = null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (isPortalAdminOrSupport()) {\r\n            this.getTicketTypes()\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.ticketType.length !== this.props.ticketType.length) {\r\n            this.getTicketTypes()\r\n        }\r\n    }\r\n\r\n    getTicketTypes() {\r\n        if (this.props.ticketType.length) {\r\n            this.setState({ ticketTypeRowData: this.props.ticketType })\r\n        }\r\n    }\r\n\r\n    handleFormSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        if (!this.state.ticketName.length || this.state.ticketName.length < VALIDATION_VARS.CHAR_MIN_LIMIT) {\r\n            this.setState({ validations: { isError: true, errorMsg: i18n.t('validation.invalid.ticketTypeMinChar') } })\r\n            return\r\n        }\r\n        if (this.state.ticketTypeRowData.find((ticket) => (ticket.name.toLocaleLowerCase() === this.state.ticketName.toLocaleLowerCase()))) {\r\n            this.setState({ validations: { isError: true, errorMsg: i18n.t('validation.invalid.ticketDupCheck') } })\r\n            return\r\n        }\r\n        let ticketListBuilder = [...this.state.ticketTypeRowData, {name: this.state.ticketName}]\r\n        try {\r\n            await apiTicketingSystemConfigResourcePost(this.props.serviceUrl, TICKETING_SYSTEM_CONFIG_ENUM.TICKET_TYPE, ticketListBuilder).then(() => {\r\n                this.props.getTicketAndSubLevel()\r\n            });\r\n            const updateTicketTypeRowData = ticketListBuilder\r\n            this.setState({ ticketTypeRowData: [updateTicketTypeRowData], ticketName: '' })\r\n        } catch (error) {\r\n            console.error('Error handleFormSubmit: ',error)\r\n        }\r\n    }\r\n\r\n    setFormData = (e) => {\r\n        if (!e.target && !e.target.value) return\r\n        if (e.target.value.length <= VALIDATION_VARS.CHAR_MAX_LIMIT) {\r\n            if (e.target.value.length && e.target.value.length < VALIDATION_VARS.CHAR_MIN_LIMIT) {\r\n                this.setState({ validations: { isError: true, errorMsg: i18n.t('validation.invalid.ticketTypeMinChar') }, ticketName: e.target.value.trimStart() })\r\n            } else {\r\n                this.setState({ validations: { isError: false, errorMsg: \"\" }, ticketName: e.target.value.trimStart() })\r\n            }\r\n            return;\r\n        }\r\n        if (this.state.ticketName.length >= VALIDATION_VARS.CHAR_MAX_LIMIT) {\r\n            this.setState({ validations: { isError: true, errorMsg: i18n.t('validation.invalid.ticketTypeMaxChar') } })\r\n            if (!this.timeoutId) {\r\n                setTimeout(() => {\r\n                    this.setState({ validations: { isError: false, errorMsg: \"\" } })\r\n                    this.timeoutId = null;\r\n                }, VALIDATION_VARS.CHAR_LIMIT_MSG_APPEAR_TIME)\r\n            }\r\n            return\r\n        }\r\n    }\r\n\r\n    handleDeleteTicketType = async (ticket) => {\r\n        if (window.confirm(i18n.t('submitMessages.confirmDeleteTicketType'))) {\r\n            let updateTicketTypeAfterDeletedTicket = []\r\n            updateTicketTypeAfterDeletedTicket = this.state.ticketTypeRowData.filter(ticketType => ticket.name !== ticketType.name)\r\n            try {\r\n                await apiTicketingSystemConfigResourcePost(this.props.serviceUrl, TICKETING_SYSTEM_CONFIG_ENUM.TICKET_TYPE, updateTicketTypeAfterDeletedTicket).then(() => {\r\n                    this.props.getTicketAndSubLevel()\r\n                });\r\n                this.setState({ ticketTypeRowData: updateTicketTypeAfterDeletedTicket })\r\n            } catch (error) {\r\n                console.error('Error handleDeleteTicketType: ', error)\r\n            }\r\n        }\r\n    }\r\n\r\n    ticketTypeRecord() {\r\n        let ticketTypeRecord = [];\r\n        this.state.ticketTypeRowData.forEach((ticket, index) => {\r\n            ticketTypeRecord.push(\r\n            <TableRow key={index} id={ticket.name}>\r\n                <TableCell>{ticket.name}</TableCell>\r\n                <TableCell>\r\n                    <Button\r\n                        kind=\"ghost\"\r\n                        onClick={() => this.handleDeleteTicketType(ticket)}\r\n                        style={{ display: 'flex', width: '100%', color: 'red' }}\r\n                    >\r\n                        {i18n.t('buttons.delete')}\r\n                    </Button>\r\n                </TableCell>\r\n            </TableRow>\r\n            );\r\n        });\r\n        return ticketTypeRecord;\r\n    }\r\n\r\n    render() {\r\n        if (isPortalAdminOrSupport()) {\r\n            return (\r\n                <>\r\n                    <h4>{i18n.t('adminConfig.manageFieldConfigurations.ticketTypeConfigurations')}</h4>\r\n                    <TableContainer>\r\n                        <Table>\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    {headerData.map((head) => <TableHeader style={{ width: '50%' }} key={head.key}> {head.header}</TableHeader>)}\r\n                                </TableRow>\r\n                            </TableHead>\r\n\r\n                            <TableBody>\r\n                                {this.ticketTypeRecord()}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                    <div className=\"bx--grid\" style={{ margin: \"0rem\", padding: \"0rem\" }}>\r\n                        <Form className=\"bx--row\" style={{ margin: \"2rem 0rem\", padding: \"0rem\" }} onSubmit={this.handleFormSubmit}>\r\n                            <div className=\"bx--col-lg-6\" style={{ paddingLeft: \"0rem\" }}>\r\n                                <TextInput\r\n                                    id=\"tickettype\" labelText={i18n.t('adminConfig.manageFieldConfigurations.ticketType')} type=\"text\"\r\n                                    value={this.state.ticketName} onChange={this.setFormData}\r\n                                    invalid={this.state.validations.isError} invalidText={this.state.validations.errorMsg}\r\n                                    onBlur={() => { this.setState({ ticketName: this.state.ticketName.trimEnd() }) }}\r\n                                />\r\n                            </div>\r\n                            <div className=\"bx--col-lg-6\">\r\n                                <Button size=\"lg\" kind=\"tertiary\" tabIndex={0} type=\"submit\" renderIcon={Add16} style={{ paddingRight: \"2.5rem\", \"paddingTop\": \"0.5rem\", \"alignItems\": \"center\" }}>\r\n                                    {i18n.t('adminConfig.manageFieldConfigurations.addTicketTypeButton')}\r\n                                </Button>\r\n                            </div>\r\n                        </Form>\r\n                    </div>\r\n                    <hr />\r\n                </>\r\n            );\r\n        } else {\r\n            return <p>{i18n.t('userMessages.unauthorized')}</p>;\r\n        }\r\n    }\r\n}\r\n\r\nconst headerData = [\r\n    {\r\n        header: i18n.t('adminConfig.manageFieldConfigurations.ticketType'),\r\n        key: 'ticketType',\r\n    },\r\n    {\r\n        header: i18n.t('customerDashboard.action'),\r\n        key: 'action',\r\n    },\r\n];\r\n\r\nexport default withKeycloak(TicketTypeConfiguration);\r\n","import React, { Component } from \"react\";\r\nimport { isPortalAdminOrSupport } from \"../../../api/helpers\";\r\nimport withKeycloak from \"../../../auth/withKeycloak\";\r\nimport i18n from \"../../../i18n\";\r\nimport { Button, Form, Table, TableBody, TableCell, TableContainer, TableHead, TableHeader, TableRow, TextInput } from 'carbon-components-react';\r\nimport { Add16 } from '@carbon/icons-react'\r\nimport { apiTicketingSystemConfigResourcePost } from \"../../../api/manageFieldConfigurations\";\r\nimport { TICKETING_SYSTEM_CONFIG_ENUM, VALIDATION_VARS } from \"../../../api/constants\";\r\n\r\nclass ServiceSubLevelConfiguration extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            subscriptionLevel: '',\r\n            serviceSubTypeRowData : [],\r\n            validations: [\r\n                { isError: false, errorMsg: '' }\r\n            ]\r\n        };\r\n        this.timeoutId = null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (isPortalAdminOrSupport()) {\r\n            this.getSubscription()\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.subLevel.length !== this.props.subLevel.length) {\r\n            this.getSubscription()\r\n        }\r\n    }\r\n\r\n    getSubscription() {\r\n        if (this.props.subLevel.length) {\r\n            this.setState({ serviceSubTypeRowData: this.props.subLevel })\r\n        }\r\n    }\r\n\r\n    handleFormSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        if (!this.state.subscriptionLevel.length || this.state.subscriptionLevel.length < VALIDATION_VARS.CHAR_MIN_LIMIT) {\r\n            this.setState({ validations: { isError: true, errorMsg: i18n.t('validation.invalid.subscrLevelMinChar') } })\r\n            return\r\n        }\r\n        if (this.state.serviceSubTypeRowData.find((ticket) => (ticket.name.toLocaleLowerCase() === this.state.subscriptionLevel.toLocaleLowerCase()))) {\r\n            this.setState({ validations: { isError: true, errorMsg: i18n.t('validation.invalid.subscrDupCheck') } })\r\n            return\r\n        }\r\n        const subsListBuilder = [...this.state.serviceSubTypeRowData, { name: this.state.subscriptionLevel }];\r\n        try {\r\n            await apiTicketingSystemConfigResourcePost(this.props.serviceUrl, TICKETING_SYSTEM_CONFIG_ENUM.SUBSCRIPTION_LEVEL, subsListBuilder).then(() => {\r\n                this.props.getTicketAndSubLevel()\r\n            });\r\n            const updateserviceSubTypeRowData = [...this.state.serviceSubTypeRowData, { levelName: this.state.subscriptionLevel }]\r\n            this.setState({ serviceSubTypeRowData: updateserviceSubTypeRowData, subscriptionLevel: '' })\r\n        } catch (error) {\r\n            console.error('Error handleFormSubmit: ', error)\r\n        }\r\n    }\r\n\r\n    setFormData = (e) => {\r\n        if (!e.target && !e.target.value) return\r\n        if (e.target.value.length <= VALIDATION_VARS.CHAR_MAX_LIMIT) {\r\n            if (e.target.value.length && e.target.value.length < VALIDATION_VARS.CHAR_MIN_LIMIT) {\r\n                this.setState({ validations: { isError: true, errorMsg: i18n.t('validation.invalid.subscrLevelMinChar') }, subscriptionLevel: e.target.value.trimStart() })\r\n            }\r\n            else {\r\n                this.setState({ validations: { isError: false, errorMsg: \"\" }, subscriptionLevel: e.target.value.trimStart() })\r\n            }\r\n            return;\r\n        }\r\n        if (this.state.subscriptionLevel.length >= VALIDATION_VARS.CHAR_MAX_LIMIT) {\r\n            this.setState({ validations: { isError: true, errorMsg: i18n.t('validation.invalid.subscrLevelMaxChar') } })\r\n            if (!this.timeoutId) {\r\n                this.timeoutId = setTimeout(() => {\r\n                    this.setState({ validations: { isError: false, errorMsg: \"\" } })\r\n                    this.timeoutId = null;\r\n                }, VALIDATION_VARS.CHAR_LIMIT_MSG_APPEAR_TIME)\r\n            }\r\n            return\r\n        }\r\n    }\r\n\r\n    handleDeleteServiceSubType = async (ticket) => {\r\n        if (window.confirm(i18n.t('submitMessages.confirmDeleteSubscrLevel'))) {\r\n            let updateServiceSubTypeAfterDeletedSubscr = []\r\n            updateServiceSubTypeAfterDeletedSubscr = this.state.serviceSubTypeRowData.filter(ticketType => ticket.name !== ticketType.name)\r\n            try {\r\n                await apiTicketingSystemConfigResourcePost(this.props.serviceUrl, TICKETING_SYSTEM_CONFIG_ENUM.SUBSCRIPTION_LEVEL, updateServiceSubTypeAfterDeletedSubscr).then(() => {\r\n                    this.props.getTicketAndSubLevel()\r\n                });\r\n                this.setState({ serviceSubTypeRowData: updateServiceSubTypeAfterDeletedSubscr })\r\n            } catch (error) {\r\n                console.error('Error handleDeleteServiceSubType: ',error);\r\n            }\r\n        }\r\n    }\r\n\r\n    subLeveRecord() {\r\n        let subLevelRecord = [];\r\n        this.state.serviceSubTypeRowData.forEach((subscr, index) => {\r\n            subLevelRecord.push(<TableRow key={index} id={subscr.name}>\r\n                <TableCell>{subscr.name}</TableCell>\r\n                <TableCell>\r\n                    <Button\r\n                        kind=\"ghost\"\r\n                        onClick={() => this.handleDeleteServiceSubType(subscr)}\r\n                        style={{ display: 'flex', width: '100%', color: 'red' }}\r\n                    >\r\n                        {i18n.t('buttons.delete')}\r\n                    </Button>\r\n                </TableCell>\r\n            </TableRow>);\r\n        });\r\n        return subLevelRecord;\r\n    }\r\n\r\n    render() {\r\n        if (isPortalAdminOrSupport()) {\r\n            return (\r\n                <>\r\n                    <h4>{i18n.t('adminConfig.manageFieldConfigurations.subscriptionLevelConfiguration')}</h4>\r\n                    <TableContainer>\r\n                        <Table>\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    {headerData.map((head, index) => (\r\n                                        <TableHeader style={{ width: '50%' }} id={index} key={head.key}> {head.header}\r\n                                        </TableHeader>\r\n                                    ))}\r\n                                </TableRow>\r\n                            </TableHead>\r\n\r\n                            <TableBody>\r\n                                {this.subLeveRecord()}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                    <div className=\"bx--grid\" style={{ margin: \"0rem\", padding: \"0rem\" }}>\r\n                        <Form className=\"bx--row\" style={{ margin: \"2rem 0rem\", padding: \"0rem\" }} onSubmit={this.handleFormSubmit}>\r\n                            <div className=\"bx--col-lg-6\" style={{ paddingLeft: \"0rem\" }}>\r\n                                <TextInput\r\n                                    id=\"sublevel\" labelText={i18n.t('adminConfig.manageFieldConfigurations.subscriptionLevel')} type=\"text\"\r\n                                    value={this.state.subscriptionLevel} onChange={this.setFormData}\r\n                                    invalid={this.state.validations.isError} invalidText={this.state.validations.errorMsg}\r\n                                    onBlur={() => { this.setState({ subscriptionLevel: this.state.subscriptionLevel.trimEnd() }) }}\r\n                                />\r\n                            </div>\r\n                            <div className=\"bx--col-lg-6\">\r\n                                <Button size=\"lg\" kind=\"tertiary\" tabIndex={0} type=\"submit\" renderIcon={Add16} style={{ paddingRight: \"2.5rem\", \"paddingTop\": \"0.5rem\", \"alignItems\": \"center\" }}>\r\n                                    {i18n.t('adminConfig.manageFieldConfigurations.addSubscriptionLevelButton')}\r\n                                </Button>\r\n                            </div>\r\n                        </Form>\r\n                    </div>\r\n                    <hr />\r\n                </>\r\n            );\r\n        } else {\r\n            return <p>{i18n.t('userMessages.unauthorized')}</p>;\r\n        }\r\n    }\r\n}\r\n\r\nconst headerData = [\r\n    {\r\n        header: i18n.t('adminConfig.manageFieldConfigurations.subscriptionLevel'),\r\n        key: 'sublevel',\r\n    },\r\n    {\r\n        header: i18n.t('customerDashboard.action'),\r\n        key: 'action',\r\n    },\r\n];\r\n\r\nexport default withKeycloak(ServiceSubLevelConfiguration);\r\n","import React, { Component } from \"react\";\r\nimport { isPortalAdminOrSupport } from \"../../../api/helpers\";\r\nimport withKeycloak from \"../../../auth/withKeycloak\";\r\nimport i18n from \"../../../i18n\";\r\nimport { Button, ComposedModal, ModalBody, ModalFooter, ModalHeader, Table, TableBody, TableCell, TableContainer, TableHead, TableHeader, TableRow, TextInput, } from 'carbon-components-react';\r\nimport { TICKETING_SYSTEM_CONFIG_ENUM, VALIDATION_VARS } from \"../../../api/constants\";\r\nimport { apiTicketingSystemConfigResourcePost } from \"../../../api/manageFieldConfigurations\";\r\n\r\nclass ProductNameConfiguration extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            open: false,\r\n            validations: [\r\n                { isError: false, errorMsg: '' }\r\n            ],\r\n            changedProductName: ''\r\n        };\r\n        this.timeoutId = null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ changedProductName: this.props.productName })\r\n    }\r\n\r\n    onEditProductNameHandle = () => {\r\n        this.setState({ validations: { isError: false, errorMsg: \"\" }, changedProductName: this.props.productName, open: true })\r\n    }\r\n\r\n    onEditProductNameSave = async () => {\r\n        if (!this.state.changedProductName) {\r\n            this.setState({ validations: { isError: true, errorMsg: i18n.t('validation.invalid.required') } })\r\n            return\r\n        }\r\n        if (this.state.changedProductName.length < VALIDATION_VARS.CHAR_MIN_LIMIT) {\r\n            this.setState({ validations: { isError: true, errorMsg: i18n.t('validation.invalid.productNameMinChar') } })\r\n            return\r\n        }\r\n        this.setState({ open: false })\r\n        const updatedProdName = [{ name: this.state.changedProductName }]\r\n        try {\r\n            await apiTicketingSystemConfigResourcePost(this.props.serviceUrl, TICKETING_SYSTEM_CONFIG_ENUM.PRODUCT_NAME, updatedProdName).then(() => {\r\n                this.props.getTicketAndSubLevel()\r\n            });\r\n            this.setState({ changedProductName: this.props.productName })\r\n        } catch (error) {\r\n            console.error('Error onEditProductNameSave: ', error)\r\n        }\r\n    }\r\n\r\n    productOnChangeHandler = (e) => {\r\n        if (!e.target && !e.target.value) return\r\n        if (e.target.value.length <= VALIDATION_VARS.CHAR_MAX_LIMIT) {\r\n            if (!e.target.value.length) this.setState({ validations: { isError: true, errorMsg: i18n.t('validation.invalid.required') }, changedProductName: e.target.value })\r\n            else if (e.target.value.length && e.target.value.length < VALIDATION_VARS.CHAR_MIN_LIMIT) {\r\n                this.setState({ validations: { isError: true, errorMsg: i18n.t('validation.invalid.productNameMinChar') }, changedProductName: e.target.value })\r\n            } else {\r\n                this.setState({ validations: { isError: false, errorMsg: \"\" }, changedProductName: e.target.value })\r\n            }\r\n            return\r\n        }\r\n        if (e.target.value.length >= VALIDATION_VARS.CHAR_MAX_LIMIT) {\r\n            this.setState({ validations: { isError: true, errorMsg: i18n.t('validation.invalid.productNameMaxChar') } })\r\n            if (!this.timeoutId) {\r\n                setTimeout(() => {\r\n                    this.setState({ validations: { isError: false, errorMsg: \"\" } })\r\n                    this.timeoutId = null;\r\n                }, VALIDATION_VARS.CHAR_LIMIT_MSG_APPEAR_TIME)\r\n            }\r\n            return\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (isPortalAdminOrSupport()) {\r\n            return (\r\n                <>\r\n                    <h4>{i18n.t(\"adminConfig.productNameConfigurations.title\")}</h4>\r\n                    <TableContainer>\r\n                        <Table>\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    {headerData.map((head, index) => (\r\n                                        <TableHeader style={{ width: '50%' }} id={index} key={head.key}> {head.header}\r\n                                        </TableHeader>\r\n                                    ))}\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                <TableRow key={1} id={1}>\r\n                                    <TableCell>{this.props.productName}</TableCell>\r\n                                    <TableCell>\r\n                                        <Button\r\n                                            kind=\"ghost\"\r\n                                            onClick={this.onEditProductNameHandle}\r\n                                            style={{ display: 'flex', width: '100%', color: 'red' }}\r\n                                        >\r\n                                            {i18n.t('buttons.edit')}\r\n                                        </Button>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                    <ComposedModal open={this.state.open} onClose={() => { this.setState({ open: false }) }} >\r\n                        <ModalHeader title={i18n.t('buttons.edit')} />\r\n                        <ModalBody>\r\n                            <TextInput\r\n                                data-modal-primary-focus\r\n                                id=\"text-input-1\"\r\n                                labelText=\"Product Name*\"\r\n                                value={this.state.changedProductName}\r\n                                invalid={this.state.validations.isError} invalidText={this.state.validations.errorMsg}\r\n                                onChange={(e) => { this.productOnChangeHandler(e) }}\r\n                            />\r\n                        </ModalBody>\r\n                        <ModalFooter>\r\n                            <Button\r\n                                kind=\"secondary\"\r\n                                onMouseDown={() => { this.setState({ open: false }) }}>\r\n                                {i18n.t('buttons.cancel')}\r\n                            </Button>\r\n                            <Button kind=\"primary\" onClick={() => { this.onEditProductNameSave() }}>\r\n                                {i18n.t('buttons.save')}\r\n                            </Button>\r\n                        </ModalFooter>\r\n                    </ComposedModal>\r\n                </>\r\n            )\r\n        } else {\r\n            return <p>{i18n.t('userMessages.unauthorized')}</p>;\r\n        }\r\n    }\r\n}\r\n\r\nconst headerData = [\r\n    {\r\n        header: i18n.t('adminConfig.productNameConfigurations.table.prodName'),\r\n        key: 'productName',\r\n    },\r\n    {\r\n        header: i18n.t('customerDashboard.action'),\r\n        key: 'action',\r\n    },\r\n];\r\n\r\nexport default withKeycloak(ProductNameConfiguration);\r\n","import React, { Component } from \"react\";\r\nimport { isPortalAdminOrSupport } from \"../../../api/helpers\";\r\nimport withKeycloak from \"../../../auth/withKeycloak\";\r\nimport i18n from \"../../../i18n\";\r\nimport { Button, ComposedModal, ModalBody, ModalFooter, ModalHeader, Table, TableBody, TableCell, TableContainer, TableHead, TableHeader, TableRow, TextInput, } from 'carbon-components-react';\r\nimport { TICKETING_SYSTEM_CONFIG_ENUM } from \"../../../api/constants\";\r\nimport { apiTicketingSystemConfigResourcePost } from \"../../../api/manageFieldConfigurations\";\r\n\r\nclass JiraConfiguration extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            open: false,\r\n            validations: {\r\n                versionIdIsValid: true,\r\n                organizationIdIsValid: true,\r\n                subscriptionLevelIdIsValid: true,\r\n                errMsg: ''\r\n            },\r\n            changedProductName: '',\r\n            jiraConfig: [],\r\n            jiraOnChangedValue : this.initializeJiraConfigObj()\r\n        };\r\n        this.timeoutId = null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (isPortalAdminOrSupport()) {\r\n            this.setState({ changedProductName: this.props.productName, jiraConfig: this.props.jiraCustomField })\r\n            this.getJiraConfig();\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.jiraCustomField.length !== this.props.jiraCustomField.length) {\r\n            this.getJiraConfig();\r\n        }\r\n    }\r\n\r\n    getJiraConfig() {\r\n        this.setState({ changedProductName: this.props.productName, jiraConfig: this.props.jiraCustomField });\r\n        let initJira = this.initializeJiraConfigObj();\r\n        this.props.jiraCustomField.forEach((el) => {\r\n            initJira[Object.keys(el)[0]] = el[Object.keys(el)[0]];\r\n        });\r\n        this.setState({ jiraOnChangedValue: initJira });\r\n    }\r\n\r\n    initializeJiraConfigObj() {\r\n        return { versionId: 0, organizationId: 0, subscriptionLevelId: 0 };\r\n    }\r\n\r\n    onClickJiraConfigEdit = () => {\r\n        this.setState({ validations: { isError: false, errorMsg: \"\" }, changedProductName: this.props.productName, open: true })\r\n    }\r\n\r\n    onClickJiraConfigSave = async () => {\r\n        // validation before submit form\r\n        for (let key in this.state.jiraOnChangedValue) {\r\n            if (!this.state.jiraOnChangedValue[key]) return\r\n        }\r\n        const jiraConfigBuilder = []\r\n        for (let key in this.state.jiraOnChangedValue) {\r\n            jiraConfigBuilder.push({ [key]: this.state.jiraOnChangedValue[key] })\r\n        }\r\n        try {\r\n            await apiTicketingSystemConfigResourcePost(this.props.serviceUrl,\r\n                TICKETING_SYSTEM_CONFIG_ENUM.JIRA_CUSTOM_FIELD, [this.state.jiraOnChangedValue])\r\n                .then(() => {\r\n                    this.props.getTicketAndSubLevel()\r\n                    this.setState({ jiraConfig: jiraConfigBuilder })\r\n                });\r\n        } catch (error) {\r\n            console.error('Error onClickJiraConfigSave: ', error)\r\n        }\r\n        this.setState({ open: false })\r\n    }\r\n\r\n    jiraConfigOnChangeHandler = (e) => {\r\n        const getEleId = e.target.id;\r\n        const getEleValue = e.target.value;\r\n        const updateJiraconfig = this.state.jiraOnChangedValue;\r\n        const errorUpdate = this.state.validations;\r\n        if (!getEleValue.length) {\r\n            errorUpdate[`${getEleId}IsValid`] = true\r\n            this.updateStateOfJiraConfig(getEleId, updateJiraconfig, getEleValue);\r\n        } else {\r\n            errorUpdate[`${getEleId}IsValid`] = false\r\n            this.updateStateOfJiraConfig(getEleId, updateJiraconfig, getEleValue);\r\n        }\r\n    }\r\n\r\n    onClickCloseModal = () => {\r\n        let initJira = this.initializeJiraConfigObj();\r\n        this.state.jiraConfig.forEach((el) => {\r\n            initJira[Object.keys(el)[0]] = parseInt(el[Object.keys(el)[0]].toString(), 10)\r\n        })\r\n        this.setState({ jiraOnChangedValue: initJira })\r\n    }\r\n\r\n    getJiraConfigValues = () => {\r\n        let content = [];\r\n        if (this.state.jiraConfig.length) {\r\n            this.state.jiraConfig.forEach((config, idx) => {\r\n                content.push(<TableCell key={Object.keys(config)[0]}>{config[Object.keys(config)[0]]}</TableCell>)\r\n            })\r\n        }\r\n        return content\r\n    }\r\n\r\n    updateStateOfJiraConfig(getEleId, updateJiraconfig, getEleValue) {\r\n        for (let i = 0; i < this.state.jiraConfig.length; i++) {\r\n            if (getEleId === Object.keys(this.state.jiraConfig[i])[0]) {\r\n                updateJiraconfig[`${Object.keys(this.state.jiraConfig[i])}`] = getEleValue;\r\n            }\r\n        }\r\n        this.setState({ jiraOnChangedValue: updateJiraconfig });\r\n    }\r\n\r\n    render() {\r\n        if (isPortalAdminOrSupport()) {\r\n            return (\r\n                <>\r\n                    <TableContainer>\r\n                        <Table>\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    {headerData.map((head, index) => (\r\n                                        <TableHeader id={index} key={head.key}> {head.header}\r\n                                        </TableHeader>\r\n                                    ))}\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                <TableRow key={1} id={1}>\r\n                                    {this.getJiraConfigValues()}\r\n                                    <TableCell>\r\n                                        <Button\r\n                                            kind=\"ghost\" onClick={this.onClickJiraConfigEdit}\r\n                                            style={{ display: 'flex', width: '100%', color: 'red' }}>\r\n                                            {i18n.t('buttons.edit')}\r\n                                        </Button>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                    <ComposedModal open={this.state.open} onClose={() => { this.onClickCloseModal(); this.setState({ open: false }) }} >\r\n                        <ModalHeader title={i18n.t(\"buttons.edit\")} />\r\n                        <ModalBody>\r\n                            <TextInput\r\n                                key={\"versionId\"} data-modal-primary-focus id={\"versionId\"}\r\n                                labelText={`${i18n.t('adminConfig.jiraFieldsConfigurations.versionIDLabel')}*`}\r\n                                type=\"number\" value={this.state.jiraOnChangedValue['versionId']}\r\n                                invalid={this.state.validations.versionIdIsValid}\r\n                                invalidText={i18n.t('validation.invalid.required')}\r\n                                onChange={(e) => { this.jiraConfigOnChangeHandler(e) }}\r\n                            />\r\n                            <TextInput\r\n                                key={\"organizationId\"} data-modal-primary-focus id={\"organizationId\"}\r\n                                labelText={`${i18n.t('adminConfig.jiraFieldsConfigurations.organizatoinIDLabel')}*`}\r\n                                type=\"number\" value={this.state.jiraOnChangedValue.organizationId}\r\n                                invalid={this.state.validations.organizationIdIsValid}\r\n                                invalidText={i18n.t('validation.invalid.required')}\r\n                                onChange={(e) => { this.jiraConfigOnChangeHandler(e) }}\r\n                            />\r\n                            <TextInput\r\n                                key={\"subscriptionLevelId\"} data-modal-primary-focus id={\"subscriptionLevelId\"}\r\n                                labelText={`${i18n.t('adminConfig.jiraFieldsConfigurations.SubscriptionLevelIDLabel')}*`}\r\n                                type=\"number\" value={this.state.jiraOnChangedValue.subscriptionLevelId}\r\n                                invalid={this.state.validations.subscriptionLevelIdIsValid}\r\n                                invalidText={i18n.t('validation.invalid.required')}\r\n                                onChange={(e) => { this.jiraConfigOnChangeHandler(e) }}\r\n                            />\r\n                        </ModalBody>\r\n                        <ModalFooter>\r\n                            <Button\r\n                                kind=\"secondary\"\r\n                                onMouseDown={() => { this.setState({ open: false }) }}\r\n                                onClick={this.onClickCloseModal}>\r\n                                {i18n.t('buttons.cancel')}\r\n                            </Button>\r\n                            <Button kind=\"primary\" onClick={() => { this.onClickJiraConfigSave() }}>\r\n                                {i18n.t('buttons.save')}\r\n                            </Button>\r\n                        </ModalFooter>\r\n                    </ComposedModal>\r\n                </>\r\n            )\r\n        } else {\r\n            return <p>{i18n.t('userMessages.unauthorized')}</p>;\r\n        }\r\n    }\r\n}\r\n\r\nconst headerData = [\r\n    {\r\n        header: i18n.t('adminConfig.jiraFieldsConfigurations.versionIDLabel'),\r\n        key: 'versionId',\r\n    },\r\n    {\r\n        header: i18n.t('adminConfig.jiraFieldsConfigurations.organizatoinIDLabel'),\r\n        key: 'orgId',\r\n    },\r\n    {\r\n        header: i18n.t('adminConfig.jiraFieldsConfigurations.SubscriptionLevelIDLabel'),\r\n        key: 'subscrId',\r\n    },\r\n    {\r\n        header: i18n.t('customerDashboard.action'),\r\n        key: 'actn',\r\n    },\r\n];\r\n\r\nexport default withKeycloak(JiraConfiguration);\r\n","import React from 'react';\r\nimport i18n from '../../../i18n';\r\nimport { Accordion, AccordionItem, Tile } from 'carbon-components-react';\r\nimport TicketingSystem from './TicketingSystem';\r\nimport ProductVersion from './ProductVersion';\r\nimport {authenticationChanged, isAuthenticated, isPortalAdmin} from '../../../api/helpers';\r\nimport withKeycloak from '../../../auth/withKeycloak';\r\nimport Breadcrumbs from \"../../Breadcrumbs/Breadcrumbs\";\r\nimport TicketTypeConfiguration from './TicketTypeConfiguration';\r\nimport ServiceSubLevelConfiguration from './ServiceSubLevelConfiguration';\r\nimport { apiTicketingSystemConfigResourceGet } from '../../../api/manageFieldConfigurations';\r\nimport ProductNameConfiguration from './ProductNameConfiguration';\r\nimport JiraConfiguration from './JiraConfiguration';\r\n\r\nclass AdminConfiguration extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: true,\r\n      refinedTicketType : [],\r\n      refinedSubLevel: [],\r\n      adminConfig: [],\r\n      refinedJiraCustomField: [],\r\n      productName: ''\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (isAuthenticated(this.props)) {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n      this.getTicketingSystemConfig();\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (authenticationChanged(this.props, prevProps)) {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n      this.getTicketingSystemConfig();\r\n    }\r\n    if (prevState.refinedTicketType.length !== this.state.refinedTicketType.length ||\r\n      prevState.refinedSubLevel.length !== this.state.refinedSubLevel.length ||\r\n      prevState.productName !== this.state.productName) {\r\n      this.initAdminConfig()\r\n    }\r\n  }\r\n\r\n  getTicketingSystemConfig = async () => {\r\n    try {\r\n      const { data: ticketTypesAndSubLevelsData } = await apiTicketingSystemConfigResourceGet(this.props.serviceUrl);\r\n      if (ticketTypesAndSubLevelsData && ticketTypesAndSubLevelsData.length) {\r\n        const JIRAKEY = 'jiraCustomField', PRODUCTNAME = 'productName';\r\n        let actualData = ticketTypesAndSubLevelsData[0];\r\n        if (actualData.ticketType) {\r\n          this.setState({ refinedTicketType: JSON.parse(actualData.ticketType) })\r\n        }\r\n        if (actualData.subscriptionLevel) {\r\n          this.setState({ refinedSubLevel: JSON.parse(actualData.subscriptionLevel) })\r\n        }\r\n        if (actualData.hasOwnProperty(JIRAKEY)) {\r\n          let jiraCustomFieldBuilder = [];\r\n          for (let jiraItem in JSON.parse(actualData.jiraCustomField)[0]) {\r\n            jiraCustomFieldBuilder.push({ [jiraItem]: JSON.parse(actualData.jiraCustomField)[0][jiraItem] })\r\n          }\r\n          this.setState({\r\n            refinedJiraCustomField: jiraCustomFieldBuilder }\r\n          )\r\n        }\r\n        if (actualData.hasOwnProperty(PRODUCTNAME)) this.setState({ productName: JSON.parse(actualData.productName)[0].name })\r\n      }\r\n    } catch (error) {\r\n      console.error('Error getTicketingSystemConfig: ', error)\r\n    }\r\n  }\r\n\r\n  initAdminConfig = () => {\r\n    const setAdminConfig = [\r\n      {\r\n        label: (\r\n          <div>\r\n            <p className=\"title\">{i18n.t('adminConfig.integrationTicketingSystem.title')}</p>\r\n            <p className=\"desc\">{i18n.t('adminConfig.integrationTicketingSystem.desc')}</p>\r\n          </div>\r\n        ),\r\n        content: <div className=\"admin-config-child\"><TicketingSystem serviceUrl={this.props.serviceUrl} /></div>,\r\n      },\r\n      {\r\n        label: (\r\n          <div>\r\n            <p className=\"title\">{i18n.t('adminConfig.manageProductVersion.title')}</p>\r\n            <p className=\"desc\">{i18n.t('adminConfig.manageProductVersion.desc')}</p>\r\n          </div>\r\n        ),\r\n        content: <div className=\"admin-config-child\"><ProductVersion serviceUrl={this.props.serviceUrl} productName={this.state.productName}/></div>,\r\n      },\r\n      {\r\n        label: (\r\n          <div>\r\n            <p className=\"title\">{i18n.t('adminConfig.manageFieldConfigurations.title')}</p>\r\n            <p className=\"desc\">{i18n.t('adminConfig.manageFieldConfigurations.manageFieldConfigurationsDesc')}</p>\r\n          </div>\r\n        ),\r\n        content: (\r\n          <>\r\n          <div className=\"admin-config-child\">\r\n            <TicketTypeConfiguration serviceUrl={this.props.serviceUrl} ticketType={this.state.refinedTicketType} getTicketAndSubLevel={this.getTicketingSystemConfig} />\r\n            <ServiceSubLevelConfiguration serviceUrl={this.props.serviceUrl} subLevel={this.state.refinedSubLevel} getTicketAndSubLevel={this.getTicketingSystemConfig} />\r\n            <ProductNameConfiguration serviceUrl={this.props.serviceUrl} productName={this.state.productName} getTicketAndSubLevel={this.getTicketingSystemConfig}/>\r\n          </div>\r\n          </>\r\n        )\r\n      },\r\n      {\r\n        label: (\r\n          <div>\r\n            <p className=\"title\">Jira Field Configuration</p>\r\n            <p className=\"desc\">This allows you to manage jira custom field configuration</p>\r\n          </div>\r\n        ),\r\n        content: (\r\n          <>\r\n            <div className=\"admin-config-child\">\r\n              <JiraConfiguration serviceUrl={this.props.serviceUrl} productName={this.state.productName} jiraCustomField={this.state.refinedJiraCustomField} getTicketAndSubLevel={this.getTicketingSystemConfig} />\r\n            </div>\r\n          </>\r\n        )\r\n      }\r\n    ];\r\n    this.setState({ adminConfig: setAdminConfig })\r\n  }\r\n\r\n  render() {\r\n    if (!this.state.loading) {\r\n      // Authorized\r\n      if (isPortalAdmin()) {\r\n        return (\r\n          <div id=\"entando-customer-portal\">\r\n            <Breadcrumbs locale={this.props.locale}/>\r\n            <div className=\"form-container\">\r\n              <Tile>\r\n                <p className=\"title\">{i18n.t('adminConfig.title')}</p>\r\n                <p className=\"desc\">{i18n.t('adminConfig.desc')}</p>\r\n              </Tile>\r\n              <Accordion>\r\n                {this.state.adminConfig.map((item, index) => (\r\n                  <AccordionItem key={index.toString()} index={index} title={item.label} description={item.description}>\r\n                    <div>{item.content}</div>\r\n                  </AccordionItem>\r\n                ))}\r\n              </Accordion>\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n      // Unauthorized\r\n      else {\r\n        return <p>{i18n.t('userMessages.unauthorized')}</p>;\r\n      }\r\n    }\r\n    // Loading\r\n    else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\nexport default withKeycloak(AdminConfiguration);\r\n","export const publishWidgetEvent = (eventId, payload) => {\r\n  const widgetEvent = new CustomEvent(eventId, {\r\n    detail: {\r\n      payload,\r\n    },\r\n  });\r\n  window.dispatchEvent(widgetEvent);\r\n};\r\n\r\nexport const createWidgetEventPublisher = eventType => payload => publishWidgetEvent(eventType, payload);\r\n\r\nexport const subscribeToWidgetEvent = (eventType, eventHandler) => {\r\n  window.addEventListener(eventType, eventHandler);\r\n\r\n  return () => {\r\n    window.removeEventListener(eventType, eventHandler);\r\n  };\r\n};\r\n\r\nexport const subscribeToWidgetEvents = (widgetEvents, eventHandler) => {\r\n  widgetEvents.forEach(eventType => window.addEventListener(eventType, eventHandler));\r\n\r\n  return () => {\r\n    widgetEvents.forEach(eventType => window.removeEventListener(eventType, eventHandler));\r\n  };\r\n};\r\n\r\nexport const widgetEventToFSA = widgetEvent => {\r\n  // for info about Flux Standard Action (FSA) see https://github.com/redux-utilities/flux-standard-action\r\n  const {\r\n    type,\r\n    detail: { payload, error, meta },\r\n  } = widgetEvent;\r\n  return { type, payload, error, meta };\r\n};\r\n","export const INPUT_EVENT_TYPES = {\r\n  formUpdate: 'customer.form.update',\r\n  formCreate: 'customer.form.create',\r\n  formDelete: 'customer.form.delete',\r\n};\r\n\r\nexport const OUTPUT_EVENT_TYPES = {\r\n  select: 'customer.table.select',\r\n  add: 'customer.table.add',\r\n  error: 'customer.table.error',\r\n  delete: 'customer.table.delete',\r\n};\r\n\r\nexport const KEYCLOAK_EVENT_TYPE = 'keycloak';\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport AdminConfiguration from '../components/Admin/Configuration/AdminConfiguration';\r\nimport '../index.scss';\r\nimport * as Locale from '../i18n';\r\n\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\n\r\nimport { subscribeToWidgetEvent } from '../helpers/widgetEvents';\r\nimport { KEYCLOAK_EVENT_TYPE } from './widgetEventTypes';\r\nimport {setAppContext} from '../api/helpers';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window && window.entando && window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\nconst ATTRIBUTES = {\r\n  hidden: 'hidden',\r\n  locale: 'locale',\r\n  paginationMode: 'pagination-mode',\r\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n  serviceUrl: 'service-url',\r\n  baseUrl: 'base-url',\r\n};\r\n\r\nclass AdminConfigurationElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    //retargetEvents(shadowRoot);\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const baseUrl = this.getAttribute(ATTRIBUTES.baseUrl) || '';\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n    const locale = this.getAttribute(ATTRIBUTES.locale) || '';\r\n    Locale.setLocale(locale);\r\n    setAppContext(baseUrl);\r\n\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <AdminConfiguration serviceUrl={serviceUrl} locale={locale}/>\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.get('cp-admin-configuration') || customElements.define('cp-admin-configuration', AdminConfigurationElement);\r\n","import { getDefaultOptions, request, getUrl } from './helpers';\r\n\r\nconst resource = 'api/customers';\r\n\r\nexport const apiCustomerDelete = async (serviceUrl, id) => {\r\n  const url = `${serviceUrl}/${resource}/${id}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiCustomersGet = async serviceUrl => {\r\n  const url = getUrl(`${serviceUrl}/${resource}`);\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiCustomerGet = async (serviceUrl, id) => {\r\n  const url = getUrl(`${serviceUrl}/${resource}/${id}`);\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiCustomerPost = async (serviceUrl, customer) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n    body: customer ? JSON.stringify(customer) : null,\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiCustomerPut = async (serviceUrl, customer) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'PUT',\r\n    body: customer ? JSON.stringify(customer) : null,\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiAddProjectToCustomer = async (serviceUrl, customerId, projectId) => {\r\n  const url = `${serviceUrl}/${resource}/${customerId}/projects/${projectId}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiDeleteProjectFromCustomer = async (serviceUrl, customerId, projectId) => {\r\n  const url = `${serviceUrl}/${resource}/${customerId}/projects/${projectId}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE',\r\n  };\r\n  return request(url, options);\r\n};\r\n","import React, { Component } from 'react';\r\nimport i18n from '../../i18n';\r\nimport { ModalWrapper, Form, TextInput, TextArea } from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport {apiCustomerPost} from '../../api/customers';\r\nimport {isAuthenticated} from \"../../api/helpers\";\r\n\r\nclass AddCustomerModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      name: '',\r\n      customerNumber: '',\r\n      contactName: '',\r\n      contactPhone: '',\r\n      contactEmail: '',\r\n      notes: '',\r\n      invalid: {},\r\n      submitMsg: '',\r\n      submitColour: 'black',\r\n    };\r\n\r\n    this.baseState = this.state;\r\n  }\r\n\r\n  handleValidation() {\r\n    let invalid = {};\r\n    let formIsValid = true;\r\n\r\n    if (this.state.name === '') {\r\n      formIsValid = false;\r\n      invalid['name'] = true;\r\n    }\r\n\r\n    if (this.state.customerNumber === '') {\r\n      formIsValid = false;\r\n      invalid['customerNumber'] = true;\r\n    }\r\n\r\n    this.setState({ invalid: invalid });\r\n    return formIsValid;\r\n  }\r\n\r\n  handleChanges = e => {\r\n    const input = e.target;\r\n    const name = input.name;\r\n    const value = input.value;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  async customerPost(customer) {\r\n    if (isAuthenticated(this.props)) {\r\n      return await apiCustomerPost(this.props.serviceUrl, customer);\r\n    }\r\n  }\r\n\r\n  handleFormSubmit = () => {\r\n    const formIsValid = this.handleValidation();\r\n\r\n    if (formIsValid) {\r\n      const customer = {\r\n        name: this.state.name,\r\n        customerNumber: this.state.customerNumber,\r\n        contactName: this.state.contactName,\r\n        contactPhone: this.state.contactPhone,\r\n        contactEmail: this.state.contactEmail,\r\n        notes: this.state.notes,\r\n      };\r\n\r\n      this.customerPost(customer)\r\n        .then(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.added'),\r\n            submitColour: '#24a148',\r\n          });\r\n          this.props.updateCustomerList();\r\n        })\r\n        .catch(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.error'),\r\n            submitColour: '#da1e28',\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  clearValues = () => {\r\n    const customerModalElement = document.querySelector('#modal-form-customer');\r\n    if (!customerModalElement.className.includes('is-visible')) {\r\n      this.setState(this.baseState);\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    const modalOpenButton = document.querySelector('.add-customer-button');\r\n    modalOpenButton.addEventListener('click', this.clearValues, false);\r\n  }\r\n\r\n  render() {\r\n    const modalConfirmation = (\r\n      <div className=\"bx--modal-header\">\r\n        <p style={{color: this.state.submitColour}}>{this.state.submitMsg}</p>\r\n      </div>\r\n    );\r\n    const modalId = 'modal-form-customer';\r\n    return (\r\n      <ModalWrapper\r\n        buttonTriggerText={i18n.t('buttons.addCustomer')}\r\n        modalHeading={i18n.t('adminDashboard.addCustomer.title')}\r\n        buttonTriggerClassName=\"add-customer bx--btn bx--btn--tertiary add-customer-button\"\r\n        className=\"modal-form\"\r\n        id={modalId}\r\n        handleSubmit={this.handleFormSubmit}\r\n        primaryButtonText={i18n.t('modalText.save')}\r\n        secondaryButtonText={i18n.t('modalText.cancel')}\r\n      >\r\n        {modalConfirmation}\r\n        <div className=\"form-container\">\r\n          <Form onSubmit={this.handleFormSubmit}>\r\n            <TextInput\r\n              id={'name' + modalId}\r\n              name=\"name\"\r\n              labelText={i18n.t('adminDashboard.addCustomer.customerName') + ' *'}\r\n              value={this.state.name}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.required')}\r\n              invalid={this.state.invalid['name']}\r\n            />\r\n            <TextInput\r\n              id={'customerNumber' + modalId}\r\n              name=\"customerNumber\"\r\n              labelText={i18n.t('adminDashboard.addCustomer.customerNumber') + ' *'}\r\n              value={this.state.customerNumber}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.required')}\r\n              invalid={this.state.invalid['customerNumber']}\r\n            />\r\n            <TextInput\r\n              id={'contactName' + modalId}\r\n              name=\"contactName\"\r\n              labelText={i18n.t('adminDashboard.addCustomer.contactName')}\r\n              value={this.state.contactName}\r\n              onChange={this.handleChanges}\r\n            />\r\n            <TextInput\r\n              id={'contactPhone' + modalId}\r\n              name=\"contactPhone\"\r\n              labelText={i18n.t('adminDashboard.addCustomer.contactPhone')}\r\n              value={this.state.contactPhone}\r\n              onChange={this.handleChanges}\r\n            />\r\n            <TextInput\r\n              id={'contactEmail' + modalId}\r\n              name=\"contactEmail\"\r\n              labelText={i18n.t('adminDashboard.addCustomer.contactEmail')}\r\n              value={this.state.contactEmail}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.email')}\r\n              invalid={this.state.invalid['contactEmail']}\r\n            />\r\n            <TextArea\r\n              id={'notes' + modalId}\r\n              name=\"notes\"\r\n              labelText={i18n.t('adminDashboard.addCustomer.notes')}\r\n              value={this.state.notes}\r\n              onChange={this.handleChanges}\r\n            />\r\n          </Form>\r\n        </div>\r\n        {modalConfirmation}\r\n      </ModalWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withKeycloak(AddCustomerModal);\r\n","import { getDefaultOptions, request, getUrl } from './helpers';\r\n\r\nconst resource = 'api/partners';\r\n\r\nexport const apiPartnerDelete = async (serviceUrl, id) => {\r\n  const url = `${serviceUrl}/${resource}/${id}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiPartnersGet = async serviceUrl => {\r\n  const url = getUrl(`${serviceUrl}/${resource}`);\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiPartnerPost = async (serviceUrl, partner) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n    body: partner ? JSON.stringify(partner) : null,\r\n  };\r\n  return request(url, options);\r\n};\r\n","import { getDefaultOptions, request, getUrl } from './helpers';\r\n\r\nconst resource = 'api/projects';\r\n\r\nexport const apiProjectsDelete = async (serviceUrl, id) => {\r\n  const url = `${serviceUrl}/${resource}/${id}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiProjectsGet = async serviceUrl => {\r\n  const url = getUrl(`${serviceUrl}/${resource}`);\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiProjectsGetByCustomer = async (serviceUrl, id) => {\r\n  const url = getUrl(`${serviceUrl}/${resource}/customer/${id}`);\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiProjectGet = async (serviceUrl, id) => {\r\n  const url = getUrl(`${serviceUrl}/${resource}/${id}`);\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiProjectPost = async (serviceUrl, project) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n    body: project ? JSON.stringify(project) : null,\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiProjectPut = async (serviceUrl, project) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'PUT',\r\n    body: project ? JSON.stringify(project) : null,\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiAddTicketToProject = async (serviceUrl, projectId, ticketId) => {\r\n  const url = `${serviceUrl}/${resource}/${projectId}/tickets/${ticketId}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiAddSubscriptionToProject = async (serviceUrl, projectId, subscriptionId) => {\r\n  const url = `${serviceUrl}/${resource}/${projectId}/subscriptions/${subscriptionId}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiAddUserToProject = async (serviceUrl, projectId, userId) => {\r\n  const url = `${serviceUrl}/${resource}/${projectId}/users/${userId}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiDeletePartnerFromProject = async (serviceUrl, projectId, partnerId) => {\r\n  const url = `${serviceUrl}/${resource}/${projectId}/partners/${partnerId}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiDeleteSubscriptionFromProject = async (serviceUrl, projectId, subscriptionId) => {\r\n  const url = `${serviceUrl}/${resource}/${projectId}/subscriptions/${subscriptionId}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiDeleteUserFromProject = async (serviceUrl, projectId, userId) => {\r\n  const url = `${serviceUrl}/${resource}/${projectId}/users/${userId}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiAddPartnerToProject = async (serviceUrl, projectId, partnerId) => {\r\n  const url = `${serviceUrl}/${resource}/${projectId}/partners/${partnerId}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiGetProjectUsers = async (serviceUrl, projectId) => {\r\n  const url = `${serviceUrl}/${resource}/${projectId}/users/`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiGetProjectSubscriptions = async (serviceUrl, projectId) => {\r\n  const url = `${serviceUrl}/${resource}/${projectId}/subscriptions/`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n  return request(url, options);\r\n};\r\n","export const AuthenticatedView = ({ children, keycloak }) => {\r\n  const authenticated = keycloak && keycloak.initialized && keycloak.authenticated;\r\n  return authenticated ? children : null;\r\n};\r\n\r\nexport const UnauthenticatedView = ({ children, keycloak }) => {\r\n  const authenticated = keycloak && keycloak.initialized && keycloak.authenticated;\r\n  return !authenticated ? children : null;\r\n};\r\n","import React, {Component} from 'react';\r\nimport i18n from '../../i18n';\r\nimport {ModalWrapper, Form, TextInput, Select, SelectItem, TextArea} from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport {apiPartnerPost} from '../../api/partners';\r\nimport {apiProjectsGet, apiAddPartnerToProject} from '../../api/projects';\r\nimport {authenticationChanged, isAuthenticated} from '../../api/helpers';\r\nimport {AuthenticatedView} from '../../auth/KeycloakViews';\r\n\r\nclass AddPartnerModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      projectList: {},\r\n      projectId: '',\r\n      name: '',\r\n      partnerNumber: '',\r\n      notes: '',\r\n      invalid: {},\r\n      submitMsg: '',\r\n      submitColour: 'black',\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (isAuthenticated(this.props)) {\r\n      this.fetchData();\r\n\r\n      const modalOpenButton = document.querySelector('.add-partner-button');\r\n      modalOpenButton.addEventListener('click', this.clearValues, false);\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (authenticationChanged(this.props, prevProps)) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n\r\n  handleValidation() {\r\n    let invalid = {};\r\n    let formIsValid = true;\r\n\r\n    //project\r\n    if (this.state.projectId === '' || this.state.projectId === 'project-list') {\r\n      formIsValid = false;\r\n      invalid['projectId'] = true;\r\n    }\r\n\r\n    if (this.state.name === '') {\r\n      formIsValid = false;\r\n      invalid['name'] = true;\r\n    }\r\n\r\n    if (this.state.partnerNumber === '') {\r\n      formIsValid = false;\r\n      invalid['partnerNumber'] = true;\r\n    }\r\n\r\n    this.setState({ invalid: invalid });\r\n    return formIsValid;\r\n  }\r\n\r\n  handleChanges = e => {\r\n    const input = e.target;\r\n    const name = input.name;\r\n    const value = input.value;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  async fetchData() {\r\n    if (isAuthenticated(this.props)) {\r\n      let projects = {};\r\n      try {\r\n        projects = (await apiProjectsGet(this.props.serviceUrl)).data;\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n      this.setState({\r\n        projectList: projects ? projects : {},\r\n      });\r\n    }\r\n  }\r\n\r\n  async partnerPost(partner) {\r\n    if (isAuthenticated(this.props)) {\r\n      const result = await apiPartnerPost(this.props.serviceUrl, partner);\r\n      return await apiAddPartnerToProject(this.props.serviceUrl, this.state.projectId, result.data.id);\r\n    }\r\n  }\r\n\r\n  handleFormSubmit = () => {\r\n    const formIsValid = this.handleValidation();\r\n\r\n    if (formIsValid) {\r\n      const partner = {\r\n        name: this.state.name,\r\n        partnerNumber: this.state.partnerNumber,\r\n        notes: this.state.notes,\r\n      };\r\n      this.partnerPost(partner)\r\n        .then(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.added'),\r\n            submitColour: '#24a148',\r\n          });\r\n          this.props.updateCustomerList();\r\n        })\r\n        .catch(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.error'),\r\n            submitColour: '#da1e28',\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  clearValues = () => {\r\n    this.componentDidMount()\r\n    const partnerModalElement = document.querySelector('#modal-form-partner');\r\n    if (!partnerModalElement.className.includes('is-visible')) {\r\n      this.setState({\r\n        projectId: '',\r\n        name: '',\r\n        partnerNumber: '',\r\n        notes: '',\r\n        invalid: {},\r\n        submitMsg: '',\r\n        submitColour: 'black',\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const modalConfirmation = (\r\n      <div className=\"bx--modal-header\">\r\n        <p style={{color: this.state.submitColour}}>{this.state.submitMsg}</p>\r\n      </div>\r\n    );\r\n    const {keycloak} = this.props;\r\n    const modalId = 'modal-form-partner';\r\n    return (\r\n      <AuthenticatedView keycloak={keycloak}>\r\n        <ModalWrapper\r\n          buttonTriggerText={i18n.t('buttons.addPartner')}\r\n          modalHeading={i18n.t('adminDashboard.addPartner.title')}\r\n          buttonTriggerClassName=\"add-partner bx--btn bx--btn--tertiary add-partner-button\"\r\n          className=\"modal-form\"\r\n          id={modalId}\r\n          handleSubmit={this.handleFormSubmit}\r\n          primaryButtonText={i18n.t('modalText.save')}\r\n          secondaryButtonText={i18n.t('modalText.cancel')}\r\n        >\r\n          {modalConfirmation}\r\n          <div className=\"form-container\">\r\n            <Form onSubmit={this.handleFormSubmit}>\r\n              <Select\r\n                id={'projectId' + modalId}\r\n                name=\"projectId\"\r\n                labelText={i18n.t('adminDashboard.addPartner.projectList') + ' *'}\r\n                value={this.state.projectId}\r\n                onChange={this.handleChanges}\r\n                invalidText={i18n.t('validation.invalid.required')}\r\n                invalid={this.state.invalid['projectId']}\r\n              >\r\n                <SelectItem text={i18n.t('adminDashboard.addPartner.selectProject')} value=\"project-list\"/>\r\n                {Object.keys(this.state.projectList).length !== 0\r\n                  ? this.state.projectList.map((project, i) => (\r\n                    <SelectItem key={i} text={project.name} value={project.id}>\r\n                      {project.name}\r\n                    </SelectItem>\r\n                  ))\r\n                  : null}\r\n              </Select>\r\n\r\n              <TextInput\r\n                id={'name' + modalId}\r\n                name=\"name\"\r\n                labelText={i18n.t('adminDashboard.addPartner.partnerName') + ' *'}\r\n                value={this.state.name}\r\n                onChange={this.handleChanges}\r\n                invalidText={i18n.t('validation.invalid.required')}\r\n                invalid={this.state.invalid['name']}\r\n              />\r\n              <TextInput\r\n                id={'partnerNumber' + modalId}\r\n                name=\"partnerNumber\"\r\n                labelText={i18n.t('adminDashboard.addPartner.partnerNumber') + ' *'}\r\n                value={this.state.partnerNumber}\r\n                onChange={this.handleChanges}\r\n                invalidText={i18n.t('validation.invalid.required')}\r\n                invalid={this.state.invalid['partnerNumber']}\r\n              />\r\n              <TextArea\r\n                name=\"notes\"\r\n                labelText={i18n.t('adminDashboard.addPartner.notes')}\r\n                value={this.state.notes}\r\n                onChange={this.handleChanges}\r\n              />\r\n            </Form>\r\n          </div>\r\n          {modalConfirmation}\r\n        </ModalWrapper>\r\n      </AuthenticatedView>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withKeycloak(AddPartnerModal);\r\n","import React, { Component } from 'react';\r\nimport i18n from '../../i18n';\r\nimport {Modal, Form, TextInput, TextArea} from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport { apiCustomersGet } from '../../api/customers';\r\nimport {apiProjectGet, apiProjectPut, apiProjectsGet} from '../../api/projects';\r\nimport {authenticationChanged, isAuthenticated} from \"../../api/helpers\";\r\n\r\nclass EditProjectModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      projects: {},\r\n      customerList: {},\r\n      customerId: '',\r\n      name: '',\r\n      description: '',\r\n      systemId: '',\r\n      contactName: '',\r\n      contactPhone: '',\r\n      contactEmail: '',\r\n      notes: '',\r\n      invalid: {},\r\n      modalId: '',\r\n      buttonId: '',\r\n      submitMsg: '',\r\n      submitColour: 'black',\r\n    };\r\n  }\r\n\r\n  handleValidation() {\r\n    let invalid = {};\r\n    let formIsValid = true;\r\n\r\n    //name\r\n    if (this.state.name === '') {\r\n      formIsValid = false;\r\n      invalid['name'] = true;\r\n    }\r\n\r\n    //description\r\n    if (this.state.description === '') {\r\n      formIsValid = false;\r\n      invalid['description'] = true;\r\n    }\r\n\r\n    this.setState({ invalid: invalid });\r\n    return formIsValid;\r\n  }\r\n\r\n  handleChanges = e => {\r\n    const input = e.target;\r\n    const name = input.name;\r\n    const value = input.value;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  async getCustomers() {\r\n    if (isAuthenticated(this.props)) {\r\n      const customers = await apiCustomersGet(this.props.serviceUrl);\r\n      this.setState({customerList: customers});\r\n    }\r\n  }\r\n\r\n  async getProjectDetails() {\r\n    if (isAuthenticated(this.props)) {\r\n      const project = await apiProjectGet(this.props.serviceUrl, this.props.project.id);\r\n      this.setState({\r\n        name: project.data.name,\r\n        description: project.data.description,\r\n        systemId: project.data.systemId,\r\n        contactName: project.data.contactName,\r\n        contactPhone: project.data.contactPhone,\r\n        contactEmail: project.data.contactEmail,\r\n        notes: project.data.notes,\r\n        modalId: 'modal-form-project-edit-' + project.data.id,\r\n        buttonId: 'edit-project-button-' + project.data.id,\r\n      });\r\n    }\r\n  }\r\n\r\n  async getAllProjects() {\r\n    const projects = await apiProjectsGet(this.props.serviceUrl);\r\n    this.setState({\r\n      projects: projects.data,\r\n    });\r\n  }\r\n\r\n  async projectPut(project) {\r\n    if (isAuthenticated(this.props)) {\r\n      return await apiProjectPut(this.props.serviceUrl, project);\r\n    }\r\n  }\r\n\r\n  handleFormSubmit = () => {\r\n    const formIsValid = this.handleValidation();\r\n\r\n    if (formIsValid) {\r\n      const project = {\r\n        id: this.props.project.id,\r\n        customer: this.props.project.customer,\r\n        name: this.state.name,\r\n        description: this.state.description,\r\n        systemId: this.state.systemId,\r\n        contactName: this.state.contactName,\r\n        contactPhone: this.state.contactPhone,\r\n        contactEmail: this.state.contactEmail,\r\n        notes: this.state.notes,\r\n      };\r\n      for (var i = 0; i < this.props.allProjects.length; i++) {\r\n        if (\r\n          project.systemId === this.props.allProjects[i].systemId &&\r\n          project.id !== this.props.allProjects[i].id &&\r\n          project.systemId.trim() !== ''\r\n        ) {\r\n          window.alert('That system id is already in use in another project');\r\n          return;\r\n        }\r\n      }\r\n      this.projectPut(project)\r\n        .then(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.updated'),\r\n            submitColour: '#24a148',\r\n          });\r\n          this.props.updateProjectList();\r\n          //For now leave the modal open after saving\r\n          // this.props.closeModal();\r\n        })\r\n        .catch((e) => {\r\n          console.log(e);\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.error'),\r\n            submitColour: '#da1e28',\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (isAuthenticated(this.props)) {\r\n      this.getCustomers();\r\n      this.getAllProjects();\r\n      this.getProjectDetails();\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (authenticationChanged(this.props, prevProps)) {\r\n      this.getCustomers();\r\n      this.getAllProjects();\r\n      this.getProjectDetails();\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    const modalConfirmation = (\r\n      <div className=\"bx--modal-header\">\r\n        <p style={{color: this.state.submitColour}}>{this.state.submitMsg}</p>\r\n      </div>\r\n    );\r\n    const modalId = this.state.modalId;\r\n    return (\r\n      <Modal\r\n        id={this.state.modalId}\r\n        className=\"modal-form\"\r\n        open={this.props.open}\r\n        onRequestClose={this.props.closeModal}\r\n        onRequestSubmit={this.handleFormSubmit}\r\n        modalHeading={i18n.t('adminDashboard.addProject.editTitle')}\r\n        primaryButtonText={i18n.t('modalText.save')}\r\n        secondaryButtonText={i18n.t('modalText.cancel')}\r\n      >\r\n        {modalConfirmation}\r\n        <div className=\"form-container\">\r\n          <Form onSubmit={this.handleFormSubmit}>\r\n            <TextInput\r\n              id={'name' + modalId}\r\n              name=\"name\"\r\n              labelText={i18n.t('adminDashboard.addProject.projectName') + ' *'}\r\n              value={this.state.name}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.required')}\r\n              invalid={this.state.invalid['name']}\r\n            />\r\n            <TextInput\r\n              id={'description' + modalId}\r\n              name=\"description\"\r\n              labelText={i18n.t('adminDashboard.addProject.projectDesc') + ' *'}\r\n              value={this.state.description}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.required')}\r\n              invalid={this.state.invalid['description']}\r\n            />\r\n            <TextInput\r\n              id={'systemId' + modalId}\r\n              name=\"systemId\"\r\n              labelText={i18n.t('adminDashboard.addProject.systemId')}\r\n              value={this.state.systemId}\r\n              onChange={this.handleChanges}\r\n            />\r\n            <TextInput\r\n              id={'contactName' + modalId}\r\n              name=\"contactName\"\r\n              labelText={i18n.t('adminDashboard.addProject.contactName')}\r\n              value={this.state.contactName}\r\n              onChange={this.handleChanges}\r\n            />\r\n            <TextInput\r\n              id={'contactPhone' + modalId}\r\n              name=\"contactPhone\"\r\n              labelText={i18n.t('adminDashboard.addProject.contactPhone')}\r\n              value={this.state.contactPhone}\r\n              onChange={this.handleChanges}\r\n            />\r\n            <TextInput\r\n              id={'contactEmail' + modalId}\r\n              name=\"contactEmail\"\r\n              labelText={i18n.t('adminDashboard.addProject.contactEmail')}\r\n              value={this.state.contactEmail}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.email')}\r\n              invalid={this.state.invalid['contactEmail']}\r\n            />\r\n            <TextArea\r\n              name=\"notes\"\r\n              labelText={i18n.t('adminDashboard.addProject.notes')}\r\n              value={this.state.notes}\r\n              onChange={this.handleChanges}\r\n            />\r\n          </Form>\r\n        </div>\r\n        {modalConfirmation}\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withKeycloak(EditProjectModal);\r\n","import React, {Component} from 'react';\r\nimport i18n from '../../i18n';\r\nimport {\r\n  Button,\r\n  DataTable,\r\n  Modal,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableHeader,\r\n  TableRow,\r\n} from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport {isPortalAdminOrSupport} from '../../api/helpers';\r\nimport {apiDeletePartnerFromProject} from '../../api/projects';\r\n\r\nclass ManagePartnersModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      projectId: this.props.project.id,\r\n      project: this.props.project,\r\n    };\r\n\r\n    this.headerData = [\r\n      {\r\n        header: i18n.t('adminDashboard.addPartner.partnerName'),\r\n        key: 'partner',\r\n      },\r\n      {\r\n        header: i18n.t('adminDashboard.addPartner.partnerNumber'),\r\n        key: 'partnerNumber',\r\n      },\r\n      {\r\n        header: i18n.t('adminDashboard.addPartner.notes'),\r\n        key: 'notes',\r\n      },\r\n      {\r\n        header: i18n.t('customerDashboard.action'),\r\n        key: 'action',\r\n      },\r\n    ];\r\n  }\r\n\r\n  async removePartner(projectId, partnerId) {\r\n    if (isPortalAdminOrSupport()) {\r\n      return await apiDeletePartnerFromProject(this.props.serviceUrl, projectId, partnerId);\r\n    }\r\n  }\r\n\r\n  handleRemovePartner = (e, projectId, partnerId) => {\r\n    e.preventDefault();\r\n    if (window.confirm('Are you sure you want to remove this partner from the project?')) {\r\n      this.removePartner(projectId, partnerId)\r\n        .then(result => {\r\n          this.setState({\r\n            project: result.data,\r\n            submitMsg: i18n.t('submitMessages.deleted'),\r\n            submitColour: '#24a148',\r\n          });\r\n          this.props.updateProjectList();\r\n          //For now leave the modal open after saving\r\n          // this.props.closeModal();\r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.error'),\r\n            submitColour: '#da1e28',\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const modalConfirmation = (\r\n      <div className=\"bx--modal-header\">\r\n        <p style={{color: this.state.submitColour}}>{this.state.submitMsg}</p>\r\n      </div>\r\n    );\r\n    const modalId = 'modal-form-manage-partners';\r\n    return (\r\n      <Modal\r\n        id={modalId}\r\n        className=\"modal-form\"\r\n        open={this.props.open}\r\n        onRequestClose={this.props.closeModal}\r\n        onRequestSubmit={this.props.closeModal}\r\n        modalHeading={i18n.t('adminDashboard.managePartners.title')}\r\n        primaryButtonText={i18n.t('modalText.done')}\r\n      >\r\n        {modalConfirmation}\r\n        <div>\r\n          <DataTable rows={rowData} headers={this.headerData}>\r\n            {({rows, headers, getHeaderProps, getTableProps}) => (\r\n              <TableContainer description={i18n.t('customerDashboard.tableDesc')}>\r\n                <Table {...getTableProps()}>\r\n                  <TableHead>\r\n                    <TableRow key=\"headerRow\">\r\n                      {headers.map(header => {\r\n                        return <TableHeader {...getHeaderProps({header})}>{header.header}</TableHeader>;\r\n                      })}\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {this.state.project.partners.map((partner, index) => {\r\n                      return (\r\n                        <TableRow key={'partner' + index}>\r\n                          <TableCell>{partner.name}</TableCell>\r\n                          <TableCell>{partner.partnerNumber}</TableCell>\r\n                          <TableCell>{partner.notes}</TableCell>\r\n                          <TableCell>\r\n                            <div>\r\n                              <Button\r\n                                kind=\"ghost\"\r\n                                onClick={e => this.handleRemovePartner(e, this.state.projectId, partner.id)}\r\n                                style={{display: 'block', width: '100%', color: 'red'}}\r\n                              >\r\n                                {i18n.t('buttons.delete')}\r\n                              </Button>\r\n                              <hr style={{margin: '0', border: 'none', borderTop: '1px solid lightgrey'}}/>\r\n                            </div>\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      );\r\n                    })}\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            )}\r\n          </DataTable>\r\n        </div>\r\n        {modalConfirmation}\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nconst rowData = [\r\n  {\r\n    id: 'a',\r\n    name: 'Partner 1',\r\n    partnerNumber: '123',\r\n  },\r\n  {\r\n    id: 'b',\r\n    name: 'Partner 2',\r\n    partnerNumber: '456',\r\n  },\r\n];\r\n\r\nexport default withKeycloak(ManagePartnersModal);\r\n","import React, {Component} from 'react';\nimport i18n from '../../i18n';\nimport withKeycloak from '../../auth/withKeycloak';\nimport {OverflowMenu, OverflowMenuItem} from 'carbon-components-react';\nimport EditProjectModal from '../Admin/EditProjectModal';\nimport ManagePartnersModal from '../Admin/ManagePartnersModal';\nimport {isPortalAdmin} from '../../api/helpers';\nimport {withRouter} from 'react-router';\nimport {getAllTicketsUrl} from '../../api/ticketingsystem';\n\nclass ProjectActionItems extends Component {\n  constructor() {\n    super();\n    this.state = {\n      openEditProject: false,\n      openManagePartners: false,\n    };\n  }\n\n  handleCloseModal = (e) => {\n    if (e) {\n      e.preventDefault();\n    }\n    this.setState({\n      openEditProject: false,\n      openManagePartners: false\n    });\n  };\n\n  render() {\n    const isAdmin = isPortalAdmin();\n    const {history} = this.props;\n\n    const deleteProject = isAdmin && (\n      <OverflowMenuItem itemText={i18n.t('buttons.delete')}\n                        onClick={e => this.props.handleDeleteProject(e, this.props.project.id)}\n                        isDelete={true}/>\n    );\n\n    const editProject = isAdmin && (\n      <OverflowMenuItem itemText={i18n.t('buttons.edit')}\n                        onClick={() => this.setState({openEditProject: true})}/>\n    );\n    const editProjectModal = isAdmin && (\n      <EditProjectModal\n        open={this.state.openEditProject}\n        closeModal={this.handleCloseModal}\n        allProjects={this.props.allProjects}\n        project={this.props.project}\n        serviceUrl={this.props.serviceUrl}\n        updateProjectList={this.props.updateProjectList}\n      />\n    );\n\n    const managePartners = isAdmin && (\n      <OverflowMenuItem itemText={i18n.t('buttons.managePartners')}\n                        onClick={() => this.setState({openManagePartners: true})}/>\n    );\n    const managePartnersModal = isAdmin && (\n      <ManagePartnersModal\n        open={this.state.openManagePartners}\n        closeModal={this.handleCloseModal}\n        project={this.props.project}\n        serviceUrl={this.props.serviceUrl}\n        updateProjectList={this.props.updateProjectList}\n      />\n    );\n\n    const manageSubscriptions = isAdmin && (\n      <OverflowMenuItem itemText={i18n.t('buttons.manageSubscriptions')}\n                        onClick={() => history.push(`/manage-subscriptions/${this.props.project.id}`)}/>\n    );\n\n    const manageUsers = isAdmin && (\n      <OverflowMenuItem itemText={i18n.t('buttons.manageUsers')}\n                        onClick={() => history.push(`/manage-users/${this.props.project.id}`)}/>\n    );\n\n    const subscriptionParam = this.props.subscription ? '/' + this.props.subscription.id : '';\n    const newOrRenewSubscription = ((!this.props.subscription || !isAdmin) && (\n      <OverflowMenuItem itemText={i18n.t('buttons.subscriptionRequest')}\n                        onClick={() => history.push(`/subscription/${this.props.project.id}${subscriptionParam}`)}/>\n    ));\n\n    const openTicket = this.props.subscription && (\n      <OverflowMenuItem itemText={i18n.t('buttons.openTicket')}\n                        onClick={() => history.push(`/ticket/${this.props.project.id}`)}/>\n    );\n\n    let viewAllTickets = (<></>);\n    const ticketingSystem = this.props.ticketingSystem;\n    if (this.props.subscription && ticketingSystem && ticketingSystem.url) {\n      const ticketsUrl = getAllTicketsUrl(ticketingSystem, this.props.project.systemId);\n      viewAllTickets = (\n        <OverflowMenuItem itemText={i18n.t('buttons.viewAllTickets')}\n                          onClick={() => window.open(ticketsUrl)}/>\n      );\n    }\n\n    const viewSubscription = this.props.subscription && (\n      <OverflowMenuItem itemText={i18n.t('buttons.view')}\n                        onClick={() => history.push(`/subscription-details/${this.props.subscription.id}`)}/>\n    );\n\n    const overflowModals = (\n      <>\n        {editProjectModal}\n        {managePartnersModal}\n      </>\n    );\n\n    return (\n      <>\n        <OverflowMenu flipped={true} menuOptionsClass='entando-customer-portal'>\n          {viewSubscription}\n          {editProject}\n          {newOrRenewSubscription}\n          {openTicket}\n          {viewAllTickets}\n          {manageSubscriptions}\n          {manageUsers}\n          {managePartners}\n          {deleteProject}\n        </OverflowMenu>\n        {overflowModals}\n      </>\n    );\n  }\n}\n\nexport default withKeycloak(withRouter(ProjectActionItems));\n","import {getDefaultOptions, request} from './helpers';\r\nimport moment from 'moment';\r\n\r\nconst resource = 'api/project-subscriptions';\r\n\r\nexport const formatStartDate = startDate => {\r\n  return String(new Date(startDate).toDateString());\r\n};\r\n\r\nexport const formatEndDate = (startDate, lengthInMonths) => {\r\n  const endDate = new Date(startDate).setMonth(new Date(startDate).getMonth() + lengthInMonths);\r\n  return String(new Date(endDate).toDateString());\r\n};\r\n\r\nexport const stripTime = date => {\r\n  return moment(date).format('MM/DD/YYYY');\r\n};\r\n\r\nexport const apiSubscriptionGet = async (serviceUrl, id) => {\r\n  const url = `${serviceUrl}/${resource}/${id}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\n// Project Subscription creation consists of an object containing a projectSubscription, an entandoVersionId, and a\r\n// project id, see SubscriptionCreationRequest.\r\n/**\r\n * Called to create a new project subscription\r\n *\r\n * @param {string} serviceUrl\r\n * @param {ProjectSubscriptionCreation} projectSubscriptionCreation\r\n * @returns\r\n */\r\nexport const apiProjectSubscriptionPost = async (serviceUrl, projectSubscriptionCreation) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n    body: projectSubscriptionCreation ? JSON.stringify(projectSubscriptionCreation) : null,\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiProjectSubscriptionPut = async (serviceUrl, projectSubscriptionCreation) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'PUT',\r\n    body: projectSubscriptionCreation ? JSON.stringify(projectSubscriptionCreation) : null,\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\n// Same format as {projectSubscriptionCreation}\r\nexport const apiRenewSubscription = async (serviceUrl, projectSubscriptionRenew) => {\r\n  const url = `${serviceUrl}/${resource}/renew`;\r\n\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'PUT',\r\n    body: projectSubscriptionRenew ? JSON.stringify(projectSubscriptionRenew) : null,\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n","import {Component} from 'react';\r\nimport {\r\n  DataTable,\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableHeader,\r\n  TableBody,\r\n  TableCell\r\n} from 'carbon-components-react';\r\nimport '../../index.scss';\r\nimport {apiDeleteProjectFromCustomer} from '../../api/customers';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport {Link} from 'react-router-dom';\r\nimport i18n from '../../i18n';\r\nimport {authenticationChanged, getActiveSubscription, isAuthenticated, isPortalAdminOrSupport} from '../../api/helpers';\r\nimport {apiCurrentTicketingSystemGet} from '../../api/ticketingsystem';\r\nimport ProjectActionItems from '../Admin/ProjectActionItems';\r\nimport {formatEndDate, formatStartDate} from '../../api/subscriptions';\r\nimport {apiProjectsGetByCustomer} from '../../api/projects';\r\nimport { apiTicketingSystemConfigResourceGet } from '../../api/manageFieldConfigurations';\r\nclass CustomerDataTable extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      projects: {},\r\n      ticketingSystem: {},\r\n      action: 'Edit',\r\n      showMenu: {},\r\n      productName: '',\r\n    };\r\n    if (this.props.productName && this.props.productName[0].name) {\r\n      this.initializeHeaderData();\r\n    }\r\n  }\r\n\r\n  async fetchData() {\r\n    if (isAuthenticated(this.props)) {\r\n      const {customer, serviceUrl} = this.props;\r\n      try {\r\n        let projects = {};\r\n        let ticketingSystem = {};\r\n        if (customer && customer.id) {\r\n          projects = (await apiProjectsGetByCustomer(serviceUrl, customer.id)).data;\r\n          ticketingSystem = await apiCurrentTicketingSystemGet(serviceUrl);\r\n          await apiTicketingSystemConfigResourceGet(serviceUrl).then(({ data }) => {\r\n            if (!this.props.productName || this.props.productName[0].name) {\r\n              this.setState({ productName: JSON.parse(data[0].productName)[0].name })\r\n              this.initializeHeaderData()\r\n            }\r\n          })\r\n        }\r\n        this.setState({\r\n          projects: projects,\r\n          ticketingSystem: ticketingSystem,\r\n        });\r\n      } catch (error) {\r\n        console.error('Error fetchData: ', error);\r\n      }\r\n    }\r\n    this.render();\r\n  }\r\n\r\n  initializeHeaderData() {\r\n    this.headerData = [\r\n      {\r\n        header: i18n.t('customerDashboard.projectName'),\r\n        key: 'projectName',\r\n      },\r\n      {\r\n        header: i18n.t('customerDashboard.partners'),\r\n        key: 'partners',\r\n      },\r\n      {\r\n        header: (this.props.productName && this.props.productName[0].name) ? `${this.props.productName[0].name} Version` : `${this.state.productName} Version`,\r\n        key: 'entandoVersion',\r\n      },\r\n      {\r\n        header: i18n.t('customerDashboard.status'),\r\n        key: 'status',\r\n      },\r\n      {\r\n        header: i18n.t('customerDashboard.startDate'),\r\n        key: 'startDate',\r\n      },\r\n      {\r\n        header: i18n.t('customerDashboard.endDate'),\r\n        key: 'endDate',\r\n      },\r\n      {\r\n        header: i18n.t('customerDetails.notes'),\r\n        key: 'notes',\r\n      },\r\n      {\r\n        header: i18n.t('customerDashboard.action'),\r\n        key: 'action',\r\n      },\r\n    ];\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (isAuthenticated(this.props)) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (authenticationChanged(this.props, prevProps)) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n\r\n  // fix warning: Can't perform a React state update on an unmounted component\r\n  componentWillUnmount() {\r\n    this.setState = (state, callback) => {\r\n      //no-op\r\n    };\r\n  }\r\n\r\n  updateProjectList = () => {\r\n    this.fetchData();\r\n  };\r\n\r\n  async deleteProject(id) {\r\n    if (isAuthenticated(this.props)) {\r\n      return await apiDeleteProjectFromCustomer(this.props.serviceUrl, this.props.customer.id, id);\r\n    }\r\n  }\r\n\r\n  handleDeleteProject = (e, id) => {\r\n    e.preventDefault();\r\n    if (window.confirm('Are you sure you want to delete this project?')) {\r\n      this.deleteProject(id)\r\n        .then(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.deleted'),\r\n            submitColour: '#24a148',\r\n          });\r\n          this.props.updateCustomerList();\r\n        })\r\n        .catch(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.error'),\r\n            submitColour: '#da1e28',\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.projects && (Object.keys(this.state.projects).length !== 0) && (\r\n          <DataTable rows={[{id: '1'}]} headers={this.headerData}>\r\n            {({rows, headers, getHeaderProps, getTableProps}) => (\r\n              <TableContainer description={i18n.t('customerDashboard.tableDesc')}>\r\n                <Table {...getTableProps()}>\r\n                  <TableHead>\r\n                    <TableRow key=\"headerRow\">\r\n                      {headers.map(header => {\r\n                        let result;\r\n                        if (header.header === i18n.t('customerDetails.notes')) {\r\n                          if (isPortalAdminOrSupport()) {\r\n                            result = <TableHeader {...getHeaderProps({header})}>{header.header}</TableHeader>;\r\n                          }\r\n                        } else {\r\n                          result = <TableHeader {...getHeaderProps({header})}>{header.header}</TableHeader>;\r\n                        }\r\n                        return result;\r\n                      })}\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {this.state.projects.map((project, index) => {\r\n                      const subscription = getActiveSubscription(project);\r\n                      if (!subscription) {\r\n                        return (\r\n                          <TableRow key={index}>\r\n                            <TableCell style={{fontWeight: 'bold'}}>{project.name}</TableCell>\r\n                            {project.partners.length !== 0 ? (\r\n                              <TableCell>\r\n                                {project.partners.map((partner, partnerIndex) => (\r\n                                  <div key={partnerIndex}>{partner.name}</div>\r\n                                ))}\r\n                              </TableCell>\r\n                            ) : (\r\n                              <TableCell>{i18n.t('userMessages.none')}</TableCell>\r\n                            )}\r\n                            <TableCell>{i18n.t('userMessages.none')}</TableCell>\r\n                            <TableCell>{i18n.t('userMessages.none')}</TableCell>\r\n                            <TableCell>{i18n.t('userMessages.none')}</TableCell>\r\n                            <TableCell>{i18n.t('userMessages.none')}</TableCell>\r\n                            {isPortalAdminOrSupport() ?\r\n                              <TableCell style={{width: '250px'}}>{project.notes}</TableCell> : null}\r\n                            <TableCell>\r\n                              <ProjectActionItems\r\n                                serviceUrl={this.props.serviceUrl}\r\n                                ticketingSystem={this.state.ticketingSystem}\r\n                                locale={this.props.locale}\r\n                                project={project}\r\n                                allProjects={this.state.projects}\r\n                                handleDeleteProject={this.handleDeleteProject}\r\n                                updateProjectList={this.updateProjectList}\r\n                              />\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        );\r\n                      } else {\r\n                        return (\r\n                          <TableRow key={index}>\r\n                            <TableCell>\r\n                              <Link to={`/subscription-details/${subscription.id}`}\r\n                                    style={{fontWeight: 'bold'}}>{project.name}</Link>\r\n                            </TableCell>\r\n                              {project.partners.length !== 0 ? (\r\n                                <TableCell>\r\n                                  {project.partners.map((partner, partnerIndex) => (\r\n                                    <div key={partnerIndex}>{partner.name}</div>\r\n                                  ))}\r\n                                </TableCell>\r\n                              ) : (\r\n                                <TableCell>{i18n.t('userMessages.none')}</TableCell>\r\n                              )}\r\n                              {subscription.entandoVersion ? (\r\n                                <TableCell>{subscription.entandoVersion.name}</TableCell>\r\n                              ) : (\r\n                                <TableCell>{i18n.t('userMessages.none')}</TableCell>\r\n                              )}\r\n                              <TableCell>{subscription.status}</TableCell>\r\n                              <TableCell>{formatStartDate(subscription.startDate)}</TableCell>\r\n                              <TableCell>{formatEndDate(subscription.startDate, subscription.lengthInMonths)}</TableCell>\r\n                              {isPortalAdminOrSupport() ?\r\n                                <TableCell style={{width: '250px'}}>{project.notes}</TableCell> : null}\r\n                              <TableCell>\r\n                                <ProjectActionItems\r\n                                  serviceUrl={this.props.serviceUrl}\r\n                                  ticketingSystem={this.state.ticketingSystem}\r\n                                  locale={this.props.locale}\r\n                                  subscription={subscription}\r\n                                  project={project}\r\n                                  allProjects={this.state.projects}\r\n                                  handleDeleteProject={this.handleDeleteProject}\r\n                                  updateProjectList={this.updateProjectList}\r\n                                />\r\n                              </TableCell>\r\n                          </TableRow>\r\n                        );\r\n                      }\r\n                    })}\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            )}\r\n          </DataTable>\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withKeycloak(CustomerDataTable);\r\n","import {Component} from 'react';\r\nimport i18n from '../../i18n';\r\nimport { Tile } from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\n\r\nclass CustomerDetails extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      customer: {},\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"customer-details\">\r\n        <Tile style={{margin: '2em 0', minHeight: '0', paddingBottom: '0'}}>\r\n          <div>\r\n            <strong>{i18n.t('customerDashboard.customerId')}</strong> {this.props.customer.id}\r\n          </div>\r\n          <div>\r\n            <strong>{i18n.t('customerDashboard.customerName')}</strong> {this.props.customer.name}\r\n          </div>\r\n        </Tile>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withKeycloak(CustomerDetails);\r\n","import React from 'react';\r\nimport i18n from '../../i18n';\r\n\r\nconst ButtonBody = ({label, icon}) => {\r\n  return (\r\n    <>\r\n      {i18n.t(label)}\r\n      {icon}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ButtonBody;\r\n","import React from 'react';\r\n\r\nexport const IconDelete = (\r\n  <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <path d=\"M7 6H6V12H7V6Z\" fill=\"#0F62FE\"/>\r\n    <path d=\"M10 6H9V12H10V6Z\" fill=\"#0F62FE\"/>\r\n    <path\r\n      d=\"M2 3V4H3V14C3 14.2652 3.10536 14.5196 3.29289 14.7071C3.48043 14.8946 3.73478 15 4 15H12C12.2652 15 12.5196 14.8946 12.7071 14.7071C12.8946 14.5196 13 14.2652 13 14V4H14V3H2ZM4 14V4H12V14H4Z\"\r\n      fill=\"#0F62FE\"/>\r\n    <path d=\"M10 1H6V2H10V1Z\" fill=\"#0F62FE\"/>\r\n  </svg>\r\n);\r\n\r\nexport const IconDetails = (\r\n  <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <path\r\n      d=\"M15.47 7.83C14.8819 6.30882 13.861 4.99331 12.5334 4.04604C11.2058 3.09878 9.62971 2.56129 7.99997 2.5C6.37023 2.56129 4.79416 3.09878 3.46657 4.04604C2.13898 4.99331 1.11805 6.30882 0.52997 7.83C0.490254 7.93985 0.490254 8.06015 0.52997 8.17C1.11805 9.69118 2.13898 11.0067 3.46657 11.954C4.79416 12.9012 6.37023 13.4387 7.99997 13.5C9.62971 13.4387 11.2058 12.9012 12.5334 11.954C13.861 11.0067 14.8819 9.69118 15.47 8.17C15.5097 8.06015 15.5097 7.93985 15.47 7.83ZM7.99997 12.5C5.34997 12.5 2.54997 10.535 1.53497 8C2.54997 5.465 5.34997 3.5 7.99997 3.5C10.65 3.5 13.45 5.465 14.465 8C13.45 10.535 10.65 12.5 7.99997 12.5Z\"\r\n      fill=\"#0F62FE\"/>\r\n    <path\r\n      d=\"M8 5C7.40666 5 6.82664 5.17595 6.33329 5.50559C5.83994 5.83524 5.45543 6.30377 5.22836 6.85195C5.0013 7.40013 4.94189 8.00333 5.05765 8.58527C5.1734 9.16721 5.45912 9.70176 5.87868 10.1213C6.29824 10.5409 6.83279 10.8266 7.41473 10.9424C7.99667 11.0581 8.59987 10.9987 9.14805 10.7716C9.69623 10.5446 10.1648 10.1601 10.4944 9.66671C10.8241 9.17336 11 8.59334 11 8C11 7.20435 10.6839 6.44129 10.1213 5.87868C9.55871 5.31607 8.79565 5 8 5ZM8 10C7.60444 10 7.21776 9.8827 6.88886 9.66294C6.55996 9.44318 6.30362 9.13082 6.15224 8.76537C6.00087 8.39991 5.96126 7.99778 6.03843 7.60982C6.1156 7.22186 6.30608 6.86549 6.58579 6.58579C6.86549 6.30608 7.22186 6.1156 7.60982 6.03843C7.99778 5.96126 8.39992 6.00087 8.76537 6.15224C9.13082 6.30362 9.44318 6.55996 9.66294 6.88886C9.8827 7.21776 10 7.60444 10 8C10 8.53043 9.78929 9.03914 9.41421 9.41421C9.03914 9.78929 8.53043 10 8 10Z\"\r\n      fill=\"#0F62FE\"/>\r\n  </svg>\r\n);\r\n\r\nexport const IconEdit = (\r\n  <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <path d=\"M15 13H1V14H15V13Z\" fill=\"#0F62FE\"/>\r\n    <path\r\n      d=\"M12.7 4.5C13.1 4.1 13.1 3.5 12.7 3.1L10.9 1.3C10.5 0.9 9.9 0.9 9.5 1.3L2 8.8V12H5.2L12.7 4.5ZM10.2 2L12 3.8L10.5 5.3L8.7 3.5L10.2 2ZM3 11V9.2L8 4.2L9.8 6L4.8 11H3Z\"\r\n      fill=\"#0F62FE\"/>\r\n  </svg>\r\n);\r\n\r\nexport const IconPlus = (\r\n  <svg width=\"15\" height=\"16\" viewBox=\"0 0 15 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <path fillRule=\"evenodd\" clipRule=\"evenodd\"\r\n          d=\"M7.96875 7.5V3.5H7.03125V7.5H3.28125V8.5H7.03125V12.5H7.96875V8.5H11.7188V7.5H7.96875Z\" fill=\"#002F87\"/>\r\n    <mask id=\"mask0\" mask-type=\"alpha\" maskUnits=\"userSpaceOnUse\" x=\"3\" y=\"3\" width=\"9\" height=\"10\">\r\n      <path fillRule=\"evenodd\" clipRule=\"evenodd\"\r\n            d=\"M7.96875 7.5V3.5H7.03125V7.5H3.28125V8.5H7.03125V12.5H7.96875V8.5H11.7188V7.5H7.96875Z\" fill=\"white\"/>\r\n    </mask>\r\n    <g mask=\"url(#mask0)\">\r\n    </g>\r\n  </svg>\r\n);\r\n","import React, {Component} from 'react';\r\nimport i18n from '../../i18n';\r\nimport {ModalWrapper, Form, TextInput, TextArea} from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport {apiCustomerGet, apiCustomerPut} from '../../api/customers';\r\nimport {authenticationChanged, isAuthenticated} from '../../api/helpers';\r\nimport ButtonBody from '../Buttons/ButtonBody';\r\nimport {IconEdit} from '../../helpers/icons'\r\n\r\nclass EditCustomerModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      name: '',\r\n      customerNumber: '',\r\n      contactName: '',\r\n      contactPhone: '',\r\n      contactEmail: '',\r\n      notes: '',\r\n      invalid: {},\r\n      modalId: '',\r\n      buttonId: '',\r\n      submitMsg: '',\r\n      submitColour: 'black',\r\n    };\r\n  }\r\n\r\n  handleValidation() {\r\n    let invalid = {};\r\n    let formIsValid = true;\r\n\r\n    //name\r\n    if (this.state.name === '') {\r\n      formIsValid = false;\r\n      invalid['name'] = true;\r\n    }\r\n\r\n    //customerNumber\r\n    if (this.state.customerNumber === '') {\r\n      formIsValid = false;\r\n      invalid['customerNumber'] = true;\r\n    }\r\n\r\n    this.setState({ invalid: invalid });\r\n    return formIsValid;\r\n  }\r\n\r\n  handleChanges = e => {\r\n    const input = e.target;\r\n    const name = input.name;\r\n    const value = input.value;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  async updateCustomer(customer) {\r\n    if (isAuthenticated(this.props)) {\r\n      return await apiCustomerPut(this.props.serviceUrl, customer);\r\n    }\r\n  }\r\n\r\n  getCustomerDetails = customerId => {\r\n    this.getCustomer(customerId);\r\n  };\r\n\r\n  async getCustomer(customerId) {\r\n    if (isAuthenticated(this.props)) {\r\n      const customer = (await apiCustomerGet(this.props.serviceUrl, customerId)).data;\r\n      this.setState({\r\n        name: customer.name,\r\n        customerNumber: customer.customerNumber,\r\n        contactName: customer.contactName,\r\n        contactPhone: customer.contactPhone,\r\n        contactEmail: customer.contactEmail,\r\n        notes: customer.notes,\r\n        modalId: 'modal-form-customer-edit-' + customer.id,\r\n        buttonId: 'edit-customer-button-' + customer.id,\r\n      });\r\n    }\r\n  }\r\n\r\n  handleFormSubmit = () => {\r\n    const formIsValid = this.handleValidation();\r\n\r\n    if (formIsValid) {\r\n      const customer = {\r\n        id: this.props.customer.id,\r\n        name: this.state.name,\r\n        customerNumber: this.state.customerNumber,\r\n        contactName: this.state.contactName,\r\n        contactPhone: this.state.contactPhone,\r\n        contactEmail: this.state.contactEmail,\r\n        notes: this.state.notes,\r\n      };\r\n      this.updateCustomer(customer)\r\n        .then(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.updated'),\r\n            submitColour: '#24a148',\r\n          });\r\n          this.props.updateCustomerList();\r\n          this.getCustomerDetails(this.props.customer.id);\r\n        })\r\n        .catch(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.error'),\r\n            submitColour: '#da1e28',\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  clearValues = () => {\r\n    const customerModalElement = document.querySelector('#' + this.state.modalId);\r\n    if (!customerModalElement.className.includes('is-visible')) {\r\n      this.setState({\r\n        name: this.props.customer.name,\r\n        customerNumber: this.props.customer.customerNumber,\r\n        contactName: this.props.customer.contactName,\r\n        contactPhone: this.props.customer.contactPhone,\r\n        contactEmail: this.props.customer.contactEmail,\r\n        notes: this.props.customer.notes,\r\n        invalid: {},\r\n      });\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (isAuthenticated(this.props)) {\r\n      if (this.props.customerId) {\r\n        this.getCustomerDetails(this.props.customerId);\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (authenticationChanged(this.props, prevProps)) {\r\n      this.getCustomerDetails(this.props.customerId);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const modalConfirmation = (\r\n      <div className=\"bx--modal-header\">\r\n        <p style={{color: this.state.submitColour}}>{this.state.submitMsg}</p>\r\n      </div>\r\n    );\r\n    const modalId = this.state.modalId;\r\n    const buttonClassName = 'bx--btn bx--btn--ghost edit-customer-button-' + this.props.customerId;\r\n    return (\r\n      modalId && (\r\n        <ModalWrapper\r\n          buttonTriggerText={<ButtonBody label='buttons.edit' icon={IconEdit}/>}\r\n          modalHeading={i18n.t('adminDashboard.editCustomer.title')}\r\n          buttonTriggerClassName={buttonClassName}\r\n          className=\"modal-form\"\r\n          id={modalId}\r\n          handleSubmit={this.handleFormSubmit}\r\n          primaryButtonText={i18n.t('modalText.save')}\r\n          secondaryButtonText={i18n.t('modalText.cancel')}\r\n        >\r\n          {modalConfirmation}\r\n          <div className=\"form-container\">\r\n            <Form onSubmit={this.handleFormSubmit} id={'form-' + modalId}>\r\n              <TextInput\r\n                id={'name' + modalId}\r\n                name=\"name\"\r\n                labelText={i18n.t('adminDashboard.addCustomer.customerName') + ' *'}\r\n                value={this.state.name}\r\n                onChange={this.handleChanges}\r\n                invalidText={i18n.t('validation.invalid.required')}\r\n                invalid={this.state.invalid['name']}\r\n              />\r\n              <TextInput\r\n                id={'customerNumber' + modalId}\r\n                name=\"customerNumber\"\r\n                labelText={i18n.t('adminDashboard.addCustomer.customerNumber') + ' *'}\r\n                value={this.state.customerNumber}\r\n                onChange={this.handleChanges}\r\n                invalidText={i18n.t('validation.invalid.required')}\r\n                invalid={this.state.invalid['customerNumber']}\r\n              />\r\n              <TextInput\r\n                id={'contactName' + modalId}\r\n                name=\"contactName\"\r\n                labelText={i18n.t('adminDashboard.addCustomer.contactName')}\r\n                value={this.state.contactName}\r\n                onChange={this.handleChanges}\r\n              />\r\n              <TextInput\r\n                id={'contactPhone' + modalId}\r\n                name=\"contactPhone\"\r\n                labelText={i18n.t('adminDashboard.addCustomer.contactPhone')}\r\n                value={this.state.contactPhone}\r\n                onChange={this.handleChanges}\r\n              />\r\n              <TextInput\r\n                id={'contactEmail' + modalId}\r\n                name=\"contactEmail\"\r\n                labelText={i18n.t('adminDashboard.addCustomer.contactEmail')}\r\n                value={this.state.contactEmail}\r\n                onChange={this.handleChanges}\r\n                invalidText={i18n.t('validation.invalid.email')}\r\n                invalid={this.state.invalid['contactEmail']}\r\n              />\r\n              <TextArea\r\n                name=\"notes\"\r\n                labelText={i18n.t('adminDashboard.addCustomer.notes')}\r\n                value={this.state.notes}\r\n                onChange={this.handleChanges}\r\n              />\r\n            </Form>\r\n          </div>\r\n          {modalConfirmation}\r\n        </ModalWrapper>\r\n      )\r\n    );\r\n  }\r\n}\r\n\r\nexport default withKeycloak(EditCustomerModal);\r\n","import React, {Component} from 'react';\r\nimport i18n from '../../i18n';\r\nimport {ModalWrapper, Form, TextInput, TextArea} from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport {apiAddProjectToCustomer} from '../../api/customers';\r\nimport {apiProjectPost, apiProjectsGet} from '../../api/projects';\r\nimport {authenticationChanged, isAuthenticated} from \"../../api/helpers\";\r\nimport ButtonBody from '../Buttons/ButtonBody';\r\nimport {IconPlus} from '../../helpers/icons';\r\n\r\nclass AddProjectModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      modalId: 'modal-form-project-' + props.customerId,\r\n      projects: {},\r\n      name: '',\r\n      description: '',\r\n      systemId: '',\r\n      contactName: '',\r\n      contactPhone: '',\r\n      contactEmail: '',\r\n      notes: '',\r\n      invalid: {},\r\n      submitMsg: '',\r\n      submitColour: 'black',\r\n    };\r\n  }\r\n\r\n  handleValidation() {\r\n    let invalid = {};\r\n    let formIsValid = true;\r\n\r\n    //name\r\n    if (this.state.name === '') {\r\n      formIsValid = false;\r\n      invalid['name'] = true;\r\n    }\r\n\r\n    //description\r\n    if (this.state.description === '') {\r\n      formIsValid = false;\r\n      invalid['description'] = true;\r\n    }\r\n\r\n    this.setState({ invalid: invalid });\r\n    return formIsValid;\r\n  }\r\n\r\n  //TODO: refactor to make this a validation call instead of loading all projects ahead of time\r\n  async getAllProjects() {\r\n    let projects = {}\r\n    try {\r\n      projects = await apiProjectsGet(this.props.serviceUrl);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n    this.setState({\r\n      projects: projects.data ? projects.data : {},\r\n    });\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (authenticationChanged(this.props, prevProps)) {\r\n      this.getAllProjects();\r\n    }\r\n  }\r\n\r\n  handleChanges = e => {\r\n    const input = e.target;\r\n    const name = input.name;\r\n    const value = input.value;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  async projectPost(project) {\r\n    if (isAuthenticated(this.props)) {\r\n      const result = await apiProjectPost(this.props.serviceUrl, project);\r\n      return await apiAddProjectToCustomer(this.props.serviceUrl, this.props.customer.id, result.data.id);\r\n    }\r\n  }\r\n\r\n  handleFormSubmit = () => {\r\n    const formIsValid = this.handleValidation();\r\n\r\n    if (formIsValid) {\r\n      const project = {\r\n        name: this.state.name,\r\n        description: this.state.description,\r\n        systemId: this.state.systemId,\r\n        contactName: this.state.contactName,\r\n        contactPhone: this.state.contactPhone,\r\n        contactEmail: this.state.contactEmail,\r\n        notes: this.state.notes,\r\n      };\r\n      for (var i = 0; i < this.state.projects.length; i++) {\r\n        if (project.systemId === this.state.projects[i].systemId && project.systemId.trim() !== '') {\r\n          window.alert('That system id is already in use in another project');\r\n          return;\r\n        }\r\n      }\r\n      this.projectPost(project)\r\n        .then(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.added'),\r\n            submitColour: '#24a148',\r\n          });\r\n          this.props.updateCustomerList();\r\n          this.getAllProjects();\r\n        })\r\n        .catch(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.error'),\r\n            submitColour: '#da1e28',\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  clearValues = () => {\r\n    const projectModalElement = document.querySelector('#' + this.state.modalId);\r\n    if (!projectModalElement.className.includes('is-visible')) {\r\n      this.setState({\r\n        name: '',\r\n        description: '',\r\n        systemId: '',\r\n        contactName: '',\r\n        contactPhone: '',\r\n        contactEmail: '',\r\n        notes: '',\r\n        invalid: {},\r\n      });\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getAllProjects();\r\n\r\n    const modalOpenButton = document.querySelector('.add-project-button');\r\n    modalOpenButton.addEventListener('click', this.clearValues, false);\r\n  }\r\n\r\n  render() {\r\n    const modalConfirmation = (\r\n      <div className=\"bx--modal-header\">\r\n        <p style={{color: this.state.submitColour}}>{this.state.submitMsg}</p>\r\n      </div>\r\n    );\r\n    const modalId = this.state.modalId;\r\n    return (\r\n      <ModalWrapper\r\n        buttonTriggerText={<ButtonBody label='buttons.addProject' icon={IconPlus}/>}\r\n        modalHeading={i18n.t('adminDashboard.addProject.title')}\r\n        buttonTriggerClassName=\"bx--btn bx--btn--ghost add-project-button\"\r\n        className=\"modal-form\"\r\n        id={modalId}\r\n        handleSubmit={this.handleFormSubmit}\r\n        primaryButtonText={i18n.t('modalText.save')}\r\n        secondaryButtonText={i18n.t('modalText.cancel')}\r\n      >\r\n        {modalConfirmation}\r\n        <div className=\"form-container\">\r\n          <Form onSubmit={this.handleFormSubmit}>\r\n            <div>\r\n              <span>{i18n.t('adminDashboard.addCustomer.customerName')}:</span> {this.props.customer.name}\r\n            </div>\r\n            <TextInput\r\n              id={'name' + modalId}\r\n              name=\"name\"\r\n              labelText={i18n.t('adminDashboard.addProject.projectName') + ' *'}\r\n              value={this.state.name}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.required')}\r\n              invalid={this.state.invalid['name']}\r\n            />\r\n            <TextInput\r\n              id={'description' + modalId}\r\n              name=\"description\"\r\n              labelText={i18n.t('adminDashboard.addProject.projectDesc') + ' *'}\r\n              value={this.state.description}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.required')}\r\n              invalid={this.state.invalid['description']}\r\n            />\r\n            <TextInput\r\n              id={'systemId' + modalId}\r\n              name=\"systemId\"\r\n              labelText={i18n.t('adminDashboard.addProject.systemId')}\r\n              value={this.state.systemId}\r\n              onChange={this.handleChanges}\r\n            />\r\n            <TextInput\r\n              id={'contactName' + modalId}\r\n              name=\"contactName\"\r\n              labelText={i18n.t('adminDashboard.addProject.contactName')}\r\n              value={this.state.contactName}\r\n              onChange={this.handleChanges}\r\n            />\r\n            <TextInput\r\n              id={'contactPhone' + modalId}\r\n              name=\"contactPhone\"\r\n              labelText={i18n.t('adminDashboard.addProject.contactPhone')}\r\n              value={this.state.contactPhone}\r\n              onChange={this.handleChanges}\r\n            />\r\n            <TextInput\r\n              id={'contactEmail' + modalId}\r\n              name=\"contactEmail\"\r\n              labelText={i18n.t('adminDashboard.addProject.contactEmail')}\r\n              value={this.state.contactEmail}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.email')}\r\n              invalid={this.state.invalid['contactEmail']}\r\n            />\r\n            <TextArea\r\n              id={'notes' + modalId}\r\n              name=\"notes\"\r\n              labelText={i18n.t('adminDashboard.addProject.notes')}\r\n              value={this.state.notes}\r\n              onChange={this.handleChanges}\r\n            />\r\n          </Form>\r\n        </div>\r\n        {modalConfirmation}\r\n      </ModalWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withKeycloak(AddProjectModal);\r\n","import React from 'react';\r\nimport {Button} from 'carbon-components-react';\r\nimport ButtonBody from './ButtonBody';\r\n\r\nconst GhostButton = ({label, icon, onClick}) => {\r\n  return (\r\n    <Button kind=\"ghost\" onClick={onClick}>\r\n      <ButtonBody label={label} icon={icon}/>\r\n    </Button>\r\n  );\r\n}\r\n\r\nexport default GhostButton;\r\n","import {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {AccordionItem} from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport {apiCustomerGet, apiCustomerDelete} from '../../api/customers';\r\nimport CustomerDataTable from './CustomerDataTable';\r\nimport CustomerDetails from './CustomerDetails';\r\nimport {\r\n  isPortalAdminOrSupport,\r\n  isPortalAdmin,\r\n  isPortalCustomer,\r\n  isAuthenticated,\r\n  authenticationChanged\r\n} from '../../api/helpers';\r\nimport EditCustomerModal from '../Admin/EditCustomerModal';\r\nimport AddProjectModal from '../Admin/AddProjectModal';\r\nimport GhostButton from '../Buttons/GhostButton';\r\nimport {IconDelete, IconDetails} from '../../helpers/icons';\r\n\r\nclass CustomerAccordian extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      projects: {},\r\n      customer: {},\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (isAuthenticated(this.props)) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (authenticationChanged(this.props, prevProps)) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n\r\n  async fetchData() {\r\n    const customerId = this.props.customerId;\r\n    try {\r\n      const customer = await apiCustomerGet(this.props.serviceUrl, customerId);\r\n      this.setState({\r\n        customer: customer.data,\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  async deleteCustomer() {\r\n    return await apiCustomerDelete(this.props.serviceUrl, this.state.customer.id);\r\n  }\r\n\r\n  handleDelete = () => {\r\n    if (window.confirm('Are you sure you want to delete this customer?')) {\r\n      this.deleteCustomer().then(() => {\r\n        this.props.updateCustomerList();\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div>\r\n          {isPortalCustomer() && <CustomerDetails serviceUrl={this.props.serviceUrl} customer={this.state.customer}/>}\r\n          <AccordionItem title={this.props.title} open={this.props.accordionOpened}>\r\n            <div style={{display: 'flex'}}>\r\n              {isPortalAdminOrSupport() && (\r\n                <Link style={{textDecoration: 'none'}} to={`/customer-details/${this.state.customer.id}`}>\r\n                  <GhostButton label='buttons.viewDetails' icon={IconDetails}/>\r\n                </Link>\r\n              )}\r\n              {isPortalAdmin() && (\r\n                <div style={{display: 'flex'}}>\r\n                  <EditCustomerModal\r\n                    serviceUrl={this.props.serviceUrl}\r\n                    customer={this.state.customer}\r\n                    key={this.state.customer.id}\r\n                    updateCustomerList={this.props.updateCustomerList}\r\n                    customerId={this.state.customer.id}\r\n                  />\r\n                  <AddProjectModal serviceUrl={this.props.serviceUrl}\r\n                                   customerId={this.props.customerId}\r\n                                   customer={this.state.customer}\r\n                                   updateCustomerList={this.props.updateCustomerList}/>\r\n\r\n                  <GhostButton label='buttons.delete' icon={IconDelete} onClick={this.handleDelete}/>\r\n                </div>\r\n              )}\r\n            </div>\r\n            <CustomerDataTable\r\n              key={new Date().getTime()}\r\n              serviceUrl={this.props.serviceUrl}\r\n              customer={this.state.customer}\r\n              locale={this.props.locale}\r\n              updateCustomerList={this.props.updateCustomerList}\r\n              productName={(this.props.ticketSystemConfig && this.props.ticketSystemConfig.productName) ? JSON.parse(this.props.ticketSystemConfig.productName) : ''}\r\n            />\r\n          </AccordionItem>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withKeycloak(CustomerAccordian);\r\n","import React from 'react';\r\nimport i18n from '../../i18n';\r\nimport {Accordion, InlineLoading, PaginationNav, Search, Tile} from 'carbon-components-react';\r\nimport AddCustomerModal from './AddCustomerModal';\r\nimport AddPartnerModal from './AddPartnerModal';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport {apiCustomersGet} from '../../api/customers';\r\nimport CustomerAccordian from '../Customer/CustomerAccordian';\r\nimport {\r\n  authenticationChanged,\r\n  isPortalAdmin,\r\n  isPortalSupport,\r\n  isPortalPartner,\r\n  isPortalUser,\r\n  isAuthenticated,\r\n} from '../../api/helpers';\r\nimport { apiTicketingSystemConfigResourceGet } from '../../api/manageFieldConfigurations';\r\n\r\nclass AdminDashboard extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      customers: {},\r\n      role: '',\r\n      filteredCustomers: {},\r\n      currentPage: 0,\r\n      test: '',\r\n      loading: true,\r\n      ticketSystemConfig: {},\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchData();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (authenticationChanged(this.props, prevProps)) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n\r\n  async fetchData() {\r\n    if (isAuthenticated(this.props)) {\r\n      let customers = {};\r\n      try {\r\n        customers = await apiCustomersGet(this.props.serviceUrl);\r\n        const { data: ticketSystemConfig } = await apiTicketingSystemConfigResourceGet(this.props.serviceUrl);\r\n        this.setState({ ticketSystemConfig: ticketSystemConfig[0] })\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n\r\n      this.setState({\r\n        customers: customers.data ? customers.data : {},\r\n        filteredCustomers: customers.data ? customers.data : {},\r\n        loading: false\r\n      });\r\n    }\r\n  }\r\n\r\n  handleSearch = event => {\r\n    if (event.key === 'Enter') {\r\n      //Note: should refactor this to perform filtering in db\r\n      const newFilteredState = this.state.customers.filter(customer =>\r\n        customer.name.toLowerCase().includes(event.target.value.toLowerCase())\r\n      );\r\n      this.setState({\r\n        filteredCustomers: newFilteredState,\r\n        currentPage: 0,\r\n      });\r\n    } else {\r\n      if (event.target.value === '' || event.target.value === undefined) {\r\n        this.setState({\r\n          filteredCustomers: this.state.customers,\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  updateCustomerList = () => {\r\n    this.fetchData();\r\n  };\r\n\r\n  render() {\r\n    var numberOfPages = 1;\r\n    if (Object.keys(this.state.filteredCustomers).length !== 0) {\r\n      numberOfPages = Math.ceil(this.state.filteredCustomers.length / 5);\r\n    } else {\r\n      numberOfPages = 1;\r\n    }\r\n\r\n    const props = () => ({\r\n      loop: Boolean(false),\r\n      page: Number(this.state.currentPage),\r\n      totalItems: Number(numberOfPages),\r\n      itemsShown: Number(1),\r\n      onChange: event => this.setState({ currentPage: event }),\r\n    });\r\n    const customerCount = Object.keys(this.state.customers).length;\r\n\r\n    return (\r\n      <div className=\"admin-dashboard\">\r\n        {isPortalAdmin() || isPortalSupport() || isPortalPartner() ? (\r\n          <Tile>\r\n            <p className=\"title\">{i18n.t('adminDashboard.allCustomers')}</p>\r\n            <div className=\"bx--row\">\r\n              <div className=\"bx--col\">\r\n                <Search\r\n                  onChange={this.handleSearch}\r\n                  id=\"search\"\r\n                  placeholder={i18n.t('adminDashboard.searchText')}\r\n                  labelText={i18n.t('adminDashboard.searchLabel')}\r\n                  onKeyPress={this.handleSearch}\r\n                />\r\n              </div>\r\n              {isPortalAdmin() ? (\r\n                <div className=\"bx--col\">\r\n                  <div>\r\n                    <AddPartnerModal serviceUrl={this.props.serviceUrl} updateCustomerList={this.updateCustomerList}/>\r\n                    <AddCustomerModal serviceUrl={this.props.serviceUrl} updateCustomerList={this.updateCustomerList}/>\r\n                  </div>\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n          </Tile>\r\n        ) : null}\r\n\r\n        {this.state.loading && <InlineLoading/>}\r\n        {!this.state.loading && (\r\n          <div className=\"form-container\">\r\n            <Accordion>\r\n              {(customerCount !== 0)\r\n                ? this.state.filteredCustomers.map((customer, index) => {\r\n                  //Pagination for Admin and Support roles (5 items per page)\r\n                  //Note: eventually this should be pushed down into paginated microservice calls\r\n                  var indexOfLastItem = (this.state.currentPage + 1) * 5 - 1;\r\n                  var firstIndexOfCurrentPage = this.state.currentPage * 5;\r\n                  var accordionOpened = this.state.customers.length === 1;\r\n\r\n                  if (isPortalUser()) {\r\n                    if (index >= firstIndexOfCurrentPage && index <= indexOfLastItem) {\r\n                      return (\r\n                        <CustomerAccordian\r\n                          key={customer.id}\r\n                          serviceUrl={this.props.serviceUrl}\r\n                          customerId={customer.id}\r\n                          title={customer.name}\r\n                          updateCustomerList={this.updateCustomerList}\r\n                          locale={this.props.locale}\r\n                          accordionOpened={accordionOpened}\r\n                          ticketSystemConfig={this.state.ticketSystemConfig}\r\n                        />\r\n                      );\r\n                    } else {\r\n                      return null;\r\n                    }\r\n                  } else {\r\n                    return null;\r\n                  }\r\n                })\r\n                : null}\r\n            </Accordion>\r\n            {customerCount > 1 && (\r\n              <PaginationNav {...props()} className=\"pagination-right\"/>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withKeycloak(AdminDashboard);\r\n","import { getDefaultOptions, request, getUrl } from './helpers';\r\n\r\nconst resource = 'api/tickets';\r\n\r\nexport const apiTicketDelete = async (serviceUrl, id) => {\r\n  const url = `${serviceUrl}/${resource}/${id}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiTicketsGet = async serviceUrl => {\r\n  const url = getUrl(`${serviceUrl}/${resource}`);\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiTicketPost = async (serviceUrl, ticket) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n    body: ticket ? JSON.stringify(ticket) : null,\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nconst jiraResource = 'api/tickets/ticketingsystem';\r\n\r\nexport const apiJiraTicketsGet = async (serviceUrl, projectId) => {\r\n  const url = `${serviceUrl}/${jiraResource}/${projectId}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiJiraTicketPost = async (serviceUrl, projectId, ticket) => {\r\n  const url = `${serviceUrl}/${jiraResource}/${projectId}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n    body: ticket ? JSON.stringify(ticket) : null,\r\n  };\r\n  return request(url, options);\r\n};\r\n","import React, { Component } from 'react';\nimport {\n  DataTable,\n  InlineLoading,\n  TableContainer,\n  Table,\n  TableHead,\n  TableRow,\n  TableHeader,\n  TableBody,\n  TableCell,\n  PaginationNav,\n} from 'carbon-components-react';\nimport {apiJiraTicketsGet} from '../../api/tickets';\nimport {apiCurrentTicketingSystemGet, getAllTicketsUrl, getTicketUrl} from '../../api/ticketingsystem';\nimport withKeycloak from '../../auth/withKeycloak';\nimport {apiProjectGet} from '../../api/projects';\nimport {authenticationChanged, isAuthenticated, isPortalUser} from '../../api/helpers';\nimport i18n from '../../i18n';\nimport {Link} from 'react-router-dom';\nimport GhostButton from '../Buttons/GhostButton';\nimport {IconDetails, IconPlus} from '../../helpers/icons';\n\nclass TicketList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tickets: {},\n      project: {},\n      ticketingSystem: {},\n      currentPage: 0,\n      loading: true\n    };\n    this.headerData = [\n      {\n        header: i18n.t('ticketDetails.issue'),\n        key: 'issue',\n      },\n      {\n        header: i18n.t('ticketDetails.summary'),\n        key: 'summary',\n      },\n      {\n        header: i18n.t('ticketDetails.status'),\n        key: 'status',\n      },\n      {\n        header: i18n.t('ticketDetails.type'),\n        key: 'type',\n      },\n      {\n        header: i18n.t('ticketDetails.priority'),\n        key: 'priority',\n      },\n      {\n        header: i18n.t('ticketDetails.created'),\n        key: 'created',\n      },\n      {\n        header: i18n.t('ticketDetails.updated'),\n        key: 'updated',\n      },\n      {\n        header: i18n.t('ticketDetails.link'),\n        key: 'link',\n      },\n    ];\n  }\n\n  async fetchData() {\n    if (isPortalUser()) {\n      try {\n        const project = (await apiProjectGet(this.props.serviceUrl, this.props.projectId)).data;\n        const ticketingSystem = await apiCurrentTicketingSystemGet(this.props.serviceUrl);\n        const tickets = await apiJiraTicketsGet(this.props.serviceUrl, project.id);\n        this.setState({\n          tickets: tickets,\n          project: project,\n          ticketingSystem: ticketingSystem,\n          loading: false\n        });\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  }\n\n  componentDidMount() {\n    if (isAuthenticated(this.props)) {\n      this.fetchData();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (authenticationChanged(this.props, prevProps)) {\n      this.fetchData();\n    }\n  }\n\n  render() {\n    var numberOfPages = 1;\n    if (Object.keys(this.state.tickets).length !== 0) {\n      numberOfPages = Math.ceil(this.state.tickets.data.length / 10);\n    }\n\n    const paginationProps = () => ({\n      loop: Boolean(false),\n      page: Number(this.state.currentPage),\n      totalItems: Number(numberOfPages),\n      itemsShown: Number(1),\n      onChange: event => this.setState({currentPage: event}),\n    });\n    const ticketCount = Object.keys(this.state.tickets).length;\n\n    return (\n      <div className=\"bx--tile\">\n        {this.state.project.id && (\n          <div>\n            {/*View All Ticket*/}\n            <a\n              href={getAllTicketsUrl(this.state.ticketingSystem, this.state.project.systemId)}\n              style={{textDecoration: 'none'}}\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              <GhostButton label='buttons.viewAllTickets' icon={IconDetails}/>\n            </a>\n            {/*Open Ticket*/}\n            <Link style={{textDecoration: 'none'}} to={`/ticket/${this.state.project.id}`}>\n              <GhostButton label='buttons.openTicket' icon={IconPlus}/>\n            </Link>\n          </div>\n        )}\n        {this.state.loading && <InlineLoading/>}\n        {!this.state.loading && (\n          <>\n            <DataTable rows={[{id: '1'}]} headers={this.headerData}>\n              {({rows, headers, getHeaderProps, getTableProps}) => (\n                <TableContainer title={i18n.t('ticketDetails.listOfTickets')}>\n                  <Table {...getTableProps()}>\n                    <TableHead>\n                      <TableRow>\n                        {headers.map(header => (\n                          <TableHeader {...getHeaderProps({header})}>{header.header}</TableHeader>\n                        ))}\n                      </TableRow>\n                    </TableHead>\n                    <TableBody>\n                      {ticketCount !== 0 ? (\n                        this.state.tickets.data.map((ticket, index) => {\n                          const indexOfLastItem = (this.state.currentPage + 1) * 10 - 1;\n                          const firstIndexOfCurrentPage = this.state.currentPage * 10;\n                          const ticketUrl = getTicketUrl(this.state.ticketingSystem, ticket.systemId);\n\n                          if (index >= firstIndexOfCurrentPage && index <= indexOfLastItem) {\n                            return (\n                              <TableRow key={ticket.id}>\n                                <TableCell>\n                                  <a href={ticketUrl} target=\"_blank\" rel=\"noreferrer\">\n                                    {ticket.systemId}\n                                  </a>\n                                </TableCell>\n                                <TableCell>{ticket.summary}</TableCell>\n                                <TableCell>{ticket.status}</TableCell>\n                                <TableCell>{ticket.type}</TableCell>\n                                <TableCell>{ticket.priority}</TableCell>\n                                <TableCell>{new Date(ticket.createDate).toDateString()}</TableCell>\n                                <TableCell>{new Date(ticket.updateDate).toDateString()}</TableCell>\n                                <TableCell>\n                                  <a href={ticketUrl} target=\"_blank\" rel=\"noreferrer\">\n                                    {i18n.t('ticketDetails.viewTicket')}\n                                  </a>\n                                </TableCell>\n                              </TableRow>\n                            );\n                          } else {\n                            return null;\n                          }\n                        })\n                      ) : (\n                        <TableRow/>\n                      )}\n                    </TableBody>\n                  </Table>\n                </TableContainer>\n              )}\n            </DataTable>\n            {ticketCount > 10 && (\n              <PaginationNav {...paginationProps()} className=\"pagination-right\"/>\n            )}\n          </>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default withKeycloak(TicketList);\n","import React from 'react';\r\nimport TicketList from './TicketList';\r\nimport {Tile} from 'carbon-components-react';\r\nimport {apiSubscriptionGet, formatStartDate, formatEndDate} from '../../api/subscriptions';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport {apiGetProjectUsers, apiProjectGet} from '../../api/projects';\r\nimport {isPortalAdminOrSupport, isPortalUser, authenticationChanged} from '../../api/helpers';\r\nimport i18n from '../../i18n';\r\nimport Breadcrumbs from \"../Breadcrumbs/Breadcrumbs\";\r\n\r\nconst subscriptionData = {\r\n  type: 'Product Support Subscription Entando Platform',\r\n  license: 'Free Commercial Open Source',\r\n};\r\n\r\nclass Subscription extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: true,\r\n      subscription: {},\r\n      users: {},\r\n      project: {},\r\n      customer: {},\r\n    };\r\n  }\r\n\r\n  async fetchData() {\r\n    if (isPortalUser()) {\r\n      try {\r\n        let users = {};\r\n        let project = {};\r\n        const subscription = await apiSubscriptionGet(this.props.serviceUrl, this.props.match.params.id);\r\n        if (subscription.data.project) {\r\n          project = await apiProjectGet(this.props.serviceUrl, subscription.data.project.id);\r\n          users = await apiGetProjectUsers(this.props.serviceUrl, project.data.id);\r\n        }\r\n        this.setState({\r\n          subscription: subscription,\r\n          project: project,\r\n          customer: project.customer,\r\n          users: users,\r\n          loading: false,\r\n        });\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n  }\r\n\r\n  updateSubscription = () => {\r\n    this.fetchData();\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (isPortalUser()) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (authenticationChanged(this.props, prevProps) && isPortalUser()) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { type, license } = subscriptionData;\r\n\r\n    if (!this.state.loading) {\r\n      if (isPortalUser()) {\r\n        if (Object.keys(this.state.subscription).length !== 0 && Object.keys(this.state.project).length !== 0) {\r\n          const project = this.state.project.data;\r\n          const subscription = this.state.subscription.data;\r\n          return (\r\n            <div className=\"subscription-details\">\r\n              <div>\r\n                <Breadcrumbs project={project} subscription={subscription} locale={this.props.locale}/>\r\n                <Tile>\r\n                  <div className=\"bx--grid\">\r\n                    <div className=\"bx--row\">\r\n                      <div className=\"bx--col\">\r\n                        <div>\r\n                          <strong>{i18n.t('customerDashboard.customerName')}:</strong> {project.customer.name}\r\n                        </div>\r\n                        <div>\r\n                          <strong>{i18n.t('customerDashboard.projectName')}:</strong> {project.name}\r\n                        </div>\r\n                        <div>\r\n                          <strong>{i18n.t('subscriptionDetails.description')}:</strong> {subscription.project.description}\r\n                        </div>\r\n                        <div>\r\n                          <strong>{i18n.t('subscriptionDetails.partners')}:</strong>\r\n                          {project !== '' && Object.keys(project.partners).length !== 0 ? (\r\n                            <>\r\n                              {project.partners.map((partner, index) => (\r\n                                <div key={index}>\r\n                                  {' '}\r\n                                  {index === project.partners.length - 1 ? partner.name : partner.name + ', '}{' '}\r\n                                </div>\r\n                              ))}\r\n                            </>\r\n                          ) : (\r\n                            <> {i18n.t('userMessages.none')} </>\r\n                          )}\r\n                        </div>\r\n                        <div>\r\n                          <strong>{i18n.t('subscriptionDetails.type')}:</strong> {type}\r\n                        </div>\r\n                        {isPortalAdminOrSupport() ? (\r\n                          <div>\r\n                            <strong>{i18n.t('subscriptionDetails.notes')}:</strong> {subscription.notes}\r\n                          </div>\r\n                        ) : null}\r\n                      </div>\r\n                      <div className=\"bx--col\">\r\n                        <div>\r\n                          <strong>{i18n.t('subscriptionDetails.status')}:</strong> {subscription.status}\r\n                        </div>\r\n                        <div>\r\n                          <strong>{i18n.t('subscriptionDetails.level')}:</strong> {subscription.level}\r\n                        </div>\r\n                        <div>\r\n                          <strong>{i18n.t('subscriptionDetails.startDate')}:</strong>{' '}\r\n                          {formatStartDate(subscription.startDate)}\r\n                        </div>\r\n                        <div>\r\n                          <strong>{i18n.t('subscriptionDetails.endDate')}:</strong>{' '}\r\n                          {formatEndDate(subscription.startDate, subscription.lengthInMonths)}\r\n                        </div>\r\n                        <div>\r\n                          <strong>{i18n.t('subscriptionDetails.license')}:</strong> {license}\r\n                        </div>\r\n                        <div>\r\n                          <strong>{i18n.t('subscriptionDetails.assignedUsers')}:</strong>\r\n                          {this.state.users.data !== '' && Object.keys(this.state.users.data).length !== 0 ? (\r\n                            <>\r\n                              {this.state.users.data.map((user, index) => (\r\n                                <div\r\n                                  key={index}> {index === this.state.users.data.length - 1 ? user.username : user.username + ', '} </div>\r\n                              ))}\r\n                            </>\r\n                          ) : (\r\n                            <> {i18n.t('userMessages.none')} </>\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </Tile>\r\n                <br/>\r\n                <TicketList projectId={project.id} serviceUrl={this.props.serviceUrl} locale={this.props.locale}/>\r\n              </div>\r\n            </div>\r\n          );\r\n        } else {\r\n          return <div>{i18n.t('userMessages.unauthorized')}</div>;\r\n        }\r\n      } else {\r\n        return <div>{i18n.t('userMessages.unauthorized')}</div>;\r\n      }\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport default withKeycloak(Subscription);\r\n","import React from 'react';\r\nimport {Tile} from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport {apiCustomerGet} from '../../api/customers';\r\nimport {authenticationChanged, isAuthenticated, isPortalAdminOrSupport} from '../../api/helpers';\r\nimport i18n from '../../i18n';\r\nimport Breadcrumbs from '../Breadcrumbs/Breadcrumbs';\r\nimport CustomerDataTable from './CustomerDataTable';\r\n\r\nclass CustomerProjectList extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: true,\r\n      customer: {},\r\n    };\r\n  }\r\n\r\n  async fetchData() {\r\n    if (isAuthenticated(this.props)) {\r\n      try {\r\n        const customer = await apiCustomerGet(this.props.serviceUrl, this.props.match.params.id);\r\n        this.setState({\r\n          customer: customer.data,\r\n          loading: false,\r\n        });\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchData();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (authenticationChanged(this.props, prevProps) && isPortalAdminOrSupport()) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (!this.state.loading) {\r\n      const customer = this.state.customer;\r\n      if (customer) {\r\n        return (\r\n          <div className=\"project-list\">\r\n            <Breadcrumbs customer={customer} locale={this.props.locale}/>\r\n            <Tile>\r\n              <div className=\"bx--grid\">\r\n                <div className=\"bx--row\">\r\n                  <div className=\"bx--col\">\r\n                    <p>\r\n                      <strong>{i18n.t('customerDetails.id')}: </strong> {customer.id}\r\n                    </p>\r\n                    <p>\r\n                      <strong>{i18n.t('customerDetails.name')}: </strong> {customer.name}\r\n                    </p>\r\n                    {isPortalAdminOrSupport() &&\r\n                    <p>\r\n                      <strong>{i18n.t('customerDetails.notes')}: </strong> {customer.notes}\r\n                    </p>\r\n                    }\r\n                  </div>\r\n                  <div className=\"bx--col\">\r\n                    <p>\r\n                      <strong>{i18n.t('customerDetails.contactName')}: </strong> {customer.contactName}\r\n                    </p>\r\n                    <p>\r\n                      <strong>{i18n.t('customerDetails.contactPhone')}: </strong> {customer.contactPhone}\r\n                    </p>\r\n                    <p>\r\n                      <strong>{i18n.t('customerDetails.contactEmail')}: </strong> {customer.contactEmail}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </Tile>\r\n            <CustomerDataTable serviceUrl={this.props.serviceUrl} customer={customer}\r\n                               locale={this.props.locale}/>\r\n          </div>\r\n        );\r\n      } else {\r\n        return <p>{i18n.t('userMessages.loading')}...</p>;\r\n      }\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport default withKeycloak(CustomerProjectList);\r\n","import React, {Component} from 'react';\r\nimport {\r\n  DataTable,\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableHeader,\r\n  TableBody,\r\n  TableCell,\r\n  Button\r\n} from 'carbon-components-react';\r\nimport '../../../index.scss';\r\nimport withKeycloak from '../../../auth/withKeycloak';\r\nimport i18n from '../../../i18n';\r\nimport {isAuthenticated, authenticationChanged} from '../../../api/helpers';\r\nimport {apiDeleteSubscriptionFromProject, apiGetProjectSubscriptions, apiProjectGet} from '../../../api/projects';\r\nimport {formatEndDate, formatStartDate} from '../../../api/subscriptions';\r\nimport Breadcrumbs from \"../../Breadcrumbs/Breadcrumbs\";\r\nimport {Link} from 'react-router-dom';\r\nimport { apiTicketingSystemConfigResourceGet } from '../../../api/manageFieldConfigurations';\r\n\r\nclass ManageSubscriptions extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      projectId: '',\r\n      project: {},\r\n      subscriptions: [],\r\n      productName: ''\r\n    };\r\n    this.headerData = [\r\n      {\r\n        header: i18n.t('projectDetails.id'),\r\n        key: 'id',\r\n      },\r\n      {\r\n        header: i18n.t('subscriptionDetails.status'),\r\n        key: 'status',\r\n      },\r\n      {\r\n        header: i18n.t('projectDetails.entandoVersion'),\r\n        key: 'entandoVersion',\r\n      },\r\n      {\r\n        header: i18n.t('subscriptionDetails.level'),\r\n        key: 'level',\r\n      },\r\n      {\r\n        header: i18n.t('subscriptionDetails.startDate'),\r\n        key: 'startDate',\r\n      },\r\n      {\r\n        header: i18n.t('subscriptionDetails.endDate'),\r\n        key: 'endDate',\r\n      },\r\n      {\r\n        header: i18n.t('subscriptionDetails.lengthInMonths'),\r\n        key: 'lengthInMonths',\r\n      },\r\n      {\r\n        header: i18n.t('subscriptionDetails.notes'),\r\n        key: 'notes',\r\n      },\r\n      {\r\n        header: i18n.t('customerDashboard.action'),\r\n        key: 'action',\r\n      },\r\n    ];\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (isAuthenticated(this.props)) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (authenticationChanged(this.props, prevProps)) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n\r\n  async fetchData() {\r\n    if (isAuthenticated(this.props)) {\r\n      const projectId = this.props.match.params.id;\r\n\r\n      let project = {};\r\n      let subscriptions = {};\r\n      if (projectId != null) {\r\n        project = (await apiProjectGet(this.props.serviceUrl, projectId)).data;\r\n        subscriptions = (await apiGetProjectSubscriptions(this.props.serviceUrl, projectId)).data;\r\n      }\r\n\r\n      const data = await apiTicketingSystemConfigResourceGet(this.props.serviceUrl);\r\n      if (data && data.data && data.data.length && data.data[0].hasOwnProperty('subscriptionLevel')) {\r\n        this.setState({ productName: JSON.parse(data.data[0].productName)[0].name })\r\n      }\r\n      this.setState({\r\n        projectId: projectId,\r\n        project: project,\r\n        subscriptions: subscriptions,\r\n        productName: (data && data.data && data.data.length && data.data[0].productName) ? JSON.parse(data.data[0].productName)[0].name : ''\r\n      });\r\n    }\r\n  }\r\n\r\n  async deleteSubscription(subscriptionId) {\r\n    if (isAuthenticated(this.props)) {\r\n      return await apiDeleteSubscriptionFromProject(this.props.serviceUrl, this.state.projectId, subscriptionId);\r\n    }\r\n  }\r\n\r\n  handleDeleteSubscription = (e, id) => {\r\n    e.preventDefault();\r\n    if (window.confirm(i18n.t('submitMessages.confirmDelete'))) {\r\n      console.log('confirmed to delete', id);\r\n      this.deleteSubscription(id)\r\n        .then(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.deleted'),\r\n            submitColour: '#24a148',\r\n          });\r\n          this.fetchData();\r\n        })\r\n        .catch(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.error'),\r\n            submitColour: '#da1e28',\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const project = this.state.project;\r\n    return (\r\n      <div id=\"entando-customer-portal\">\r\n        <Breadcrumbs project={project} locale={this.props.locale}/>\r\n        <h5>{project.name}</h5>\r\n        <Link to={`/subscription/${this.state.projectId}`} style={{textDecoration: 'none'}}>\r\n          <Button kind=\"ghost\" style={{display: 'block', width: '100%'}} value=\"Add Subscription\">\r\n            {i18n.t('buttons.addSubscription')}\r\n          </Button>\r\n        </Link>\r\n        <DataTable rows={[{id: '1'}]} headers={this.headerData}>\r\n          {({headers, getHeaderProps, getTableProps}) => (\r\n            <TableContainer>\r\n              <Table {...getTableProps()}>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    {headers.map(header => (\r\n                      <TableHeader {...getHeaderProps({ header })}>{header.key === 'entandoVersion' ? `${this.state.productName} Version` : header.header}</TableHeader>\r\n                    ))}\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {Object.keys(this.state.subscriptions).length !== 0 &&\r\n                  this.state.subscriptions.map((subscription, index) => (\r\n                    <TableRow key={index}>\r\n                      <TableCell>{subscription.id}</TableCell>\r\n                      <TableCell>{subscription.status}</TableCell>\r\n                      <TableCell>{subscription.entandoVersion && subscription.entandoVersion.name}</TableCell>\r\n                      <TableCell>{subscription.level}</TableCell>\r\n                      <TableCell>{formatStartDate(subscription.startDate)}</TableCell>\r\n                      <TableCell>{formatEndDate(subscription.startDate, subscription.lengthInMonths)}</TableCell>\r\n                      <TableCell>{subscription.lengthInMonths}</TableCell>\r\n                      <TableCell>{subscription.notes}</TableCell>\r\n                      <TableCell>\r\n                        <Link to={`/subscription/${this.state.projectId}/${subscription.id}`}\r\n                              style={{textDecoration: 'none'}}>\r\n                          <Button kind=\"ghost\" style={{display: 'block', width: '100%'}} value=\"Edit\">\r\n                            {i18n.t('buttons.edit')}\r\n                          </Button>\r\n                        </Link>\r\n                        <Button\r\n                          kind=\"ghost\"\r\n                          onClick={event => this.handleDeleteSubscription(event, subscription.id)}\r\n                          className=\"button-warning\"\r\n                        >\r\n                          {i18n.t('buttons.delete')}\r\n                        </Button>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          )}\r\n        </DataTable>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withKeycloak(ManageSubscriptions);\r\n","import React, {Component} from 'react';\r\nimport i18n from '../../i18n';\r\nimport {\r\n  Form,\r\n  TextInput,\r\n  Select,\r\n  SelectItem,\r\n  Button,\r\n  DatePicker,\r\n  DatePickerInput,\r\n  TextArea\r\n} from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport {apiProjectGet} from '../../api/projects';\r\nimport {\r\n  apiProjectSubscriptionPost,\r\n  apiProjectSubscriptionPut,\r\n  apiRenewSubscription,\r\n  apiSubscriptionGet,\r\n  stripTime,\r\n} from '../../api/subscriptions';\r\nimport {apiProductVersionsGet} from '../../api/productVersion';\r\nimport {authenticationChanged, isAuthenticated, isPortalAdmin, isPortalUser} from '../../api/helpers';\r\nimport {apiAddSubscriptionToProject} from '../../api/projects';\r\nimport moment from 'moment';\r\nimport Breadcrumbs from \"../Breadcrumbs/Breadcrumbs\";\r\nimport { apiTicketingSystemConfigResourceGet } from '../../api/manageFieldConfigurations';\r\n\r\nconst FORM_TYPE = {\r\n  new: 'new',\r\n  renewal: 'renewal',\r\n  edit: 'edit',\r\n};\r\n\r\nconst SUBSCRIPTION_STATUS = {\r\n  requested: 'REQUESTED',\r\n  pending: 'PENDING',\r\n  active: 'ACTIVE',\r\n  expired: 'EXPIRED',\r\n};\r\n\r\nclass SubscriptionForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: true,\r\n      project: {},\r\n      projectId: '',\r\n      subscription: {},\r\n      startDate: '',\r\n      level: 'PLATINUM',\r\n      lengthInMonths: '',\r\n      notes: '',\r\n      entandoVersionId: '',\r\n      status: '',\r\n      formType: 'new',\r\n      invalid: {},\r\n      productVersions: [],\r\n      submitSuccess: false,\r\n      submitError: false,\r\n      submitColour: 'black',\r\n      subsList: [],\r\n      productName: ''\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (isAuthenticated(this.props)) {\r\n      this.fetchData();\r\n      this.getLevelList();\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (authenticationChanged(this.props, prevProps)) {\r\n      this.fetchData();\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  async getLevelList() {\r\n    try {\r\n      const data = await apiTicketingSystemConfigResourceGet(this.props.serviceUrl);\r\n      if (data && data.data && data.data.length && data.data[0].hasOwnProperty('subscriptionLevel')) {\r\n        const subLists = JSON.parse(data.data[0].subscriptionLevel);\r\n        this.setState({\r\n          subsList: subLists,\r\n          productName: (data.data[0].productName) ? JSON.parse(data.data[0].productName)[0].name : ''\r\n        })\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error getLevelList: \", error)\r\n    }\r\n  }\r\n\r\n  async fetchData() {\r\n    if (!isPortalUser()) {\r\n      return;\r\n    }\r\n\r\n    const serviceUrl = this.props.serviceUrl;\r\n\r\n    const params = this.props.match.params;\r\n    const subscriptionId = params.subscriptionId;\r\n    let projectId = params.projectId;\r\n\r\n    let subscription = {};\r\n    let project = {};\r\n    let formType = FORM_TYPE.new;\r\n    let status = '';\r\n    const isAdmin = isPortalAdmin();\r\n\r\n    if (typeof subscriptionId !== \"undefined\") {\r\n      subscription = (await apiSubscriptionGet(serviceUrl, subscriptionId)).data;\r\n      status = isAdmin ? subscription.status : SUBSCRIPTION_STATUS.requested;\r\n      formType = isAdmin ? FORM_TYPE.edit : FORM_TYPE.renewal;\r\n      project = subscription.project;\r\n    } else if (projectId !== null) {\r\n      project = (await apiProjectGet(serviceUrl, projectId)).data;\r\n      status = isAdmin ? SUBSCRIPTION_STATUS.pending : SUBSCRIPTION_STATUS.requested;\r\n    } else {\r\n      console.log('Unable to load project and/or subscription');\r\n      return;\r\n    }\r\n\r\n    const productVersions = (await apiProductVersionsGet(serviceUrl)).data;\r\n\r\n    this.setState({\r\n      subscription: subscription,\r\n      level: subscription.level ? subscription.level : '',\r\n      entandoVersionId: subscription.entandoVersion ? subscription.entandoVersion.id : '',\r\n      startDate: stripTime(subscription.startDate),\r\n      lengthInMonths: subscription.lengthInMonths ? subscription.lengthInMonths : '',\r\n      notes: subscription.notes ? subscription.notes : '',\r\n      status: status,\r\n      formType: formType,\r\n      project: project,\r\n      projectId: projectId,\r\n      productVersions: productVersions,\r\n    });\r\n  }\r\n\r\n  isNumeric(str) {\r\n    return !isNaN(str) && !isNaN(parseInt(str));\r\n  }\r\n\r\n  handleValidation() {\r\n    let invalid = {};\r\n\r\n    if (!this.state.startDate || !this.state.startDate.match(/^(0[1-9]|1[0-2])\\/(0[1-9]|1\\d|2\\d|3[01])\\/(19|20)\\d{2}$/)) {\r\n      invalid['startDate'] = true;\r\n    }\r\n\r\n    if (!this.state.lengthInMonths || !this.isNumeric(this.state.lengthInMonths)) {\r\n      invalid['lengthInMonths'] = true;\r\n    }\r\n\r\n    if (!this.state.level) {\r\n      invalid['level'] = true;\r\n    }\r\n\r\n    if (this.state.entandoVersionId === '') {\r\n      invalid['entandoVersionId'] = true;\r\n    }\r\n\r\n    this.setState({ invalid: invalid });\r\n    return Object.keys(invalid).length === 0;\r\n  }\r\n\r\n  handleChanges = e => {\r\n    const input = e.target;\r\n    const name = input.name;\r\n    const value = input.value;\r\n    this.setState({ [name]: value });\r\n    this.setState({\r\n      submitSuccess: false,\r\n      submitError: false,\r\n    });\r\n  };\r\n\r\n  handleStartDateChange = date => {\r\n    let formatted = '';\r\n    if (date && date[0]) {\r\n      formatted = moment(date[0].toISOString()).format('MM/DD/YYYY');\r\n    }\r\n    this.setState({\r\n      startDate: formatted,\r\n    });\r\n  };\r\n\r\n  updateStateForSuccess(success) {\r\n    if (success) {\r\n      this.setState({\r\n        submitSuccess: true,\r\n        submitError: false,\r\n        submitColour: '#24a148',\r\n      });\r\n    } else {\r\n      this.setState({\r\n        submitSuccess: false,\r\n        submitError: true,\r\n        submitColour: '#da1e28',\r\n      });\r\n    }\r\n  }\r\n\r\n  handleFormSubmit = event => {\r\n    event.preventDefault();\r\n    this.setState({\r\n      submitSuccess: false,\r\n      submitError: false,\r\n    });\r\n    const formIsValid = this.handleValidation();\r\n\r\n    if (formIsValid) {\r\n      const formType = this.state.formType;\r\n      const serviceUrl = this.props.serviceUrl;\r\n      const subscriptionRequest = this.stateToSubscription();\r\n\r\n      if (formType === FORM_TYPE.edit) {\r\n        apiProjectSubscriptionPut(serviceUrl, subscriptionRequest)\r\n          .then(() => {\r\n            this.updateStateForSuccess(true);\r\n          })\r\n          .catch(() => {\r\n            this.updateStateForSuccess(false);\r\n          });\r\n      } else if (formType === FORM_TYPE.new) {\r\n        this.newSubscription(subscriptionRequest)\r\n          .then(res => {\r\n            apiAddSubscriptionToProject(serviceUrl, this.state.projectId, res.data.id);\r\n            this.updateStateForSuccess(true);\r\n          })\r\n          .catch(() => {\r\n            this.updateStateForSuccess(false);\r\n          });\r\n      } else if (formType === FORM_TYPE.renewal) {\r\n        this.renewSubscription(subscriptionRequest)\r\n          .then(res => {\r\n            apiAddSubscriptionToProject(serviceUrl, this.state.projectId, res.data.id);\r\n            this.updateStateForSuccess(true);\r\n          })\r\n          .catch(() => {\r\n            this.updateStateForSuccess(false);\r\n          });\r\n      } else {\r\n        console.log('Illegal operation');\r\n      }\r\n    }\r\n  };\r\n\r\n  stateToSubscription() {\r\n    return {\r\n      entandoVersionId: this.state.entandoVersionId,\r\n      projectId: this.state.projectId,\r\n      renewal: this.state.formType === FORM_TYPE.renewal,\r\n      projectSubscription: {\r\n        id: this.state.subscription.id,\r\n        startDate: new Date(this.state.startDate),\r\n        lengthInMonths: this.state.lengthInMonths,\r\n        level: this.state.level,\r\n        status: this.state.status.toUpperCase(),\r\n        notes: this.state.notes,\r\n      },\r\n    };\r\n  }\r\n\r\n  async newSubscription(request) {\r\n    return await apiProjectSubscriptionPost(this.props.serviceUrl, request);\r\n  }\r\n\r\n  async renewSubscription(request) {\r\n    return await apiRenewSubscription(this.props.serviceUrl, request);\r\n  }\r\n\r\n  setupFormComponents() {\r\n    const subscriptionLevelList = this.state.subsList.map((subscr, idx) => (\r\n      <SelectItem key={idx} text={subscr.name} value={subscr.name}>\r\n        {subscr.name}\r\n      </SelectItem>\r\n    ));\r\n    subscriptionLevelList.unshift(<SelectItem key=\"-1\" text={i18n.t('subscriptionForm.chooseLevel')} value=\"\"/>);\r\n\r\n    const versionList = this.state.productVersions.map(version => {\r\n      // only allow the user to choose from active entando versions\r\n      if (version.status) {\r\n        return (\r\n          <SelectItem key={version.id} text={version.name} value={version.id}>\r\n            {version.name}\r\n          </SelectItem>\r\n        );\r\n      } else {\r\n        return null;\r\n      }\r\n    });\r\n    versionList.unshift(<SelectItem key=\"-1\" text={i18n.t('subscriptionForm.chooseVersion')} value=\"\"/>);\r\n\r\n    const statusList = Object.entries(SUBSCRIPTION_STATUS).map(([key, value]) => (\r\n      <SelectItem key={key} text={value} value={value}>\r\n        {value}\r\n      </SelectItem>\r\n    ));\r\n\r\n    return {subscriptionLevelList, versionList, statusList};\r\n  }\r\n\r\n  renderForm() {\r\n    const {subscriptionLevelList, versionList, statusList} = this.setupFormComponents();\r\n    return (\r\n      <div>\r\n        <div className=\"bx--row\">\r\n          <div className=\"bx--col\">\r\n            <div>\r\n              <span>{i18n.t('subscriptionForm.projectName')}:</span> {this.state.project.name}\r\n            </div>\r\n            <Select\r\n              id=\"status\"\r\n              name=\"status\"\r\n              labelText={i18n.t('subscriptionForm.subscriptionStatus')}\r\n              value={this.state.status}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.required')}\r\n              invalid={this.state.invalid['status']}\r\n              disabled={!isPortalAdmin()}\r\n            >\r\n              {statusList}\r\n            </Select>\r\n            <Select\r\n              id=\"level\"\r\n              name=\"level\"\r\n              labelText={i18n.t('subscriptionForm.subscriptionLevel') + ' *'}\r\n              value={this.state.level || ''}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.required')}\r\n              invalid={this.state.invalid['level']}\r\n            >\r\n              {subscriptionLevelList}\r\n            </Select>\r\n            <Select\r\n              id=\"entandoVersionId\"\r\n              name=\"entandoVersionId\"\r\n              labelText={`${this.state.productName} Version *`}\r\n              value={this.state.entandoVersionId}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.required')}\r\n              invalid={this.state.invalid['entandoVersionId']}\r\n            >\r\n              {versionList}\r\n            </Select>\r\n          </div>\r\n          <div className=\"bx--col\">\r\n            <DatePicker dateFormat=\"m/d/Y\" datePickerType=\"single\" value={this.state.startDate}\r\n                        onChange={this.handleStartDateChange}>\r\n              <DatePickerInput\r\n                id=\"startDate\"\r\n                name=\"startDate\"\r\n                placeholder=\"mm/dd/yyyy\"\r\n                labelText={i18n.t('subscriptionForm.subscriptionStartDate')}\r\n                type=\"text\"\r\n                invalidText={i18n.t('validation.invalid.date')}\r\n                invalid={this.state.invalid['startDate']}\r\n              />\r\n            </DatePicker>\r\n            <TextInput\r\n              id=\"lengthInMonths\"\r\n              name=\"lengthInMonths\"\r\n              labelText={i18n.t('subscriptionForm.subscriptionLength') + ' *'}\r\n              value={this.state.lengthInMonths}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.number')}\r\n              invalid={this.state.invalid['lengthInMonths']}\r\n            />\r\n            {isPortalAdmin() && (\r\n              <TextArea\r\n                id={'notes'}\r\n                name=\"notes\"\r\n                labelText={i18n.t('adminDashboard.addProject.notes')}\r\n                value={this.state.notes}\r\n                onChange={this.handleChanges}\r\n              />\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  successErrorMessage() {\r\n    const isAdmin = isPortalAdmin();\r\n    const { subscriptionType, submitSuccess, submitError } = this.state;\r\n\r\n    if (subscriptionType === 'new') {\r\n      if (submitSuccess) {\r\n        return isAdmin ? this.createFormMessage('adminSubmitNewSuccess') : this.createFormMessage('customerSubmitSuccess');\r\n      } else if (submitError) {\r\n        return this.createFormMessage('newSubError');\r\n      }\r\n    } else {\r\n      if (submitSuccess) {\r\n        return isAdmin ? this.createFormMessage('adminRenewNewSuccess') : this.createFormMessage('customerSubmitSuccess');\r\n      } else if (submitError) {\r\n        return this.createFormMessage('renewSubError');\r\n      }\r\n    }\r\n  }\r\n\r\n  createFormMessage(subMessageKey) {\r\n    return <p style={{ color: this.state.submitColour }}>{i18n.t(`subscriptionForm.${subMessageKey}`)}</p>;\r\n  }\r\n\r\n  render() {\r\n    const formType = this.state.formType;\r\n    let formLabelKey = 'subscriptionForm.newSubscription';\r\n    if (formType !== 'new') {\r\n      formLabelKey = isPortalAdmin() ? 'subscriptionForm.editSubscription' : 'subscriptionForm.renewSubscription';\r\n    }\r\n\r\n    if (!this.state.loading) {\r\n      if (isPortalUser()) {\r\n        return (\r\n          <div id=\"entando-customer-portal\">\r\n            <Breadcrumbs project={this.state.project} subscription={this.state.subscription}\r\n                         locale={this.props.locale}/>\r\n            <div className=\"form-container\">\r\n              {this.successErrorMessage()}\r\n              <Form onSubmit={this.handleFormSubmit}>\r\n                <div className=\"bx--grid\">\r\n                  <div className=\"bx--row\">\r\n                    <div className=\"bx--col\">\r\n                      <strong>{i18n.t(formLabelKey)}</strong>\r\n                    </div>\r\n                  </div>\r\n                  {this.renderForm()}\r\n                  <Button kind=\"primary\" tabIndex={0} type=\"submit\">\r\n                    {' '}\r\n                    {i18n.t('buttons.submit')}\r\n                  </Button>\r\n                </div>\r\n              </Form>\r\n            </div>\r\n          </div>\r\n        );\r\n      } else {\r\n        return <p>{i18n.t('userMessages.unauthorized')}</p>;\r\n      }\r\n    }\r\n    // Loading\r\n    else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport default withKeycloak(SubscriptionForm);\r\n","import React, {Component} from 'react';\nimport i18n from '../../i18n';\nimport {Form, Select, SelectItem, Button, TextArea, TextInput} from 'carbon-components-react';\nimport withKeycloak from '../../auth/withKeycloak';\nimport {apiProjectGet} from '../../api/projects';\nimport {apiJiraTicketPost} from '../../api/tickets';\nimport {authenticationChanged, getActiveSubscription, isAuthenticated, isPortalUser} from '../../api/helpers';\nimport Breadcrumbs from \"../Breadcrumbs/Breadcrumbs\";\nimport { apiTicketingSystemConfigResourceGet } from '../../api/manageFieldConfigurations';\nimport {apiCurrentTicketingSystemGet, getTicketUrl} from '../../api/ticketingsystem';\nclass OpenTicketForm extends Component {\n  constructor() {\n    super();\n    this.state = {\n      loading: true,\n      disabled: false,\n      project: {},\n      role: '',\n      invalid: {},\n      submitMsg: '',\n      submitColour: 'black',\n      //form fields\n      type: 'Support',\n      priority: 'Medium',\n      status: 'To Do',\n      summary: '',\n      description: '',\n      types: [],\n      ticketId: null,\n      ticketingSystem: null\n    };\n    this.types = ['Support', 'New Feature', 'Bug'];\n    this.priorities = ['Critical', 'High', 'Medium', 'Low'];\n  }\n\n  componentDidMount() {\n    if (isAuthenticated(this.props)) {\n      this.fetchData();\n      this.getTicketingSystem();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (authenticationChanged(this.props, prevProps)) {\n      this.fetchData();\n    }\n  }\n\n  async getTicketingSystem() {\n    try {\n      const ticketingSystem = await apiCurrentTicketingSystemGet(this.props.serviceUrl);\n      this.setState({ ticketingSystem: ticketingSystem})\n\n      const { data: ticketTypes } = await apiTicketingSystemConfigResourceGet(this.props.serviceUrl);\n      if (ticketTypes && ticketTypes[0].hasOwnProperty('ticketType')) {\n        const ticketTypesArr = JSON.parse(ticketTypes[0].ticketType)\n        ticketTypesArr.sort((a,b) => String(a.name).localeCompare(b.name))\n        this.setState({ types: ticketTypesArr })\n      }\n    } catch (error) {\n      console.error(\"Error getTicketingSystem:\", error)\n    }\n  }\n\n  async fetchData() {\n    if (!isPortalUser()) {\n      return;\n    }\n\n    const projectId = this.props.match.params.id;\n    let project = (await apiProjectGet(this.props.serviceUrl, projectId)).data;\n\n    if (!project) {\n      console.error('Unable to retrieve projectId ', projectId);\n      project = {};\n    }\n\n    this.setState({\n      project: project,\n      loading: false,\n    });\n  }\n\n  handleValidation() {\n    let invalid = {};\n    let formIsValid = true;\n\n    if (this.state.type === '') {\n      formIsValid = false;\n      invalid['type'] = true;\n    }\n\n    if (this.state.summary === '') {\n      formIsValid = false;\n      invalid['summary'] = true;\n    }\n\n    if (this.state.description === '') {\n      formIsValid = false;\n      invalid['description'] = true;\n    }\n\n    if (this.state.priority === '') {\n      formIsValid = false;\n      invalid['priority'] = true;\n    }\n\n    this.setState({\n      invalid: invalid,\n    });\n    return formIsValid;\n  }\n\n  handleChanges = e => {\n    const input = e.target;\n    const name = input.name;\n    const value = input.value;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n\n    const formIsValid = this.handleValidation();\n\n    if (formIsValid) {\n      //Disable the form after submission\n      this.setState({\n        disabled: true\n      });\n\n      const subscription = getActiveSubscription(this.state.project);\n      if (subscription) {\n        this.createTicket()\n          .then((response) => {\n            this.setSubmitMessage('submitMessages.created', true);\n            this.setState ({\n              ticketId: response.data.systemId\n            });\n          })\n          .catch(() => {\n            this.setSubmitMessage('submitMessages.ticketError', false);\n          });\n      }\n      // if no subscriptions, don't create ticket\n      else {\n        this.setSubmitMessage('submitMessages.subscriptionRequired', false);\n      }\n    } else {\n      this.setSubmitMessage('submitMessages.error', false);\n    }\n  };\n\n  setSubmitMessage = (message, success) => {\n    this.setState({\n      submitMsg: i18n.t(message),\n      submitColour: success ? '#24a148' : '#da1e28',\n      disabled: success\n    });\n  }\n\n  async createTicket() {\n    if (isPortalUser()) {\n      const ticket = {\n        type: this.state.type,\n        summary: this.state.summary,\n        description: this.state.description,\n        priority: this.state.priority,\n        // these fields are just placeholders to validate the POST request (fields will be set in the backend)\n        systemId: '999',\n        status: 'To Do',\n        createDate: '2021-02-22T14:14:09-05:00',\n        updateDate: '2021-02-22T14:14:09-05:00',\n      };\n      return await apiJiraTicketPost(this.props.serviceUrl, this.state.project.id, ticket);\n    }\n  }\n\n  render() {\n    if (!this.state.loading) {\n      if (isPortalUser()) {\n        const viewTicket = this.state.ticketId && (\n          <div>\n            <strong>{i18n.t('ticketDetails.viewTicket')}: </strong>\n            <a href={getTicketUrl(this.state.ticketingSystem, this.state.ticketId)} target=\"_blank\" rel=\"noreferrer\">\n              {this.state.ticketId}\n            </a>\n          </div>\n        );\n\n        return (\n          <div id=\"entando-customer-portal\">\n            <Breadcrumbs project={this.state.project} locale={this.props.locale}/>\n            <div className=\"form-container\">\n              <Form onSubmit={this.handleFormSubmit}>\n                <div className=\"bx--grid\">\n                  <div className=\"bx--row\" style={{padding: '1em 0'}}>\n                    <div className=\"bx--col\">\n                      <div className=\"form-desc\">\n                        <h4>{i18n.t('supportTicketForm.formTitle')}</h4>\n                        <div>{i18n.t('supportTicketForm.desc')}</div>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"bx--row\">\n                    <div className=\"bx--col\">\n                      <div>\n                        <strong>{i18n.t('projectDetails.project')}:</strong> {this.state.project.name}\n                      </div>\n                      <Select\n                        id=\"type\"\n                        name=\"type\"\n                        labelText={i18n.t('supportTicketForm.type') + ' *'}\n                        value={this.state.type}\n                        onChange={this.handleChanges}\n                        invalidText={i18n.t('validation.invalid.required')}\n                        invalid={this.state.invalid['type']}\n                      >\n                        {this.state.types.map((type, i) => (\n                          <SelectItem key={i} text={type.name} value={type.name}>\n                            {type.name}\n                          </SelectItem>\n                        ))}\n                      </Select>\n                      <Select\n                        id=\"priority\"\n                        name=\"priority\"\n                        labelText={i18n.t('supportTicketForm.priority') + ' *'}\n                        value={this.state.priority}\n                        onChange={this.handleChanges}\n                        invalidText={i18n.t('validation.invalid.required')}\n                        invalid={this.state.invalid['priority']}\n                      >\n                        {this.priorities.map((priority, i) => (\n                          <SelectItem key={i} text={priority} value={priority}>\n                            {priority}\n                          </SelectItem>\n                        ))}\n                      </Select>\n                    </div>\n                  </div>\n                  <div className=\"bx--row\">\n                    <div className=\"bx--col\">\n                      <TextInput\n                        labelText={i18n.t('supportTicketForm.ticketSummary') + ' *'}\n                        placeholder={i18n.t('supportTicketForm.addticketSummary')}\n                        id=\"summary\"\n                        name=\"summary\"\n                        value={this.state.summary}\n                        onChange={this.handleChanges}\n                        invalidText={i18n.t('validation.invalid.required')}\n                        invalid={this.state.invalid['summary']}\n                      />\n                    </div>\n                  </div>\n                  <div className=\"bx--row\">\n                    <div className=\"bx--col\">\n                      <TextArea\n                        labelText={i18n.t('supportTicketForm.ticketDescription') + ' *'}\n                        placeholder={i18n.t('supportTicketForm.addticketDescription')}\n                        name=\"description\"\n                        value={this.state.description}\n                        onChange={this.handleChanges}\n                        invalidText={i18n.t('validation.invalid.required')}\n                        invalid={this.state.invalid['description']}\n                      />\n                      <Button kind=\"primary\" tabIndex={0} type=\"submit\" disabled={this.state.disabled}>\n                        {' '}\n                        {i18n.t('buttons.submit')}{' '}\n                      </Button>\n                      <p style={{color: this.state.submitColour}}>{this.state.submitMsg}</p>\n                      {viewTicket}\n                    </div>\n                  </div>\n                </div>\n              </Form>\n            </div>\n          </div>\n        );\n      } else {\n        return <p>{i18n.t('userMessages.unauthorized')}</p>;\n      }\n    } else {\n      return null;\n    }\n  }\n}\n\nexport default withKeycloak(OpenTicketForm);\n","import { getDefaultOptions, request, getUrl } from './helpers';\r\n\r\nconst resource = 'api/portal-users';\r\n\r\nexport const apiUserDelete = async (serviceUrl, id) => {\r\n  const url = `${serviceUrl}/${resource}/${id}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE',\r\n  };\r\n  return await request(url, options);\r\n};\r\n\r\nexport const apiUsersPut = async (serviceUrl, user) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'PUT',\r\n    body: user ? JSON.stringify(user) : null,\r\n  };\r\n  return await request(url, options);\r\n};\r\n\r\nexport const apiUsersGet = async serviceUrl => {\r\n  const url = getUrl(`${serviceUrl}/${resource}`);\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return await request(url, options);\r\n};\r\n\r\nexport const apiUserGet = async (serviceUrl, userId) => {\r\n  const url = getUrl(`${serviceUrl}/${resource}/${userId}`);\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return await request(url, options);\r\n};\r\n\r\nexport const apiUserPost = async (serviceUrl, user) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n    body: user ? JSON.stringify(user) : null,\r\n  };\r\n  return await request(url, options);\r\n};\r\n\r\nexport const apiUserGetByUsernameAndEmail = async (serviceUrl, username, email) => {\r\n  const url = getUrl(`${serviceUrl}/${resource}/username/${username}/email/${email}`);\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return await request(url, options);\r\n};\r\n","import { getDefaultKeycloakOptions, request, getUrl } from './helpers';\r\n\r\n//TODO: replace with paginated user list eventually\r\nconst maxUsersCount = 1000;\r\n\r\nexport const apiKeycloakUserGet = async (serviceUrl, realm) => {\r\n  const usersResource = `admin/realms/${realm}/users?enabled=true&max=`+maxUsersCount;\r\n  const url = `${serviceUrl}/${usersResource}`;\r\n  const options = {\r\n    ...getDefaultKeycloakOptions(),\r\n    method: 'GET',\r\n  };\r\n  return await request(url, options);\r\n};\r\n\r\nexport const apiKeycloakToken = async (serviceUrl, realm) => {\r\n  const tokenResource = `realms/${realm}/protocol/openid-connect/token`;\r\n  const url = getUrl(`${serviceUrl}/${tokenResource}`);\r\n  const keycloakBody = {\r\n    client_id: 'web_app',\r\n    username: 'admin',\r\n    password: 'admin',\r\n    grant_type: 'password',\r\n  };\r\n  const options = {\r\n    ...getDefaultKeycloakOptions(),\r\n    method: 'POST',\r\n    body: keycloakBody ? serialize(keycloakBody) : null,\r\n  };\r\n  return await request(url, options);\r\n};\r\n\r\nfunction serialize(obj) {\r\n  var str = [];\r\n  for (var p in obj)\r\n    if (obj.hasOwnProperty(p)) {\r\n      str.push(encodeURIComponent(p) + '=' + encodeURIComponent(obj[p]));\r\n    }\r\n  return str.join('&');\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Form, Select, SelectItem, Button } from 'carbon-components-react';\r\nimport * as portalUserApi from '../../../api/portalusers';\r\nimport {apiAddUserToProject, apiProjectGet} from '../../../api/projects';\r\nimport withKeycloak from '../../../auth/withKeycloak';\r\nimport { apiKeycloakUserGet } from '../../../api/keycloak';\r\nimport i18n from '../../../i18n';\r\nimport {authenticationChanged, isAuthenticated} from \"../../../api/helpers\";\r\nclass AssignUsers extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      project: null,\r\n      projectId: '',\r\n      assignUser: '',\r\n      users: new Map(),\r\n      invalid: {},\r\n      submitMsg: '',\r\n      submitColour: 'black',\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (isAuthenticated(this.props)) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (authenticationChanged(this.props, prevProps)) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n\r\n  async fetchData() {\r\n    const {keycloak} = this.props;\r\n    const users = this.mapKeycloakUserEmails((await apiKeycloakUserGet(keycloak.authServerUrl, keycloak.realm)).data);\r\n    let projectId = this.props.match.params.id;\r\n    let project = null;\r\n    if (projectId != null) {\r\n      project = (await apiProjectGet(this.props.serviceUrl, projectId)).data;\r\n    } else {\r\n      projectId = '';\r\n    }\r\n\r\n    this.setState({\r\n      projectId: projectId,\r\n      project: project,\r\n      users: users,\r\n    });\r\n  }\r\n\r\n  mapKeycloakUserEmails = keycloakUsers => {\r\n    const usernameEmailMap = new Map();\r\n    keycloakUsers.forEach(keycloakUser => usernameEmailMap.set(keycloakUser.username, keycloakUser.email));\r\n    return usernameEmailMap;\r\n  };\r\n\r\n  handleChanges = e => {\r\n    const input = e.target;\r\n    const name = input.name;\r\n    const value = input.value;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleFormSubmit = event => {\r\n    event.preventDefault();\r\n    const { projectId, assignUser } = this.state;\r\n    const formIsValid = this.handleFormValidation();\r\n\r\n    if (formIsValid) {\r\n      this.assignUserToProject(projectId, assignUser).then(res => {\r\n        if (res && res.status === 201) {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.updated'),\r\n            submitColour: '#24a148',\r\n          });\r\n          window.dispatchEvent(new CustomEvent('cp-user-assigned'));\r\n        } else {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.error'),\r\n            submitColour: '#da1e28',\r\n          });\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  handleFormValidation() {\r\n    let invalid = {};\r\n    let formIsValid = true;\r\n    const { projectId, assignUser } = this.state;\r\n\r\n    //name\r\n    if (projectId === '') {\r\n      formIsValid = false;\r\n      invalid['projectId'] = true;\r\n    }\r\n\r\n    //customerNumber\r\n    if (assignUser === '') {\r\n      formIsValid = false;\r\n      invalid['assignUser'] = true;\r\n    }\r\n\r\n    this.setState({ invalid: invalid });\r\n    return formIsValid;\r\n  }\r\n\r\n  assignUserToProject = async (projectId, username) => {\r\n    const email = this.state.users.get(username);\r\n    if (!email) {\r\n      alert(\"User is missing an email address in keycloak and cannot be assigned.\")\r\n      return null;\r\n    }\r\n    const portalUserId = await this.getPortalUserId({username, email: this.state.users.get(username)});\r\n    return await apiAddUserToProject(this.props.serviceUrl, projectId, portalUserId);\r\n  };\r\n\r\n  getPortalUserId = async keycloakUser => {\r\n    let portalUserId = null;\r\n    try {\r\n      const portalUser = await portalUserApi.apiUserGetByUsernameAndEmail(this.props.serviceUrl,\r\n        keycloakUser.username, keycloakUser.email);\r\n      portalUserId = portalUser.data.id;\r\n    } catch (e) {\r\n      console.warn(e);\r\n    }\r\n\r\n    return portalUserId;\r\n  };\r\n\r\n  setupFormComponents() {\r\n    const users = this.state.users;\r\n    const project = this.state.project;\r\n    let userList;\r\n    let projectList;\r\n\r\n    if (users.size > 0) {\r\n      userList = [...users.keys()].map((assignUser, i) => (\r\n        <SelectItem key={i} text={assignUser} value={assignUser}>\r\n          {assignUser}\r\n        </SelectItem>\r\n      ));\r\n      userList.unshift(<SelectItem key=\"-1\" text={i18n.t('manageUsers.assign.userList')} value=\"\"/>);\r\n    } else {\r\n      userList = <SelectItem text={i18n.t('manageUsers.assign.noUsers')} value=\"\"/>;\r\n    }\r\n\r\n    if (project != null) {\r\n      projectList = <SelectItem key={project.id} text={project.name} value={project.id}/>;\r\n    } else {\r\n      projectList = <SelectItem text={i18n.t('manageUsers.assign.noProjects')} value=\"\"/>;\r\n    }\r\n\r\n    return {userList, projectList};\r\n  }\r\n\r\n  render() {\r\n    const { userList, projectList } = this.setupFormComponents();\r\n\r\n    return (\r\n      <div>\r\n        <p style={{ color: this.state.submitColour }}>{this.state.submitMsg}</p>\r\n        <Form onSubmit={this.handleFormSubmit}>\r\n          <div className=\"bx--grid\">\r\n            <div className=\"bx--row\">\r\n              <div className=\"bx--col\">\r\n                <Select\r\n                  id=\"projectId\"\r\n                  name=\"projectId\"\r\n                  labelText={i18n.t('manageUsers.assign.projectName')}\r\n                  value={this.state.projectId}\r\n                  onChange={this.handleChanges}\r\n                  invalidText={i18n.t('validation.invalid.required')}\r\n                  invalid={this.state.invalid['projectId']}\r\n                >\r\n                  {projectList}\r\n                </Select>\r\n              </div>\r\n            </div>\r\n            <div className=\"bx--row\">\r\n              <div className=\"bx--col\">\r\n                <Select\r\n                  id=\"assignUser\"\r\n                  name=\"assignUser\"\r\n                  labelText={i18n.t('manageUsers.assign.assignUser')}\r\n                  value={this.state.assignUser}\r\n                  onChange={this.handleChanges}\r\n                  invalidText={i18n.t('validation.invalid.required')}\r\n                  invalid={this.state.invalid['assignUser']}\r\n                >\r\n                  {userList}\r\n                </Select>\r\n              </div>\r\n            </div>\r\n            <Button kind=\"primary\" tabIndex={0} type=\"submit\">\r\n              {' '}\r\n              {i18n.t('buttons.submit')}{' '}\r\n            </Button>\r\n          </div>\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withKeycloak(AssignUsers);\r\n","import React, {Component} from 'react';\r\nimport {\r\n  DataTable,\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableHeader,\r\n  TableBody,\r\n  TableCell,\r\n  Button\r\n} from 'carbon-components-react';\r\nimport withKeycloak from '../../../auth/withKeycloak';\r\nimport i18n from '../../../i18n';\r\nimport {apiGetProjectUsers, apiDeleteUserFromProject} from '../../../api/projects';\r\nimport {authenticationChanged, isAuthenticated} from \"../../../api/helpers\";\r\n\r\nclass DeleteUsers extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      users: [],\r\n      displayUsers: [],\r\n      projectId: '',\r\n    };\r\n    this.headerData = [\r\n      {\r\n        header: i18n.t('manageUsers.delete.userName'),\r\n        key: 'username',\r\n      },\r\n      {\r\n        header: i18n.t('manageUsers.delete.userEmail'),\r\n        key: 'email',\r\n      },\r\n      {\r\n        header: i18n.t('manageUsers.delete.userAccess'),\r\n        key: 'userAccess',\r\n      },\r\n    ];\r\n    window.addEventListener('cp-user-assigned', event => {\r\n      this.fetchData();\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (isAuthenticated(this.props)) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (authenticationChanged(this.props, prevProps)) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n\r\n  async fetchData() {\r\n    if (isAuthenticated(this.props)) {\r\n      const projectId = this.props.match.params.id;\r\n      let users = [];\r\n      if (projectId != null) {\r\n        users = (await apiGetProjectUsers(this.props.serviceUrl, projectId)).data;\r\n      }\r\n\r\n      this.setState({\r\n        users,\r\n        projectId,\r\n      });\r\n\r\n      this.handleUserDisplay();\r\n    }\r\n  }\r\n\r\n  handleUserDisplay() {\r\n    const users = this.state.users;\r\n    const projectId = this.state.projectId;\r\n\r\n    const displayUsers = users.map(user => ({\r\n      id: user.username,\r\n      username: user.username,\r\n      email: user.email,\r\n      userAccess: (\r\n        <Button kind=\"ghost\" onClick={event => this.handleRemoveUser(user.id, projectId, event)}\r\n                className=\"button-warning\">\r\n          {i18n.t('manageUsers.delete.removeUser')}\r\n        </Button>\r\n      ),\r\n    }));\r\n\r\n    this.setState({\r\n      displayUsers,\r\n    });\r\n  }\r\n\r\n  handleRemoveUser = (userId, projectId, event) => {\r\n    event.preventDefault();\r\n\r\n    apiDeleteUserFromProject(this.props.serviceUrl, projectId, userId).then(res => {\r\n      if (res.status === 201) {\r\n        this.fetchData();\r\n      } else {\r\n        console.warn('Failed to delete user', res);\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <DataTable rows={this.state.displayUsers} headers={this.headerData}>\r\n        {({ rows, headers, getHeaderProps, getTableProps }) => (\r\n          <TableContainer>\r\n            <Table {...getTableProps()}>\r\n              <TableHead>\r\n                <TableRow>\r\n                  {headers.map(header => (\r\n                    <TableHeader {...getHeaderProps({ header })}>{header.header}</TableHeader>\r\n                  ))}\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {rows.map(row => (\r\n                  <TableRow key={row.id}>\r\n                    {row.cells.map(cell => (\r\n                      <TableCell key={cell.id}>{cell.value}</TableCell>\r\n                    ))}\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        )}\r\n      </DataTable>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withKeycloak(DeleteUsers);\r\n","import React, {Component} from 'react';\r\nimport i18n from '../../../i18n';\r\nimport {Accordion, AccordionItem} from 'carbon-components-react';\r\nimport AssignUsers from './AssignUsers';\r\nimport DeleteUsers from './DeleteUsers';\r\nimport {authenticationChanged, isAuthenticated, isPortalAdmin} from '../../../api/helpers';\r\nimport withKeycloak from '../../../auth/withKeycloak';\r\nimport Breadcrumbs from \"../../Breadcrumbs/Breadcrumbs\";\r\n\r\nclass ManageUsers extends Component {\r\n  userFunctionality;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: true,\r\n    };\r\n    this.userFunctionality = [\r\n      {\r\n        label: (\r\n          <div>\r\n            <p className=\"title\">{i18n.t('manageUsers.manage.title')}</p>\r\n            <p className=\"desc\">{i18n.t('manageUsers.manage.desc')}</p>\r\n          </div>\r\n        ),\r\n        content: <DeleteUsers {...props} serviceUrl={this.props.serviceUrl}/>,\r\n        open: true,\r\n      },\r\n      {\r\n        label: (\r\n          <div>\r\n            <p className=\"title\">{i18n.t('manageUsers.assign.title')}</p>\r\n            <p className=\"desc\">{i18n.t('manageUsers.assign.desc')}</p>\r\n          </div>\r\n        ),\r\n        content: <AssignUsers {...props} serviceUrl={this.props.serviceUrl}/>,\r\n        open: true,\r\n      },\r\n    ];\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (isAuthenticated(this.props)) {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (authenticationChanged(this.props, prevProps)) {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (!this.state.loading) {\r\n      if (isPortalAdmin()) {\r\n        return (\r\n          <div id=\"entando-customer-portal\">\r\n            <Breadcrumbs locale={this.props.locale}/>\r\n            <div className=\"form-container\">\r\n              <Accordion>\r\n                {this.userFunctionality.map((item, index) => (\r\n                  <AccordionItem key={index.toString()} index={index} title={item.label} description={item.description}\r\n                                 open={item.open}>\r\n                    {item.content}\r\n                  </AccordionItem>\r\n                ))}\r\n              </Accordion>\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n      // Unauthorized\r\n      else {\r\n        return <p>{i18n.t('userMessages.unauthorized')}</p>;\r\n      }\r\n    }\r\n    // Loading\r\n    else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport default withKeycloak(ManageUsers);\r\n","import React, {Component} from 'react';\r\nimport {HashRouter, Route, Switch} from 'react-router-dom';\r\nimport AdminDashboard from './Admin/AdminDashboard';\r\nimport Subscription from './SubscriptionDetails/Subscription';\r\nimport withKeycloak from '../auth/withKeycloak';\r\nimport {AuthenticatedView, UnauthenticatedView} from '../auth/KeycloakViews';\r\nimport {authenticationChanged, isAuthenticated, isPortalUser} from '../api/helpers';\r\nimport CustomerProjectList from './Customer/CustomerProjectList';\r\nimport i18n from '../i18n';\r\nimport ManageSubscriptions from './Admin/ManageSubscriptions/ManageSubscriptions';\r\nimport SubscriptionForm from './Forms/SubscriptionForm';\r\nimport OpenTicketForm from './Forms/OpenTicketForm';\r\nimport ManageUsers from './Admin/ManageUsers/ManageUsers';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: true,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (isAuthenticated(this.props)) {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (authenticationChanged(this.props, prevProps)) {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var { keycloak } = this.props;\r\n\r\n    if (!this.state.loading) {\r\n      if (isPortalUser()) {\r\n        return (\r\n          <div id=\"entando-customer-portal\">\r\n            <AuthenticatedView keycloak={keycloak}>\r\n              <HashRouter>\r\n                <Switch>\r\n                  <Route\r\n                    path={'**/customer-details/:id'}\r\n                    render={props => <CustomerProjectList {...props} serviceUrl={this.props.serviceUrl}\r\n                                                          locale={this.props.locale}/>}\r\n                  />\r\n                  <Route\r\n                    path={'**/subscription/:projectId/:subscriptionId?'}\r\n                    render={props => <SubscriptionForm {...props} serviceUrl={this.props.serviceUrl}\r\n                                                       locale={this.props.locale}/>}\r\n                  />\r\n                  <Route\r\n                    path={'**/manage-subscriptions/:id'}\r\n                    render={props => <ManageSubscriptions {...props} serviceUrl={this.props.serviceUrl}\r\n                                                          locale={this.props.locale}/>}\r\n                  />\r\n                  <Route\r\n                    path={'**/manage-users/:id'}\r\n                    render={props => <ManageUsers {...props} serviceUrl={this.props.serviceUrl}\r\n                                                  locale={this.props.locale}/>}\r\n                  />\r\n                  <Route\r\n                    path={'**/subscription-details/:id'}\r\n                    render={props => <Subscription {...props} serviceUrl={this.props.serviceUrl}\r\n                                                   locale={this.props.locale}/>}\r\n                  />\r\n                  <Route\r\n                    path={'**/ticket/:id'}\r\n                    render={props => <OpenTicketForm {...props} serviceUrl={this.props.serviceUrl}\r\n                                                     locale={this.props.locale}/>}\r\n                  />\r\n                  <Route\r\n                    path=\"**/\"\r\n                    render={props => <AdminDashboard {...props} serviceUrl={this.props.serviceUrl}\r\n                                                     locale={this.props.locale}/>}\r\n                  />\r\n                </Switch>\r\n              </HashRouter>\r\n            </AuthenticatedView>\r\n            <UnauthenticatedView keycloak={keycloak}>\r\n              <p>{i18n.t('userMessages.unauthorized')}</p>\r\n            </UnauthenticatedView>\r\n          </div>\r\n        );\r\n      } else {\r\n        return <p>{i18n.t('userMessages.unauthorized')}</p>;\r\n      }\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport default withKeycloak(App);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport '../index.scss';\r\nimport * as Locale from '../i18n';\r\n\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\nimport App from '../components/App';\r\n\r\nimport { subscribeToWidgetEvent } from '../helpers/widgetEvents';\r\nimport { KEYCLOAK_EVENT_TYPE } from './widgetEventTypes';\r\nimport {setAppContext} from '../api/helpers';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window && window.entando && window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\nconst ATTRIBUTES = {\r\n  hidden: 'hidden',\r\n  locale: 'locale',\r\n  paginationMode: 'pagination-mode',\r\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n  serviceUrl: 'service-url',\r\n  baseUrl: 'base-url',\r\n};\r\n\r\nclass AppElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    //retargetEvents(shadowRoot);\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const baseUrl = this.getAttribute(ATTRIBUTES.baseUrl) || '';\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n    const locale = this.getAttribute(ATTRIBUTES.locale) || '';\r\n    Locale.setLocale(locale);\r\n    setAppContext(baseUrl);\r\n\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <App serviceUrl={serviceUrl} locale={locale} />\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.get('cp-app') || customElements.define('cp-app', AppElement);\r\n","import React, {Component} from 'react';\nimport {authenticationChanged, getPageUrl, isAuthenticated, isPortalUser} from \"../../api/helpers\";\nimport i18n from \"../../i18n\";\nimport withKeycloak from \"../../auth/withKeycloak\";\nimport {PAGE_CUSTOMER_PORTAL} from '../../api/constants';\n\nconst KEYCLOAK_EVENT_ID = 'keycloak';\n\nclass Login extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      loading: true\n    };\n    this.keycloakEventHandler = this.keycloakEventHandler.bind(this);\n  }\n\n  keycloakEventHandler(event) {\n    const keycloakEvent = event.detail.eventType;\n    const {keycloak} = this.props;\n    switch (keycloakEvent) {\n      //Wait until keycloak is ready before displaying the nav elements\n      case 'onReady':\n        this.setState({\n          loading: false\n        });\n        break;\n      case 'onAuthRefreshError':\n        keycloak.logout();\n        break;\n      default:\n        break;\n    }\n  }\n\n  componentDidMount() {\n    window.addEventListener(KEYCLOAK_EVENT_ID, this.keycloakEventHandler);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (authenticationChanged(this.props, prevProps)) {\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(KEYCLOAK_EVENT_ID, this.keycloakEventHandler);\n  }\n\n  render() {\n    const {keycloak} = this.props;\n    const loginUrl = window.location;\n    const handleLogin = () => keycloak.login({redirectUri: loginUrl});\n    const handleLogout = () => keycloak.logout({redirectUri: window.location.origin});\n\n    if (!this.state.loading) {\n      return (\n        <span className=\"entando-login\">\n          {!isAuthenticated(this.props) ? (\n            <>\n              <a className=\"log-in\" href=\"#entando-customer-portal\" onClick={handleLogin}\n                 title={i18n.t('userMessages.login')}>\n                {i18n.t('userMessages.login')}<i className=\"fas fa-sign-in-alt\"/>\n              </a>\n            </>\n          ) : (\n            <>\n              {isPortalUser() && (\n                <>\n                  <a\n                    href={getPageUrl(PAGE_CUSTOMER_PORTAL, this.props.locale)}>{i18n.t('customerDashboard.customerPortal')}</a>\n                  <span className=\"divider\">&nbsp;|&nbsp;</span>\n                </>\n              )}\n              <a className=\"log-out\" href=\"#entando-customer-portal\" onClick={handleLogout}\n                 title={i18n.t('userMessages.logout')}>\n                {i18n.t('userMessages.logout')}<i className=\"fas fa-sign-out-alt\"/>\n              </a>\n            </>\n          )}\n        </span>\n      );\n    } else {\n      return null;\n    }\n  }\n}\n\nexport default withKeycloak(Login);\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport '../index.scss';\r\n\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\n\r\nimport {subscribeToWidgetEvent} from '../helpers/widgetEvents';\r\nimport {KEYCLOAK_EVENT_TYPE} from './widgetEventTypes';\r\nimport * as Locale from '../i18n';\r\nimport Login from '../components/Login/Login';\r\nimport {setAppContext} from '../api/helpers';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window && window.entando && window.entando.keycloak && {...window.entando.keycloak, initialized: true}) || {\r\n    initialized: false,\r\n  };\r\n\r\nconst ATTRIBUTES = {\r\n  hidden: 'hidden',\r\n  locale: 'locale',\r\n  paginationMode: 'pagination-mode',\r\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n  serviceUrl: 'service-url',\r\n  baseUrl: 'base-url',\r\n};\r\n\r\nclass LoginElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('span');\r\n    this.keycloak = {...getKeycloakInstance(), initialized: true};\r\n\r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = {...getKeycloakInstance(), initialized: true};\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    //retargetEvents(shadowRoot);\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const baseUrl = this.getAttribute(ATTRIBUTES.baseUrl) || '';\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n    const locale = this.getAttribute(ATTRIBUTES.locale) || '';\r\n    Locale.setLocale(locale);\r\n    setAppContext(baseUrl);\r\n\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <Login serviceUrl={serviceUrl} locale={locale}/>\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.get('cp-login') || customElements.define('cp-login', LoginElement);\r\n","import React, {Component} from 'react';\r\nimport {BrowserRouter, Route, Switch, Link} from 'react-router-dom';\r\nimport App from '../components/App';\r\nimport withKeycloak from '../auth/withKeycloak';\r\nimport AdminConfiguration from '../components/Admin/Configuration/AdminConfiguration';\r\nimport {authenticationChanged, getPageUrl, isAuthenticated, isPortalAdmin} from '../api/helpers';\r\nimport {\r\n  PAGE_ADMIN_CONFIG,\r\n  PAGE_CUSTOMER_PORTAL\r\n} from \"../api/constants\";\r\nimport Login from \"../components/Login/Login\";\r\n\r\nclass LocalApp extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: true,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (isAuthenticated(this.props)) {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (authenticationChanged(this.props, prevProps)) {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {locale, serviceUrl} = this.props;\r\n    if (!this.state.loading) {\r\n      return (\r\n        <div>\r\n          <BrowserRouter forceRefresh={true}>\r\n            <Login locale={locale}/>\r\n            <div>\r\n              <ul>\r\n                {isPortalAdmin() && (\r\n                  <li>\r\n                    <Link to={getPageUrl(PAGE_ADMIN_CONFIG, locale)}>Admin</Link>\r\n                  </li>\r\n                )}\r\n              </ul>\r\n            </div>\r\n            <Switch>\r\n              <Route path={getPageUrl(PAGE_ADMIN_CONFIG, locale)}>\r\n                <AdminConfiguration serviceUrl={serviceUrl} locale={locale}/>\r\n              </Route>\r\n              <Route path={getPageUrl(PAGE_CUSTOMER_PORTAL, locale)}>\r\n                <App serviceUrl={serviceUrl} locale={locale}/>\r\n              </Route>\r\n              <Route path=\"/\" exact={true}>\r\n                <App serviceUrl={serviceUrl} locale={locale}/>\r\n              </Route>\r\n            </Switch>\r\n          </BrowserRouter>\r\n        </div>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport default withKeycloak(LocalApp);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport '../index.scss';\r\nimport * as Locale from '../i18n';\r\nimport {setAppContext} from '../api/helpers';\r\n\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\nimport LocalApp from '../local/LocalApp';\r\n\r\nimport {subscribeToWidgetEvent} from '../helpers/widgetEvents';\r\nimport {KEYCLOAK_EVENT_TYPE} from '../custom-elements/widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window && window.entando && window.entando.keycloak && {...window.entando.keycloak, initialized: true}) || {\r\n    initialized: false,\r\n  };\r\n\r\nconst ATTRIBUTES = {\r\n  hidden: 'hidden',\r\n  locale: 'locale',\r\n  paginationMode: 'pagination-mode',\r\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n  serviceUrl: 'service-url',\r\n};\r\n\r\nclass LocalAppElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n    this.keycloak = {...getKeycloakInstance(), initialized: true};\r\n\r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = {...getKeycloakInstance(), initialized: true};\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    //retargetEvents(shadowRoot);\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n    const locale = this.getAttribute(ATTRIBUTES.locale) || '';\r\n    Locale.setLocale(locale);\r\n    setAppContext('/');\r\n\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <LocalApp serviceUrl={serviceUrl} locale={locale}/>\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.get('cp-local-app') || customElements.define('cp-local-app', LocalAppElement);\r\n"],"sourceRoot":""}