{"version":3,"sources":["i18n.js","api/constants.js","api/helpers.js","api/ticketingsystem.js","auth/KeycloakContext.js","components/__types__/ref.js","auth/withKeycloak.js","components/Admin/Configuration/TicketingSystem.js","api/productVersion.js","components/Admin/AddProductVersionModal.js","components/Admin/EditVersionModal.js","components/Admin/Configuration/ProductVersion.js","components/Breadcrumbs/Breadcrumbs.js","api/manageFieldConfigurations.js","components/Admin/Configuration/TicketTypeConfiguration.js","components/Admin/Configuration/ServiceSubLevelConfiguration.js","components/Admin/Configuration/ProductNameConfiguration.js","components/Admin/Configuration/JiraConfiguration.js","components/Admin/Configuration/AdminConfiguration.js","helpers/widgetEvents.js","custom-elements/widgetEventTypes.js","custom-elements/AdminConfigurationElement.js","api/customers.js","components/Admin/AddCustomerModal.js","api/partners.js","api/projects.js","auth/KeycloakViews.js","components/Admin/AddPartnerModal.js","components/Admin/EditProjectModal.js","components/Admin/ManagePartnersModal.js","components/Admin/ProjectActionItems.js","api/subscriptions.js","components/Customer/CustomerDataTable.js","components/Customer/CustomerDetails.js","components/Buttons/ButtonBody.js","helpers/icons.js","components/Admin/EditCustomerModal.js","components/Admin/AddProjectModal.js","components/Buttons/GhostButton.js","components/Customer/CustomerAccordian.js","components/Admin/AdminDashboard.js","api/tickets.js","components/SubscriptionDetails/TicketList.js","components/SubscriptionDetails/Subscription.js","components/Customer/CustomerProjectList.js","components/Admin/ManageSubscriptions/ManageSubscriptions.js","components/Forms/SubscriptionForm.js","components/Forms/OpenTicketForm.js","api/portalusers.js","api/keycloak.js","components/Admin/ManageUsers/AssignUsers.js","components/Admin/ManageUsers/DeleteUsers.js","components/Admin/ManageUsers/ManageUsers.js","components/App.js","custom-elements/AppElement.js","components/Login/Login.js","custom-elements/LoginElement.js","local/LocalApp.js","local/LocalAppElement.js"],"names":["i18n","defaultLocale","locale","fallbacks","translations","en","it","setLocale","PAGE_CUSTOMER_PORTAL","process","REACT_APP_PATH","PAGE_ADMIN_CONFIG","TICKETING_SYSTEM_CONFIG_ENUM","TICKET_TYPE","SUBSCRIPTION_LEVEL","PRODUCT_NAME","JIRA_CUSTOM_FIELD","Object","freeze","VALIDATION_VARS","getKeycloakToken","window","entando","keycloak","authenticated","token","isAuthenticated","props","initialized","authenticationChanged","prevProps","changedAuth","isPortalAdmin","hasKeycloakClientRole","isPortalSupport","isPortalPartner","isPortalCustomer","isPortalAdminOrSupport","isPortalUser","clientRole","resourceAccess","client","item","roles","includes","getDefaultOptions","headers","Headers","Authorization","getDefaultKeycloakOptions","getActiveSubscription","project","projectSubscriptions","find","status","setAppContext","resourceUrl","index","indexOf","cp","appContext","substring","getPageUrl","pageCode","url","getUrl","request","options","a","fetch","response","has","parseInt","get","data","json","Promise","reject","Error","statusText","resource","apiTicketingSystemDelete","serviceUrl","id","method","apiCurrentTicketingSystemGet","currentTicketingSystem","apiTicketingSystemsGet","ticketingSystems","length","apiTicketingSystemPost","ticketingSystem","secret","tsRequest","body","JSON","stringify","apiTicketingSystemPut","KeycloakContext","PropTypes","oneOfType","func","shape","current","elementType","React","createContext","withKeycloak","WrappedComponent","WithKeycloakComponent","renderWrappedComponent","value","forwardedRef","rest","ref","Consumer","this","Component","defaultProps","forwardRef","handleChanges","e","input","target","name","setState","handleFormSubmit","event","preventDefault","state","updateTicketingSystem","then","submitMsg","t","submitColour","catch","createTicketingSystem","ticketingSystemType","serviceAccount","serviceAccountSecret","systemId","fetchData","confirm","deleteTicketingSystem","className","style","color","Form","onSubmit","Select","labelText","onChange","SelectItem","text","map","type","i","TextInput","Button","kind","tabIndex","onClick","handleDelete","apiProductVersionsGet","apiProductVersionGet","versionId","apiUpdateProductVersionsStatus","apiProductVersionPost","productVersion","apiProductVersionPut","apiProductVersionDelete","handleValidation","addProductVersion","updateProductVersions","clearValues","document","querySelector","baseState","handleStartDateChange","date","startDate","moment","toISOString","format","handleEndDateChange","endDate","invalid","formIsValid","match","addEventListener","modalConfirmation","modalId","ModalWrapper","buttonTriggerText","renderTriggerButtonIcon","Add16","modalHeading","buttonTriggerClassName","handleSubmit","invalidText","DatePicker","dateFormat","datePickerType","DatePickerInput","placeholder","version","versionPut","buttonId","getVersionDetails","buttonClassName","primaryButtonText","secondaryButtonText","ProductVersion","handleDeleteVersion","deleteVersion","getProductVersions","versions","productVersions","DataTable","rows","rowData","headerData","getHeaderProps","getTableProps","TableContainer","Table","TableHead","TableRow","header","TableHeader","key","productName","TableBody","keys","TableCell","Toggle","size","handleToggleChange","aria-label","defaultToggled","display","width","entVersion","homeUrl","customer","subscription","Breadcrumb","margin","BreadcrumbItem","href","apiTicketingSystemConfigResourceGet","apiTicketingSystemConfigResourcePost","typeOfData","Data","keyBuilder","payloadBuilder","flag","TicketTypeConfiguration","ticketName","validations","isError","errorMsg","ticketTypeRowData","ticket","toLocaleLowerCase","ticketListBuilder","getTicketAndSubLevel","updateTicketTypeRowData","console","error","setFormData","timeoutId","setTimeout","trimStart","handleDeleteTicketType","updateTicketTypeAfterDeletedTicket","filter","ticketType","getTicketTypes","ticketTypeRecord","forEach","push","head","padding","paddingLeft","onBlur","trimEnd","renderIcon","paddingRight","ServiceSubLevelConfiguration","subscriptionLevel","serviceSubTypeRowData","subsListBuilder","updateserviceSubTypeRowData","levelName","handleDeleteServiceSubType","updateServiceSubTypeAfterDeletedSubscr","subLevel","getSubscription","subLevelRecord","subscr","subLeveRecord","ProductNameConfiguration","onEditProductNameHandle","changedProductName","open","onEditProductNameSave","updatedProdName","productOnChangeHandler","ComposedModal","onClose","title","data-modal-primary-focus","onMouseDown","JiraConfiguration","onClickJiraConfigEdit","onClickJiraConfigSave","jiraOnChangedValue","jiraConfigBuilder","jiraConfig","jiraConfigOnChangeHandler","getEleId","getEleValue","updateJiraconfig","errorUpdate","updateStateOfJiraConfig","onClickCloseModal","initJira","initializeJiraConfigObj","el","toString","getJiraConfigValues","content","config","idx","versionIdIsValid","organizationIdIsValid","subscriptionLevelIdIsValid","errMsg","jiraCustomField","getJiraConfig","organizationId","subscriptionLevelId","getTicketingSystemConfig","ticketTypesAndSubLevelsData","actualData","refinedTicketType","parse","refinedSubLevel","hasOwnProperty","jiraItem","jiraCustomFieldBuilder","refinedJiraCustomField","getAdminConfig","label","loading","prevState","adminConfig","Tile","Accordion","AccordionItem","description","subscribeToWidgetEvent","eventType","eventHandler","removeEventListener","KEYCLOAK_EVENT_TYPE","getKeycloakInstance","ATTRIBUTES","AdminConfigurationElement","mountPoint","createElement","unsubscribeFromKeycloakEvent","render","appendChild","baseUrl","getAttribute","Locale","ReactDOM","Provider","HTMLElement","customElements","define","apiCustomerDelete","apiCustomersGet","apiCustomerGet","apiCustomerPost","apiCustomerPut","apiAddProjectToCustomer","customerId","projectId","apiDeleteProjectFromCustomer","customerNumber","contactName","contactPhone","contactEmail","notes","customerPost","updateCustomerList","TextArea","apiPartnerPost","partner","apiProjectsGet","apiProjectsGetByCustomer","apiProjectGet","apiProjectPost","apiProjectPut","apiAddSubscriptionToProject","subscriptionId","apiAddUserToProject","userId","apiDeletePartnerFromProject","partnerId","apiDeleteSubscriptionFromProject","apiDeleteUserFromProject","apiAddPartnerToProject","apiGetProjectUsers","apiGetProjectSubscriptions","AuthenticatedView","children","UnauthenticatedView","partnerNumber","partnerPost","componentDidMount","projectList","projects","log","result","allProjects","trim","alert","projectPut","updateProjectList","customerList","customers","getCustomers","getAllProjects","getProjectDetails","Modal","onRequestClose","closeModal","onRequestSubmit","ManagePartnersModal","handleRemovePartner","removePartner","err","partners","border","borderTop","ProjectActionItems","handleCloseModal","openEditProject","openManagePartners","isAdmin","history","deleteProject","OverflowMenuItem","itemText","handleDeleteProject","isDelete","editProject","editProjectModal","managePartners","managePartnersModal","manageSubscriptions","manageUsers","subscriptionParam","newOrRenewSubscription","openTicket","viewAllTickets","ticketsUrl","substr","viewSubscription","overflowModals","OverflowMenu","flipped","menuOptionsClass","withRouter","formatStartDate","String","Date","toDateString","formatEndDate","lengthInMonths","setMonth","getMonth","apiSubscriptionGet","apiProjectSubscriptionPost","projectSubscriptionCreation","apiProjectSubscriptionPut","apiRenewSubscription","projectSubscriptionRenew","action","showMenu","initializeHeaderData","callback","to","fontWeight","partnerIndex","entandoVersion","minHeight","paddingBottom","ButtonBody","icon","IconDelete","height","viewBox","fill","xmlns","d","IconDetails","IconEdit","IconPlus","fillRule","clipRule","mask-type","maskUnits","x","y","mask","getCustomerDetails","getCustomer","updateCustomer","projectPost","GhostButton","deleteCustomer","accordionOpened","textDecoration","ticketSystemConfig","getTime","handleSearch","newFilteredState","toLowerCase","filteredCustomers","currentPage","undefined","role","test","numberOfPages","Math","ceil","customerCount","Search","onKeyPress","InlineLoading","indexOfLastItem","firstIndexOfCurrentPage","PaginationNav","loop","Boolean","page","Number","totalItems","itemsShown","jiraResource","apiJiraTicketsGet","apiJiraTicketPost","tickets","ticketSystemUrl","ticketingSystemBaseUrl","ticketCount","rel","ticketUrl","summary","priority","createDate","updateDate","subscriptionData","updateSubscription","users","params","license","level","user","username","handleDeleteSubscription","deleteSubscription","subscriptions","FORM_TYPE","SUBSCRIPTION_STATUS","requested","pending","active","expired","submitSuccess","submitError","formatted","formType","subscriptionRequest","stateToSubscription","updateStateForSuccess","newSubscription","res","renewSubscription","entandoVersionId","subsList","getLevelList","subLists","str","isNaN","isNumeric","success","renewal","projectSubscription","toUpperCase","subscriptionLevelList","unshift","versionList","statusList","entries","setupFormComponents","disabled","subscriptionType","createFormMessage","subMessageKey","formLabelKey","successErrorMessage","renderForm","createTicket","types","priorities","getTicketingSystem","ticketTypes","ticketTypesArr","sort","b","localeCompare","apiUserGetByUsernameAndEmail","email","apiKeycloakUserGet","realm","usersResource","mapKeycloakUserEmails","keycloakUsers","usernameEmailMap","Map","keycloakUser","set","assignUser","handleFormValidation","assignUserToProject","dispatchEvent","CustomEvent","getPortalUserId","portalUserId","portalUserApi","portalUser","warn","authServerUrl","userList","handleRemoveUser","displayUsers","handleUserDisplay","userAccess","row","cells","cell","userFunctionality","path","AppElement","KEYCLOAK_EVENT_ID","keycloakEventHandler","bind","keycloakEvent","detail","logout","loginUrl","location","redirectUri","origin","login","LoginElement","forceRefresh","exact","LocalAppElement"],"mappings":"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","file":"static/js/main.91fa2c56.chunk.js","sourcesContent":["import i18n from 'i18n-js';\r\n\r\nimport en from './i18n/locales/en.json';\r\nimport it from './i18n/locales/it.json';\r\n\r\ni18n.defaultLocale = 'en';\r\ni18n.locale = 'en';\r\ni18n.fallbacks = true;\r\ni18n.translations = { en, it };\r\n\r\nexport const setLocale = locale => {\r\n  i18n.locale = locale;\r\n};\r\n\r\nexport default i18n;\r\n","export const DOMAIN = process.env.REACT_APP_PATH || ''; // eslint-disable-line import/prefer-default-export\r\n\r\n//Customer Portal roles\r\nexport const ADMIN = 'cp-admin';\r\nexport const SUPPORT = 'cp-support';\r\nexport const PARTNER = 'cp-partner';\r\nexport const CUSTOMER = 'cp-customer';\r\n\r\n//Page codes\r\nexport const PAGE_CUSTOMER_PORTAL = 'customer_portal.page'\r\nexport const PAGE_ADMIN_CONFIG = 'cp_admin_config.page'\r\n\r\n// TICKETING_SYSTEM_CONFIG ENUM\r\nexport const TICKETING_SYSTEM_CONFIG_ENUM = {\r\n    TICKET_TYPE: \"TICKET_TYPE\",\r\n    SUBSCRIPTION_LEVEL: \"SUBSCRIPTION_LEVEL\",\r\n    PRODUCT_NAME: \"PRODUCT_NAME\",\r\n    JIRA_CUSTOM_FIELD: \"JIRA_CUSTOM_FIELD\"\r\n};\r\nObject.freeze(TICKETING_SYSTEM_CONFIG_ENUM);\r\n\r\nexport const VALIDATION_VARS = {\r\n    CHAR_LIMIT_MSG_APPEAR_TIME: 2000,\r\n    CHAR_MIN_LIMIT: 3,\r\n    CHAR_MAX_LIMIT: 100\r\n}","import {ADMIN, SUPPORT, CUSTOMER, PARTNER} from './constants';\n\nexport const getKeycloakToken = () => {\n  if (window && window.entando && window.entando.keycloak && window.entando.keycloak.authenticated) {\n    return window.entando.keycloak.token;\n  }\n  return '';\n};\n\nexport const isAuthenticated = props => {\n  const {keycloak} = props;\n  return keycloak.initialized && keycloak.authenticated;\n};\n\nexport const authenticationChanged = (props, prevProps) => {\n  const authenticated = isAuthenticated(props);\n  const changedAuth = prevProps.keycloak.authenticated !== authenticated;\n  return authenticated && changedAuth;\n};\n\nexport const isPortalAdmin = () => {\n  return hasKeycloakClientRole(ADMIN);\n};\n\nexport const isPortalSupport = () => {\n  return hasKeycloakClientRole(SUPPORT);\n};\n\nexport const isPortalPartner = () => {\n  return hasKeycloakClientRole(PARTNER);\n};\n\nexport const isPortalCustomer = () => {\n  return hasKeycloakClientRole(CUSTOMER);\n};\n\nexport const isPortalAdminOrSupport = () => {\n  return isPortalAdmin() || isPortalSupport();\n};\n\nexport const isPortalCustomerOrPartner = () => {\n  return isPortalCustomer() || isPortalPartner();\n};\n\nexport const isPortalUser = () => {\n  return isPortalAdminOrSupport() || isPortalCustomerOrPartner();\n};\n\nexport const hasKeycloakClientRole = clientRole => {\n  if (getKeycloakToken()) {\n    const { resourceAccess } = window.entando.keycloak;\n    if (resourceAccess) {\n      for (const client in resourceAccess) {\n        const item = resourceAccess[client];\n        if (item.roles && item.roles.includes(clientRole)) {\n          // console.debug(\"Found role {} with client {} \", clientRole, client);\n          return true;\n        }\n      }\n    }\n  }\n  return false;\n};\n\nexport const getDefaultOptions = () => ({\n  headers: new Headers({\n    Authorization: `Bearer ${getKeycloakToken()}`,\n    'Content-Type': 'application/json',\n  }),\n});\n\nexport const getDefaultKeycloakOptions = () => ({\n  headers: new Headers({\n    Authorization: `Bearer ${getKeycloakToken()}`,\n    'Content-Type': 'application/x-www-form-urlencoded',\n  }),\n});\n\nexport const getActiveSubscription = project => {\n  return (\n    project &&\n    project.projectSubscriptions &&\n    project.projectSubscriptions.find(item => {\n      return item.status === 'ACTIVE' ? item : null;\n    })\n  );\n};\n\n//Expected resourceUrl - <@wp.resourceURL /> = /entando-de-app/cmsresources/ or /cmsresources/\nexport const setAppContext = resourceUrl => {\n  const index = resourceUrl.indexOf('cmsresources');\n  const cp = {\n    appContext: '/'\n  }\n  if (index > 0) {\n    cp.appContext = resourceUrl.substring(0, index)\n  }\n  window.entando = {\n    ...(window.entando || {}),\n    cp,\n  };\n}\n\nexport const getPageUrl = (pageCode, locale) => {\n  var appContext = window.entando.cp.appContext;\n  const url = `${appContext}${locale}/${pageCode}`;\n  return getUrl(url);\n}\n\nexport const getUrl = url => {\n  return `${url}`;\n};\n\nexport const request = async (url, options) => {\n  const response = await fetch(url, options);\n\n  const headers = {\n    ...(response.headers.has('X-Total-Count') ? {'X-Total-Count': parseInt(response.headers.get('X-Total-Count'), 10)} : {}),\n  };\n\n  if (response.status === 204) {\n    return { data: '', status: response.status };\n  }\n\n  return response.status >= 200 && response.status < 300\n    ? { data: await response.json(), headers, status: response.status }\n    : Promise.reject(new Error(response.statusText || response.status));\n};\n","import {getDefaultOptions, request} from './helpers';\r\n\r\nconst resource = 'api/ticketing-systems';\r\n\r\nexport const apiTicketingSystemDelete = async (serviceUrl, id) => {\r\n  const url = `${serviceUrl}/${resource}/${id}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\n//Simplifying assumptions\r\n// 1) Take the latest ticketing system as the current config. There should be only 1.\r\n// 2) Only load it once in the current context\r\nexport const apiCurrentTicketingSystemGet = async serviceUrl => {\r\n  if (window.entando.currentTicketingSystem == null) {\r\n    const ticketingSystems = (await apiTicketingSystemsGet(serviceUrl)).data;\r\n    window.entando.currentTicketingSystem = ticketingSystems && ticketingSystems.length ? ticketingSystems[ticketingSystems.length - 1] : null;\r\n  }\r\n  return window.entando.currentTicketingSystem;\r\n};\r\n\r\nexport const apiTicketingSystemsGet = async serviceUrl => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\n//Note: post and put both use a ticketingsystemrequest\r\nexport const apiTicketingSystemPost = async (serviceUrl, ticketingSystem, secret) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const tsRequest = {\r\n    \"ticketingSystem\": ticketingSystem,\r\n    \"secret\": secret\r\n  }\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n    body: JSON.stringify(tsRequest),\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiTicketingSystemPut = async (serviceUrl, ticketingSystem, secret) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const tsRequest = {\r\n    \"ticketingSystem\": ticketingSystem,\r\n    \"secret\": secret\r\n  }\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'PUT',\r\n    body: JSON.stringify(tsRequest),\r\n  };\r\n  return request(url, options);\r\n};\r\n","import React from 'react';\r\n\r\nconst KeycloakContext = React.createContext(null);\r\n\r\nexport default KeycloakContext;\r\n","import PropTypes from 'prop-types';\r\n\r\nexport default PropTypes.oneOfType([PropTypes.func, PropTypes.shape({ current: PropTypes.elementType }), PropTypes.shape(null)]);\r\n","/* eslint-disable react/jsx-props-no-spreading */\r\nimport React, { forwardRef, Component } from 'react';\r\nimport refType from '../components/__types__/ref';\r\nimport KeycloakContext from './KeycloakContext';\r\n\r\nexport default function withKeycloak(WrappedComponent) {\r\n  class WithKeycloakComponent extends Component {\r\n    renderWrappedComponent = value => {\r\n      const { forwardedRef, ...rest } = this.props;\r\n      return <WrappedComponent {...rest} ref={forwardedRef} keycloak={value} />;\r\n    };\r\n\r\n    render() {\r\n      return <KeycloakContext.Consumer>{this.renderWrappedComponent}</KeycloakContext.Consumer>;\r\n    }\r\n  }\r\n\r\n  WithKeycloakComponent.propTypes = {\r\n    forwardedRef: refType,\r\n  };\r\n\r\n  WithKeycloakComponent.defaultProps = {\r\n    forwardedRef: () => {},\r\n  };\r\n\r\n  return forwardRef((props, ref) => <WithKeycloakComponent {...props} forwardedRef={ref} />);\r\n}\r\n","import React, { Component } from 'react';\r\nimport i18n from '../../../i18n';\r\nimport { Form, TextInput, Select, SelectItem, Button } from 'carbon-components-react';\r\nimport {\r\n  apiCurrentTicketingSystemGet,\r\n  apiTicketingSystemDelete,\r\n  apiTicketingSystemPost,\r\n  apiTicketingSystemPut,\r\n} from '../../../api/ticketingsystem';\r\nimport {authenticationChanged, isAuthenticated, isPortalAdmin} from '../../../api/helpers';\r\nimport withKeycloak from '../../../auth/withKeycloak';\r\n\r\nclass TicketingSystem extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      ticketingSystem: {},\r\n      ticketingSystemType: 'Jira',\r\n      url: '',\r\n      serviceAccount: '',\r\n      serviceAccountSecret: '',\r\n      systemId: '',\r\n      submitMsg: '',\r\n      submitColour: 'black',\r\n    };\r\n  }\r\n\r\n  handleChanges = e => {\r\n    const input = e.target;\r\n    const name = input.name;\r\n    const value = input.value;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  async createTicketingSystem() {\r\n    const ticketingSystem = {\r\n      url: this.state.url,\r\n      serviceAccount: this.state.serviceAccount,\r\n      systemId: this.state.systemId,\r\n    };\r\n    const response = (await apiTicketingSystemPost(this.props.serviceUrl, ticketingSystem, this.state.serviceAccountSecret)).data;\r\n    this.setState({\r\n      ticketingSystem: response,\r\n    });\r\n  }\r\n\r\n  async updateTicketingSystem() {\r\n    const ticketingSystem = {\r\n      id: this.state.ticketingSystem.id,\r\n      url: this.state.url,\r\n      serviceAccount: this.state.serviceAccount,\r\n      systemId: this.state.systemId,\r\n    };\r\n    return await apiTicketingSystemPut(this.props.serviceUrl, ticketingSystem, this.state.serviceAccountSecret);\r\n  }\r\n\r\n  async fetchData() {\r\n    const ticketingSystem = await apiCurrentTicketingSystemGet(this.props.serviceUrl);\r\n    this.setState({\r\n      ticketingSystem: ticketingSystem,\r\n      url: ticketingSystem ? ticketingSystem.url : '',\r\n      serviceAccount: ticketingSystem ? ticketingSystem.serviceAccount : '',\r\n      //Secret needs to be entered each time\r\n      systemId: ticketingSystem ? ticketingSystem.systemId : '',\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (isAuthenticated(this.props)) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (authenticationChanged(this.props, prevProps)) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n\r\n  async deleteTicketingSystem() {\r\n    return await apiTicketingSystemDelete(this.props.serviceUrl, this.state.ticketingSystem.id);\r\n  }\r\n\r\n  handleDelete() {\r\n    if (window.confirm('Are you sure you want to delete this ticketing system?')) {\r\n      this.deleteTicketingSystem()\r\n        .then(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.deleted'),\r\n            submitColour: '#24a148',\r\n          });\r\n          this.fetchData();\r\n        })\r\n        .catch(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.error'),\r\n            submitColour: '#da1e28',\r\n          });\r\n        });\r\n    }\r\n  }\r\n\r\n  handleFormSubmit = event => {\r\n    event.preventDefault();\r\n    if (!this.state.ticketingSystem) {\r\n      this.createTicketingSystem()\r\n        .then(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.created'),\r\n            submitColour: '#24a148',\r\n          });\r\n        })\r\n        .catch(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.error'),\r\n            submitColour: '#da1e28',\r\n          });\r\n        });\r\n    } else {\r\n      this.updateTicketingSystem()\r\n        .then(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.updated'),\r\n            submitColour: '#24a148',\r\n          });\r\n        })\r\n        .catch(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.error'),\r\n            submitColour: '#da1e28',\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const ticketingSystemTypes = ['Jira'];\r\n    if (isPortalAdmin()) {\r\n      return (\r\n        <div className=\"cp-form\">\r\n          <p style={{ color: this.state.submitColour }}>{this.state.submitMsg}</p>\r\n          <Form onSubmit={this.handleFormSubmit}>\r\n            <div className=\"bx--grid\">\r\n              <div className=\"bx--row\">\r\n                <div className=\"bx--col\">\r\n                  <Select\r\n                    id=\"ticketingSystemType\"\r\n                    name=\"ticketingSystemType\"\r\n                    labelText={i18n.t('adminConfig.integrationTicketingSystem.selectBackendTicketingSystem')}\r\n                    value={this.state.ticketingSystemType}\r\n                    onChange={this.handleChanges}\r\n                  >\r\n                    <SelectItem text={i18n.t('adminConfig.integrationTicketingSystem.select')}\r\n                                value=\"ticketing-system\"/>\r\n                    {ticketingSystemTypes.map((type, i) => (\r\n                      <SelectItem key={i} text={type} value={type}>\r\n                        {type}\r\n                      </SelectItem>\r\n                    ))}\r\n                  </Select>\r\n                  <TextInput\r\n                    id=\"serviceAccount\"\r\n                    name=\"serviceAccount\"\r\n                    labelText={i18n.t('adminConfig.integrationTicketingSystem.userName')}\r\n                    value={this.state.serviceAccount}\r\n                    onChange={this.handleChanges}\r\n                  />\r\n                  <TextInput\r\n                    id=\"systemId\"\r\n                    name=\"systemId\"\r\n                    labelText={i18n.t('adminConfig.integrationTicketingSystem.projectName')}\r\n                    value={this.state.systemId}\r\n                    onChange={this.handleChanges}\r\n                  />\r\n                </div>\r\n                <div className=\"bx--col\">\r\n                  <TextInput\r\n                    id=\"url\"\r\n                    name=\"url\"\r\n                    labelText={i18n.t('adminConfig.integrationTicketingSystem.url')}\r\n                    value={this.state.url}\r\n                    onChange={this.handleChanges}\r\n                  />\r\n                  <TextInput\r\n                    id=\"serviceAccountSecret\"\r\n                    name=\"serviceAccountSecret\"\r\n                    type=\"password\"\r\n                    labelText={i18n.t('adminConfig.integrationTicketingSystem.password')}\r\n                    value={this.state.serviceAccountSecret}\r\n                    onChange={this.handleChanges}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <Button kind=\"primary\" tabIndex={0} type=\"submit\">\r\n                {' '}\r\n                {i18n.t('buttons.submit')}{' '}\r\n              </Button>\r\n              {this.state.ticketingSystem ? (\r\n                <Button kind=\"danger\" onClick={() => this.handleDelete()}>\r\n                  {' '}\r\n                  Delete{' '}\r\n                </Button>\r\n              ) : null}\r\n            </div>\r\n          </Form>\r\n        </div>\r\n      );\r\n    }\r\n    // Unauthorized\r\n    else {\r\n      return <p>{i18n.t('userMessages.unauthorized')}</p>;\r\n    }\r\n  }\r\n}\r\n\r\nexport default withKeycloak(TicketingSystem);\r\n","import { getDefaultOptions, request } from './helpers';\r\n\r\nconst resource = 'api/entando-versions';\r\n\r\nexport const apiProductVersionsGet = async serviceUrl => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiProductVersionGet = async (serviceUrl, versionId) => {\r\n  const url = `${serviceUrl}/${resource}/${versionId}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiUpdateProductVersionsStatus = async (serviceUrl, id) => {\r\n  const url = `${serviceUrl}/${resource}/${id}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'PUT',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiProductVersionPost = async (serviceUrl, productVersion) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n    body: productVersion ? JSON.stringify(productVersion) : null,\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiProductVersionPut = async (serviceUrl, productVersion) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'PUT',\r\n    body: productVersion ? JSON.stringify(productVersion) : null,\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiProductVersionDelete = async (serviceUrl, id) => {\r\n  const url = `${serviceUrl}/${resource}/${id}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE',\r\n  };\r\n  return request(url, options);\r\n};\r\n","import React, { Component } from 'react';\r\nimport i18n from '../../i18n';\r\nimport { ModalWrapper, Form, TextInput, DatePicker, DatePickerInput } from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport { apiProductVersionPost } from '../../api/productVersion';\r\nimport moment from 'moment';\r\nimport {isAuthenticated} from \"../../api/helpers\";\r\nimport { Add16 } from '@carbon/icons-react'\r\n\r\nclass AddProductVersionModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      name: '',\r\n      startDate: '',\r\n      endDate: '',\r\n      invalid: {},\r\n      submitMsg: '',\r\n      submitColour: 'black',\r\n    };\r\n\r\n    this.baseState = this.state;\r\n  }\r\n\r\n  handleValidation() {\r\n    let invalid = {};\r\n    let formIsValid = true;\r\n\r\n    //name\r\n    if (this.state.name === '') {\r\n      formIsValid = false;\r\n      invalid['name'] = true;\r\n    }\r\n\r\n    if (typeof this.state.startDate !== 'undefined') {\r\n      if (!this.state.startDate.match(/^(0[1-9]|1[0-2])\\/(0[1-9]|1\\d|2\\d|3[01])\\/(19|20)\\d{2}$/)) {\r\n        formIsValid = false;\r\n        invalid['startDate'] = true;\r\n      }\r\n    }\r\n\r\n    if (typeof this.state.endDate !== 'undefined') {\r\n      if (!this.state.endDate.match(/^(0[1-9]|1[0-2])\\/(0[1-9]|1\\d|2\\d|3[01])\\/(19|20)\\d{2}$/)) {\r\n        formIsValid = false;\r\n        invalid['endDate'] = true;\r\n      }\r\n    }\r\n\r\n    this.setState({ invalid: invalid });\r\n    return formIsValid;\r\n  }\r\n\r\n  handleChanges = e => {\r\n    const input = e.target;\r\n    const name = input.name;\r\n    const value = input.value;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  async addProductVersion() {\r\n    if (isAuthenticated(this.props)) {\r\n      return await apiProductVersionPost(this.props.serviceUrl, this.state);\r\n    }\r\n  }\r\n\r\n  handleFormSubmit = () => {\r\n    const formIsValid = this.handleValidation();\r\n\r\n    if (formIsValid) {\r\n      this.addProductVersion()\r\n        .then(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.added'),\r\n            submitColour: '#24a148',\r\n          });\r\n          this.props.updateProductVersions();\r\n        })\r\n        .catch(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.error'),\r\n            submitColour: '#da1e28',\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  clearValues = () => {\r\n    const customerModalElement = document.querySelector('#modal-form-product-version');\r\n    if (!customerModalElement.className.includes('is-visible')) {\r\n      this.setState(this.baseState);\r\n    }\r\n  };\r\n\r\n  handleStartDateChange = date => {\r\n    this.setState({\r\n      startDate: moment(date[0].toISOString()).format('MM/DD/YYYY'),\r\n    });\r\n  };\r\n\r\n  handleEndDateChange = date => {\r\n    this.setState({\r\n      endDate: moment(date[0].toISOString()).format('MM/DD/YYYY'),\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    const modalOpenButton = document.querySelector('.add-product-version-button');\r\n    modalOpenButton.addEventListener('click', this.clearValues, false);\r\n  }\r\n\r\n  render() {\r\n    const modalConfirmation = (\r\n      <div className=\"bx--modal-header\">\r\n        <p style={{color: this.state.submitColour}}>{this.state.submitMsg}</p>\r\n      </div>\r\n    );\r\n    const modalId = 'modal-form-product-version';\r\n    return (\r\n      <ModalWrapper\r\n        buttonTriggerText={i18n.t('buttons.addProductVersion')}\r\n        renderTriggerButtonIcon={Add16}\r\n        modalHeading={i18n.t('adminDashboard.addProductVersion.title')}\r\n        buttonTriggerClassName=\"add-product-version bx--btn bx--btn--tertiary add-product-version-button\"\r\n        className=\"modal-form\"\r\n        id={modalId}\r\n        handleSubmit={this.handleFormSubmit}\r\n      >\r\n        {modalConfirmation}\r\n        <div className=\"form-container\">\r\n          <Form onSubmit={this.handleFormSubmit}>\r\n            <TextInput\r\n              id={'name' + modalId}\r\n              name=\"name\"\r\n              labelText={i18n.t('adminDashboard.addProductVersion.productVersion')}\r\n              value={this.state.name}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.required')}\r\n              invalid={this.state.invalid['name']}\r\n            />\r\n            <DatePicker dateFormat=\"m/d/Y\" datePickerType=\"single\" onChange={this.handleStartDateChange}>\r\n              <DatePickerInput\r\n                id={'startDate' + modalId}\r\n                name=\"startDate\"\r\n                placeholder=\"mm/dd/yyyy\"\r\n                labelText={i18n.t('adminDashboard.addProductVersion.productVersionStartDate')}\r\n                value={this.state.startDate}\r\n                //onChange={this.handleChanges}\r\n                type=\"text\"\r\n                invalidText={i18n.t('validation.invalid.date')}\r\n                invalid={this.state.invalid['startDate']}\r\n              />\r\n            </DatePicker>\r\n            <DatePicker dateFormat=\"m/d/Y\" datePickerType=\"single\" onChange={this.handleEndDateChange}>\r\n              <DatePickerInput\r\n                id={'endDate' + modalId}\r\n                name=\"endDate\"\r\n                placeholder=\"mm/dd/yyyy\"\r\n                labelText={i18n.t('adminDashboard.addProductVersion.productVersionEndDate')}\r\n                value={this.state.endDate}\r\n                type=\"text\"\r\n                invalidText={i18n.t('validation.invalid.date')}\r\n                invalid={this.state.invalid['endDate']}\r\n              />\r\n            </DatePicker>\r\n          </Form>\r\n        </div>\r\n        {modalConfirmation}\r\n      </ModalWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withKeycloak(AddProductVersionModal);\r\n","import React, { Component } from 'react';\r\nimport i18n from '../../i18n';\r\nimport { ModalWrapper, Form, TextInput, DatePicker, DatePickerInput } from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport { apiProductVersionGet, apiProductVersionPut } from '../../api/productVersion';\r\nimport moment from 'moment';\r\nimport {authenticationChanged, isAuthenticated} from '../../api/helpers';\r\n\r\nclass EditVersionModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      name: '',\r\n      startDate: '',\r\n      endDate: '',\r\n      invalid: {},\r\n      modalId: '',\r\n      buttonId: '',\r\n      submitMsg: '',\r\n      submitColour: 'black',\r\n    };\r\n  }\r\n\r\n  handleValidation() {\r\n    let invalid = {};\r\n    let formIsValid = true;\r\n\r\n    //name\r\n    if (this.state.name === '') {\r\n      formIsValid = false;\r\n      invalid['name'] = true;\r\n    }\r\n\r\n    if (typeof this.state.startDate !== 'undefined') {\r\n      if (!this.state.startDate.match(/^(0[1-9]|1[0-2])\\/(0[1-9]|1\\d|2\\d|3[01])\\/(19|20)\\d{2}$/)) {\r\n        formIsValid = false;\r\n        invalid['startDate'] = true;\r\n      }\r\n    }\r\n\r\n    if (typeof this.state.endDate !== 'undefined') {\r\n      if (!this.state.endDate.match(/^(0[1-9]|1[0-2])\\/(0[1-9]|1\\d|2\\d|3[01])\\/(19|20)\\d{2}$/)) {\r\n        formIsValid = false;\r\n        invalid['endDate'] = true;\r\n      }\r\n    }\r\n\r\n    this.setState({ invalid: invalid });\r\n    return formIsValid;\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (authenticationChanged(this.props, prevProps)) {\r\n      this.getVersionDetails();\r\n    }\r\n  }\r\n\r\n  handleChanges = e => {\r\n    const input = e.target;\r\n    const name = input.name;\r\n    const value = input.value;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleStartDateChange = date => {\r\n    this.setState({\r\n      startDate: moment(date[0].toISOString()).format('MM/DD/YYYY'),\r\n    });\r\n  };\r\n\r\n  handleEndDateChange = date => {\r\n    this.setState({\r\n      endDate: moment(date[0].toISOString()).format('MM/DD/YYYY'),\r\n    });\r\n  };\r\n\r\n  async getVersionDetails() {\r\n    const version = await apiProductVersionGet(this.props.serviceUrl, this.props.version.id);\r\n    this.setState({\r\n      name: version.data.name,\r\n      startDate: moment(version.data.startDate).format('MM/DD/YYYY'),\r\n      endDate: moment(version.data.endDate).format('MM/DD/YYYY'),\r\n      modalId: 'modal-form-version-edit-' + version.data.id,\r\n      buttonId: 'edit-version-button-' + version.data.id,\r\n    });\r\n  }\r\n\r\n  async versionPut(version) {\r\n    return await apiProductVersionPut(this.props.serviceUrl, version);\r\n  }\r\n\r\n  handleFormSubmit = () => {\r\n    const formIsValid = this.handleValidation();\r\n\r\n    if (formIsValid) {\r\n      const version = {\r\n        id: this.props.version.id,\r\n        name: this.state.name,\r\n        startDate: moment(this.state.startDate).format(),\r\n        endDate: moment(this.state.endDate).format(),\r\n      };\r\n      this.versionPut(version)\r\n        .then(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.updated'),\r\n            submitColour: '#24a148',\r\n          });\r\n          this.props.updateProductVersions();\r\n        })\r\n        .catch(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.error'),\r\n            submitColour: '#da1e28',\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (isAuthenticated(this.props)) {\r\n      this.getVersionDetails();\r\n      const modalOpenButton = document.querySelector('.edit-version-button-' + this.props.version.id);\r\n      modalOpenButton.addEventListener('click', this.clearValues, false);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const modalConfirmation = (\r\n      <div className=\"bx--modal-header\">\r\n        <p style={{color: this.state.submitColour}}>{this.state.submitMsg}</p>\r\n      </div>\r\n    );\r\n    const buttonClassName = 'bx--btn bx--btn--ghost edit-version-button-' + this.props.version.id;\r\n    const modalId = this.state.modalId;\r\n    return (\r\n      <ModalWrapper\r\n        buttonTriggerText={i18n.t('buttons.edit')}\r\n        modalHeading={i18n.t('adminDashboard.addProject.editTitle')}\r\n        buttonTriggerClassName={buttonClassName}\r\n        className=\"modal-form\"\r\n        id={this.state.modalId}\r\n        handleSubmit={this.handleFormSubmit}\r\n        primaryButtonText={i18n.t('modalText.save')}\r\n        secondaryButtonText={i18n.t('modalText.cancel')}\r\n      >\r\n        {modalConfirmation}\r\n        <div className=\"form-container\">\r\n          <Form onSubmit={this.handleFormSubmit} id={'form' + modalId}>\r\n            <TextInput\r\n              id={'name' + modalId}\r\n              name=\"name\"\r\n              labelText={i18n.t('adminDashboard.addProject.projectName') + ' *'}\r\n              value={this.state.name}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.required')}\r\n              invalid={this.state.invalid['name']}\r\n            />\r\n            <DatePicker dateFormat=\"m/d/Y\" datePickerType=\"single\" onChange={this.handleStartDateChange}\r\n                        value={this.state.startDate}>\r\n              <DatePickerInput\r\n                id={'startDate' + modalId}\r\n                name=\"startDate\"\r\n                placeholder=\"mm/dd/yyyy\"\r\n                labelText={i18n.t('subscriptionDetails.startDate') + ' *'}\r\n                onChange={this.handleChanges}\r\n                type=\"text\"\r\n                invalidText={i18n.t('validation.invalid.date')}\r\n                invalid={this.state.invalid['startDate']}\r\n              />\r\n            </DatePicker>\r\n            <DatePicker\r\n              dateFormat=\"m/d/Y\"\r\n              datePickerType=\"single\"\r\n              onChange={this.handleEndDateChange}\r\n              id={'endDate' + modalId}\r\n              name=\"endDate\"\r\n              value={this.state.endDate}\r\n            >\r\n              <DatePickerInput\r\n                id={'endDate' + modalId}\r\n                name=\"endDate\"\r\n                placeholder=\"mm/dd/yyyy\"\r\n                labelText={i18n.t('subscriptionDetails.endDate') + ' *'}\r\n                onChange={this.handleChanges}\r\n                type=\"text\"\r\n                invalidText={i18n.t('validation.invalid.date')}\r\n                invalid={this.state.invalid['endDate']}\r\n              />\r\n            </DatePicker>\r\n          </Form>\r\n        </div>\r\n        {modalConfirmation}\r\n      </ModalWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withKeycloak(EditVersionModal);\r\n","import React, { Component } from 'react';\r\nimport i18n from '../../../i18n';\r\nimport {\r\n  DataTable,\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableHeader,\r\n  TableBody,\r\n  TableCell,\r\n  Toggle,\r\n  Button,\r\n} from 'carbon-components-react';\r\nimport { apiProductVersionDelete, apiProductVersionsGet, apiUpdateProductVersionsStatus } from '../../../api/productVersion';\r\nimport withKeycloak from '../../../auth/withKeycloak';\r\nimport AddProductVersionModal from '../AddProductVersionModal';\r\nimport {authenticationChanged, isAuthenticated, isPortalAdminOrSupport} from '../../../api/helpers';\r\nimport EditVersionModal from '../EditVersionModal';\r\n\r\nclass ProductVersion extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      versions: '',\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (isPortalAdminOrSupport()) {\r\n      this.getProductVersions();\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (authenticationChanged(this.props, prevProps) && isPortalAdminOrSupport()) {\r\n      this.getProductVersions();\r\n    }\r\n  }\r\n\r\n  async getProductVersions() {\r\n    if (isAuthenticated(this.props)) {\r\n      const productVersions = await apiProductVersionsGet(this.props.serviceUrl);\r\n\r\n      this.setState({\r\n        versions: productVersions.data,\r\n      });\r\n    }\r\n  }\r\n\r\n  async deleteVersion(id) {\r\n    if (isAuthenticated(this.props)) {\r\n      return await apiProductVersionDelete(this.props.serviceUrl, id);\r\n    }\r\n  }\r\n\r\n  handleDeleteVersion = (e, id) => {\r\n    e.preventDefault();\r\n    if (window.confirm('Are you sure you want to delete this Entando version?')) {\r\n      this.deleteVersion(id)\r\n        .then(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.deleted'),\r\n            submitColour: '#24a148',\r\n          });\r\n          this.updateProductVersions();\r\n        })\r\n        .catch(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.error'),\r\n            submitColour: '#da1e28',\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  updateProductVersions = () => {\r\n    this.getProductVersions();\r\n  };\r\n\r\n  async handleToggleChange(id) {\r\n    return await apiUpdateProductVersionsStatus(this.props.serviceUrl, id);\r\n  }\r\n\r\n  render() {\r\n    if (isPortalAdminOrSupport()) {\r\n      return (\r\n        <>\r\n          <DataTable rows={rowData} headers={headerData}>\r\n            {({rows, headers, getHeaderProps, getTableProps}) => (\r\n              <TableContainer>\r\n                <Table {...getTableProps()}>\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      {headers.map(header => (\r\n                        <TableHeader {...getHeaderProps({ header })}>{header.key === 'entVersion' ? `${this.props.productName} Version` : header.header}</TableHeader>\r\n                      ))}\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {Object.keys(this.state.versions).length !== 0\r\n                      ? this.state.versions.map((productVersion, index) => (\r\n                        <TableRow key={index}>\r\n                          <TableCell>{productVersion.name}</TableCell>\r\n                          <TableCell>\r\n                            <Toggle\r\n                              size=\"sm\"\r\n                              onClick={() => this.handleToggleChange(productVersion.id)}\r\n                              aria-label=\"toggle button\"\r\n                              id={'toggle' + productVersion.id}\r\n                              defaultToggled={productVersion.status}\r\n                            />\r\n                          </TableCell>\r\n                          <TableCell>{productVersion.startDate}</TableCell>\r\n                          <TableCell>{productVersion.endDate}</TableCell>\r\n                          <TableCell>\r\n                            <div style={{display: 'flex'}}>\r\n                              <EditVersionModal\r\n                                key={productVersion.id}\r\n                                version={productVersion}\r\n                                serviceUrl={this.props.serviceUrl}\r\n                                updateProductVersions={this.updateProductVersions}\r\n                              />\r\n                                <Button\r\n                                  kind=\"ghost\"\r\n                                  onClick={e => this.handleDeleteVersion(e, productVersion.id)}\r\n                                  style={{ display: 'flex', width: '100%', color: 'red' }}\r\n                                >\r\n                                  {i18n.t('buttons.delete')}\r\n                                </Button>\r\n                              </div>\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        ))\r\n                      : null}\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            )}\r\n          </DataTable>\r\n          <br />\r\n          <AddProductVersionModal serviceUrl={this.props.serviceUrl} updateProductVersions={this.updateProductVersions} />\r\n        </>\r\n      );\r\n    } else {\r\n      return <p>{i18n.t('userMessages.unauthorized')}</p>;\r\n    }\r\n  }\r\n}\r\n\r\nconst headerData = [\r\n  {\r\n    header: i18n.t('adminConfig.manageProductVersion.entandoVersion'),\r\n    key: 'entVersion',\r\n  },\r\n  {\r\n    header: i18n.t('adminConfig.manageProductVersion.status'),\r\n    key: 'status',\r\n  },\r\n  {\r\n    header: i18n.t('adminConfig.manageProductVersion.startDate'),\r\n    key: 'startDate',\r\n  },\r\n  {\r\n    header: i18n.t('adminConfig.manageProductVersion.supportEndDate'),\r\n    key: 'endDate',\r\n  },\r\n  {\r\n    header: i18n.t('customerDashboard.action'),\r\n    key: 'action',\r\n  },\r\n];\r\n\r\nconst rowData = [\r\n  {\r\n    id: 'a',\r\n    entVersion: '5.2',\r\n    status: <Toggle size=\"sm\" aria-label=\"toggle button\" defaultToggled id=\"status-1\" />,\r\n    startDate: 'April, 2018',\r\n    endDate: 'April, 2022',\r\n  },\r\n  {\r\n    id: 'b',\r\n    entVersion: '6.3',\r\n    status: <Toggle size=\"sm\" aria-label=\"toggle button\" id=\"status-2\"/>,\r\n    startDate: 'Jile, 2019',\r\n    endDate: 'April, 2023',\r\n  },\r\n  {\r\n    id: 'c',\r\n    entVersion: '6.2',\r\n    status: <Toggle size=\"sm\" aria-label=\"toggle button\" defaultToggled id=\"status-3\"/>,\r\n    startDate: 'September, 2020',\r\n    endDate: 'April, 2024',\r\n  },\r\n];\r\n\r\nexport default withKeycloak(ProductVersion);\r\n","import {Component} from 'react';\r\nimport withKeycloak from \"../../auth/withKeycloak\";\r\nimport {Breadcrumb, BreadcrumbItem} from \"carbon-components-react\";\r\nimport {getActiveSubscription, getPageUrl} from \"../../api/helpers\";\r\nimport {PAGE_CUSTOMER_PORTAL} from \"../../api/constants\";\r\nimport i18n from \"../../i18n\";\r\n\r\nclass Breadcrumbs extends Component {\r\n\r\n  render() {\r\n    const homeUrl = getPageUrl(PAGE_CUSTOMER_PORTAL, this.props.locale);\r\n\r\n    let customer = this.props.customer || {};\r\n    const project = this.props.project;\r\n    if (project) {\r\n      customer = project.customer || {};\r\n    }\r\n    const subscription = this.props.subscription ? this.props.subscription : getActiveSubscription(project);\r\n\r\n    return (\r\n      <Breadcrumb style={{margin: \"1em 0\"}}>\r\n        <BreadcrumbItem href={`${homeUrl}#`}>{i18n.t('customerDashboard.customerPortal')}</BreadcrumbItem>\r\n        {customer && customer.name && (\r\n          <BreadcrumbItem href={`${homeUrl}#/customer-details/${customer.id}`}>\r\n            {customer.name}\r\n          </BreadcrumbItem>\r\n        )}\r\n        {project && project.name && subscription && subscription.id && (\r\n          <BreadcrumbItem href={`${homeUrl}#/subscription-details/${subscription.id}`}>\r\n            {project.name}\r\n          </BreadcrumbItem>\r\n        )}\r\n      </Breadcrumb>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withKeycloak(Breadcrumbs);\r\n","import { TICKETING_SYSTEM_CONFIG_ENUM } from './constants';\r\nimport { getDefaultOptions, request, getUrl } from './helpers';\r\n\r\nconst resource = 'api/ticketing-system-config/';\r\n\r\n/**\r\n *\r\n * @param {*} serviceUrl\r\n * @returns\r\n */\r\nexport const apiTicketingSystemConfigResourceGet = async serviceUrl => {\r\n    const url = getUrl(`${serviceUrl}/${resource}`);\r\n    const options = {\r\n        ...getDefaultOptions(),\r\n        method: 'GET',\r\n    };\r\n\r\n    return request(url, options)\r\n};\r\n\r\n/**\r\n *\r\n * @param {*} serviceUrl\r\n * @param {*} active\r\n * @param {*} productName\r\n * @param {*} subscriptionLevel\r\n * @param {*} ticketType\r\n * @returns\r\n */\r\nexport const apiTicketingSystemConfigResourcePost = async (serviceUrl, typeOfData, Data) => {\r\n    const url = `${serviceUrl}/${resource}`\r\n    let keyBuilder = typeOfData === TICKETING_SYSTEM_CONFIG_ENUM.JIRA_CUSTOM_FIELD ? 'jiraCustomFields' : 'values';\r\n    const payloadBuilder = {\r\n        flag: typeOfData,\r\n        [keyBuilder]: Data\r\n    }\r\n    const options = {\r\n        ...getDefaultOptions(),\r\n        method: 'PUT',\r\n        body: JSON.stringify(payloadBuilder)\r\n    }\r\n    return request(url, options)\r\n}","import React, { Component } from \"react\";\r\nimport { authenticationChanged, isAuthenticated, isPortalAdminOrSupport } from \"../../../api/helpers\";\r\nimport withKeycloak from \"../../../auth/withKeycloak\";\r\nimport i18n from \"../../../i18n\";\r\nimport { Button, Form, Table, TableBody, TableCell, TableContainer, TableHead, TableHeader, TableRow, TextInput } from 'carbon-components-react';\r\nimport { apiProductVersionsGet } from \"../../../api/productVersion\";\r\nimport { Add16 } from '@carbon/icons-react'\r\nimport { apiTicketingSystemConfigResourcePost } from \"../../../api/manageFieldConfigurations\";\r\nimport { TICKETING_SYSTEM_CONFIG_ENUM, VALIDATION_VARS } from \"../../../api/constants\";\r\n\r\nclass TicketTypeConfiguration extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            ticketName: '',\r\n            ticketTypeRowData: [],\r\n            validations: [\r\n                { isError: false, errorMsg: '' }\r\n            ]\r\n        };\r\n        this.timeoutId = null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (isPortalAdminOrSupport()) {\r\n            this.getProductVersions();\r\n        }\r\n        if (this.props.ticketType.length) {\r\n            this.getTicketTypes()\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.ticketType.length !== this.props.ticketType.length) {\r\n            this.getTicketTypes()\r\n        }\r\n        if (authenticationChanged(this.props, prevProps) && isPortalAdminOrSupport()) {\r\n            this.getProductVersions();\r\n        }\r\n    }\r\n\r\n    getTicketTypes() {\r\n        if (this.props.ticketType.length) {\r\n            this.setState({ ticketTypeRowData: this.props.ticketType })\r\n        }\r\n    }\r\n\r\n    async getProductVersions() {\r\n        if (isAuthenticated(this.props)) {\r\n            const productVersions = await apiProductVersionsGet(this.props.serviceUrl);\r\n\r\n            this.setState({\r\n                versions: productVersions.data,\r\n            });\r\n        }\r\n    }\r\n\r\n    handleFormSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        if (!this.state.ticketName.length || this.state.ticketName.length < VALIDATION_VARS.CHAR_MIN_LIMIT) {\r\n            this.setState({ validations: { isError: true, errorMsg: i18n.t('validation.invalid.ticketTypeMinChar') } })\r\n            return\r\n        }\r\n        if (this.state.ticketTypeRowData.find((ticket) => (ticket.name.toLocaleLowerCase() === this.state.ticketName.toLocaleLowerCase()))) {\r\n            this.setState({ validations: { isError: true, errorMsg: i18n.t('validation.invalid.ticketDupCheck') } })\r\n            return\r\n        }\r\n        let ticketListBuilder = [...this.state.ticketTypeRowData, {name: this.state.ticketName}]\r\n        try {\r\n            await apiTicketingSystemConfigResourcePost(this.props.serviceUrl, TICKETING_SYSTEM_CONFIG_ENUM.TICKET_TYPE, ticketListBuilder).then(() => {\r\n                this.props.getTicketAndSubLevel()\r\n            });\r\n            const updateTicketTypeRowData = ticketListBuilder\r\n            this.setState({ ticketTypeRowData: [updateTicketTypeRowData], ticketName: '' })\r\n        } catch (error) {\r\n            console.error('Error handleFormSubmit: ',error)\r\n        }\r\n    }\r\n\r\n    setFormData = (e) => {\r\n        if (!e.target && !e.target.value) return\r\n        if (e.target.value.length <= VALIDATION_VARS.CHAR_MAX_LIMIT) {\r\n            if (e.target.value.length && e.target.value.length < VALIDATION_VARS.CHAR_MIN_LIMIT) {\r\n                this.setState({ validations: { isError: true, errorMsg: i18n.t('validation.invalid.ticketTypeMinChar') }, ticketName: e.target.value.trimStart() })\r\n            } else {\r\n                this.setState({ validations: { isError: false, errorMsg: \"\" }, ticketName: e.target.value.trimStart() })\r\n            }\r\n            return;\r\n        }\r\n        if (this.state.ticketName.length >= VALIDATION_VARS.CHAR_MAX_LIMIT) {\r\n            this.setState({ validations: { isError: true, errorMsg: i18n.t('validation.invalid.ticketTypeMaxChar') } })\r\n            if (!this.timeoutId) {\r\n                setTimeout(() => {\r\n                    this.setState({ validations: { isError: false, errorMsg: \"\" } })\r\n                    this.timeoutId = null;\r\n                }, VALIDATION_VARS.CHAR_LIMIT_MSG_APPEAR_TIME)\r\n            }\r\n            return\r\n        }\r\n    }\r\n\r\n    handleDeleteTicketType = async (ticket) => {\r\n        if (window.confirm(i18n.t('submitMessages.confirmDeleteTicketType'))) {\r\n            let updateTicketTypeAfterDeletedTicket = []\r\n            updateTicketTypeAfterDeletedTicket = this.state.ticketTypeRowData.filter(ticketType => ticket.name !== ticketType.name)\r\n            try {\r\n                await apiTicketingSystemConfigResourcePost(this.props.serviceUrl, TICKETING_SYSTEM_CONFIG_ENUM.TICKET_TYPE, updateTicketTypeAfterDeletedTicket).then(() => {\r\n                    this.props.getTicketAndSubLevel()\r\n                });\r\n                this.setState({ ticketTypeRowData: updateTicketTypeAfterDeletedTicket })\r\n            } catch (error) {\r\n                console.error('Error handleDeleteTicketType: ', error)\r\n            }\r\n        }\r\n    }\r\n\r\n    ticketTypeRecord() {\r\n        let ticketTypeRecord = [];\r\n        this.state.ticketTypeRowData.forEach((ticket, index) => {\r\n            ticketTypeRecord.push(\r\n            <TableRow key={index} id={ticket.name}>\r\n                <TableCell>{ticket.name}</TableCell>\r\n                <TableCell>\r\n                    <Button\r\n                        kind=\"ghost\"\r\n                        onClick={() => this.handleDeleteTicketType(ticket)}\r\n                        style={{ display: 'flex', width: '100%', color: 'red' }}\r\n                    >\r\n                        {i18n.t('buttons.delete')}\r\n                    </Button>\r\n                </TableCell>\r\n            </TableRow>\r\n            );\r\n        });\r\n        return ticketTypeRecord;\r\n    }\r\n\r\n    render() {\r\n        if (isPortalAdminOrSupport()) {\r\n            return (\r\n                <>\r\n                    <h4>{i18n.t('adminConfig.manageFieldConfigurations.ticketTypeConfigurations')}</h4>\r\n                    <TableContainer>\r\n                        <Table>\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    {headerData.map((head) => <TableHeader style={{ width: '50%' }} key={head.key}> {head.header}</TableHeader>)}\r\n                                </TableRow>\r\n                            </TableHead>\r\n\r\n                            <TableBody>\r\n                                {this.ticketTypeRecord()}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                    <div className=\"bx--grid\" style={{ margin: \"0rem\", padding: \"0rem\" }}>\r\n                        <Form className=\"bx--row\" style={{ margin: \"2rem 0rem\", padding: \"0rem\" }} onSubmit={this.handleFormSubmit}>\r\n                            <div className=\"bx--col-lg-6\" style={{ paddingLeft: \"0rem\" }}>\r\n                                <TextInput\r\n                                    id=\"tickettype\" labelText={i18n.t('adminConfig.manageFieldConfigurations.ticketType')} type=\"text\"\r\n                                    value={this.state.ticketName} onChange={this.setFormData}\r\n                                    invalid={this.state.validations.isError} invalidText={this.state.validations.errorMsg}\r\n                                    onBlur={() => { this.setState({ ticketName: this.state.ticketName.trimEnd() }) }}\r\n                                />\r\n                            </div>\r\n                            <div className=\"bx--col-lg-6\">\r\n                                <Button size=\"lg\" kind=\"tertiary\" tabIndex={0} type=\"submit\" renderIcon={Add16} style={{ paddingRight: \"2.5rem\", \"paddingTop\": \"0.5rem\", \"alignItems\": \"center\" }}>\r\n                                    {i18n.t('adminConfig.manageFieldConfigurations.addTicketTypeButton')}\r\n                                </Button>\r\n                            </div>\r\n                        </Form>\r\n                    </div>\r\n                    <hr />\r\n                </>\r\n            );\r\n        } else {\r\n            return <p>{i18n.t('userMessages.unauthorized')}</p>;\r\n        }\r\n    }\r\n}\r\n\r\nconst headerData = [\r\n    {\r\n        header: i18n.t('adminConfig.manageFieldConfigurations.ticketType'),\r\n        key: 'ticketType',\r\n    },\r\n    {\r\n        header: i18n.t('customerDashboard.action'),\r\n        key: 'action',\r\n    },\r\n];\r\n\r\nexport default withKeycloak(TicketTypeConfiguration);","import React, { Component } from \"react\";\r\nimport { authenticationChanged, isAuthenticated, isPortalAdminOrSupport } from \"../../../api/helpers\";\r\nimport withKeycloak from \"../../../auth/withKeycloak\";\r\nimport i18n from \"../../../i18n\";\r\nimport { Button, Form, Table, TableBody, TableCell, TableContainer, TableHead, TableHeader, TableRow, TextInput } from 'carbon-components-react';\r\nimport { apiProductVersionsGet } from \"../../../api/productVersion\";\r\nimport { Add16 } from '@carbon/icons-react'\r\nimport { apiTicketingSystemConfigResourcePost } from \"../../../api/manageFieldConfigurations\";\r\nimport { TICKETING_SYSTEM_CONFIG_ENUM, VALIDATION_VARS } from \"../../../api/constants\";\r\n\r\nclass ServiceSubLevelConfiguration extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            subscriptionLevel: '',\r\n            serviceSubTypeRowData : [],\r\n            validations: [\r\n                { isError: false, errorMsg: '' }\r\n            ]\r\n        };\r\n        this.timeoutId = null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (isPortalAdminOrSupport()) {\r\n            this.getProductVersions();\r\n        }\r\n        if (this.props.subLevel.length) {\r\n            this.getSubscription()\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.subLevel.length !== this.props.subLevel.length) {\r\n            this.getSubscription()\r\n        }\r\n        if (authenticationChanged(this.props, prevProps)) {\r\n            if (isPortalAdminOrSupport()) {\r\n                this.getProductVersions();\r\n            }\r\n        }\r\n    }\r\n\r\n    getSubscription() {\r\n        if (this.props.subLevel.length) {\r\n            this.setState({ serviceSubTypeRowData: this.props.subLevel })\r\n        }\r\n    }\r\n\r\n    async getProductVersions() {\r\n        if (isAuthenticated(this.props)) {\r\n            const productVersions = await apiProductVersionsGet(this.props.serviceUrl);\r\n\r\n            this.setState({\r\n                versions: productVersions.data,\r\n            });\r\n        }\r\n    }\r\n\r\n    handleFormSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        if (!this.state.subscriptionLevel.length || this.state.subscriptionLevel.length < VALIDATION_VARS.CHAR_MIN_LIMIT) {\r\n            this.setState({ validations: { isError: true, errorMsg: i18n.t('validation.invalid.subscrLevelMinChar') } })\r\n            return\r\n        }\r\n        if (this.state.serviceSubTypeRowData.find((ticket) => (ticket.name.toLocaleLowerCase() === this.state.subscriptionLevel.toLocaleLowerCase()))) {\r\n            this.setState({ validations: { isError: true, errorMsg: i18n.t('validation.invalid.subscrDupCheck') } })\r\n            return\r\n        }\r\n        const subsListBuilder = [...this.state.serviceSubTypeRowData, { name: this.state.subscriptionLevel }];\r\n        try {\r\n            await apiTicketingSystemConfigResourcePost(this.props.serviceUrl, TICKETING_SYSTEM_CONFIG_ENUM.SUBSCRIPTION_LEVEL, subsListBuilder).then(() => {\r\n                this.props.getTicketAndSubLevel()\r\n            });\r\n            const updateserviceSubTypeRowData = [...this.state.serviceSubTypeRowData, { levelName: this.state.subscriptionLevel }]\r\n            this.setState({ serviceSubTypeRowData: updateserviceSubTypeRowData, subscriptionLevel: '' })\r\n        } catch (error) {\r\n            console.error('Error handleFormSubmit: ', error)\r\n        }\r\n    }\r\n\r\n    setFormData = (e) => {\r\n        if (!e.target && !e.target.value) return\r\n        if (e.target.value.length <= VALIDATION_VARS.CHAR_MAX_LIMIT) {\r\n            if (e.target.value.length && e.target.value.length < VALIDATION_VARS.CHAR_MIN_LIMIT) {\r\n                this.setState({ validations: { isError: true, errorMsg: i18n.t('validation.invalid.subscrLevelMinChar') }, subscriptionLevel: e.target.value.trimStart() })\r\n            }\r\n            else {\r\n                this.setState({ validations: { isError: false, errorMsg: \"\" }, subscriptionLevel: e.target.value.trimStart() })\r\n            }\r\n            return;\r\n        }\r\n        if (this.state.subscriptionLevel.length >= VALIDATION_VARS.CHAR_MAX_LIMIT) {\r\n            this.setState({ validations: { isError: true, errorMsg: i18n.t('validation.invalid.subscrLevelMaxChar') } })\r\n            if (!this.timeoutId) {\r\n                this.timeoutId = setTimeout(() => {\r\n                    this.setState({ validations: { isError: false, errorMsg: \"\" } })\r\n                    this.timeoutId = null;\r\n                }, VALIDATION_VARS.CHAR_LIMIT_MSG_APPEAR_TIME)\r\n            }\r\n            return\r\n        }\r\n    }\r\n\r\n    handleDeleteServiceSubType = async (ticket) => {\r\n        if (window.confirm(i18n.t('submitMessages.confirmDeleteSubscrLevel'))) {\r\n            let updateServiceSubTypeAfterDeletedSubscr = []\r\n            updateServiceSubTypeAfterDeletedSubscr = this.state.serviceSubTypeRowData.filter(ticketType => ticket.name !== ticketType.name)\r\n            try {\r\n                await apiTicketingSystemConfigResourcePost(this.props.serviceUrl, TICKETING_SYSTEM_CONFIG_ENUM.SUBSCRIPTION_LEVEL, updateServiceSubTypeAfterDeletedSubscr).then(() => {\r\n                    this.props.getTicketAndSubLevel()\r\n                });\r\n                this.setState({ serviceSubTypeRowData: updateServiceSubTypeAfterDeletedSubscr })\r\n            } catch (error) {\r\n                console.error('Error handleDeleteServiceSubType: ',error);\r\n            }\r\n        }\r\n    }\r\n\r\n    subLeveRecord() {\r\n        let subLevelRecord = [];\r\n        this.state.serviceSubTypeRowData.forEach((subscr, index) => {\r\n            subLevelRecord.push(<TableRow key={index} id={subscr.name}>\r\n                <TableCell>{subscr.name}</TableCell>\r\n                <TableCell>\r\n                    <Button\r\n                        kind=\"ghost\"\r\n                        onClick={() => this.handleDeleteServiceSubType(subscr)}\r\n                        style={{ display: 'flex', width: '100%', color: 'red' }}\r\n                    >\r\n                        {i18n.t('buttons.delete')}\r\n                    </Button>\r\n                </TableCell>\r\n            </TableRow>);\r\n        });\r\n        return subLevelRecord;\r\n    }\r\n\r\n    render() {\r\n        if (isPortalAdminOrSupport()) {\r\n            return (\r\n                <>\r\n                    <h4>{i18n.t('adminConfig.manageFieldConfigurations.subscriptionLevelConfiguration')}</h4>\r\n                    <TableContainer>\r\n                        <Table>\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    {headerData.map((head, index) => (\r\n                                        <TableHeader style={{ width: '50%' }} id={index} key={head.key}> {head.header}\r\n                                        </TableHeader>\r\n                                    ))}\r\n                                </TableRow>\r\n                            </TableHead>\r\n\r\n                            <TableBody>\r\n                                {this.subLeveRecord()}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                    <div className=\"bx--grid\" style={{ margin: \"0rem\", padding: \"0rem\" }}>\r\n                        <Form className=\"bx--row\" style={{ margin: \"2rem 0rem\", padding: \"0rem\" }} onSubmit={this.handleFormSubmit}>\r\n                            <div className=\"bx--col-lg-6\" style={{ paddingLeft: \"0rem\" }}>\r\n                                <TextInput\r\n                                    id=\"sublevel\" labelText={i18n.t('adminConfig.manageFieldConfigurations.subscriptionLevel')} type=\"text\"\r\n                                    value={this.state.subscriptionLevel} onChange={this.setFormData}\r\n                                    invalid={this.state.validations.isError} invalidText={this.state.validations.errorMsg}\r\n                                    onBlur={() => { this.setState({ subscriptionLevel: this.state.subscriptionLevel.trimEnd() }) }}\r\n                                />\r\n                            </div>\r\n                            <div className=\"bx--col-lg-6\">\r\n                                <Button size=\"lg\" kind=\"tertiary\" tabIndex={0} type=\"submit\" renderIcon={Add16} style={{ paddingRight: \"2.5rem\", \"paddingTop\": \"0.5rem\", \"alignItems\": \"center\" }}>\r\n                                    {i18n.t('adminConfig.manageFieldConfigurations.addSubscriptionLevelButton')}\r\n                                </Button>\r\n                            </div>\r\n                        </Form>\r\n                    </div>\r\n                    <hr />\r\n                </>\r\n            );\r\n        } else {\r\n            return <p>{i18n.t('userMessages.unauthorized')}</p>; \r\n        }\r\n    }\r\n}\r\n\r\nconst headerData = [\r\n    {\r\n        header: i18n.t('adminConfig.manageFieldConfigurations.subscriptionLevel'),\r\n        key: 'sublevel',\r\n    },\r\n    {\r\n        header: i18n.t('customerDashboard.action'),\r\n        key: 'action',\r\n    },\r\n];\r\n\r\nexport default withKeycloak(ServiceSubLevelConfiguration);","import React, { Component } from \"react\";\r\nimport { authenticationChanged, isAuthenticated, isPortalAdminOrSupport } from \"../../../api/helpers\";\r\nimport withKeycloak from \"../../../auth/withKeycloak\";\r\nimport i18n from \"../../../i18n\";\r\nimport { Button, ComposedModal, ModalBody, ModalFooter, ModalHeader, Table, TableBody, TableCell, TableContainer, TableHead, TableHeader, TableRow, TextInput, } from 'carbon-components-react';\r\nimport { apiProductVersionsGet } from \"../../../api/productVersion\";\r\nimport { TICKETING_SYSTEM_CONFIG_ENUM, VALIDATION_VARS } from \"../../../api/constants\";\r\nimport { apiTicketingSystemConfigResourcePost } from \"../../../api/manageFieldConfigurations\";\r\n\r\nclass ProductNameConfiguration extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            open: false,\r\n            validations: [\r\n                { isError: false, errorMsg: '' }\r\n            ],\r\n            changedProductName: ''\r\n        };\r\n        this.timeoutId = null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ changedProductName: this.props.productName })\r\n        if (isPortalAdminOrSupport()) {\r\n            this.getProductVersions();\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (authenticationChanged(this.props, prevProps)) {\r\n            if (isPortalAdminOrSupport()) {\r\n                this.getProductVersions();\r\n            }\r\n        }\r\n    }\r\n\r\n    async getProductVersions() {\r\n        if (isAuthenticated(this.props)) {\r\n            const productVersions = await apiProductVersionsGet(this.props.serviceUrl);\r\n            this.setState({\r\n                versions: productVersions.data,\r\n            });\r\n        }\r\n    }\r\n\r\n    onEditProductNameHandle = () => {\r\n        this.setState({ validations: { isError: false, errorMsg: \"\" }, changedProductName: this.props.productName, open: true })\r\n    }\r\n\r\n    onEditProductNameSave = async () => {\r\n        if (!this.state.changedProductName) {\r\n            this.setState({ validations: { isError: true, errorMsg: i18n.t('validation.invalid.required') } })\r\n            return\r\n        }\r\n        if (this.state.changedProductName.length < VALIDATION_VARS.CHAR_MIN_LIMIT) {\r\n            this.setState({ validations: { isError: true, errorMsg: i18n.t('validation.invalid.productNameMinChar') } })\r\n            return\r\n        }\r\n        this.setState({ open: false })\r\n        const updatedProdName = [{ name: this.state.changedProductName }]\r\n        try {\r\n            await apiTicketingSystemConfigResourcePost(this.props.serviceUrl, TICKETING_SYSTEM_CONFIG_ENUM.PRODUCT_NAME, updatedProdName).then(() => {\r\n                this.props.getTicketAndSubLevel()\r\n            });\r\n            this.setState({ changedProductName: this.props.productName })\r\n        } catch (error) {\r\n            console.error('Error onEditProductNameSave: ', error)\r\n        }\r\n    }\r\n\r\n    productOnChangeHandler = (e) => {\r\n        if (!e.target && !e.target.value) return\r\n        if (e.target.value.length <= VALIDATION_VARS.CHAR_MAX_LIMIT) {\r\n            if (!e.target.value.length) this.setState({ validations: { isError: true, errorMsg: i18n.t('validation.invalid.required') }, changedProductName: e.target.value })\r\n            else if (e.target.value.length && e.target.value.length < VALIDATION_VARS.CHAR_MIN_LIMIT) {\r\n                this.setState({ validations: { isError: true, errorMsg: i18n.t('validation.invalid.productNameMinChar') }, changedProductName: e.target.value })\r\n            } else {\r\n                this.setState({ validations: { isError: false, errorMsg: \"\" }, changedProductName: e.target.value })\r\n            }\r\n            return\r\n        }\r\n        if (e.target.value.length >= VALIDATION_VARS.CHAR_MAX_LIMIT) {\r\n            this.setState({ validations: { isError: true, errorMsg: i18n.t('validation.invalid.productNameMaxChar') } })\r\n            if (!this.timeoutId) {\r\n                setTimeout(() => {\r\n                    this.setState({ validations: { isError: false, errorMsg: \"\" } })\r\n                    this.timeoutId = null;\r\n                }, VALIDATION_VARS.CHAR_LIMIT_MSG_APPEAR_TIME)\r\n            }\r\n            return\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (isPortalAdminOrSupport()) {\r\n            return (\r\n                <>\r\n                    <h4>{i18n.t(\"adminConfig.productNameConfigurations.title\")}</h4>\r\n                    <TableContainer>\r\n                        <Table>\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    {headerData.map((head, index) => (\r\n                                        <TableHeader style={{ width: '50%' }} id={index} key={head.key}> {head.header}\r\n                                        </TableHeader>\r\n                                    ))}\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                <TableRow key={1} id={1}>\r\n                                    <TableCell>{this.props.productName}</TableCell>\r\n                                    <TableCell>\r\n                                        <Button\r\n                                            kind=\"ghost\"\r\n                                            onClick={this.onEditProductNameHandle}\r\n                                            style={{ display: 'flex', width: '100%', color: 'red' }}\r\n                                        >\r\n                                            {i18n.t('buttons.edit')}\r\n                                        </Button>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                    <ComposedModal open={this.state.open} onClose={() => { this.setState({ open: false }) }} >\r\n                        <ModalHeader title={i18n.t('buttons.edit')} />\r\n                        <ModalBody>\r\n                            <TextInput\r\n                                data-modal-primary-focus\r\n                                id=\"text-input-1\"\r\n                                labelText=\"Product Name*\"\r\n                                value={this.state.changedProductName}\r\n                                invalid={this.state.validations.isError} invalidText={this.state.validations.errorMsg}\r\n                                onChange={(e) => { this.productOnChangeHandler(e) }}\r\n                            />\r\n                        </ModalBody>\r\n                        <ModalFooter>\r\n                            <Button\r\n                                kind=\"secondary\"\r\n                                onMouseDown={() => { this.setState({ open: false }) }}>\r\n                                {i18n.t('buttons.cancel')}\r\n                            </Button>\r\n                            <Button kind=\"primary\" onClick={() => { this.onEditProductNameSave() }}>\r\n                                {i18n.t('buttons.save')}\r\n                            </Button>\r\n                        </ModalFooter>\r\n                    </ComposedModal>\r\n                </>\r\n            )\r\n        } else {\r\n            return <p>{i18n.t('userMessages.unauthorized')}</p>;\r\n        }\r\n    }\r\n}\r\n\r\nconst headerData = [\r\n    {\r\n        header: i18n.t('adminConfig.productNameConfigurations.table.prodName'),\r\n        key: 'productName',\r\n    },\r\n    {\r\n        header: i18n.t('customerDashboard.action'),\r\n        key: 'action',\r\n    },\r\n];\r\n\r\nexport default withKeycloak(ProductNameConfiguration);","import React, { Component } from \"react\";\r\nimport { authenticationChanged, isAuthenticated, isPortalAdminOrSupport } from \"../../../api/helpers\";\r\nimport withKeycloak from \"../../../auth/withKeycloak\";\r\nimport i18n from \"../../../i18n\";\r\nimport { Button, ComposedModal, ModalBody, ModalFooter, ModalHeader, Table, TableBody, TableCell, TableContainer, TableHead, TableHeader, TableRow, TextInput, } from 'carbon-components-react';\r\nimport { apiProductVersionsGet } from \"../../../api/productVersion\";\r\nimport { TICKETING_SYSTEM_CONFIG_ENUM } from \"../../../api/constants\";\r\nimport { apiTicketingSystemConfigResourcePost } from \"../../../api/manageFieldConfigurations\";\r\n\r\nclass JiraConfiguration extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            open: false,\r\n            validations: {\r\n                versionIdIsValid: true,\r\n                organizationIdIsValid: true,\r\n                subscriptionLevelIdIsValid: true,\r\n                errMsg: ''\r\n            },\r\n            changedProductName: '',\r\n            jiraConfig: [],\r\n            jiraOnChangedValue : this.initializeJiraConfigObj()\r\n        };\r\n        this.timeoutId = null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (isPortalAdminOrSupport()) {\r\n            this.setState({ changedProductName: this.props.productName, jiraConfig: this.props.jiraCustomField })\r\n            this.getProductVersions();\r\n            this.getJiraConfig();\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.jiraCustomField.length !== this.props.jiraCustomField.length) {\r\n            this.getJiraConfig();\r\n        }\r\n        if (authenticationChanged(this.props, prevProps) && isPortalAdminOrSupport()) {\r\n            this.getProductVersions();\r\n        }\r\n    }\r\n\r\n    getJiraConfig() {\r\n        this.setState({ changedProductName: this.props.productName, jiraConfig: this.props.jiraCustomField });\r\n        let initJira = this.initializeJiraConfigObj();\r\n        this.props.jiraCustomField.forEach((el) => {\r\n            initJira[Object.keys(el)[0]] = el[Object.keys(el)[0]];\r\n        });\r\n        this.setState({ jiraOnChangedValue: initJira });\r\n    }\r\n\r\n    initializeJiraConfigObj() {\r\n        return { versionId: 0, organizationId: 0, subscriptionLevelId: 0 };\r\n    }\r\n\r\n    async getProductVersions() {\r\n        if (isAuthenticated(this.props)) {\r\n            const productVersions = await apiProductVersionsGet(this.props.serviceUrl);\r\n            this.setState({\r\n                versions: productVersions.data,\r\n            });\r\n        }\r\n    }\r\n\r\n    onClickJiraConfigEdit = () => {\r\n        this.setState({ validations: { isError: false, errorMsg: \"\" }, changedProductName: this.props.productName, open: true })\r\n    }\r\n\r\n    onClickJiraConfigSave = async () => {\r\n        // validation before submit form\r\n        for (let key in this.state.jiraOnChangedValue) {\r\n            if (!this.state.jiraOnChangedValue[key]) return\r\n        }\r\n        const jiraConfigBuilder = []\r\n        for (let key in this.state.jiraOnChangedValue) {\r\n            jiraConfigBuilder.push({ [key]: this.state.jiraOnChangedValue[key] })\r\n        }\r\n        try {\r\n            await apiTicketingSystemConfigResourcePost(this.props.serviceUrl,\r\n                TICKETING_SYSTEM_CONFIG_ENUM.JIRA_CUSTOM_FIELD, [this.state.jiraOnChangedValue])\r\n                .then(() => {\r\n                    this.props.getTicketAndSubLevel()\r\n                    this.setState({ jiraConfig: jiraConfigBuilder })\r\n                });\r\n        } catch (error) {\r\n            console.error('Error onClickJiraConfigSave: ', error)\r\n        }\r\n        this.setState({ open: false })\r\n    }\r\n\r\n    jiraConfigOnChangeHandler = (e) => {\r\n        const getEleId = e.target.id;\r\n        const getEleValue = e.target.value;\r\n        const updateJiraconfig = this.state.jiraOnChangedValue;\r\n        const errorUpdate = this.state.validations;\r\n        if (!getEleValue.length) {\r\n            errorUpdate[`${getEleId}IsValid`] = true\r\n            this.updateStateOfJiraConfig(getEleId, updateJiraconfig, getEleValue);\r\n        } else {\r\n            errorUpdate[`${getEleId}IsValid`] = false\r\n            this.updateStateOfJiraConfig(getEleId, updateJiraconfig, getEleValue);\r\n        }\r\n    }\r\n\r\n    onClickCloseModal = () => {\r\n        let initJira = this.initializeJiraConfigObj();\r\n        this.state.jiraConfig.forEach((el) => {\r\n            initJira[Object.keys(el)[0]] = parseInt(el[Object.keys(el)[0]].toString(), 10)\r\n        })\r\n        this.setState({ jiraOnChangedValue: initJira })\r\n    }\r\n\r\n    getJiraConfigValues = () => {\r\n        let content = [];\r\n        if (this.state.jiraConfig.length) {\r\n            this.state.jiraConfig.forEach((config, idx) => {\r\n                content.push(<TableCell key={Object.keys(config)[0]}>{config[Object.keys(config)[0]]}</TableCell>)\r\n            })\r\n        }\r\n        return content\r\n    }\r\n\r\n    updateStateOfJiraConfig(getEleId, updateJiraconfig, getEleValue) {\r\n        for (let i = 0; i < this.state.jiraConfig.length; i++) {\r\n            if (getEleId === Object.keys(this.state.jiraConfig[i])[0]) {\r\n                updateJiraconfig[`${Object.keys(this.state.jiraConfig[i])}`] = getEleValue;\r\n            }\r\n        }\r\n        this.setState({ jiraOnChangedValue: updateJiraconfig });\r\n    }\r\n\r\n    render() {\r\n        if (isPortalAdminOrSupport()) {\r\n            return (\r\n                <>\r\n                    <TableContainer>\r\n                        <Table>\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    {headerData.map((head, index) => (\r\n                                        <TableHeader id={index} key={head.key}> {head.header}\r\n                                        </TableHeader>\r\n                                    ))}\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                <TableRow key={1} id={1}>\r\n                                    {this.getJiraConfigValues()}\r\n                                    <TableCell>\r\n                                        <Button\r\n                                            kind=\"ghost\" onClick={this.onClickJiraConfigEdit}\r\n                                            style={{ display: 'flex', width: '100%', color: 'red' }}>\r\n                                            {i18n.t('buttons.edit')}\r\n                                        </Button>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                    <ComposedModal open={this.state.open} onClose={() => { this.onClickCloseModal(); this.setState({ open: false }) }} >\r\n                        <ModalHeader title={i18n.t(\"buttons.edit\")} />\r\n                        <ModalBody>\r\n                            <TextInput\r\n                                key={\"versionId\"} data-modal-primary-focus id={\"versionId\"}\r\n                                labelText={`${i18n.t('adminConfig.jiraFieldsConfigurations.versionIDLabel')}*`}\r\n                                type=\"number\" value={this.state.jiraOnChangedValue['versionId']}\r\n                                invalid={this.state.validations.versionIdIsValid}\r\n                                invalidText={i18n.t('validation.invalid.required')}\r\n                                onChange={(e) => { this.jiraConfigOnChangeHandler(e) }}\r\n                            />\r\n                            <TextInput\r\n                                key={\"organizationId\"} data-modal-primary-focus id={\"organizationId\"}\r\n                                labelText={`${i18n.t('adminConfig.jiraFieldsConfigurations.organizatoinIDLabel')}*`}\r\n                                type=\"number\" value={this.state.jiraOnChangedValue.organizationId}\r\n                                invalid={this.state.validations.organizationIdIsValid}\r\n                                invalidText={i18n.t('validation.invalid.required')}\r\n                                onChange={(e) => { this.jiraConfigOnChangeHandler(e) }}\r\n                            />\r\n                            <TextInput\r\n                                key={\"subscriptionLevelId\"} data-modal-primary-focus id={\"subscriptionLevelId\"}\r\n                                labelText={`${i18n.t('adminConfig.jiraFieldsConfigurations.SubscriptionLevelIDLabel')}*`}\r\n                                type=\"number\" value={this.state.jiraOnChangedValue.subscriptionLevelId}\r\n                                invalid={this.state.validations.subscriptionLevelIdIsValid}\r\n                                invalidText={i18n.t('validation.invalid.required')}\r\n                                onChange={(e) => { this.jiraConfigOnChangeHandler(e) }}\r\n                            />\r\n                        </ModalBody>\r\n                        <ModalFooter>\r\n                            <Button\r\n                                kind=\"secondary\"\r\n                                onMouseDown={() => { this.setState({ open: false }) }}\r\n                                onClick={this.onClickCloseModal}>\r\n                                {i18n.t('buttons.cancel')}\r\n                            </Button>\r\n                            <Button kind=\"primary\" onClick={() => { this.onClickJiraConfigSave() }}>\r\n                                {i18n.t('buttons.save')}\r\n                            </Button>\r\n                        </ModalFooter>\r\n                    </ComposedModal>\r\n                </>\r\n            )\r\n        } else {\r\n            return <p>{i18n.t('userMessages.unauthorized')}</p>;\r\n        }\r\n    }\r\n}\r\n\r\nconst headerData = [\r\n    {\r\n        header: i18n.t('adminConfig.jiraFieldsConfigurations.versionIDLabel'),\r\n        key: 'versionId',\r\n    },\r\n    {\r\n        header: i18n.t('adminConfig.jiraFieldsConfigurations.organizatoinIDLabel'),\r\n        key: 'orgId',\r\n    },\r\n    {\r\n        header: i18n.t('adminConfig.jiraFieldsConfigurations.SubscriptionLevelIDLabel'),\r\n        key: 'subscrId',\r\n    },\r\n    {\r\n        header: i18n.t('customerDashboard.action'),\r\n        key: 'actn',\r\n    },\r\n];\r\n\r\nexport default withKeycloak(JiraConfiguration);","import React from 'react';\nimport i18n from '../../../i18n';\nimport { Accordion, AccordionItem, Tile } from 'carbon-components-react';\nimport TicketingSystem from './TicketingSystem';\nimport ProductVersion from './ProductVersion';\nimport {authenticationChanged, isAuthenticated, isPortalAdmin} from '../../../api/helpers';\nimport withKeycloak from '../../../auth/withKeycloak';\nimport Breadcrumbs from \"../../Breadcrumbs/Breadcrumbs\";\nimport TicketTypeConfiguration from './TicketTypeConfiguration';\nimport ServiceSubLevelConfiguration from './ServiceSubLevelConfiguration';\nimport { apiTicketingSystemConfigResourceGet } from '../../../api/manageFieldConfigurations';\nimport ProductNameConfiguration from './ProductNameConfiguration';\nimport JiraConfiguration from './JiraConfiguration';\n\nclass AdminConfiguration extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      refinedTicketType : [],\n      refinedSubLevel: [],\n      refinedJiraCustomField: [],\n      productName: ''\n    };\n  }\n\n  componentDidMount() {\n    if (isAuthenticated(this.props)) {\n      this.setState({\n        loading: false,\n      });\n      this.getTicketingSystemConfig();\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (authenticationChanged(this.props, prevProps)) {\n      this.setState({\n        loading: false,\n      });\n    }\n    if (prevState.refinedTicketType.length !== this.state.refinedTicketType.length ||\n      prevState.refinedSubLevel.length !== this.state.refinedSubLevel.length ||\n      prevState.productName !== this.state.productName) {\n    }\n  }\n\n  getTicketingSystemConfig = async () => {\n    try {\n      const { data: ticketTypesAndSubLevelsData } = await apiTicketingSystemConfigResourceGet(this.props.serviceUrl);\n      if (ticketTypesAndSubLevelsData && ticketTypesAndSubLevelsData.length) {\n        const JIRAKEY = 'jiraCustomField', PRODUCTNAME = 'productName';\n        let actualData = ticketTypesAndSubLevelsData[0];\n        if (actualData.ticketType) this.setState({ refinedTicketType: JSON.parse(actualData.ticketType) })\n        if (actualData.subscriptionLevel) this.setState({ refinedSubLevel: JSON.parse(actualData.subscriptionLevel) })\n        if (actualData.hasOwnProperty(JIRAKEY)) {\n          let jiraCustomFieldBuilder = [];\n          for (let jiraItem in JSON.parse(actualData.jiraCustomField)[0]) {\n            jiraCustomFieldBuilder.push({ [jiraItem]: JSON.parse(actualData.jiraCustomField)[0][jiraItem] })\n          }\n          this.setState({ refinedJiraCustomField: jiraCustomFieldBuilder })\n        }\n        if (actualData.hasOwnProperty(PRODUCTNAME)) this.setState({ productName: JSON.parse(actualData.productName)[0].name })\n      }\n    } catch (error) {\n      console.error('Error getTicketingSystemConfig: ', error)\n    }\n  }\n\n  getAdminConfig = () => {\n    return [\n      {\n        label: (\n          <div>\n            <p className=\"title\">{i18n.t('adminConfig.integrationTicketingSystem.title')}</p>\n            <p className=\"desc\">{i18n.t('adminConfig.integrationTicketingSystem.desc')}</p>\n          </div>\n        ),\n        content: <div className=\"admin-config-child\"><TicketingSystem serviceUrl={this.props.serviceUrl} /></div>,\n      },\n      {\n        label: (\n          <div>\n            <p className=\"title\">{i18n.t('adminConfig.manageProductVersion.title')}</p>\n            <p className=\"desc\">{i18n.t('adminConfig.manageProductVersion.desc')}</p>\n          </div>\n        ),\n        content: <div className=\"admin-config-child\"><ProductVersion serviceUrl={this.props.serviceUrl} productName={this.state.productName}/></div>,\n      },\n      {\n        label: (\n          <div>\n            <p className=\"title\">{i18n.t('adminConfig.manageFieldConfigurations.title')}</p>\n            <p className=\"desc\">{i18n.t('adminConfig.manageFieldConfigurations.manageFieldConfigurationsDesc')}</p>\n          </div>\n        ),\n        content: (\n          <>\n          <div className=\"admin-config-child\">\n            <TicketTypeConfiguration serviceUrl={this.props.serviceUrl} ticketType={this.state.refinedTicketType} getTicketAndSubLevel={this.getTicketingSystemConfig} />\n            <ServiceSubLevelConfiguration serviceUrl={this.props.serviceUrl} subLevel={this.state.refinedSubLevel} getTicketAndSubLevel={this.getTicketingSystemConfig} />\n            <ProductNameConfiguration serviceUrl={this.props.serviceUrl} productName={this.state.productName} getTicketAndSubLevel={this.getTicketingSystemConfig}/>\n          </div>\n          </>\n        )\n      },\n      {\n        label: (\n          <div>\n            <p className=\"title\">Jira Field Configuration</p>\n            <p className=\"desc\">This allows you to manage jira custom field configuration</p>\n          </div>\n        ),\n        content: (\n          <>\n            <div className=\"admin-config-child\">\n              <JiraConfiguration serviceUrl={this.props.serviceUrl} productName={this.state.productName} jiraCustomField={this.state.refinedJiraCustomField} getTicketAndSubLevel={this.getTicketingSystemConfig} />\n            </div>\n          </>\n        )\n      }\n    ];\n  }\n\n  render() {\n    if (!this.state.loading) {\n      // Authorized\n      if (isPortalAdmin()) {\n        const adminConfig = this.getAdminConfig();\n        return (\n          <div id=\"entando-customer-portal\">\n            <Breadcrumbs locale={this.props.locale}/>\n            <div className=\"form-container\">\n              <Tile>\n                <p className=\"title\">{i18n.t('adminConfig.title')}</p>\n                <p className=\"desc\">{i18n.t('adminConfig.desc')}</p>\n              </Tile>\n              <Accordion>\n                {adminConfig.map((item, index) => (\n                  <AccordionItem key={index.toString()} index={index} title={item.label} description={item.description}>\n                    <div>{item.content}</div>\n                  </AccordionItem>\n                ))}\n              </Accordion>\n            </div>\n          </div>\n        );\n      }\n      // Unauthorized\n      else {\n        return <p>{i18n.t('userMessages.unauthorized')}</p>;\n      }\n    }\n    // Loading\n    else {\n      return null;\n    }\n  }\n}\nexport default withKeycloak(AdminConfiguration);\n","export const publishWidgetEvent = (eventId, payload) => {\r\n  const widgetEvent = new CustomEvent(eventId, {\r\n    detail: {\r\n      payload,\r\n    },\r\n  });\r\n  window.dispatchEvent(widgetEvent);\r\n};\r\n\r\nexport const createWidgetEventPublisher = eventType => payload => publishWidgetEvent(eventType, payload);\r\n\r\nexport const subscribeToWidgetEvent = (eventType, eventHandler) => {\r\n  window.addEventListener(eventType, eventHandler);\r\n\r\n  return () => {\r\n    window.removeEventListener(eventType, eventHandler);\r\n  };\r\n};\r\n\r\nexport const subscribeToWidgetEvents = (widgetEvents, eventHandler) => {\r\n  widgetEvents.forEach(eventType => window.addEventListener(eventType, eventHandler));\r\n\r\n  return () => {\r\n    widgetEvents.forEach(eventType => window.removeEventListener(eventType, eventHandler));\r\n  };\r\n};\r\n\r\nexport const widgetEventToFSA = widgetEvent => {\r\n  // for info about Flux Standard Action (FSA) see https://github.com/redux-utilities/flux-standard-action\r\n  const {\r\n    type,\r\n    detail: { payload, error, meta },\r\n  } = widgetEvent;\r\n  return { type, payload, error, meta };\r\n};\r\n","export const INPUT_EVENT_TYPES = {\r\n  formUpdate: 'customer.form.update',\r\n  formCreate: 'customer.form.create',\r\n  formDelete: 'customer.form.delete',\r\n};\r\n\r\nexport const OUTPUT_EVENT_TYPES = {\r\n  select: 'customer.table.select',\r\n  add: 'customer.table.add',\r\n  error: 'customer.table.error',\r\n  delete: 'customer.table.delete',\r\n};\r\n\r\nexport const KEYCLOAK_EVENT_TYPE = 'keycloak';\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport AdminConfiguration from '../components/Admin/Configuration/AdminConfiguration';\nimport '../index.scss';\nimport * as Locale from '../i18n';\n\nimport KeycloakContext from '../auth/KeycloakContext';\n\nimport { subscribeToWidgetEvent } from '../helpers/widgetEvents';\nimport { KEYCLOAK_EVENT_TYPE } from './widgetEventTypes';\nimport {setAppContext} from '../api/helpers';\n\nconst getKeycloakInstance = () =>\n  (window && window.entando && window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\n    initialized: false,\n  };\n\nconst ATTRIBUTES = {\n  hidden: 'hidden',\n  locale: 'locale',\n  paginationMode: 'pagination-mode',\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\n  serviceUrl: 'service-url',\n  baseUrl: 'base-url',\n};\n\nclass AdminConfigurationElement extends HTMLElement {\n  container;\n\n  mountPoint;\n\n  unsubscribeFromKeycloakEvent;\n\n  keycloak = getKeycloakInstance();\n\n  connectedCallback() {\n    this.mountPoint = document.createElement('div');\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\n\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\n      this.render();\n    });\n\n    this.render();\n\n    //retargetEvents(shadowRoot);\n    this.appendChild(this.mountPoint);\n  }\n\n  render() {\n    const baseUrl = this.getAttribute(ATTRIBUTES.baseUrl) || '';\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\n    const locale = this.getAttribute(ATTRIBUTES.locale) || '';\n    Locale.setLocale(locale);\n    setAppContext(baseUrl);\n\n    ReactDOM.render(\n      <KeycloakContext.Provider value={this.keycloak}>\n        <AdminConfiguration serviceUrl={serviceUrl} locale={locale}/>\n      </KeycloakContext.Provider>,\n      this.mountPoint\n    );\n  }\n}\n\ncustomElements.get('cp-admin-configuration') || customElements.define('cp-admin-configuration', AdminConfigurationElement);\n","import { getDefaultOptions, request, getUrl } from './helpers';\r\n\r\nconst resource = 'api/customers';\r\n\r\nexport const apiCustomerDelete = async (serviceUrl, id) => {\r\n  const url = `${serviceUrl}/${resource}/${id}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiCustomersGet = async serviceUrl => {\r\n  const url = getUrl(`${serviceUrl}/${resource}`);\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiCustomerGet = async (serviceUrl, id) => {\r\n  const url = getUrl(`${serviceUrl}/${resource}/${id}`);\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiCustomerPost = async (serviceUrl, customer) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n    body: customer ? JSON.stringify(customer) : null,\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiCustomerPut = async (serviceUrl, customer) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'PUT',\r\n    body: customer ? JSON.stringify(customer) : null,\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiAddProjectToCustomer = async (serviceUrl, customerId, projectId) => {\r\n  const url = `${serviceUrl}/${resource}/${customerId}/projects/${projectId}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiDeleteProjectFromCustomer = async (serviceUrl, customerId, projectId) => {\r\n  const url = `${serviceUrl}/${resource}/${customerId}/projects/${projectId}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE',\r\n  };\r\n  return request(url, options);\r\n};\r\n","import React, { Component } from 'react';\r\nimport i18n from '../../i18n';\r\nimport { ModalWrapper, Form, TextInput, TextArea } from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport {apiCustomerPost} from '../../api/customers';\r\nimport {isAuthenticated} from \"../../api/helpers\";\r\n\r\nclass AddCustomerModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      name: '',\r\n      customerNumber: '',\r\n      contactName: '',\r\n      contactPhone: '',\r\n      contactEmail: '',\r\n      notes: '',\r\n      invalid: {},\r\n      submitMsg: '',\r\n      submitColour: 'black',\r\n    };\r\n\r\n    this.baseState = this.state;\r\n  }\r\n\r\n  handleValidation() {\r\n    let invalid = {};\r\n    let formIsValid = true;\r\n\r\n    if (this.state.name === '') {\r\n      formIsValid = false;\r\n      invalid['name'] = true;\r\n    }\r\n\r\n    if (this.state.customerNumber === '') {\r\n      formIsValid = false;\r\n      invalid['customerNumber'] = true;\r\n    }\r\n\r\n    this.setState({ invalid: invalid });\r\n    return formIsValid;\r\n  }\r\n\r\n  handleChanges = e => {\r\n    const input = e.target;\r\n    const name = input.name;\r\n    const value = input.value;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  async customerPost(customer) {\r\n    if (isAuthenticated(this.props)) {\r\n      return await apiCustomerPost(this.props.serviceUrl, customer);\r\n    }\r\n  }\r\n\r\n  handleFormSubmit = () => {\r\n    const formIsValid = this.handleValidation();\r\n\r\n    if (formIsValid) {\r\n      const customer = {\r\n        name: this.state.name,\r\n        customerNumber: this.state.customerNumber,\r\n        contactName: this.state.contactName,\r\n        contactPhone: this.state.contactPhone,\r\n        contactEmail: this.state.contactEmail,\r\n        notes: this.state.notes,\r\n      };\r\n\r\n      this.customerPost(customer)\r\n        .then(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.added'),\r\n            submitColour: '#24a148',\r\n          });\r\n          this.props.updateCustomerList();\r\n        })\r\n        .catch(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.error'),\r\n            submitColour: '#da1e28',\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  clearValues = () => {\r\n    const customerModalElement = document.querySelector('#modal-form-customer');\r\n    if (!customerModalElement.className.includes('is-visible')) {\r\n      this.setState(this.baseState);\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    const modalOpenButton = document.querySelector('.add-customer-button');\r\n    modalOpenButton.addEventListener('click', this.clearValues, false);\r\n  }\r\n\r\n  render() {\r\n    const modalConfirmation = (\r\n      <div className=\"bx--modal-header\">\r\n        <p style={{color: this.state.submitColour}}>{this.state.submitMsg}</p>\r\n      </div>\r\n    );\r\n    const modalId = 'modal-form-customer';\r\n    return (\r\n      <ModalWrapper\r\n        buttonTriggerText={i18n.t('buttons.addCustomer')}\r\n        modalHeading={i18n.t('adminDashboard.addCustomer.title')}\r\n        buttonTriggerClassName=\"add-customer bx--btn bx--btn--tertiary add-customer-button\"\r\n        className=\"modal-form\"\r\n        id={modalId}\r\n        handleSubmit={this.handleFormSubmit}\r\n        primaryButtonText={i18n.t('modalText.save')}\r\n        secondaryButtonText={i18n.t('modalText.cancel')}\r\n      >\r\n        {modalConfirmation}\r\n        <div className=\"form-container\">\r\n          <Form onSubmit={this.handleFormSubmit}>\r\n            <TextInput\r\n              id={'name' + modalId}\r\n              name=\"name\"\r\n              labelText={i18n.t('adminDashboard.addCustomer.customerName') + ' *'}\r\n              value={this.state.name}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.required')}\r\n              invalid={this.state.invalid['name']}\r\n            />\r\n            <TextInput\r\n              id={'customerNumber' + modalId}\r\n              name=\"customerNumber\"\r\n              labelText={i18n.t('adminDashboard.addCustomer.customerNumber') + ' *'}\r\n              value={this.state.customerNumber}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.required')}\r\n              invalid={this.state.invalid['customerNumber']}\r\n            />\r\n            <TextInput\r\n              id={'contactName' + modalId}\r\n              name=\"contactName\"\r\n              labelText={i18n.t('adminDashboard.addCustomer.contactName')}\r\n              value={this.state.contactName}\r\n              onChange={this.handleChanges}\r\n            />\r\n            <TextInput\r\n              id={'contactPhone' + modalId}\r\n              name=\"contactPhone\"\r\n              labelText={i18n.t('adminDashboard.addCustomer.contactPhone')}\r\n              value={this.state.contactPhone}\r\n              onChange={this.handleChanges}\r\n            />\r\n            <TextInput\r\n              id={'contactEmail' + modalId}\r\n              name=\"contactEmail\"\r\n              labelText={i18n.t('adminDashboard.addCustomer.contactEmail')}\r\n              value={this.state.contactEmail}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.email')}\r\n              invalid={this.state.invalid['contactEmail']}\r\n            />\r\n            <TextArea\r\n              id={'notes' + modalId}\r\n              name=\"notes\"\r\n              labelText={i18n.t('adminDashboard.addCustomer.notes')}\r\n              value={this.state.notes}\r\n              onChange={this.handleChanges}\r\n            />\r\n          </Form>\r\n        </div>\r\n        {modalConfirmation}\r\n      </ModalWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withKeycloak(AddCustomerModal);\r\n","import { getDefaultOptions, request, getUrl } from './helpers';\r\n\r\nconst resource = 'api/partners';\r\n\r\nexport const apiPartnerDelete = async (serviceUrl, id) => {\r\n  const url = `${serviceUrl}/${resource}/${id}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiPartnersGet = async serviceUrl => {\r\n  const url = getUrl(`${serviceUrl}/${resource}`);\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiPartnerPost = async (serviceUrl, partner) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n    body: partner ? JSON.stringify(partner) : null,\r\n  };\r\n  return request(url, options);\r\n};\r\n","import { getDefaultOptions, request, getUrl } from './helpers';\r\n\r\nconst resource = 'api/projects';\r\n\r\nexport const apiProjectsDelete = async (serviceUrl, id) => {\r\n  const url = `${serviceUrl}/${resource}/${id}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiProjectsGet = async serviceUrl => {\r\n  const url = getUrl(`${serviceUrl}/${resource}`);\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiProjectsGetByCustomer = async (serviceUrl, id) => {\r\n  const url = getUrl(`${serviceUrl}/${resource}/customer/${id}`);\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiProjectGet = async (serviceUrl, id) => {\r\n  const url = getUrl(`${serviceUrl}/${resource}/${id}`);\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiProjectPost = async (serviceUrl, project) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n    body: project ? JSON.stringify(project) : null,\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiProjectPut = async (serviceUrl, project) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'PUT',\r\n    body: project ? JSON.stringify(project) : null,\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiAddTicketToProject = async (serviceUrl, projectId, ticketId) => {\r\n  const url = `${serviceUrl}/${resource}/${projectId}/tickets/${ticketId}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiAddSubscriptionToProject = async (serviceUrl, projectId, subscriptionId) => {\r\n  const url = `${serviceUrl}/${resource}/${projectId}/subscriptions/${subscriptionId}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiAddUserToProject = async (serviceUrl, projectId, userId) => {\r\n  const url = `${serviceUrl}/${resource}/${projectId}/users/${userId}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiDeletePartnerFromProject = async (serviceUrl, projectId, partnerId) => {\r\n  const url = `${serviceUrl}/${resource}/${projectId}/partners/${partnerId}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiDeleteSubscriptionFromProject = async (serviceUrl, projectId, subscriptionId) => {\r\n  const url = `${serviceUrl}/${resource}/${projectId}/subscriptions/${subscriptionId}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiDeleteUserFromProject = async (serviceUrl, projectId, userId) => {\r\n  const url = `${serviceUrl}/${resource}/${projectId}/users/${userId}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiAddPartnerToProject = async (serviceUrl, projectId, partnerId) => {\r\n  const url = `${serviceUrl}/${resource}/${projectId}/partners/${partnerId}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiGetProjectUsers = async (serviceUrl, projectId) => {\r\n  const url = `${serviceUrl}/${resource}/${projectId}/users/`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiGetProjectSubscriptions = async (serviceUrl, projectId) => {\r\n  const url = `${serviceUrl}/${resource}/${projectId}/subscriptions/`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n  return request(url, options);\r\n};\r\n","export const AuthenticatedView = ({ children, keycloak }) => {\r\n  const authenticated = keycloak && keycloak.initialized && keycloak.authenticated;\r\n  return authenticated ? children : null;\r\n};\r\n\r\nexport const UnauthenticatedView = ({ children, keycloak }) => {\r\n  const authenticated = keycloak && keycloak.initialized && keycloak.authenticated;\r\n  return !authenticated ? children : null;\r\n};\r\n","import React, {Component} from 'react';\r\nimport i18n from '../../i18n';\r\nimport {ModalWrapper, Form, TextInput, Select, SelectItem, TextArea} from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport {apiPartnerPost} from '../../api/partners';\r\nimport {apiProjectsGet, apiAddPartnerToProject} from '../../api/projects';\r\nimport {authenticationChanged, isAuthenticated} from '../../api/helpers';\r\nimport {AuthenticatedView} from '../../auth/KeycloakViews';\r\n\r\nclass AddPartnerModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      projectList: {},\r\n      projectId: '',\r\n      name: '',\r\n      partnerNumber: '',\r\n      notes: '',\r\n      invalid: {},\r\n      submitMsg: '',\r\n      submitColour: 'black',\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (isAuthenticated(this.props)) {\r\n      this.fetchData();\r\n\r\n      const modalOpenButton = document.querySelector('.add-partner-button');\r\n      modalOpenButton.addEventListener('click', this.clearValues, false);\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (authenticationChanged(this.props, prevProps)) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n\r\n  handleValidation() {\r\n    let invalid = {};\r\n    let formIsValid = true;\r\n\r\n    //project\r\n    if (this.state.projectId === '' || this.state.projectId === 'project-list') {\r\n      formIsValid = false;\r\n      invalid['projectId'] = true;\r\n    }\r\n\r\n    if (this.state.name === '') {\r\n      formIsValid = false;\r\n      invalid['name'] = true;\r\n    }\r\n\r\n    if (this.state.partnerNumber === '') {\r\n      formIsValid = false;\r\n      invalid['partnerNumber'] = true;\r\n    }\r\n\r\n    this.setState({ invalid: invalid });\r\n    return formIsValid;\r\n  }\r\n\r\n  handleChanges = e => {\r\n    const input = e.target;\r\n    const name = input.name;\r\n    const value = input.value;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  async fetchData() {\r\n    if (isAuthenticated(this.props)) {\r\n      let projects = {};\r\n      try {\r\n        projects = (await apiProjectsGet(this.props.serviceUrl)).data;\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n      this.setState({\r\n        projectList: projects ? projects : {},\r\n      });\r\n    }\r\n  }\r\n\r\n  async partnerPost(partner) {\r\n    if (isAuthenticated(this.props)) {\r\n      const result = await apiPartnerPost(this.props.serviceUrl, partner);\r\n      return await apiAddPartnerToProject(this.props.serviceUrl, this.state.projectId, result.data.id);\r\n    }\r\n  }\r\n\r\n  handleFormSubmit = () => {\r\n    const formIsValid = this.handleValidation();\r\n\r\n    if (formIsValid) {\r\n      const partner = {\r\n        name: this.state.name,\r\n        partnerNumber: this.state.partnerNumber,\r\n        notes: this.state.notes,\r\n      };\r\n      this.partnerPost(partner)\r\n        .then(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.added'),\r\n            submitColour: '#24a148',\r\n          });\r\n          this.props.updateCustomerList();\r\n        })\r\n        .catch(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.error'),\r\n            submitColour: '#da1e28',\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  clearValues = () => {\r\n    this.componentDidMount()\r\n    const partnerModalElement = document.querySelector('#modal-form-partner');\r\n    if (!partnerModalElement.className.includes('is-visible')) {\r\n      this.setState({\r\n        projectId: '',\r\n        name: '',\r\n        partnerNumber: '',\r\n        notes: '',\r\n        invalid: {},\r\n        submitMsg: '',\r\n        submitColour: 'black',\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const modalConfirmation = (\r\n      <div className=\"bx--modal-header\">\r\n        <p style={{color: this.state.submitColour}}>{this.state.submitMsg}</p>\r\n      </div>\r\n    );\r\n    const {keycloak} = this.props;\r\n    const modalId = 'modal-form-partner';\r\n    return (\r\n      <AuthenticatedView keycloak={keycloak}>\r\n        <ModalWrapper\r\n          buttonTriggerText={i18n.t('buttons.addPartner')}\r\n          modalHeading={i18n.t('adminDashboard.addPartner.title')}\r\n          buttonTriggerClassName=\"add-partner bx--btn bx--btn--tertiary add-partner-button\"\r\n          className=\"modal-form\"\r\n          id={modalId}\r\n          handleSubmit={this.handleFormSubmit}\r\n          primaryButtonText={i18n.t('modalText.save')}\r\n          secondaryButtonText={i18n.t('modalText.cancel')}\r\n        >\r\n          {modalConfirmation}\r\n          <div className=\"form-container\">\r\n            <Form onSubmit={this.handleFormSubmit}>\r\n              <Select\r\n                id={'projectId' + modalId}\r\n                name=\"projectId\"\r\n                labelText={i18n.t('adminDashboard.addPartner.projectList') + ' *'}\r\n                value={this.state.projectId}\r\n                onChange={this.handleChanges}\r\n                invalidText={i18n.t('validation.invalid.required')}\r\n                invalid={this.state.invalid['projectId']}\r\n              >\r\n                <SelectItem text={i18n.t('adminDashboard.addPartner.selectProject')} value=\"project-list\"/>\r\n                {Object.keys(this.state.projectList).length !== 0\r\n                  ? this.state.projectList.map((project, i) => (\r\n                    <SelectItem key={i} text={project.name} value={project.id}>\r\n                      {project.name}\r\n                    </SelectItem>\r\n                  ))\r\n                  : null}\r\n              </Select>\r\n\r\n              <TextInput\r\n                id={'name' + modalId}\r\n                name=\"name\"\r\n                labelText={i18n.t('adminDashboard.addPartner.partnerName') + ' *'}\r\n                value={this.state.name}\r\n                onChange={this.handleChanges}\r\n                invalidText={i18n.t('validation.invalid.required')}\r\n                invalid={this.state.invalid['name']}\r\n              />\r\n              <TextInput\r\n                id={'partnerNumber' + modalId}\r\n                name=\"partnerNumber\"\r\n                labelText={i18n.t('adminDashboard.addPartner.partnerNumber') + ' *'}\r\n                value={this.state.partnerNumber}\r\n                onChange={this.handleChanges}\r\n                invalidText={i18n.t('validation.invalid.required')}\r\n                invalid={this.state.invalid['partnerNumber']}\r\n              />\r\n              <TextArea\r\n                name=\"notes\"\r\n                labelText={i18n.t('adminDashboard.addPartner.notes')}\r\n                value={this.state.notes}\r\n                onChange={this.handleChanges}\r\n              />\r\n            </Form>\r\n          </div>\r\n          {modalConfirmation}\r\n        </ModalWrapper>\r\n      </AuthenticatedView>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withKeycloak(AddPartnerModal);\r\n","import React, { Component } from 'react';\r\nimport i18n from '../../i18n';\r\nimport {Modal, Form, TextInput, TextArea} from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport { apiCustomersGet } from '../../api/customers';\r\nimport {apiProjectGet, apiProjectPut, apiProjectsGet} from '../../api/projects';\r\nimport {authenticationChanged, isAuthenticated} from \"../../api/helpers\";\r\n\r\nclass EditProjectModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      projects: {},\r\n      customerList: {},\r\n      customerId: '',\r\n      name: '',\r\n      description: '',\r\n      systemId: '',\r\n      contactName: '',\r\n      contactPhone: '',\r\n      contactEmail: '',\r\n      notes: '',\r\n      invalid: {},\r\n      modalId: '',\r\n      buttonId: '',\r\n      submitMsg: '',\r\n      submitColour: 'black',\r\n    };\r\n  }\r\n\r\n  handleValidation() {\r\n    let invalid = {};\r\n    let formIsValid = true;\r\n\r\n    //name\r\n    if (this.state.name === '') {\r\n      formIsValid = false;\r\n      invalid['name'] = true;\r\n    }\r\n\r\n    //description\r\n    if (this.state.description === '') {\r\n      formIsValid = false;\r\n      invalid['description'] = true;\r\n    }\r\n\r\n    this.setState({ invalid: invalid });\r\n    return formIsValid;\r\n  }\r\n\r\n  handleChanges = e => {\r\n    const input = e.target;\r\n    const name = input.name;\r\n    const value = input.value;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  async getCustomers() {\r\n    if (isAuthenticated(this.props)) {\r\n      const customers = await apiCustomersGet(this.props.serviceUrl);\r\n      this.setState({customerList: customers});\r\n    }\r\n  }\r\n\r\n  async getProjectDetails() {\r\n    if (isAuthenticated(this.props)) {\r\n      const project = await apiProjectGet(this.props.serviceUrl, this.props.project.id);\r\n      this.setState({\r\n        name: project.data.name,\r\n        description: project.data.description,\r\n        systemId: project.data.systemId,\r\n        contactName: project.data.contactName,\r\n        contactPhone: project.data.contactPhone,\r\n        contactEmail: project.data.contactEmail,\r\n        notes: project.data.notes,\r\n        modalId: 'modal-form-project-edit-' + project.data.id,\r\n        buttonId: 'edit-project-button-' + project.data.id,\r\n      });\r\n    }\r\n  }\r\n\r\n  async getAllProjects() {\r\n    const projects = await apiProjectsGet(this.props.serviceUrl);\r\n    this.setState({\r\n      projects: projects.data,\r\n    });\r\n  }\r\n\r\n  async projectPut(project) {\r\n    if (isAuthenticated(this.props)) {\r\n      return await apiProjectPut(this.props.serviceUrl, project);\r\n    }\r\n  }\r\n\r\n  handleFormSubmit = () => {\r\n    const formIsValid = this.handleValidation();\r\n\r\n    if (formIsValid) {\r\n      const project = {\r\n        id: this.props.project.id,\r\n        customer: this.props.project.customer,\r\n        name: this.state.name,\r\n        description: this.state.description,\r\n        systemId: this.state.systemId,\r\n        contactName: this.state.contactName,\r\n        contactPhone: this.state.contactPhone,\r\n        contactEmail: this.state.contactEmail,\r\n        notes: this.state.notes,\r\n      };\r\n      for (var i = 0; i < this.props.allProjects.length; i++) {\r\n        if (\r\n          project.systemId === this.props.allProjects[i].systemId &&\r\n          project.id !== this.props.allProjects[i].id &&\r\n          project.systemId.trim() !== ''\r\n        ) {\r\n          window.alert('That system id is already in use in another project');\r\n          return;\r\n        }\r\n      }\r\n      this.projectPut(project)\r\n        .then(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.updated'),\r\n            submitColour: '#24a148',\r\n          });\r\n          this.props.updateProjectList();\r\n          //For now leave the modal open after saving\r\n          // this.props.closeModal();\r\n        })\r\n        .catch((e) => {\r\n          console.log(e);\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.error'),\r\n            submitColour: '#da1e28',\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (isAuthenticated(this.props)) {\r\n      this.getCustomers();\r\n      this.getAllProjects();\r\n      this.getProjectDetails();\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (authenticationChanged(this.props, prevProps)) {\r\n      this.getCustomers();\r\n      this.getAllProjects();\r\n      this.getProjectDetails();\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    const modalConfirmation = (\r\n      <div className=\"bx--modal-header\">\r\n        <p style={{color: this.state.submitColour}}>{this.state.submitMsg}</p>\r\n      </div>\r\n    );\r\n    const modalId = this.state.modalId;\r\n    return (\r\n      <Modal\r\n        id={this.state.modalId}\r\n        className=\"modal-form\"\r\n        open={this.props.open}\r\n        onRequestClose={this.props.closeModal}\r\n        onRequestSubmit={this.handleFormSubmit}\r\n        modalHeading={i18n.t('adminDashboard.addProject.editTitle')}\r\n        primaryButtonText={i18n.t('modalText.save')}\r\n        secondaryButtonText={i18n.t('modalText.cancel')}\r\n      >\r\n        {modalConfirmation}\r\n        <div className=\"form-container\">\r\n          <Form onSubmit={this.handleFormSubmit}>\r\n            <TextInput\r\n              id={'name' + modalId}\r\n              name=\"name\"\r\n              labelText={i18n.t('adminDashboard.addProject.projectName') + ' *'}\r\n              value={this.state.name}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.required')}\r\n              invalid={this.state.invalid['name']}\r\n            />\r\n            <TextInput\r\n              id={'description' + modalId}\r\n              name=\"description\"\r\n              labelText={i18n.t('adminDashboard.addProject.projectDesc') + ' *'}\r\n              value={this.state.description}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.required')}\r\n              invalid={this.state.invalid['description']}\r\n            />\r\n            <TextInput\r\n              id={'systemId' + modalId}\r\n              name=\"systemId\"\r\n              labelText={i18n.t('adminDashboard.addProject.systemId')}\r\n              value={this.state.systemId}\r\n              onChange={this.handleChanges}\r\n            />\r\n            <TextInput\r\n              id={'contactName' + modalId}\r\n              name=\"contactName\"\r\n              labelText={i18n.t('adminDashboard.addProject.contactName')}\r\n              value={this.state.contactName}\r\n              onChange={this.handleChanges}\r\n            />\r\n            <TextInput\r\n              id={'contactPhone' + modalId}\r\n              name=\"contactPhone\"\r\n              labelText={i18n.t('adminDashboard.addProject.contactPhone')}\r\n              value={this.state.contactPhone}\r\n              onChange={this.handleChanges}\r\n            />\r\n            <TextInput\r\n              id={'contactEmail' + modalId}\r\n              name=\"contactEmail\"\r\n              labelText={i18n.t('adminDashboard.addProject.contactEmail')}\r\n              value={this.state.contactEmail}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.email')}\r\n              invalid={this.state.invalid['contactEmail']}\r\n            />\r\n            <TextArea\r\n              name=\"notes\"\r\n              labelText={i18n.t('adminDashboard.addProject.notes')}\r\n              value={this.state.notes}\r\n              onChange={this.handleChanges}\r\n            />\r\n          </Form>\r\n        </div>\r\n        {modalConfirmation}\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withKeycloak(EditProjectModal);\r\n","import React, {Component} from 'react';\r\nimport i18n from '../../i18n';\r\nimport {\r\n  Button,\r\n  DataTable,\r\n  Modal,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableHeader,\r\n  TableRow,\r\n} from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport {isPortalAdminOrSupport} from '../../api/helpers';\r\nimport {apiDeletePartnerFromProject} from '../../api/projects';\r\n\r\nclass ManagePartnersModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      projectId: this.props.project.id,\r\n      project: this.props.project,\r\n    };\r\n\r\n    this.headerData = [\r\n      {\r\n        header: i18n.t('adminDashboard.addPartner.partnerName'),\r\n        key: 'partner',\r\n      },\r\n      {\r\n        header: i18n.t('adminDashboard.addPartner.partnerNumber'),\r\n        key: 'partnerNumber',\r\n      },\r\n      {\r\n        header: i18n.t('adminDashboard.addPartner.notes'),\r\n        key: 'notes',\r\n      },\r\n      {\r\n        header: i18n.t('customerDashboard.action'),\r\n        key: 'action',\r\n      },\r\n    ];\r\n  }\r\n\r\n  async removePartner(projectId, partnerId) {\r\n    if (isPortalAdminOrSupport()) {\r\n      return await apiDeletePartnerFromProject(this.props.serviceUrl, projectId, partnerId);\r\n    }\r\n  }\r\n\r\n  handleRemovePartner = (e, projectId, partnerId) => {\r\n    e.preventDefault();\r\n    if (window.confirm('Are you sure you want to remove this partner from the project?')) {\r\n      this.removePartner(projectId, partnerId)\r\n        .then(result => {\r\n          this.setState({\r\n            project: result.data,\r\n            submitMsg: i18n.t('submitMessages.deleted'),\r\n            submitColour: '#24a148',\r\n          });\r\n          this.props.updateProjectList();\r\n          //For now leave the modal open after saving\r\n          // this.props.closeModal();\r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.error'),\r\n            submitColour: '#da1e28',\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const modalConfirmation = (\r\n      <div className=\"bx--modal-header\">\r\n        <p style={{color: this.state.submitColour}}>{this.state.submitMsg}</p>\r\n      </div>\r\n    );\r\n    const modalId = 'modal-form-manage-partners';\r\n    return (\r\n      <Modal\r\n        id={modalId}\r\n        className=\"modal-form\"\r\n        open={this.props.open}\r\n        onRequestClose={this.props.closeModal}\r\n        onRequestSubmit={this.props.closeModal}\r\n        modalHeading={i18n.t('adminDashboard.managePartners.title')}\r\n        primaryButtonText={i18n.t('modalText.done')}\r\n      >\r\n        {modalConfirmation}\r\n        <div>\r\n          <DataTable rows={rowData} headers={this.headerData}>\r\n            {({rows, headers, getHeaderProps, getTableProps}) => (\r\n              <TableContainer description={i18n.t('customerDashboard.tableDesc')}>\r\n                <Table {...getTableProps()}>\r\n                  <TableHead>\r\n                    <TableRow key=\"headerRow\">\r\n                      {headers.map(header => {\r\n                        return <TableHeader {...getHeaderProps({header})}>{header.header}</TableHeader>;\r\n                      })}\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {this.state.project.partners.map((partner, index) => {\r\n                      return (\r\n                        <TableRow key={'partner' + index}>\r\n                          <TableCell>{partner.name}</TableCell>\r\n                          <TableCell>{partner.partnerNumber}</TableCell>\r\n                          <TableCell>{partner.notes}</TableCell>\r\n                          <TableCell>\r\n                            <div>\r\n                              <Button\r\n                                kind=\"ghost\"\r\n                                onClick={e => this.handleRemovePartner(e, this.state.projectId, partner.id)}\r\n                                style={{display: 'block', width: '100%', color: 'red'}}\r\n                              >\r\n                                {i18n.t('buttons.delete')}\r\n                              </Button>\r\n                              <hr style={{margin: '0', border: 'none', borderTop: '1px solid lightgrey'}}/>\r\n                            </div>\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      );\r\n                    })}\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            )}\r\n          </DataTable>\r\n        </div>\r\n        {modalConfirmation}\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nconst rowData = [\r\n  {\r\n    id: 'a',\r\n    name: 'Partner 1',\r\n    partnerNumber: '123',\r\n  },\r\n  {\r\n    id: 'b',\r\n    name: 'Partner 2',\r\n    partnerNumber: '456',\r\n  },\r\n];\r\n\r\nexport default withKeycloak(ManagePartnersModal);\r\n","import React, {Component} from 'react';\r\nimport i18n from '../../i18n';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport {OverflowMenu, OverflowMenuItem} from 'carbon-components-react';\r\nimport EditProjectModal from '../Admin/EditProjectModal';\r\nimport ManagePartnersModal from '../Admin/ManagePartnersModal';\r\nimport {isPortalAdmin} from '../../api/helpers';\r\nimport {withRouter} from 'react-router';\r\n\r\nclass ProjectActionItems extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      openEditProject: false,\r\n      openManagePartners: false,\r\n    };\r\n  }\r\n\r\n  handleCloseModal = (e) => {\r\n    if (e) {\r\n      e.preventDefault();\r\n    }\r\n    this.setState({\r\n      openEditProject: false,\r\n      openManagePartners: false\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const isAdmin = isPortalAdmin();\r\n    const {history} = this.props;\r\n\r\n    const deleteProject = isAdmin && (\r\n      <OverflowMenuItem itemText={i18n.t('buttons.delete')}\r\n                        onClick={e => this.props.handleDeleteProject(e, this.props.project.id)}\r\n                        isDelete={true}/>\r\n    );\r\n\r\n    const editProject = isAdmin && (\r\n      <OverflowMenuItem itemText={i18n.t('buttons.edit')}\r\n                        onClick={() => this.setState({openEditProject: true})}/>\r\n    );\r\n    const editProjectModal = isAdmin && (\r\n      <EditProjectModal\r\n        open={this.state.openEditProject}\r\n        closeModal={this.handleCloseModal}\r\n        allProjects={this.props.allProjects}\r\n        project={this.props.project}\r\n        serviceUrl={this.props.serviceUrl}\r\n        updateProjectList={this.props.updateProjectList}\r\n      />\r\n    );\r\n\r\n    const managePartners = isAdmin && (\r\n      <OverflowMenuItem itemText={i18n.t('buttons.managePartners')}\r\n                        onClick={() => this.setState({openManagePartners: true})}/>\r\n    );\r\n    const managePartnersModal = isAdmin && (\r\n      <ManagePartnersModal\r\n        open={this.state.openManagePartners}\r\n        closeModal={this.handleCloseModal}\r\n        project={this.props.project}\r\n        serviceUrl={this.props.serviceUrl}\r\n        updateProjectList={this.props.updateProjectList}\r\n      />\r\n    );\r\n\r\n    const manageSubscriptions = isAdmin && (\r\n      <OverflowMenuItem itemText={i18n.t('buttons.manageSubscriptions')}\r\n                        onClick={() => history.push(`/manage-subscriptions/${this.props.project.id}`)}/>\r\n    );\r\n\r\n    const manageUsers = isAdmin && (\r\n      <OverflowMenuItem itemText={i18n.t('buttons.manageUsers')}\r\n                        onClick={() => history.push(`/manage-users/${this.props.project.id}`)}/>\r\n    );\r\n\r\n    const subscriptionParam = this.props.subscription ? '/' + this.props.subscription.id : '';\r\n    const newOrRenewSubscription = ((!this.props.subscription || !isAdmin) && (\r\n      <OverflowMenuItem itemText={i18n.t('buttons.subscriptionRequest')}\r\n                        onClick={() => history.push(`/subscription/${this.props.project.id}${subscriptionParam}`)}/>\r\n    ));\r\n\r\n    const openTicket = this.props.subscription && (\r\n      <OverflowMenuItem itemText={i18n.t('buttons.openTicket')}\r\n                        onClick={() => history.push(`/ticket/${this.props.project.id}`)}/>\r\n    );\r\n\r\n    let viewAllTickets = (<></>);\r\n    const ticketingSystem = this.props.ticketingSystem;\r\n    if (this.props.subscription && ticketingSystem && ticketingSystem.url) {\r\n      const ticketsUrl = ticketingSystem.url.substr(0, ticketingSystem.url.indexOf('/rest')) +\r\n        '/issues/?jql=Organizations=' + this.props.project.systemId;\r\n      viewAllTickets = (\r\n        <OverflowMenuItem itemText={i18n.t('buttons.viewAllTickets')}\r\n                          onClick={() => window.open(ticketsUrl)}/>\r\n      );\r\n    }\r\n\r\n    const viewSubscription = this.props.subscription && (\r\n      <OverflowMenuItem itemText={i18n.t('buttons.view')}\r\n                        onClick={() => history.push(`/subscription-details/${this.props.subscription.id}`)}/>\r\n    );\r\n\r\n    const overflowModals = (\r\n      <>\r\n        {editProjectModal}\r\n        {managePartnersModal}\r\n      </>\r\n    );\r\n\r\n    return (\r\n      <>\r\n        <OverflowMenu flipped={true} menuOptionsClass='entando-customer-portal'>\r\n          {viewSubscription}\r\n          {editProject}\r\n          {newOrRenewSubscription}\r\n          {openTicket}\r\n          {viewAllTickets}\r\n          {manageSubscriptions}\r\n          {manageUsers}\r\n          {managePartners}\r\n          {deleteProject}\r\n        </OverflowMenu>\r\n        {overflowModals}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withKeycloak(withRouter(ProjectActionItems));\r\n","import {getDefaultOptions, request} from './helpers';\r\nimport moment from 'moment';\r\n\r\nconst resource = 'api/project-subscriptions';\r\n\r\nexport const formatStartDate = startDate => {\r\n  return String(new Date(startDate).toDateString());\r\n};\r\n\r\nexport const formatEndDate = (startDate, lengthInMonths) => {\r\n  const endDate = new Date(startDate).setMonth(new Date(startDate).getMonth() + lengthInMonths);\r\n  return String(new Date(endDate).toDateString());\r\n};\r\n\r\nexport const stripTime = date => {\r\n  return moment(date).format('MM/DD/YYYY');\r\n};\r\n\r\nexport const apiSubscriptionGet = async (serviceUrl, id) => {\r\n  const url = `${serviceUrl}/${resource}/${id}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\n// Project Subscription creation consists of an object containing a projectSubscription, an entandoVersionId, and a\r\n// project id, see SubscriptionCreationRequest.\r\n/**\r\n * Called to create a new project subscription\r\n *\r\n * @param {string} serviceUrl\r\n * @param {ProjectSubscriptionCreation} projectSubscriptionCreation\r\n * @returns\r\n */\r\nexport const apiProjectSubscriptionPost = async (serviceUrl, projectSubscriptionCreation) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n    body: projectSubscriptionCreation ? JSON.stringify(projectSubscriptionCreation) : null,\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiProjectSubscriptionPut = async (serviceUrl, projectSubscriptionCreation) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'PUT',\r\n    body: projectSubscriptionCreation ? JSON.stringify(projectSubscriptionCreation) : null,\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\n// Same format as {projectSubscriptionCreation}\r\nexport const apiRenewSubscription = async (serviceUrl, projectSubscriptionRenew) => {\r\n  const url = `${serviceUrl}/${resource}/renew`;\r\n\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'PUT',\r\n    body: projectSubscriptionRenew ? JSON.stringify(projectSubscriptionRenew) : null,\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n","import {Component} from 'react';\r\nimport {\r\n  DataTable,\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableHeader,\r\n  TableBody,\r\n  TableCell\r\n} from 'carbon-components-react';\r\nimport '../../index.scss';\r\nimport {apiDeleteProjectFromCustomer} from '../../api/customers';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport {Link} from 'react-router-dom';\r\nimport i18n from '../../i18n';\r\nimport {authenticationChanged, getActiveSubscription, isAuthenticated, isPortalAdminOrSupport} from '../../api/helpers';\r\nimport {apiCurrentTicketingSystemGet} from '../../api/ticketingsystem';\r\nimport ProjectActionItems from '../Admin/ProjectActionItems';\r\nimport {formatEndDate, formatStartDate} from '../../api/subscriptions';\r\nimport {apiProjectsGetByCustomer} from '../../api/projects';\r\nimport { apiTicketingSystemConfigResourceGet } from '../../api/manageFieldConfigurations';\r\nclass CustomerDataTable extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      projects: {},\r\n      ticketingSystem: {},\r\n      action: 'Edit',\r\n      showMenu: {},\r\n      productName: '',\r\n    };\r\n    if (this.props.productName && this.props.productName[0].name) {\r\n      this.initializeHeaderData();\r\n    }\r\n  }\r\n\r\n  async fetchData() {\r\n    if (isAuthenticated(this.props)) {\r\n      const {customer, serviceUrl} = this.props;\r\n      try {\r\n        let projects = {};\r\n        let ticketingSystem = {};\r\n        if (customer && customer.id) {\r\n          projects = (await apiProjectsGetByCustomer(serviceUrl, customer.id)).data;\r\n          ticketingSystem = await apiCurrentTicketingSystemGet(serviceUrl);\r\n          await apiTicketingSystemConfigResourceGet(serviceUrl).then(({ data }) => {\r\n            if (!this.props.productName || this.props.productName[0].name) {\r\n              this.setState({ productName: JSON.parse(data[0].productName)[0].name })\r\n              this.initializeHeaderData()\r\n            }\r\n          })\r\n        }\r\n        this.setState({\r\n          projects: projects,\r\n          ticketingSystem: ticketingSystem,\r\n        });\r\n      } catch (error) {\r\n        console.error('Error fetchData: ', error);\r\n      }\r\n    }\r\n    this.render();\r\n  }\r\n\r\n  initializeHeaderData() {\r\n    this.headerData = [\r\n      {\r\n        header: i18n.t('customerDashboard.projectName'),\r\n        key: 'projectName',\r\n      },\r\n      {\r\n        header: i18n.t('customerDashboard.partners'),\r\n        key: 'partners',\r\n      },\r\n      {\r\n        header: (this.props.productName && this.props.productName[0].name) ? `${this.props.productName[0].name} Version` : `${this.state.productName} Version`,\r\n        key: 'entandoVersion',\r\n      },\r\n      {\r\n        header: i18n.t('customerDashboard.status'),\r\n        key: 'status',\r\n      },\r\n      {\r\n        header: i18n.t('customerDashboard.startDate'),\r\n        key: 'startDate',\r\n      },\r\n      {\r\n        header: i18n.t('customerDashboard.endDate'),\r\n        key: 'endDate',\r\n      },\r\n      {\r\n        header: i18n.t('customerDetails.notes'),\r\n        key: 'notes',\r\n      },\r\n      {\r\n        header: i18n.t('customerDashboard.action'),\r\n        key: 'action',\r\n      },\r\n    ];\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (isAuthenticated(this.props)) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (authenticationChanged(this.props, prevProps)) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n\r\n  // fix warning: Can't perform a React state update on an unmounted component\r\n  componentWillUnmount() {\r\n    this.setState = (state, callback) => {\r\n      //no-op\r\n    };\r\n  }\r\n\r\n  updateProjectList = () => {\r\n    this.fetchData();\r\n  };\r\n\r\n  async deleteProject(id) {\r\n    if (isAuthenticated(this.props)) {\r\n      return await apiDeleteProjectFromCustomer(this.props.serviceUrl, this.props.customer.id, id);\r\n    }\r\n  }\r\n\r\n  handleDeleteProject = (e, id) => {\r\n    e.preventDefault();\r\n    if (window.confirm('Are you sure you want to delete this project?')) {\r\n      this.deleteProject(id)\r\n        .then(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.deleted'),\r\n            submitColour: '#24a148',\r\n          });\r\n          this.props.updateCustomerList();\r\n        })\r\n        .catch(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.error'),\r\n            submitColour: '#da1e28',\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.projects && (Object.keys(this.state.projects).length !== 0) && (\r\n          <DataTable rows={[{id: '1'}]} headers={this.headerData}>\r\n            {({rows, headers, getHeaderProps, getTableProps}) => (\r\n              <TableContainer description={i18n.t('customerDashboard.tableDesc')}>\r\n                <Table {...getTableProps()}>\r\n                  <TableHead>\r\n                    <TableRow key=\"headerRow\">\r\n                      {headers.map(header => {\r\n                        let result;\r\n                        if (header.header === i18n.t('customerDetails.notes')) {\r\n                          if (isPortalAdminOrSupport()) {\r\n                            result = <TableHeader {...getHeaderProps({header})}>{header.header}</TableHeader>;\r\n                          }\r\n                        } else {\r\n                          result = <TableHeader {...getHeaderProps({header})}>{header.header}</TableHeader>;\r\n                        }\r\n                        return result;\r\n                      })}\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {this.state.projects.map((project, index) => {\r\n                      const subscription = getActiveSubscription(project);\r\n                      if (!subscription) {\r\n                        return (\r\n                          <TableRow key={index}>\r\n                            <TableCell style={{fontWeight: 'bold'}}>{project.name}</TableCell>\r\n                            {project.partners.length !== 0 ? (\r\n                              <TableCell>\r\n                                {project.partners.map((partner, partnerIndex) => (\r\n                                  <div key={partnerIndex}>{partner.name}</div>\r\n                                ))}\r\n                              </TableCell>\r\n                            ) : (\r\n                              <TableCell>{i18n.t('userMessages.none')}</TableCell>\r\n                            )}\r\n                            <TableCell>{i18n.t('userMessages.none')}</TableCell>\r\n                            <TableCell>{i18n.t('userMessages.none')}</TableCell>\r\n                            <TableCell>{i18n.t('userMessages.none')}</TableCell>\r\n                            <TableCell>{i18n.t('userMessages.none')}</TableCell>\r\n                            {isPortalAdminOrSupport() ?\r\n                              <TableCell style={{width: '250px'}}>{project.notes}</TableCell> : null}\r\n                            <TableCell>\r\n                              <ProjectActionItems\r\n                                serviceUrl={this.props.serviceUrl}\r\n                                ticketingSystem={this.state.ticketingSystem}\r\n                                locale={this.props.locale}\r\n                                project={project}\r\n                                allProjects={this.state.projects}\r\n                                handleDeleteProject={this.handleDeleteProject}\r\n                                updateProjectList={this.updateProjectList}\r\n                              />\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        );\r\n                      } else {\r\n                        return (\r\n                          <TableRow key={index}>\r\n                            <TableCell>\r\n                              <Link to={`/subscription-details/${subscription.id}`}\r\n                                    style={{fontWeight: 'bold'}}>{project.name}</Link>\r\n                            </TableCell>\r\n                              {project.partners.length !== 0 ? (\r\n                                <TableCell>\r\n                                  {project.partners.map((partner, partnerIndex) => (\r\n                                    <div key={partnerIndex}>{partner.name}</div>\r\n                                  ))}\r\n                                </TableCell>\r\n                              ) : (\r\n                                <TableCell>{i18n.t('userMessages.none')}</TableCell>\r\n                              )}\r\n                              {subscription.entandoVersion ? (\r\n                                <TableCell>{subscription.entandoVersion.name}</TableCell>\r\n                              ) : (\r\n                                <TableCell>{i18n.t('userMessages.none')}</TableCell>\r\n                              )}\r\n                              <TableCell>{subscription.status}</TableCell>\r\n                              <TableCell>{formatStartDate(subscription.startDate)}</TableCell>\r\n                              <TableCell>{formatEndDate(subscription.startDate, subscription.lengthInMonths)}</TableCell>\r\n                              {isPortalAdminOrSupport() ?\r\n                                <TableCell style={{width: '250px'}}>{project.notes}</TableCell> : null}\r\n                              <TableCell>\r\n                                <ProjectActionItems\r\n                                  serviceUrl={this.props.serviceUrl}\r\n                                  ticketingSystem={this.state.ticketingSystem}\r\n                                  locale={this.props.locale}\r\n                                  subscription={subscription}\r\n                                  project={project}\r\n                                  allProjects={this.state.projects}\r\n                                  handleDeleteProject={this.handleDeleteProject}\r\n                                  updateProjectList={this.updateProjectList}\r\n                                />\r\n                              </TableCell>\r\n                          </TableRow>\r\n                        );\r\n                      }\r\n                    })}\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            )}\r\n          </DataTable>\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withKeycloak(CustomerDataTable);\r\n","import {Component} from 'react';\r\nimport i18n from '../../i18n';\r\nimport { Tile } from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\n\r\nclass CustomerDetails extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      customer: {},\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"customer-details\">\r\n        <Tile style={{margin: '2em 0', minHeight: '0', paddingBottom: '0'}}>\r\n          <div>\r\n            <strong>{i18n.t('customerDashboard.customerId')}</strong> {this.props.customer.id}\r\n          </div>\r\n          <div>\r\n            <strong>{i18n.t('customerDashboard.customerName')}</strong> {this.props.customer.name}\r\n          </div>\r\n        </Tile>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withKeycloak(CustomerDetails);\r\n","import React from 'react';\r\nimport i18n from '../../i18n';\r\n\r\nconst ButtonBody = ({label, icon}) => {\r\n  return (\r\n    <>\r\n      {i18n.t(label)}\r\n      {icon}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ButtonBody;\r\n","import React from 'react';\r\n\r\nexport const IconDelete = (\r\n  <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <path d=\"M7 6H6V12H7V6Z\" fill=\"#0F62FE\"/>\r\n    <path d=\"M10 6H9V12H10V6Z\" fill=\"#0F62FE\"/>\r\n    <path\r\n      d=\"M2 3V4H3V14C3 14.2652 3.10536 14.5196 3.29289 14.7071C3.48043 14.8946 3.73478 15 4 15H12C12.2652 15 12.5196 14.8946 12.7071 14.7071C12.8946 14.5196 13 14.2652 13 14V4H14V3H2ZM4 14V4H12V14H4Z\"\r\n      fill=\"#0F62FE\"/>\r\n    <path d=\"M10 1H6V2H10V1Z\" fill=\"#0F62FE\"/>\r\n  </svg>\r\n);\r\n\r\nexport const IconDetails = (\r\n  <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <path\r\n      d=\"M15.47 7.83C14.8819 6.30882 13.861 4.99331 12.5334 4.04604C11.2058 3.09878 9.62971 2.56129 7.99997 2.5C6.37023 2.56129 4.79416 3.09878 3.46657 4.04604C2.13898 4.99331 1.11805 6.30882 0.52997 7.83C0.490254 7.93985 0.490254 8.06015 0.52997 8.17C1.11805 9.69118 2.13898 11.0067 3.46657 11.954C4.79416 12.9012 6.37023 13.4387 7.99997 13.5C9.62971 13.4387 11.2058 12.9012 12.5334 11.954C13.861 11.0067 14.8819 9.69118 15.47 8.17C15.5097 8.06015 15.5097 7.93985 15.47 7.83ZM7.99997 12.5C5.34997 12.5 2.54997 10.535 1.53497 8C2.54997 5.465 5.34997 3.5 7.99997 3.5C10.65 3.5 13.45 5.465 14.465 8C13.45 10.535 10.65 12.5 7.99997 12.5Z\"\r\n      fill=\"#0F62FE\"/>\r\n    <path\r\n      d=\"M8 5C7.40666 5 6.82664 5.17595 6.33329 5.50559C5.83994 5.83524 5.45543 6.30377 5.22836 6.85195C5.0013 7.40013 4.94189 8.00333 5.05765 8.58527C5.1734 9.16721 5.45912 9.70176 5.87868 10.1213C6.29824 10.5409 6.83279 10.8266 7.41473 10.9424C7.99667 11.0581 8.59987 10.9987 9.14805 10.7716C9.69623 10.5446 10.1648 10.1601 10.4944 9.66671C10.8241 9.17336 11 8.59334 11 8C11 7.20435 10.6839 6.44129 10.1213 5.87868C9.55871 5.31607 8.79565 5 8 5ZM8 10C7.60444 10 7.21776 9.8827 6.88886 9.66294C6.55996 9.44318 6.30362 9.13082 6.15224 8.76537C6.00087 8.39991 5.96126 7.99778 6.03843 7.60982C6.1156 7.22186 6.30608 6.86549 6.58579 6.58579C6.86549 6.30608 7.22186 6.1156 7.60982 6.03843C7.99778 5.96126 8.39992 6.00087 8.76537 6.15224C9.13082 6.30362 9.44318 6.55996 9.66294 6.88886C9.8827 7.21776 10 7.60444 10 8C10 8.53043 9.78929 9.03914 9.41421 9.41421C9.03914 9.78929 8.53043 10 8 10Z\"\r\n      fill=\"#0F62FE\"/>\r\n  </svg>\r\n);\r\n\r\nexport const IconEdit = (\r\n  <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <path d=\"M15 13H1V14H15V13Z\" fill=\"#0F62FE\"/>\r\n    <path\r\n      d=\"M12.7 4.5C13.1 4.1 13.1 3.5 12.7 3.1L10.9 1.3C10.5 0.9 9.9 0.9 9.5 1.3L2 8.8V12H5.2L12.7 4.5ZM10.2 2L12 3.8L10.5 5.3L8.7 3.5L10.2 2ZM3 11V9.2L8 4.2L9.8 6L4.8 11H3Z\"\r\n      fill=\"#0F62FE\"/>\r\n  </svg>\r\n);\r\n\r\nexport const IconPlus = (\r\n  <svg width=\"15\" height=\"16\" viewBox=\"0 0 15 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <path fillRule=\"evenodd\" clipRule=\"evenodd\"\r\n          d=\"M7.96875 7.5V3.5H7.03125V7.5H3.28125V8.5H7.03125V12.5H7.96875V8.5H11.7188V7.5H7.96875Z\" fill=\"#002F87\"/>\r\n    <mask id=\"mask0\" mask-type=\"alpha\" maskUnits=\"userSpaceOnUse\" x=\"3\" y=\"3\" width=\"9\" height=\"10\">\r\n      <path fillRule=\"evenodd\" clipRule=\"evenodd\"\r\n            d=\"M7.96875 7.5V3.5H7.03125V7.5H3.28125V8.5H7.03125V12.5H7.96875V8.5H11.7188V7.5H7.96875Z\" fill=\"white\"/>\r\n    </mask>\r\n    <g mask=\"url(#mask0)\">\r\n    </g>\r\n  </svg>\r\n);\r\n","import React, {Component} from 'react';\r\nimport i18n from '../../i18n';\r\nimport {ModalWrapper, Form, TextInput, TextArea} from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport {apiCustomerGet, apiCustomerPut} from '../../api/customers';\r\nimport {authenticationChanged, isAuthenticated} from '../../api/helpers';\r\nimport ButtonBody from '../Buttons/ButtonBody';\r\nimport {IconEdit} from '../../helpers/icons'\r\n\r\nclass EditCustomerModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      name: '',\r\n      customerNumber: '',\r\n      contactName: '',\r\n      contactPhone: '',\r\n      contactEmail: '',\r\n      notes: '',\r\n      invalid: {},\r\n      modalId: '',\r\n      buttonId: '',\r\n      submitMsg: '',\r\n      submitColour: 'black',\r\n    };\r\n  }\r\n\r\n  handleValidation() {\r\n    let invalid = {};\r\n    let formIsValid = true;\r\n\r\n    //name\r\n    if (this.state.name === '') {\r\n      formIsValid = false;\r\n      invalid['name'] = true;\r\n    }\r\n\r\n    //customerNumber\r\n    if (this.state.customerNumber === '') {\r\n      formIsValid = false;\r\n      invalid['customerNumber'] = true;\r\n    }\r\n\r\n    this.setState({ invalid: invalid });\r\n    return formIsValid;\r\n  }\r\n\r\n  handleChanges = e => {\r\n    const input = e.target;\r\n    const name = input.name;\r\n    const value = input.value;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  async updateCustomer(customer) {\r\n    if (isAuthenticated(this.props)) {\r\n      return await apiCustomerPut(this.props.serviceUrl, customer);\r\n    }\r\n  }\r\n\r\n  getCustomerDetails = customerId => {\r\n    this.getCustomer(customerId);\r\n  };\r\n\r\n  async getCustomer(customerId) {\r\n    if (isAuthenticated(this.props)) {\r\n      const customer = (await apiCustomerGet(this.props.serviceUrl, customerId)).data;\r\n      this.setState({\r\n        name: customer.name,\r\n        customerNumber: customer.customerNumber,\r\n        contactName: customer.contactName,\r\n        contactPhone: customer.contactPhone,\r\n        contactEmail: customer.contactEmail,\r\n        notes: customer.notes,\r\n        modalId: 'modal-form-customer-edit-' + customer.id,\r\n        buttonId: 'edit-customer-button-' + customer.id,\r\n      });\r\n    }\r\n  }\r\n\r\n  handleFormSubmit = () => {\r\n    const formIsValid = this.handleValidation();\r\n\r\n    if (formIsValid) {\r\n      const customer = {\r\n        id: this.props.customer.id,\r\n        name: this.state.name,\r\n        customerNumber: this.state.customerNumber,\r\n        contactName: this.state.contactName,\r\n        contactPhone: this.state.contactPhone,\r\n        contactEmail: this.state.contactEmail,\r\n        notes: this.state.notes,\r\n      };\r\n      this.updateCustomer(customer)\r\n        .then(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.updated'),\r\n            submitColour: '#24a148',\r\n          });\r\n          this.props.updateCustomerList();\r\n          this.getCustomerDetails(this.props.customer.id);\r\n        })\r\n        .catch(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.error'),\r\n            submitColour: '#da1e28',\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  clearValues = () => {\r\n    const customerModalElement = document.querySelector('#' + this.state.modalId);\r\n    if (!customerModalElement.className.includes('is-visible')) {\r\n      this.setState({\r\n        name: this.props.customer.name,\r\n        customerNumber: this.props.customer.customerNumber,\r\n        contactName: this.props.customer.contactName,\r\n        contactPhone: this.props.customer.contactPhone,\r\n        contactEmail: this.props.customer.contactEmail,\r\n        notes: this.props.customer.notes,\r\n        invalid: {},\r\n      });\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (isAuthenticated(this.props)) {\r\n      if (this.props.customerId) {\r\n        this.getCustomerDetails(this.props.customerId);\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (authenticationChanged(this.props, prevProps)) {\r\n      this.getCustomerDetails(this.props.customerId);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const modalConfirmation = (\r\n      <div className=\"bx--modal-header\">\r\n        <p style={{color: this.state.submitColour}}>{this.state.submitMsg}</p>\r\n      </div>\r\n    );\r\n    const modalId = this.state.modalId;\r\n    const buttonClassName = 'bx--btn bx--btn--ghost edit-customer-button-' + this.props.customerId;\r\n    return (\r\n      modalId && (\r\n        <ModalWrapper\r\n          buttonTriggerText={<ButtonBody label='buttons.edit' icon={IconEdit}/>}\r\n          modalHeading={i18n.t('adminDashboard.editCustomer.title')}\r\n          buttonTriggerClassName={buttonClassName}\r\n          className=\"modal-form\"\r\n          id={modalId}\r\n          handleSubmit={this.handleFormSubmit}\r\n          primaryButtonText={i18n.t('modalText.save')}\r\n          secondaryButtonText={i18n.t('modalText.cancel')}\r\n        >\r\n          {modalConfirmation}\r\n          <div className=\"form-container\">\r\n            <Form onSubmit={this.handleFormSubmit} id={'form-' + modalId}>\r\n              <TextInput\r\n                id={'name' + modalId}\r\n                name=\"name\"\r\n                labelText={i18n.t('adminDashboard.addCustomer.customerName') + ' *'}\r\n                value={this.state.name}\r\n                onChange={this.handleChanges}\r\n                invalidText={i18n.t('validation.invalid.required')}\r\n                invalid={this.state.invalid['name']}\r\n              />\r\n              <TextInput\r\n                id={'customerNumber' + modalId}\r\n                name=\"customerNumber\"\r\n                labelText={i18n.t('adminDashboard.addCustomer.customerNumber') + ' *'}\r\n                value={this.state.customerNumber}\r\n                onChange={this.handleChanges}\r\n                invalidText={i18n.t('validation.invalid.required')}\r\n                invalid={this.state.invalid['customerNumber']}\r\n              />\r\n              <TextInput\r\n                id={'contactName' + modalId}\r\n                name=\"contactName\"\r\n                labelText={i18n.t('adminDashboard.addCustomer.contactName')}\r\n                value={this.state.contactName}\r\n                onChange={this.handleChanges}\r\n              />\r\n              <TextInput\r\n                id={'contactPhone' + modalId}\r\n                name=\"contactPhone\"\r\n                labelText={i18n.t('adminDashboard.addCustomer.contactPhone')}\r\n                value={this.state.contactPhone}\r\n                onChange={this.handleChanges}\r\n              />\r\n              <TextInput\r\n                id={'contactEmail' + modalId}\r\n                name=\"contactEmail\"\r\n                labelText={i18n.t('adminDashboard.addCustomer.contactEmail')}\r\n                value={this.state.contactEmail}\r\n                onChange={this.handleChanges}\r\n                invalidText={i18n.t('validation.invalid.email')}\r\n                invalid={this.state.invalid['contactEmail']}\r\n              />\r\n              <TextArea\r\n                name=\"notes\"\r\n                labelText={i18n.t('adminDashboard.addCustomer.notes')}\r\n                value={this.state.notes}\r\n                onChange={this.handleChanges}\r\n              />\r\n            </Form>\r\n          </div>\r\n          {modalConfirmation}\r\n        </ModalWrapper>\r\n      )\r\n    );\r\n  }\r\n}\r\n\r\nexport default withKeycloak(EditCustomerModal);\r\n","import React, {Component} from 'react';\r\nimport i18n from '../../i18n';\r\nimport {ModalWrapper, Form, TextInput, TextArea} from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport {apiAddProjectToCustomer} from '../../api/customers';\r\nimport {apiProjectPost, apiProjectsGet} from '../../api/projects';\r\nimport {authenticationChanged, isAuthenticated} from \"../../api/helpers\";\r\nimport ButtonBody from '../Buttons/ButtonBody';\r\nimport {IconPlus} from '../../helpers/icons';\r\n\r\nclass AddProjectModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      modalId: 'modal-form-project-' + props.customerId,\r\n      projects: {},\r\n      name: '',\r\n      description: '',\r\n      systemId: '',\r\n      contactName: '',\r\n      contactPhone: '',\r\n      contactEmail: '',\r\n      notes: '',\r\n      invalid: {},\r\n      submitMsg: '',\r\n      submitColour: 'black',\r\n    };\r\n  }\r\n\r\n  handleValidation() {\r\n    let invalid = {};\r\n    let formIsValid = true;\r\n\r\n    //name\r\n    if (this.state.name === '') {\r\n      formIsValid = false;\r\n      invalid['name'] = true;\r\n    }\r\n\r\n    //description\r\n    if (this.state.description === '') {\r\n      formIsValid = false;\r\n      invalid['description'] = true;\r\n    }\r\n\r\n    this.setState({ invalid: invalid });\r\n    return formIsValid;\r\n  }\r\n\r\n  //TODO: refactor to make this a validation call instead of loading all projects ahead of time\r\n  async getAllProjects() {\r\n    let projects = {}\r\n    try {\r\n      projects = await apiProjectsGet(this.props.serviceUrl);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n    this.setState({\r\n      projects: projects.data ? projects.data : {},\r\n    });\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (authenticationChanged(this.props, prevProps)) {\r\n      this.getAllProjects();\r\n    }\r\n  }\r\n\r\n  handleChanges = e => {\r\n    const input = e.target;\r\n    const name = input.name;\r\n    const value = input.value;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  async projectPost(project) {\r\n    if (isAuthenticated(this.props)) {\r\n      const result = await apiProjectPost(this.props.serviceUrl, project);\r\n      return await apiAddProjectToCustomer(this.props.serviceUrl, this.props.customer.id, result.data.id);\r\n    }\r\n  }\r\n\r\n  handleFormSubmit = () => {\r\n    const formIsValid = this.handleValidation();\r\n\r\n    if (formIsValid) {\r\n      const project = {\r\n        name: this.state.name,\r\n        description: this.state.description,\r\n        systemId: this.state.systemId,\r\n        contactName: this.state.contactName,\r\n        contactPhone: this.state.contactPhone,\r\n        contactEmail: this.state.contactEmail,\r\n        notes: this.state.notes,\r\n      };\r\n      for (var i = 0; i < this.state.projects.length; i++) {\r\n        if (project.systemId === this.state.projects[i].systemId && project.systemId.trim() !== '') {\r\n          window.alert('That system id is already in use in another project');\r\n          return;\r\n        }\r\n      }\r\n      this.projectPost(project)\r\n        .then(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.added'),\r\n            submitColour: '#24a148',\r\n          });\r\n          this.props.updateCustomerList();\r\n          this.getAllProjects();\r\n        })\r\n        .catch(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.error'),\r\n            submitColour: '#da1e28',\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  clearValues = () => {\r\n    const projectModalElement = document.querySelector('#' + this.state.modalId);\r\n    if (!projectModalElement.className.includes('is-visible')) {\r\n      this.setState({\r\n        name: '',\r\n        description: '',\r\n        systemId: '',\r\n        contactName: '',\r\n        contactPhone: '',\r\n        contactEmail: '',\r\n        notes: '',\r\n        invalid: {},\r\n      });\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getAllProjects();\r\n\r\n    const modalOpenButton = document.querySelector('.add-project-button');\r\n    modalOpenButton.addEventListener('click', this.clearValues, false);\r\n  }\r\n\r\n  render() {\r\n    const modalConfirmation = (\r\n      <div className=\"bx--modal-header\">\r\n        <p style={{color: this.state.submitColour}}>{this.state.submitMsg}</p>\r\n      </div>\r\n    );\r\n    const modalId = this.state.modalId;\r\n    return (\r\n      <ModalWrapper\r\n        buttonTriggerText={<ButtonBody label='buttons.addProject' icon={IconPlus}/>}\r\n        modalHeading={i18n.t('adminDashboard.addProject.title')}\r\n        buttonTriggerClassName=\"bx--btn bx--btn--ghost add-project-button\"\r\n        className=\"modal-form\"\r\n        id={modalId}\r\n        handleSubmit={this.handleFormSubmit}\r\n        primaryButtonText={i18n.t('modalText.save')}\r\n        secondaryButtonText={i18n.t('modalText.cancel')}\r\n      >\r\n        {modalConfirmation}\r\n        <div className=\"form-container\">\r\n          <Form onSubmit={this.handleFormSubmit}>\r\n            <div>\r\n              <span>{i18n.t('adminDashboard.addCustomer.customerName')}:</span> {this.props.customer.name}\r\n            </div>\r\n            <TextInput\r\n              id={'name' + modalId}\r\n              name=\"name\"\r\n              labelText={i18n.t('adminDashboard.addProject.projectName') + ' *'}\r\n              value={this.state.name}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.required')}\r\n              invalid={this.state.invalid['name']}\r\n            />\r\n            <TextInput\r\n              id={'description' + modalId}\r\n              name=\"description\"\r\n              labelText={i18n.t('adminDashboard.addProject.projectDesc') + ' *'}\r\n              value={this.state.description}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.required')}\r\n              invalid={this.state.invalid['description']}\r\n            />\r\n            <TextInput\r\n              id={'systemId' + modalId}\r\n              name=\"systemId\"\r\n              labelText={i18n.t('adminDashboard.addProject.systemId')}\r\n              value={this.state.systemId}\r\n              onChange={this.handleChanges}\r\n            />\r\n            <TextInput\r\n              id={'contactName' + modalId}\r\n              name=\"contactName\"\r\n              labelText={i18n.t('adminDashboard.addProject.contactName')}\r\n              value={this.state.contactName}\r\n              onChange={this.handleChanges}\r\n            />\r\n            <TextInput\r\n              id={'contactPhone' + modalId}\r\n              name=\"contactPhone\"\r\n              labelText={i18n.t('adminDashboard.addProject.contactPhone')}\r\n              value={this.state.contactPhone}\r\n              onChange={this.handleChanges}\r\n            />\r\n            <TextInput\r\n              id={'contactEmail' + modalId}\r\n              name=\"contactEmail\"\r\n              labelText={i18n.t('adminDashboard.addProject.contactEmail')}\r\n              value={this.state.contactEmail}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.email')}\r\n              invalid={this.state.invalid['contactEmail']}\r\n            />\r\n            <TextArea\r\n              id={'notes' + modalId}\r\n              name=\"notes\"\r\n              labelText={i18n.t('adminDashboard.addProject.notes')}\r\n              value={this.state.notes}\r\n              onChange={this.handleChanges}\r\n            />\r\n          </Form>\r\n        </div>\r\n        {modalConfirmation}\r\n      </ModalWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withKeycloak(AddProjectModal);\r\n","import React from 'react';\r\nimport {Button} from 'carbon-components-react';\r\nimport ButtonBody from './ButtonBody';\r\n\r\nconst GhostButton = ({label, icon, onClick}) => {\r\n  return (\r\n    <Button kind=\"ghost\" onClick={onClick}>\r\n      <ButtonBody label={label} icon={icon}/>\r\n    </Button>\r\n  );\r\n}\r\n\r\nexport default GhostButton;\r\n","import {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {AccordionItem} from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport {apiCustomerGet, apiCustomerDelete} from '../../api/customers';\r\nimport CustomerDataTable from './CustomerDataTable';\r\nimport CustomerDetails from './CustomerDetails';\r\nimport {\r\n  isPortalAdminOrSupport,\r\n  isPortalAdmin,\r\n  isPortalCustomer,\r\n  isAuthenticated,\r\n  authenticationChanged\r\n} from '../../api/helpers';\r\nimport EditCustomerModal from '../Admin/EditCustomerModal';\r\nimport AddProjectModal from '../Admin/AddProjectModal';\r\nimport GhostButton from '../Buttons/GhostButton';\r\nimport {IconDelete, IconDetails} from '../../helpers/icons';\r\n\r\nclass CustomerAccordian extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      projects: {},\r\n      customer: {},\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (isAuthenticated(this.props)) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (authenticationChanged(this.props, prevProps)) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n\r\n  async fetchData() {\r\n    const customerId = this.props.customerId;\r\n    try {\r\n      const customer = await apiCustomerGet(this.props.serviceUrl, customerId);\r\n      this.setState({\r\n        customer: customer.data,\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  async deleteCustomer() {\r\n    return await apiCustomerDelete(this.props.serviceUrl, this.state.customer.id);\r\n  }\r\n\r\n  handleDelete = () => {\r\n    if (window.confirm('Are you sure you want to delete this customer?')) {\r\n      this.deleteCustomer().then(() => {\r\n        this.props.updateCustomerList();\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div>\r\n          {isPortalCustomer() && <CustomerDetails serviceUrl={this.props.serviceUrl} customer={this.state.customer}/>}\r\n          <AccordionItem title={this.props.title} open={this.props.accordionOpened}>\r\n            <div style={{display: 'flex'}}>\r\n              {isPortalAdminOrSupport() && (\r\n                <Link style={{textDecoration: 'none'}} to={`/customer-details/${this.state.customer.id}`}>\r\n                  <GhostButton label='buttons.viewDetails' icon={IconDetails}/>\r\n                </Link>\r\n              )}\r\n              {isPortalAdmin() && (\r\n                <div style={{display: 'flex'}}>\r\n                  <EditCustomerModal\r\n                    serviceUrl={this.props.serviceUrl}\r\n                    customer={this.state.customer}\r\n                    key={this.state.customer.id}\r\n                    updateCustomerList={this.props.updateCustomerList}\r\n                    customerId={this.state.customer.id}\r\n                  />\r\n                  <AddProjectModal serviceUrl={this.props.serviceUrl}\r\n                                   customerId={this.props.customerId}\r\n                                   customer={this.state.customer}\r\n                                   updateCustomerList={this.props.updateCustomerList}/>\r\n\r\n                  <GhostButton label='buttons.delete' icon={IconDelete} onClick={this.handleDelete}/>\r\n                </div>\r\n              )}\r\n            </div>\r\n            <CustomerDataTable\r\n              key={new Date().getTime()}\r\n              serviceUrl={this.props.serviceUrl}\r\n              customer={this.state.customer}\r\n              locale={this.props.locale}\r\n              updateCustomerList={this.props.updateCustomerList}\r\n              productName={(this.props.ticketSystemConfig && this.props.ticketSystemConfig.productName) ? JSON.parse(this.props.ticketSystemConfig.productName) : ''}\r\n            />\r\n          </AccordionItem>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withKeycloak(CustomerAccordian);\r\n","import React from 'react';\r\nimport i18n from '../../i18n';\r\nimport {Accordion, InlineLoading, PaginationNav, Search, Tile} from 'carbon-components-react';\r\nimport AddCustomerModal from './AddCustomerModal';\r\nimport AddPartnerModal from './AddPartnerModal';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport {apiCustomersGet} from '../../api/customers';\r\nimport CustomerAccordian from '../Customer/CustomerAccordian';\r\nimport {\r\n  authenticationChanged,\r\n  isPortalAdmin,\r\n  isPortalSupport,\r\n  isPortalPartner,\r\n  isPortalUser,\r\n  isAuthenticated,\r\n} from '../../api/helpers';\r\nimport { apiTicketingSystemConfigResourceGet } from '../../api/manageFieldConfigurations';\r\n\r\nclass AdminDashboard extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      customers: {},\r\n      role: '',\r\n      filteredCustomers: {},\r\n      currentPage: 0,\r\n      test: '',\r\n      loading: true,\r\n      ticketSystemConfig: {},\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchData();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (authenticationChanged(this.props, prevProps)) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n\r\n  async fetchData() {\r\n    if (isAuthenticated(this.props)) {\r\n      let customers = {};\r\n      try {\r\n        customers = await apiCustomersGet(this.props.serviceUrl);\r\n        const { data: ticketSystemConfig } = await apiTicketingSystemConfigResourceGet(this.props.serviceUrl);\r\n        this.setState({ ticketSystemConfig: ticketSystemConfig[0] })\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n\r\n      this.setState({\r\n        customers: customers.data ? customers.data : {},\r\n        filteredCustomers: customers.data ? customers.data : {},\r\n        loading: false\r\n      });\r\n    }\r\n  }\r\n\r\n  handleSearch = event => {\r\n    if (event.key === 'Enter') {\r\n      //Note: should refactor this to perform filtering in db\r\n      const newFilteredState = this.state.customers.filter(customer =>\r\n        customer.name.toLowerCase().includes(event.target.value.toLowerCase())\r\n      );\r\n      this.setState({\r\n        filteredCustomers: newFilteredState,\r\n        currentPage: 0,\r\n      });\r\n    } else {\r\n      if (event.target.value === '' || event.target.value === undefined) {\r\n        this.setState({\r\n          filteredCustomers: this.state.customers,\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  updateCustomerList = () => {\r\n    this.fetchData();\r\n  };\r\n\r\n  render() {\r\n    var numberOfPages = 1;\r\n    if (Object.keys(this.state.filteredCustomers).length !== 0) {\r\n      numberOfPages = Math.ceil(this.state.filteredCustomers.length / 5);\r\n    } else {\r\n      numberOfPages = 1;\r\n    }\r\n\r\n    const props = () => ({\r\n      loop: Boolean(false),\r\n      page: Number(this.state.currentPage),\r\n      totalItems: Number(numberOfPages),\r\n      itemsShown: Number(1),\r\n      onChange: event => this.setState({ currentPage: event }),\r\n    });\r\n    const customerCount = Object.keys(this.state.customers).length;\r\n\r\n    return (\r\n      <div className=\"admin-dashboard\">\r\n        {isPortalAdmin() || isPortalSupport() || isPortalPartner() ? (\r\n          <Tile>\r\n            <p className=\"title\">{i18n.t('adminDashboard.allCustomers')}</p>\r\n            <div className=\"bx--row\">\r\n              <div className=\"bx--col\">\r\n                <Search\r\n                  onChange={this.handleSearch}\r\n                  id=\"search\"\r\n                  placeholder={i18n.t('adminDashboard.searchText')}\r\n                  labelText={i18n.t('adminDashboard.searchLabel')}\r\n                  onKeyPress={this.handleSearch}\r\n                />\r\n              </div>\r\n              {isPortalAdmin() ? (\r\n                <div className=\"bx--col\">\r\n                  <div>\r\n                    <AddPartnerModal serviceUrl={this.props.serviceUrl} updateCustomerList={this.updateCustomerList}/>\r\n                    <AddCustomerModal serviceUrl={this.props.serviceUrl} updateCustomerList={this.updateCustomerList}/>\r\n                  </div>\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n          </Tile>\r\n        ) : null}\r\n\r\n        {this.state.loading && <InlineLoading/>}\r\n        {!this.state.loading && (\r\n          <div className=\"form-container\">\r\n            <Accordion>\r\n              {(customerCount !== 0)\r\n                ? this.state.filteredCustomers.map((customer, index) => {\r\n                  //Pagination for Admin and Support roles (5 items per page)\r\n                  //Note: eventually this should be pushed down into paginated microservice calls\r\n                  var indexOfLastItem = (this.state.currentPage + 1) * 5 - 1;\r\n                  var firstIndexOfCurrentPage = this.state.currentPage * 5;\r\n                  var accordionOpened = this.state.customers.length === 1;\r\n\r\n                  if (isPortalUser()) {\r\n                    if (index >= firstIndexOfCurrentPage && index <= indexOfLastItem) {\r\n                      return (\r\n                        <CustomerAccordian\r\n                          key={customer.id}\r\n                          serviceUrl={this.props.serviceUrl}\r\n                          customerId={customer.id}\r\n                          title={customer.name}\r\n                          updateCustomerList={this.updateCustomerList}\r\n                          locale={this.props.locale}\r\n                          accordionOpened={accordionOpened}\r\n                          ticketSystemConfig={this.state.ticketSystemConfig}\r\n                        />\r\n                      );\r\n                    } else {\r\n                      return null;\r\n                    }\r\n                  } else {\r\n                    return null;\r\n                  }\r\n                })\r\n                : null}\r\n            </Accordion>\r\n            {customerCount > 1 && (\r\n              <PaginationNav {...props()} className=\"pagination-right\"/>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withKeycloak(AdminDashboard);\r\n","import { getDefaultOptions, request, getUrl } from './helpers';\r\n\r\nconst resource = 'api/tickets';\r\n\r\nexport const apiTicketDelete = async (serviceUrl, id) => {\r\n  const url = `${serviceUrl}/${resource}/${id}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiTicketsGet = async serviceUrl => {\r\n  const url = getUrl(`${serviceUrl}/${resource}`);\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiTicketPost = async (serviceUrl, ticket) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n    body: ticket ? JSON.stringify(ticket) : null,\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nconst jiraResource = 'api/tickets/ticketingsystem';\r\n\r\nexport const apiJiraTicketsGet = async (serviceUrl, projectId) => {\r\n  const url = `${serviceUrl}/${jiraResource}/${projectId}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiJiraTicketPost = async (serviceUrl, projectId, ticket) => {\r\n  const url = `${serviceUrl}/${jiraResource}/${projectId}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n    body: ticket ? JSON.stringify(ticket) : null,\r\n  };\r\n  return request(url, options);\r\n};\r\n","import React, { Component } from 'react';\r\nimport {\r\n  DataTable,\r\n  InlineLoading,\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableHeader,\r\n  TableBody,\r\n  TableCell,\r\n  PaginationNav,\r\n} from 'carbon-components-react';\r\nimport {apiJiraTicketsGet} from '../../api/tickets';\r\nimport {apiCurrentTicketingSystemGet} from '../../api/ticketingsystem';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport {apiProjectGet} from '../../api/projects';\r\nimport {authenticationChanged, isAuthenticated, isPortalUser} from '../../api/helpers';\r\nimport i18n from '../../i18n';\r\nimport {Link} from 'react-router-dom';\r\nimport GhostButton from '../Buttons/GhostButton';\r\nimport {IconDetails, IconPlus} from '../../helpers/icons';\r\n\r\nclass TicketList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      tickets: {},\r\n      project: {},\r\n      ticketingSystem: {},\r\n      currentPage: 0,\r\n      loading: true\r\n    };\r\n    this.headerData = [\r\n      {\r\n        header: i18n.t('ticketDetails.issue'),\r\n        key: 'issue',\r\n      },\r\n      {\r\n        header: i18n.t('ticketDetails.summary'),\r\n        key: 'summary',\r\n      },\r\n      {\r\n        header: i18n.t('ticketDetails.status'),\r\n        key: 'status',\r\n      },\r\n      {\r\n        header: i18n.t('ticketDetails.type'),\r\n        key: 'type',\r\n      },\r\n      {\r\n        header: i18n.t('ticketDetails.priority'),\r\n        key: 'priority',\r\n      },\r\n      {\r\n        header: i18n.t('ticketDetails.created'),\r\n        key: 'created',\r\n      },\r\n      {\r\n        header: i18n.t('ticketDetails.updated'),\r\n        key: 'updated',\r\n      },\r\n      {\r\n        header: i18n.t('ticketDetails.link'),\r\n        key: 'link',\r\n      },\r\n    ];\r\n  }\r\n\r\n  async fetchData() {\r\n    if (isPortalUser()) {\r\n      try {\r\n        const project = (await apiProjectGet(this.props.serviceUrl, this.props.projectId)).data;\r\n        const ticketingSystem = await apiCurrentTicketingSystemGet(this.props.serviceUrl);\r\n        const tickets = await apiJiraTicketsGet(this.props.serviceUrl, project.id);\r\n        this.setState({\r\n          tickets: tickets,\r\n          project: project,\r\n          ticketingSystem: ticketingSystem,\r\n          loading: false\r\n        });\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (isAuthenticated(this.props)) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (authenticationChanged(this.props, prevProps)) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var numberOfPages = 1;\r\n    if (Object.keys(this.state.tickets).length !== 0) {\r\n      numberOfPages = Math.ceil(this.state.tickets.data.length / 10);\r\n    }\r\n\r\n    const paginationProps = () => ({\r\n      loop: Boolean(false),\r\n      page: Number(this.state.currentPage),\r\n      totalItems: Number(numberOfPages),\r\n      itemsShown: Number(1),\r\n      onChange: event => this.setState({currentPage: event}),\r\n    });\r\n    const ticketSystemUrl = this.state.ticketingSystem.url;\r\n    const ticketingSystemBaseUrl = ticketSystemUrl != null ? ticketSystemUrl.substr(0, ticketSystemUrl.indexOf('/rest')) : null;\r\n    const ticketCount = Object.keys(this.state.tickets).length;\r\n\r\n    return (\r\n      <div className=\"bx--tile\">\r\n        {this.state.project.id && (\r\n          <div>\r\n            {/*View All Ticket*/}\r\n            <a\r\n              href={ticketingSystemBaseUrl + '/issues/?jql=Organizations=' + this.state.project.systemId}\r\n              style={{textDecoration: 'none'}}\r\n              target=\"_blank\"\r\n              rel=\"noreferrer\"\r\n            >\r\n              <GhostButton label='buttons.viewAllTickets' icon={IconDetails}/>\r\n            </a>\r\n            {/*Open Ticket*/}\r\n            <Link style={{textDecoration: 'none'}} to={`/ticket/${this.state.project.id}`}>\r\n              <GhostButton label='buttons.openTicket' icon={IconPlus}/>\r\n            </Link>\r\n          </div>\r\n        )}\r\n        {this.state.loading && <InlineLoading/>}\r\n        {!this.state.loading && (\r\n          <>\r\n            <DataTable rows={[{id: '1'}]} headers={this.headerData}>\r\n              {({rows, headers, getHeaderProps, getTableProps}) => (\r\n                <TableContainer title={i18n.t('ticketDetails.listOfTickets')}>\r\n                  <Table {...getTableProps()}>\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        {headers.map(header => (\r\n                          <TableHeader {...getHeaderProps({header})}>{header.header}</TableHeader>\r\n                        ))}\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {ticketCount !== 0 ? (\r\n                        this.state.tickets.data.map((ticket, index) => {\r\n                          const indexOfLastItem = (this.state.currentPage + 1) * 10 - 1;\r\n                          const firstIndexOfCurrentPage = this.state.currentPage * 10;\r\n                          const ticketUrl = ticketingSystemBaseUrl + '/browse/' + ticket.systemId;\r\n\r\n                          if (index >= firstIndexOfCurrentPage && index <= indexOfLastItem) {\r\n                            return (\r\n                              <TableRow key={ticket.id}>\r\n                                <TableCell>\r\n                                  <a href={ticketUrl} target=\"_blank\" rel=\"noreferrer\">\r\n                                    {ticket.systemId}\r\n                                  </a>\r\n                                </TableCell>\r\n                                <TableCell>{ticket.summary}</TableCell>\r\n                                <TableCell>{ticket.status}</TableCell>\r\n                                <TableCell>{ticket.type}</TableCell>\r\n                                <TableCell>{ticket.priority}</TableCell>\r\n                                <TableCell>{new Date(ticket.createDate).toDateString()}</TableCell>\r\n                                <TableCell>{new Date(ticket.updateDate).toDateString()}</TableCell>\r\n                                <TableCell>\r\n                                  <a href={ticketUrl} target=\"_blank\" rel=\"noreferrer\">\r\n                                    {i18n.t('ticketDetails.viewTicket')}\r\n                                  </a>\r\n                                </TableCell>\r\n                              </TableRow>\r\n                            );\r\n                          } else {\r\n                            return null;\r\n                          }\r\n                        })\r\n                      ) : (\r\n                        <TableRow/>\r\n                      )}\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n              )}\r\n            </DataTable>\r\n            {ticketCount > 10 && (\r\n              <PaginationNav {...paginationProps()} className=\"pagination-right\"/>\r\n            )}\r\n          </>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withKeycloak(TicketList);\r\n","import React from 'react';\r\nimport TicketList from './TicketList';\r\nimport {Tile} from 'carbon-components-react';\r\nimport {apiSubscriptionGet, formatStartDate, formatEndDate} from '../../api/subscriptions';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport {apiGetProjectUsers, apiProjectGet} from '../../api/projects';\r\nimport {isPortalAdminOrSupport, isPortalUser, authenticationChanged} from '../../api/helpers';\r\nimport i18n from '../../i18n';\r\nimport Breadcrumbs from \"../Breadcrumbs/Breadcrumbs\";\r\n\r\nconst subscriptionData = {\r\n  type: 'Product Support Subscription Entando Platform',\r\n  license: 'Free Commercial Open Source',\r\n};\r\n\r\nclass Subscription extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: true,\r\n      subscription: {},\r\n      users: {},\r\n      project: {},\r\n      customer: {},\r\n    };\r\n  }\r\n\r\n  async fetchData() {\r\n    if (isPortalUser()) {\r\n      try {\r\n        let users = {};\r\n        let project = {};\r\n        const subscription = await apiSubscriptionGet(this.props.serviceUrl, this.props.match.params.id);\r\n        if (subscription.data.project) {\r\n          project = await apiProjectGet(this.props.serviceUrl, subscription.data.project.id);\r\n          users = await apiGetProjectUsers(this.props.serviceUrl, project.data.id);\r\n        }\r\n        this.setState({\r\n          subscription: subscription,\r\n          project: project,\r\n          customer: project.customer,\r\n          users: users,\r\n          loading: false,\r\n        });\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n  }\r\n\r\n  updateSubscription = () => {\r\n    this.fetchData();\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (isPortalUser()) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (authenticationChanged(this.props, prevProps) && isPortalUser()) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { type, license } = subscriptionData;\r\n\r\n    if (!this.state.loading) {\r\n      if (isPortalUser()) {\r\n        if (Object.keys(this.state.subscription).length !== 0 && Object.keys(this.state.project).length !== 0) {\r\n          const project = this.state.project.data;\r\n          const subscription = this.state.subscription.data;\r\n          return (\r\n            <div className=\"subscription-details\">\r\n              <div>\r\n                <Breadcrumbs project={project} subscription={subscription} locale={this.props.locale}/>\r\n                <Tile>\r\n                  <div className=\"bx--grid\">\r\n                    <div className=\"bx--row\">\r\n                      <div className=\"bx--col\">\r\n                        <div>\r\n                          <strong>{i18n.t('customerDashboard.customerName')}:</strong> {project.customer.name}\r\n                        </div>\r\n                        <div>\r\n                          <strong>{i18n.t('customerDashboard.projectName')}:</strong> {project.name}\r\n                        </div>\r\n                        <div>\r\n                          <strong>{i18n.t('subscriptionDetails.description')}:</strong> {subscription.project.description}\r\n                        </div>\r\n                        <div>\r\n                          <strong>{i18n.t('subscriptionDetails.partners')}:</strong>\r\n                          {project !== '' && Object.keys(project.partners).length !== 0 ? (\r\n                            <>\r\n                              {project.partners.map((partner, index) => (\r\n                                <div key={index}>\r\n                                  {' '}\r\n                                  {index === project.partners.length - 1 ? partner.name : partner.name + ', '}{' '}\r\n                                </div>\r\n                              ))}\r\n                            </>\r\n                          ) : (\r\n                            <> {i18n.t('userMessages.none')} </>\r\n                          )}\r\n                        </div>\r\n                        <div>\r\n                          <strong>{i18n.t('subscriptionDetails.type')}:</strong> {type}\r\n                        </div>\r\n                        {isPortalAdminOrSupport() ? (\r\n                          <div>\r\n                            <strong>{i18n.t('subscriptionDetails.notes')}:</strong> {subscription.notes}\r\n                          </div>\r\n                        ) : null}\r\n                      </div>\r\n                      <div className=\"bx--col\">\r\n                        <div>\r\n                          <strong>{i18n.t('subscriptionDetails.status')}:</strong> {subscription.status}\r\n                        </div>\r\n                        <div>\r\n                          <strong>{i18n.t('subscriptionDetails.level')}:</strong> {subscription.level}\r\n                        </div>\r\n                        <div>\r\n                          <strong>{i18n.t('subscriptionDetails.startDate')}:</strong>{' '}\r\n                          {formatStartDate(subscription.startDate)}\r\n                        </div>\r\n                        <div>\r\n                          <strong>{i18n.t('subscriptionDetails.endDate')}:</strong>{' '}\r\n                          {formatEndDate(subscription.startDate, subscription.lengthInMonths)}\r\n                        </div>\r\n                        <div>\r\n                          <strong>{i18n.t('subscriptionDetails.license')}:</strong> {license}\r\n                        </div>\r\n                        <div>\r\n                          <strong>{i18n.t('subscriptionDetails.assignedUsers')}:</strong>\r\n                          {this.state.users.data !== '' && Object.keys(this.state.users.data).length !== 0 ? (\r\n                            <>\r\n                              {this.state.users.data.map((user, index) => (\r\n                                <div\r\n                                  key={index}> {index === this.state.users.data.length - 1 ? user.username : user.username + ', '} </div>\r\n                              ))}\r\n                            </>\r\n                          ) : (\r\n                            <> {i18n.t('userMessages.none')} </>\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </Tile>\r\n                <br/>\r\n                <TicketList projectId={project.id} serviceUrl={this.props.serviceUrl} locale={this.props.locale}/>\r\n              </div>\r\n            </div>\r\n          );\r\n        } else {\r\n          return <div>{i18n.t('userMessages.unauthorized')}</div>;\r\n        }\r\n      } else {\r\n        return <div>{i18n.t('userMessages.unauthorized')}</div>;\r\n      }\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport default withKeycloak(Subscription);\r\n","import React from 'react';\r\nimport {Tile} from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport {apiCustomerGet} from '../../api/customers';\r\nimport {authenticationChanged, isAuthenticated, isPortalAdminOrSupport} from '../../api/helpers';\r\nimport i18n from '../../i18n';\r\nimport Breadcrumbs from '../Breadcrumbs/Breadcrumbs';\r\nimport CustomerDataTable from './CustomerDataTable';\r\n\r\nclass CustomerProjectList extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: true,\r\n      customer: {},\r\n    };\r\n  }\r\n\r\n  async fetchData() {\r\n    if (isAuthenticated(this.props)) {\r\n      try {\r\n        const customer = await apiCustomerGet(this.props.serviceUrl, this.props.match.params.id);\r\n        this.setState({\r\n          customer: customer.data,\r\n          loading: false,\r\n        });\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchData();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (authenticationChanged(this.props, prevProps) && isPortalAdminOrSupport()) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (!this.state.loading) {\r\n      const customer = this.state.customer;\r\n      if (customer) {\r\n        return (\r\n          <div className=\"project-list\">\r\n            <Breadcrumbs customer={customer} locale={this.props.locale}/>\r\n            <Tile>\r\n              <div className=\"bx--grid\">\r\n                <div className=\"bx--row\">\r\n                  <div className=\"bx--col\">\r\n                    <p>\r\n                      <strong>{i18n.t('customerDetails.id')}: </strong> {customer.id}\r\n                    </p>\r\n                    <p>\r\n                      <strong>{i18n.t('customerDetails.name')}: </strong> {customer.name}\r\n                    </p>\r\n                    {isPortalAdminOrSupport() &&\r\n                    <p>\r\n                      <strong>{i18n.t('customerDetails.notes')}: </strong> {customer.notes}\r\n                    </p>\r\n                    }\r\n                  </div>\r\n                  <div className=\"bx--col\">\r\n                    <p>\r\n                      <strong>{i18n.t('customerDetails.contactName')}: </strong> {customer.contactName}\r\n                    </p>\r\n                    <p>\r\n                      <strong>{i18n.t('customerDetails.contactPhone')}: </strong> {customer.contactPhone}\r\n                    </p>\r\n                    <p>\r\n                      <strong>{i18n.t('customerDetails.contactEmail')}: </strong> {customer.contactEmail}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </Tile>\r\n            <CustomerDataTable serviceUrl={this.props.serviceUrl} customer={customer}\r\n                               locale={this.props.locale}/>\r\n          </div>\r\n        );\r\n      } else {\r\n        return <p>{i18n.t('userMessages.loading')}...</p>;\r\n      }\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport default withKeycloak(CustomerProjectList);\r\n","import React, {Component} from 'react';\r\nimport {\r\n  DataTable,\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableHeader,\r\n  TableBody,\r\n  TableCell,\r\n  Button\r\n} from 'carbon-components-react';\r\nimport '../../../index.scss';\r\nimport withKeycloak from '../../../auth/withKeycloak';\r\nimport i18n from '../../../i18n';\r\nimport {isAuthenticated, authenticationChanged} from '../../../api/helpers';\r\nimport {apiDeleteSubscriptionFromProject, apiGetProjectSubscriptions, apiProjectGet} from '../../../api/projects';\r\nimport {formatEndDate, formatStartDate} from '../../../api/subscriptions';\r\nimport Breadcrumbs from \"../../Breadcrumbs/Breadcrumbs\";\r\nimport {Link} from 'react-router-dom';\r\nimport { apiTicketingSystemConfigResourceGet } from '../../../api/manageFieldConfigurations';\r\n\r\nclass ManageSubscriptions extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      projectId: '',\r\n      project: {},\r\n      subscriptions: [],\r\n      productName: ''\r\n    };\r\n    this.headerData = [\r\n      {\r\n        header: i18n.t('projectDetails.id'),\r\n        key: 'id',\r\n      },\r\n      {\r\n        header: i18n.t('subscriptionDetails.status'),\r\n        key: 'status',\r\n      },\r\n      {\r\n        header: i18n.t('projectDetails.entandoVersion'),\r\n        key: 'entandoVersion',\r\n      },\r\n      {\r\n        header: i18n.t('subscriptionDetails.level'),\r\n        key: 'level',\r\n      },\r\n      {\r\n        header: i18n.t('subscriptionDetails.startDate'),\r\n        key: 'startDate',\r\n      },\r\n      {\r\n        header: i18n.t('subscriptionDetails.endDate'),\r\n        key: 'endDate',\r\n      },\r\n      {\r\n        header: i18n.t('subscriptionDetails.lengthInMonths'),\r\n        key: 'lengthInMonths',\r\n      },\r\n      {\r\n        header: i18n.t('subscriptionDetails.notes'),\r\n        key: 'notes',\r\n      },\r\n      {\r\n        header: i18n.t('customerDashboard.action'),\r\n        key: 'action',\r\n      },\r\n    ];\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (isAuthenticated(this.props)) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (authenticationChanged(this.props, prevProps)) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n\r\n  async fetchData() {\r\n    if (isAuthenticated(this.props)) {\r\n      const projectId = this.props.match.params.id;\r\n\r\n      let project = {};\r\n      let subscriptions = {};\r\n      if (projectId != null) {\r\n        project = (await apiProjectGet(this.props.serviceUrl, projectId)).data;\r\n        subscriptions = (await apiGetProjectSubscriptions(this.props.serviceUrl, projectId)).data;\r\n      }\r\n\r\n      const data = await apiTicketingSystemConfigResourceGet(this.props.serviceUrl);\r\n      if (data && data.data && data.data.length && data.data[0].hasOwnProperty('subscriptionLevel')) {\r\n        this.setState({ productName: JSON.parse(data.data[0].productName)[0].name })\r\n      }\r\n      this.setState({\r\n        projectId: projectId,\r\n        project: project,\r\n        subscriptions: subscriptions,\r\n        productName: (data && data.data && data.data.length && data.data[0].productName) ? JSON.parse(data.data[0].productName)[0].name : ''\r\n      });\r\n    }\r\n  }\r\n\r\n  async deleteSubscription(subscriptionId) {\r\n    if (isAuthenticated(this.props)) {\r\n      return await apiDeleteSubscriptionFromProject(this.props.serviceUrl, this.state.projectId, subscriptionId);\r\n    }\r\n  }\r\n\r\n  handleDeleteSubscription = (e, id) => {\r\n    e.preventDefault();\r\n    if (window.confirm(i18n.t('submitMessages.confirmDelete'))) {\r\n      console.log('confirmed to delete', id);\r\n      this.deleteSubscription(id)\r\n        .then(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.deleted'),\r\n            submitColour: '#24a148',\r\n          });\r\n          this.fetchData();\r\n        })\r\n        .catch(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.error'),\r\n            submitColour: '#da1e28',\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const project = this.state.project;\r\n    return (\r\n      <div id=\"entando-customer-portal\">\r\n        <Breadcrumbs project={project} locale={this.props.locale}/>\r\n        <h5>{project.name}</h5>\r\n        <Link to={`/subscription/${this.state.projectId}`} style={{textDecoration: 'none'}}>\r\n          <Button kind=\"ghost\" style={{display: 'block', width: '100%'}} value=\"Add Subscription\">\r\n            {i18n.t('buttons.addSubscription')}\r\n          </Button>\r\n        </Link>\r\n        <DataTable rows={[{id: '1'}]} headers={this.headerData}>\r\n          {({headers, getHeaderProps, getTableProps}) => (\r\n            <TableContainer>\r\n              <Table {...getTableProps()}>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    {headers.map(header => (\r\n                      <TableHeader {...getHeaderProps({ header })}>{header.key === 'entandoVersion' ? `${this.state.productName} Version` : header.header}</TableHeader>\r\n                    ))}\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {Object.keys(this.state.subscriptions).length !== 0 &&\r\n                  this.state.subscriptions.map((subscription, index) => (\r\n                    <TableRow key={index}>\r\n                      <TableCell>{subscription.id}</TableCell>\r\n                      <TableCell>{subscription.status}</TableCell>\r\n                      <TableCell>{subscription.entandoVersion && subscription.entandoVersion.name}</TableCell>\r\n                      <TableCell>{subscription.level}</TableCell>\r\n                      <TableCell>{formatStartDate(subscription.startDate)}</TableCell>\r\n                      <TableCell>{formatEndDate(subscription.startDate, subscription.lengthInMonths)}</TableCell>\r\n                      <TableCell>{subscription.lengthInMonths}</TableCell>\r\n                      <TableCell>{subscription.notes}</TableCell>\r\n                      <TableCell>\r\n                        <Link to={`/subscription/${this.state.projectId}/${subscription.id}`}\r\n                              style={{textDecoration: 'none'}}>\r\n                          <Button kind=\"ghost\" style={{display: 'block', width: '100%'}} value=\"Edit\">\r\n                            {i18n.t('buttons.edit')}\r\n                          </Button>\r\n                        </Link>\r\n                        <Button\r\n                          kind=\"ghost\"\r\n                          onClick={event => this.handleDeleteSubscription(event, subscription.id)}\r\n                          className=\"button-warning\"\r\n                        >\r\n                          {i18n.t('buttons.delete')}\r\n                        </Button>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          )}\r\n        </DataTable>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withKeycloak(ManageSubscriptions);\r\n","import React, {Component} from 'react';\r\nimport i18n from '../../i18n';\r\nimport {\r\n  Form,\r\n  TextInput,\r\n  Select,\r\n  SelectItem,\r\n  Button,\r\n  DatePicker,\r\n  DatePickerInput,\r\n  TextArea\r\n} from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport {apiProjectGet} from '../../api/projects';\r\nimport {\r\n  apiProjectSubscriptionPost,\r\n  apiProjectSubscriptionPut,\r\n  apiRenewSubscription,\r\n  apiSubscriptionGet,\r\n  stripTime,\r\n} from '../../api/subscriptions';\r\nimport {apiProductVersionsGet} from '../../api/productVersion';\r\nimport {authenticationChanged, isAuthenticated, isPortalAdmin, isPortalUser} from '../../api/helpers';\r\nimport {apiAddSubscriptionToProject} from '../../api/projects';\r\nimport moment from 'moment';\r\nimport Breadcrumbs from \"../Breadcrumbs/Breadcrumbs\";\r\nimport { apiTicketingSystemConfigResourceGet } from '../../api/manageFieldConfigurations';\r\n\r\nconst FORM_TYPE = {\r\n  new: 'new',\r\n  renewal: 'renewal',\r\n  edit: 'edit',\r\n};\r\n\r\nconst SUBSCRIPTION_STATUS = {\r\n  requested: 'REQUESTED',\r\n  pending: 'PENDING',\r\n  active: 'ACTIVE',\r\n  expired: 'EXPIRED',\r\n};\r\n\r\nclass SubscriptionForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: true,\r\n      project: {},\r\n      projectId: '',\r\n      subscription: {},\r\n      startDate: '',\r\n      level: 'PLATINUM',\r\n      lengthInMonths: '',\r\n      notes: '',\r\n      entandoVersionId: '',\r\n      status: '',\r\n      formType: 'new',\r\n      invalid: {},\r\n      productVersions: [],\r\n      submitSuccess: false,\r\n      submitError: false,\r\n      submitColour: 'black',\r\n      subsList: [],\r\n      productName: ''\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (isAuthenticated(this.props)) {\r\n      this.fetchData();\r\n      this.getLevelList();\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (authenticationChanged(this.props, prevProps)) {\r\n      this.fetchData();\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  async getLevelList() {\r\n    try {\r\n      const data = await apiTicketingSystemConfigResourceGet(this.props.serviceUrl);\r\n      if (data && data.data && data.data.length && data.data[0].hasOwnProperty('subscriptionLevel')) {\r\n        const subLists = JSON.parse(data.data[0].subscriptionLevel);\r\n        this.setState({\r\n          subsList: subLists,\r\n          productName: (data.data[0].productName) ? JSON.parse(data.data[0].productName)[0].name : ''\r\n        })\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error getLevelList: \", error)\r\n    }\r\n  }\r\n\r\n  async fetchData() {\r\n    if (!isPortalUser()) {\r\n      return;\r\n    }\r\n\r\n    const serviceUrl = this.props.serviceUrl;\r\n\r\n    const params = this.props.match.params;\r\n    const subscriptionId = params.subscriptionId;\r\n    let projectId = params.projectId;\r\n\r\n    let subscription = {};\r\n    let project = {};\r\n    let formType = FORM_TYPE.new;\r\n    let status = '';\r\n    const isAdmin = isPortalAdmin();\r\n\r\n    if (typeof subscriptionId !== \"undefined\") {\r\n      subscription = (await apiSubscriptionGet(serviceUrl, subscriptionId)).data;\r\n      status = isAdmin ? subscription.status : SUBSCRIPTION_STATUS.requested;\r\n      formType = isAdmin ? FORM_TYPE.edit : FORM_TYPE.renewal;\r\n      project = subscription.project;\r\n    } else if (projectId !== null) {\r\n      project = (await apiProjectGet(serviceUrl, projectId)).data;\r\n      status = isAdmin ? SUBSCRIPTION_STATUS.pending : SUBSCRIPTION_STATUS.requested;\r\n    } else {\r\n      console.log('Unable to load project and/or subscription');\r\n      return;\r\n    }\r\n\r\n    const productVersions = (await apiProductVersionsGet(serviceUrl)).data;\r\n\r\n    this.setState({\r\n      subscription: subscription,\r\n      level: subscription.level ? subscription.level : '',\r\n      entandoVersionId: subscription.entandoVersion ? subscription.entandoVersion.id : '',\r\n      startDate: stripTime(subscription.startDate),\r\n      lengthInMonths: subscription.lengthInMonths ? subscription.lengthInMonths : '',\r\n      notes: subscription.notes ? subscription.notes : '',\r\n      status: status,\r\n      formType: formType,\r\n      project: project,\r\n      projectId: projectId,\r\n      productVersions: productVersions,\r\n    });\r\n  }\r\n\r\n  isNumeric(str) {\r\n    return !isNaN(str) && !isNaN(parseInt(str));\r\n  }\r\n\r\n  handleValidation() {\r\n    let invalid = {};\r\n\r\n    if (!this.state.startDate || !this.state.startDate.match(/^(0[1-9]|1[0-2])\\/(0[1-9]|1\\d|2\\d|3[01])\\/(19|20)\\d{2}$/)) {\r\n      invalid['startDate'] = true;\r\n    }\r\n\r\n    if (!this.state.lengthInMonths || !this.isNumeric(this.state.lengthInMonths)) {\r\n      invalid['lengthInMonths'] = true;\r\n    }\r\n\r\n    if (!this.state.level) {\r\n      invalid['level'] = true;\r\n    }\r\n\r\n    if (this.state.entandoVersionId === '') {\r\n      invalid['entandoVersionId'] = true;\r\n    }\r\n\r\n    this.setState({ invalid: invalid });\r\n    return Object.keys(invalid).length === 0;\r\n  }\r\n\r\n  handleChanges = e => {\r\n    const input = e.target;\r\n    const name = input.name;\r\n    const value = input.value;\r\n    this.setState({ [name]: value });\r\n    this.setState({\r\n      submitSuccess: false,\r\n      submitError: false,\r\n    });\r\n  };\r\n\r\n  handleStartDateChange = date => {\r\n    let formatted = '';\r\n    if (date && date[0]) {\r\n      formatted = moment(date[0].toISOString()).format('MM/DD/YYYY');\r\n    }\r\n    this.setState({\r\n      startDate: formatted,\r\n    });\r\n  };\r\n\r\n  updateStateForSuccess(success) {\r\n    if (success) {\r\n      this.setState({\r\n        submitSuccess: true,\r\n        submitError: false,\r\n        submitColour: '#24a148',\r\n      });\r\n    } else {\r\n      this.setState({\r\n        submitSuccess: false,\r\n        submitError: true,\r\n        submitColour: '#da1e28',\r\n      });\r\n    }\r\n  }\r\n\r\n  handleFormSubmit = event => {\r\n    event.preventDefault();\r\n    this.setState({\r\n      submitSuccess: false,\r\n      submitError: false,\r\n    });\r\n    const formIsValid = this.handleValidation();\r\n\r\n    if (formIsValid) {\r\n      const formType = this.state.formType;\r\n      const serviceUrl = this.props.serviceUrl;\r\n      const subscriptionRequest = this.stateToSubscription();\r\n\r\n      if (formType === FORM_TYPE.edit) {\r\n        apiProjectSubscriptionPut(serviceUrl, subscriptionRequest)\r\n          .then(() => {\r\n            this.updateStateForSuccess(true);\r\n          })\r\n          .catch(() => {\r\n            this.updateStateForSuccess(false);\r\n          });\r\n      } else if (formType === FORM_TYPE.new) {\r\n        this.newSubscription(subscriptionRequest)\r\n          .then(res => {\r\n            apiAddSubscriptionToProject(serviceUrl, this.state.projectId, res.data.id);\r\n            this.updateStateForSuccess(true);\r\n          })\r\n          .catch(() => {\r\n            this.updateStateForSuccess(false);\r\n          });\r\n      } else if (formType === FORM_TYPE.renewal) {\r\n        this.renewSubscription(subscriptionRequest)\r\n          .then(res => {\r\n            apiAddSubscriptionToProject(serviceUrl, this.state.projectId, res.data.id);\r\n            this.updateStateForSuccess(true);\r\n          })\r\n          .catch(() => {\r\n            this.updateStateForSuccess(false);\r\n          });\r\n      } else {\r\n        console.log('Illegal operation');\r\n      }\r\n    }\r\n  };\r\n\r\n  stateToSubscription() {\r\n    return {\r\n      entandoVersionId: this.state.entandoVersionId,\r\n      projectId: this.state.projectId,\r\n      renewal: this.state.formType === FORM_TYPE.renewal,\r\n      projectSubscription: {\r\n        id: this.state.subscription.id,\r\n        startDate: new Date(this.state.startDate),\r\n        lengthInMonths: this.state.lengthInMonths,\r\n        level: this.state.level,\r\n        status: this.state.status.toUpperCase(),\r\n        notes: this.state.notes,\r\n      },\r\n    };\r\n  }\r\n\r\n  async newSubscription(request) {\r\n    return await apiProjectSubscriptionPost(this.props.serviceUrl, request);\r\n  }\r\n\r\n  async renewSubscription(request) {\r\n    return await apiRenewSubscription(this.props.serviceUrl, request);\r\n  }\r\n\r\n  setupFormComponents() {\r\n    const subscriptionLevelList = this.state.subsList.map((subscr, idx) => (\r\n      <SelectItem key={idx} text={subscr.name} value={subscr.name}>\r\n        {subscr.name}\r\n      </SelectItem>\r\n    ));\r\n    subscriptionLevelList.unshift(<SelectItem key=\"-1\" text={i18n.t('subscriptionForm.chooseLevel')} value=\"\"/>);\r\n\r\n    const versionList = this.state.productVersions.map(version => {\r\n      // only allow the user to choose from active entando versions\r\n      if (version.status) {\r\n        return (\r\n          <SelectItem key={version.id} text={version.name} value={version.id}>\r\n            {version.name}\r\n          </SelectItem>\r\n        );\r\n      } else {\r\n        return null;\r\n      }\r\n    });\r\n    versionList.unshift(<SelectItem key=\"-1\" text={i18n.t('subscriptionForm.chooseVersion')} value=\"\"/>);\r\n\r\n    const statusList = Object.entries(SUBSCRIPTION_STATUS).map(([key, value]) => (\r\n      <SelectItem key={key} text={value} value={value}>\r\n        {value}\r\n      </SelectItem>\r\n    ));\r\n\r\n    return {subscriptionLevelList, versionList, statusList};\r\n  }\r\n\r\n  renderForm() {\r\n    const {subscriptionLevelList, versionList, statusList} = this.setupFormComponents();\r\n    return (\r\n      <div>\r\n        <div className=\"bx--row\">\r\n          <div className=\"bx--col\">\r\n            <div>\r\n              <span>{i18n.t('subscriptionForm.projectName')}:</span> {this.state.project.name}\r\n            </div>\r\n            <Select\r\n              id=\"status\"\r\n              name=\"status\"\r\n              labelText={i18n.t('subscriptionForm.subscriptionStatus')}\r\n              value={this.state.status}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.required')}\r\n              invalid={this.state.invalid['status']}\r\n              disabled={!isPortalAdmin()}\r\n            >\r\n              {statusList}\r\n            </Select>\r\n            <Select\r\n              id=\"level\"\r\n              name=\"level\"\r\n              labelText={i18n.t('subscriptionForm.subscriptionLevel') + ' *'}\r\n              value={this.state.level || ''}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.required')}\r\n              invalid={this.state.invalid['level']}\r\n            >\r\n              {subscriptionLevelList}\r\n            </Select>\r\n            <Select\r\n              id=\"entandoVersionId\"\r\n              name=\"entandoVersionId\"\r\n              labelText={`${this.state.productName} Version *`}\r\n              value={this.state.entandoVersionId}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.required')}\r\n              invalid={this.state.invalid['entandoVersionId']}\r\n            >\r\n              {versionList}\r\n            </Select>\r\n          </div>\r\n          <div className=\"bx--col\">\r\n            <DatePicker dateFormat=\"m/d/Y\" datePickerType=\"single\" value={this.state.startDate}\r\n                        onChange={this.handleStartDateChange}>\r\n              <DatePickerInput\r\n                id=\"startDate\"\r\n                name=\"startDate\"\r\n                placeholder=\"mm/dd/yyyy\"\r\n                labelText={i18n.t('subscriptionForm.subscriptionStartDate')}\r\n                type=\"text\"\r\n                invalidText={i18n.t('validation.invalid.date')}\r\n                invalid={this.state.invalid['startDate']}\r\n              />\r\n            </DatePicker>\r\n            <TextInput\r\n              id=\"lengthInMonths\"\r\n              name=\"lengthInMonths\"\r\n              labelText={i18n.t('subscriptionForm.subscriptionLength') + ' *'}\r\n              value={this.state.lengthInMonths}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.number')}\r\n              invalid={this.state.invalid['lengthInMonths']}\r\n            />\r\n            {isPortalAdmin() && (\r\n              <TextArea\r\n                id={'notes'}\r\n                name=\"notes\"\r\n                labelText={i18n.t('adminDashboard.addProject.notes')}\r\n                value={this.state.notes}\r\n                onChange={this.handleChanges}\r\n              />\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  successErrorMessage() {\r\n    const isAdmin = isPortalAdmin();\r\n    const { subscriptionType, submitSuccess, submitError } = this.state;\r\n\r\n    if (subscriptionType === 'new') {\r\n      if (submitSuccess) {\r\n        return isAdmin ? this.createFormMessage('adminSubmitNewSuccess') : this.createFormMessage('customerSubmitSuccess');\r\n      } else if (submitError) {\r\n        return this.createFormMessage('newSubError');\r\n      }\r\n    } else {\r\n      if (submitSuccess) {\r\n        return isAdmin ? this.createFormMessage('adminRenewNewSuccess') : this.createFormMessage('customerSubmitSuccess');\r\n      } else if (submitError) {\r\n        return this.createFormMessage('renewSubError');\r\n      }\r\n    }\r\n  }\r\n\r\n  createFormMessage(subMessageKey) {\r\n    return <p style={{ color: this.state.submitColour }}>{i18n.t(`subscriptionForm.${subMessageKey}`)}</p>;\r\n  }\r\n\r\n  render() {\r\n    const formType = this.state.formType;\r\n    let formLabelKey = 'subscriptionForm.newSubscription';\r\n    if (formType !== 'new') {\r\n      formLabelKey = isPortalAdmin() ? 'subscriptionForm.editSubscription' : 'subscriptionForm.renewSubscription';\r\n    }\r\n\r\n    if (!this.state.loading) {\r\n      if (isPortalUser()) {\r\n        return (\r\n          <div id=\"entando-customer-portal\">\r\n            <Breadcrumbs project={this.state.project} subscription={this.state.subscription}\r\n                         locale={this.props.locale}/>\r\n            <div className=\"form-container\">\r\n              {this.successErrorMessage()}\r\n              <Form onSubmit={this.handleFormSubmit}>\r\n                <div className=\"bx--grid\">\r\n                  <div className=\"bx--row\">\r\n                    <div className=\"bx--col\">\r\n                      <strong>{i18n.t(formLabelKey)}</strong>\r\n                    </div>\r\n                  </div>\r\n                  {this.renderForm()}\r\n                  <Button kind=\"primary\" tabIndex={0} type=\"submit\">\r\n                    {' '}\r\n                    {i18n.t('buttons.submit')}\r\n                  </Button>\r\n                </div>\r\n              </Form>\r\n            </div>\r\n          </div>\r\n        );\r\n      } else {\r\n        return <p>{i18n.t('userMessages.unauthorized')}</p>;\r\n      }\r\n    }\r\n    // Loading\r\n    else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport default withKeycloak(SubscriptionForm);\r\n","import React, {Component} from 'react';\r\nimport i18n from '../../i18n';\r\nimport {Form, Select, SelectItem, Button, TextArea, TextInput} from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport {apiProjectGet} from '../../api/projects';\r\nimport {apiJiraTicketPost} from '../../api/tickets';\r\nimport {authenticationChanged, getActiveSubscription, isAuthenticated, isPortalUser} from '../../api/helpers';\r\nimport Breadcrumbs from \"../Breadcrumbs/Breadcrumbs\";\r\nimport { apiTicketingSystemConfigResourceGet } from '../../api/manageFieldConfigurations';\r\nclass OpenTicketForm extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      loading: true,\r\n      project: {},\r\n      role: '',\r\n      invalid: {},\r\n      submitMsg: '',\r\n      submitColour: 'black',\r\n      //form fields\r\n      type: 'Support',\r\n      priority: 'Medium',\r\n      status: 'To Do',\r\n      summary: '',\r\n      description: '',\r\n      types: []\r\n    };\r\n    this.types = ['Support', 'New Feature', 'Bug'];\r\n    this.priorities = ['Critical', 'High', 'Medium', 'Low'];\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (isAuthenticated(this.props)) {\r\n      this.fetchData();\r\n      this.getTicketingSystem();\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (authenticationChanged(this.props, prevProps)) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n\r\n  async getTicketingSystem() {\r\n    try {\r\n      const { data: ticketTypes } = await apiTicketingSystemConfigResourceGet(this.props.serviceUrl);\r\n      if (ticketTypes && ticketTypes[0].hasOwnProperty('ticketType')) {\r\n        const ticketTypesArr = JSON.parse(ticketTypes[0].ticketType)\r\n        ticketTypesArr.sort((a,b) => String(a.name).localeCompare(b.name))\r\n        this.setState({ types: ticketTypesArr })\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error getTicketingSystem:\", error)\r\n    }\r\n  }\r\n\r\n  async fetchData() {\r\n    if (!isPortalUser()) {\r\n      return;\r\n    }\r\n\r\n    const projectId = this.props.match.params.id;\r\n    let project = (await apiProjectGet(this.props.serviceUrl, projectId)).data;\r\n\r\n    if (!project) {\r\n      console.error('Unable to retrieve projectId ', projectId);\r\n      project = {};\r\n    }\r\n\r\n    this.setState({\r\n      project: project,\r\n      loading: false,\r\n    });\r\n  }\r\n\r\n  handleValidation() {\r\n    let invalid = {};\r\n    let formIsValid = true;\r\n\r\n    if (this.state.type === '') {\r\n      formIsValid = false;\r\n      invalid['type'] = true;\r\n    }\r\n\r\n    if (this.state.summary === '') {\r\n      formIsValid = false;\r\n      invalid['summary'] = true;\r\n    }\r\n\r\n    if (this.state.description === '') {\r\n      formIsValid = false;\r\n      invalid['description'] = true;\r\n    }\r\n\r\n    if (this.state.priority === '') {\r\n      formIsValid = false;\r\n      invalid['priority'] = true;\r\n    }\r\n\r\n    this.setState({\r\n      invalid: invalid,\r\n    });\r\n    return formIsValid;\r\n  }\r\n\r\n  handleChanges = e => {\r\n    const input = e.target;\r\n    const name = input.name;\r\n    const value = input.value;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleFormSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    const formIsValid = this.handleValidation();\r\n\r\n    if (formIsValid) {\r\n      const subscription = getActiveSubscription(this.state.project);\r\n      if (subscription) {\r\n        this.createTicket()\r\n          .then(() => {\r\n            this.setState({\r\n              submitMsg: i18n.t('submitMessages.created'),\r\n              submitColour: '#24a148',\r\n            });\r\n          })\r\n          .catch(() => {\r\n            this.setState({\r\n              submitMsg: i18n.t('submitMessages.ticketError'),\r\n              submitColour: '#da1e28',\r\n            });\r\n          });\r\n      }\r\n      // if no subscriptions, don't create ticket\r\n      else {\r\n        this.setState({\r\n          submitMsg: i18n.t('submitMessages.subscriptionRequired'),\r\n          submitColour: '#da1e28',\r\n        });\r\n      }\r\n    } else {\r\n      this.setState({\r\n        submitMsg: i18n.t('submitMessages.error'),\r\n        submitColour: '#da1e28',\r\n      });\r\n    }\r\n  };\r\n\r\n  async createTicket() {\r\n    if (isPortalUser()) {\r\n      const ticket = {\r\n        type: this.state.type,\r\n        summary: this.state.summary,\r\n        description: this.state.description,\r\n        priority: this.state.priority,\r\n        // these fields are just placeholders to validate the POST request (fields will be set in the backend)\r\n        systemId: '999',\r\n        status: 'To Do',\r\n        createDate: '2021-02-22T14:14:09-05:00',\r\n        updateDate: '2021-02-22T14:14:09-05:00',\r\n      };\r\n      return await apiJiraTicketPost(this.props.serviceUrl, this.state.project.id, ticket);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (!this.state.loading) {\r\n      if (isPortalUser()) {\r\n        return (\r\n          <div id=\"entando-customer-portal\">\r\n            <Breadcrumbs project={this.state.project} locale={this.props.locale}/>\r\n            <div className=\"form-container\">\r\n              <p style={{color: this.state.submitColour}}>{this.state.submitMsg}</p>\r\n              <Form onSubmit={this.handleFormSubmit}>\r\n                <div className=\"bx--grid\">\r\n                  <div className=\"bx--row\" style={{padding: '1em 0'}}>\r\n                    <div className=\"bx--col\">\r\n                      <div className=\"form-desc\">\r\n                        <h4>{i18n.t('supportTicketForm.formTitle')}</h4>\r\n                        <div>{i18n.t('supportTicketForm.desc')}</div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"bx--row\">\r\n                    <div className=\"bx--col\">\r\n                      <div>\r\n                        <strong>{i18n.t('projectDetails.project')}:</strong> {this.state.project.name}\r\n                      </div>\r\n                      <Select\r\n                        id=\"type\"\r\n                        name=\"type\"\r\n                        labelText={i18n.t('supportTicketForm.type') + ' *'}\r\n                        value={this.state.type}\r\n                        onChange={this.handleChanges}\r\n                        invalidText={i18n.t('validation.invalid.required')}\r\n                        invalid={this.state.invalid['type']}\r\n                      >\r\n                        {this.state.types.map((type, i) => (\r\n                          <SelectItem key={i} text={type.name} value={type.name}>\r\n                            {type.name}\r\n                          </SelectItem>\r\n                        ))}\r\n                      </Select>\r\n                      <Select\r\n                        id=\"priority\"\r\n                        name=\"priority\"\r\n                        labelText={i18n.t('supportTicketForm.priority') + ' *'}\r\n                        value={this.state.priority}\r\n                        onChange={this.handleChanges}\r\n                        invalidText={i18n.t('validation.invalid.required')}\r\n                        invalid={this.state.invalid['priority']}\r\n                      >\r\n                        {this.priorities.map((priority, i) => (\r\n                          <SelectItem key={i} text={priority} value={priority}>\r\n                            {priority}\r\n                          </SelectItem>\r\n                        ))}\r\n                      </Select>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"bx--row\">\r\n                    <div className=\"bx--col\">\r\n                      <TextInput\r\n                        labelText={i18n.t('supportTicketForm.ticketSummary') + ' *'}\r\n                        placeholder={i18n.t('supportTicketForm.addticketSummary')}\r\n                        id=\"summary\"\r\n                        name=\"summary\"\r\n                        value={this.state.summary}\r\n                        onChange={this.handleChanges}\r\n                        invalidText={i18n.t('validation.invalid.required')}\r\n                        invalid={this.state.invalid['summary']}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"bx--row\">\r\n                    <div className=\"bx--col\">\r\n                      <TextArea\r\n                        labelText={i18n.t('supportTicketForm.ticketDescription') + ' *'}\r\n                        placeholder={i18n.t('supportTicketForm.addticketDescription')}\r\n                        name=\"description\"\r\n                        value={this.state.description}\r\n                        onChange={this.handleChanges}\r\n                        invalidText={i18n.t('validation.invalid.required')}\r\n                        invalid={this.state.invalid['description']}\r\n                      />\r\n                      <Button kind=\"primary\" tabIndex={0} type=\"submit\">\r\n                        {' '}\r\n                        {i18n.t('buttons.submit')}{' '}\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </Form>\r\n            </div>\r\n          </div>\r\n        );\r\n      } else {\r\n        return <p>{i18n.t('userMessages.unauthorized')}</p>;\r\n      }\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport default withKeycloak(OpenTicketForm);\r\n","import { getDefaultOptions, request, getUrl } from './helpers';\r\n\r\nconst resource = 'api/portal-users';\r\n\r\nexport const apiUserDelete = async (serviceUrl, id) => {\r\n  const url = `${serviceUrl}/${resource}/${id}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE',\r\n  };\r\n  return await request(url, options);\r\n};\r\n\r\nexport const apiUsersPut = async (serviceUrl, user) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'PUT',\r\n    body: user ? JSON.stringify(user) : null,\r\n  };\r\n  return await request(url, options);\r\n};\r\n\r\nexport const apiUsersGet = async serviceUrl => {\r\n  const url = getUrl(`${serviceUrl}/${resource}`);\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return await request(url, options);\r\n};\r\n\r\nexport const apiUserGet = async (serviceUrl, userId) => {\r\n  const url = getUrl(`${serviceUrl}/${resource}/${userId}`);\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return await request(url, options);\r\n};\r\n\r\nexport const apiUserPost = async (serviceUrl, user) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n    body: user ? JSON.stringify(user) : null,\r\n  };\r\n  return await request(url, options);\r\n};\r\n\r\nexport const apiUserGetByUsernameAndEmail = async (serviceUrl, username, email) => {\r\n  const url = getUrl(`${serviceUrl}/${resource}/username/${username}/email/${email}`);\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return await request(url, options);\r\n};\r\n","import { getDefaultKeycloakOptions, request, getUrl } from './helpers';\r\n\r\nexport const apiKeycloakUserGet = async (serviceUrl, realm) => {\r\n  const usersResource = `admin/realms/${realm}/users`;\r\n  const url = `${serviceUrl}/${usersResource}`;\r\n  const options = {\r\n    ...getDefaultKeycloakOptions(),\r\n    method: 'GET',\r\n  };\r\n  return await request(url, options);\r\n};\r\n\r\nexport const apiKeycloakToken = async (serviceUrl, realm) => {\r\n  const tokenResource = `realms/${realm}/protocol/openid-connect/token`;\r\n  const url = getUrl(`${serviceUrl}/${tokenResource}`);\r\n  const keycloakBody = {\r\n    client_id: 'web_app',\r\n    username: 'admin',\r\n    password: 'admin',\r\n    grant_type: 'password',\r\n  };\r\n  const options = {\r\n    ...getDefaultKeycloakOptions(),\r\n    method: 'POST',\r\n    body: keycloakBody ? serialize(keycloakBody) : null,\r\n  };\r\n  return await request(url, options);\r\n};\r\n\r\nfunction serialize(obj) {\r\n  var str = [];\r\n  for (var p in obj)\r\n    if (obj.hasOwnProperty(p)) {\r\n      str.push(encodeURIComponent(p) + '=' + encodeURIComponent(obj[p]));\r\n    }\r\n  return str.join('&');\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Form, Select, SelectItem, Button } from 'carbon-components-react';\r\nimport * as portalUserApi from '../../../api/portalusers';\r\nimport {apiAddUserToProject, apiProjectGet} from '../../../api/projects';\r\nimport withKeycloak from '../../../auth/withKeycloak';\r\nimport { apiKeycloakUserGet } from '../../../api/keycloak';\r\nimport i18n from '../../../i18n';\r\nimport {authenticationChanged, isAuthenticated} from \"../../../api/helpers\";\r\nclass AssignUsers extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      project: null,\r\n      projectId: '',\r\n      assignUser: '',\r\n      users: new Map(),\r\n      invalid: {},\r\n      submitMsg: '',\r\n      submitColour: 'black',\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (isAuthenticated(this.props)) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (authenticationChanged(this.props, prevProps)) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n\r\n  async fetchData() {\r\n    const {keycloak} = this.props;\r\n    const users = this.mapKeycloakUserEmails((await apiKeycloakUserGet(keycloak.authServerUrl, keycloak.realm)).data);\r\n    let projectId = this.props.match.params.id;\r\n    let project = null;\r\n    if (projectId != null) {\r\n      project = (await apiProjectGet(this.props.serviceUrl, projectId)).data;\r\n    } else {\r\n      projectId = '';\r\n    }\r\n\r\n    this.setState({\r\n      projectId: projectId,\r\n      project: project,\r\n      users: users,\r\n    });\r\n  }\r\n\r\n  mapKeycloakUserEmails = keycloakUsers => {\r\n    const usernameEmailMap = new Map();\r\n    keycloakUsers.forEach(keycloakUser => usernameEmailMap.set(keycloakUser.username, keycloakUser.email));\r\n    return usernameEmailMap;\r\n  };\r\n\r\n  handleChanges = e => {\r\n    const input = e.target;\r\n    const name = input.name;\r\n    const value = input.value;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleFormSubmit = event => {\r\n    event.preventDefault();\r\n    const { projectId, assignUser } = this.state;\r\n    const formIsValid = this.handleFormValidation();\r\n\r\n    if (formIsValid) {\r\n      this.assignUserToProject(projectId, assignUser).then(res => {\r\n        if (res && res.status === 201) {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.updated'),\r\n            submitColour: '#24a148',\r\n          });\r\n          window.dispatchEvent(new CustomEvent('cp-user-assigned'));\r\n        } else {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.error'),\r\n            submitColour: '#da1e28',\r\n          });\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  handleFormValidation() {\r\n    let invalid = {};\r\n    let formIsValid = true;\r\n    const { projectId, assignUser } = this.state;\r\n\r\n    //name\r\n    if (projectId === '') {\r\n      formIsValid = false;\r\n      invalid['projectId'] = true;\r\n    }\r\n\r\n    //customerNumber\r\n    if (assignUser === '') {\r\n      formIsValid = false;\r\n      invalid['assignUser'] = true;\r\n    }\r\n\r\n    this.setState({ invalid: invalid });\r\n    return formIsValid;\r\n  }\r\n\r\n  assignUserToProject = async (projectId, username) => {\r\n    const email = this.state.users.get(username);\r\n    if (!email) {\r\n      alert(\"User is missing an email address in keycloak and cannot be assigned.\")\r\n      return null;\r\n    }\r\n    const portalUserId = await this.getPortalUserId({username, email: this.state.users.get(username)});\r\n    return await apiAddUserToProject(this.props.serviceUrl, projectId, portalUserId);\r\n  };\r\n\r\n  getPortalUserId = async keycloakUser => {\r\n    let portalUserId = null;\r\n    try {\r\n      const portalUser = await portalUserApi.apiUserGetByUsernameAndEmail(this.props.serviceUrl,\r\n        keycloakUser.username, keycloakUser.email);\r\n      portalUserId = portalUser.data.id;\r\n    } catch (e) {\r\n      console.warn(e);\r\n    }\r\n\r\n    return portalUserId;\r\n  };\r\n\r\n  setupFormComponents() {\r\n    const users = this.state.users;\r\n    const project = this.state.project;\r\n    let userList;\r\n    let projectList;\r\n\r\n    if (users.size > 0) {\r\n      userList = [...users.keys()].map((assignUser, i) => (\r\n        <SelectItem key={i} text={assignUser} value={assignUser}>\r\n          {assignUser}\r\n        </SelectItem>\r\n      ));\r\n      userList.unshift(<SelectItem key=\"-1\" text={i18n.t('manageUsers.assign.userList')} value=\"\"/>);\r\n    } else {\r\n      userList = <SelectItem text={i18n.t('manageUsers.assign.noUsers')} value=\"\"/>;\r\n    }\r\n\r\n    if (project != null) {\r\n      projectList = <SelectItem key={project.id} text={project.name} value={project.id}/>;\r\n    } else {\r\n      projectList = <SelectItem text={i18n.t('manageUsers.assign.noProjects')} value=\"\"/>;\r\n    }\r\n\r\n    return {userList, projectList};\r\n  }\r\n\r\n  render() {\r\n    const { userList, projectList } = this.setupFormComponents();\r\n\r\n    return (\r\n      <div>\r\n        <p style={{ color: this.state.submitColour }}>{this.state.submitMsg}</p>\r\n        <Form onSubmit={this.handleFormSubmit}>\r\n          <div className=\"bx--grid\">\r\n            <div className=\"bx--row\">\r\n              <div className=\"bx--col\">\r\n                <Select\r\n                  id=\"projectId\"\r\n                  name=\"projectId\"\r\n                  labelText={i18n.t('manageUsers.assign.projectName')}\r\n                  value={this.state.projectId}\r\n                  onChange={this.handleChanges}\r\n                  invalidText={i18n.t('validation.invalid.required')}\r\n                  invalid={this.state.invalid['projectId']}\r\n                >\r\n                  {projectList}\r\n                </Select>\r\n              </div>\r\n            </div>\r\n            <div className=\"bx--row\">\r\n              <div className=\"bx--col\">\r\n                <Select\r\n                  id=\"assignUser\"\r\n                  name=\"assignUser\"\r\n                  labelText={i18n.t('manageUsers.assign.assignUser')}\r\n                  value={this.state.assignUser}\r\n                  onChange={this.handleChanges}\r\n                  invalidText={i18n.t('validation.invalid.required')}\r\n                  invalid={this.state.invalid['assignUser']}\r\n                >\r\n                  {userList}\r\n                </Select>\r\n              </div>\r\n            </div>\r\n            <Button kind=\"primary\" tabIndex={0} type=\"submit\">\r\n              {' '}\r\n              {i18n.t('buttons.submit')}{' '}\r\n            </Button>\r\n          </div>\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withKeycloak(AssignUsers);\r\n","import React, {Component} from 'react';\r\nimport {\r\n  DataTable,\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableHeader,\r\n  TableBody,\r\n  TableCell,\r\n  Button\r\n} from 'carbon-components-react';\r\nimport withKeycloak from '../../../auth/withKeycloak';\r\nimport i18n from '../../../i18n';\r\nimport {apiGetProjectUsers, apiDeleteUserFromProject} from '../../../api/projects';\r\nimport {authenticationChanged, isAuthenticated} from \"../../../api/helpers\";\r\n\r\nclass DeleteUsers extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      users: [],\r\n      displayUsers: [],\r\n      projectId: '',\r\n    };\r\n    this.headerData = [\r\n      {\r\n        header: i18n.t('manageUsers.delete.userName'),\r\n        key: 'username',\r\n      },\r\n      {\r\n        header: i18n.t('manageUsers.delete.userEmail'),\r\n        key: 'email',\r\n      },\r\n      {\r\n        header: i18n.t('manageUsers.delete.userAccess'),\r\n        key: 'userAccess',\r\n      },\r\n    ];\r\n    window.addEventListener('cp-user-assigned', event => {\r\n      this.fetchData();\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (isAuthenticated(this.props)) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (authenticationChanged(this.props, prevProps)) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n\r\n  async fetchData() {\r\n    if (isAuthenticated(this.props)) {\r\n      const projectId = this.props.match.params.id;\r\n      let users = [];\r\n      if (projectId != null) {\r\n        users = (await apiGetProjectUsers(this.props.serviceUrl, projectId)).data;\r\n      }\r\n\r\n      this.setState({\r\n        users,\r\n        projectId,\r\n      });\r\n\r\n      this.handleUserDisplay();\r\n    }\r\n  }\r\n\r\n  handleUserDisplay() {\r\n    const users = this.state.users;\r\n    const projectId = this.state.projectId;\r\n\r\n    const displayUsers = users.map(user => ({\r\n      id: user.username,\r\n      username: user.username,\r\n      email: user.email,\r\n      userAccess: (\r\n        <Button kind=\"ghost\" onClick={event => this.handleRemoveUser(user.id, projectId, event)}\r\n                className=\"button-warning\">\r\n          {i18n.t('manageUsers.delete.removeUser')}\r\n        </Button>\r\n      ),\r\n    }));\r\n\r\n    this.setState({\r\n      displayUsers,\r\n    });\r\n  }\r\n\r\n  handleRemoveUser = (userId, projectId, event) => {\r\n    event.preventDefault();\r\n\r\n    apiDeleteUserFromProject(this.props.serviceUrl, projectId, userId).then(res => {\r\n      if (res.status === 201) {\r\n        this.fetchData();\r\n      } else {\r\n        console.warn('Failed to delete user', res);\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <DataTable rows={this.state.displayUsers} headers={this.headerData}>\r\n        {({ rows, headers, getHeaderProps, getTableProps }) => (\r\n          <TableContainer>\r\n            <Table {...getTableProps()}>\r\n              <TableHead>\r\n                <TableRow>\r\n                  {headers.map(header => (\r\n                    <TableHeader {...getHeaderProps({ header })}>{header.header}</TableHeader>\r\n                  ))}\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {rows.map(row => (\r\n                  <TableRow key={row.id}>\r\n                    {row.cells.map(cell => (\r\n                      <TableCell key={cell.id}>{cell.value}</TableCell>\r\n                    ))}\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        )}\r\n      </DataTable>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withKeycloak(DeleteUsers);\r\n","import React, {Component} from 'react';\r\nimport i18n from '../../../i18n';\r\nimport {Accordion, AccordionItem} from 'carbon-components-react';\r\nimport AssignUsers from './AssignUsers';\r\nimport DeleteUsers from './DeleteUsers';\r\nimport {authenticationChanged, isAuthenticated, isPortalAdmin} from '../../../api/helpers';\r\nimport withKeycloak from '../../../auth/withKeycloak';\r\nimport Breadcrumbs from \"../../Breadcrumbs/Breadcrumbs\";\r\n\r\nclass ManageUsers extends Component {\r\n  userFunctionality;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: true,\r\n    };\r\n    this.userFunctionality = [\r\n      {\r\n        label: (\r\n          <div>\r\n            <p className=\"title\">{i18n.t('manageUsers.manage.title')}</p>\r\n            <p className=\"desc\">{i18n.t('manageUsers.manage.desc')}</p>\r\n          </div>\r\n        ),\r\n        content: <DeleteUsers {...props} serviceUrl={this.props.serviceUrl}/>,\r\n        open: true,\r\n      },\r\n      {\r\n        label: (\r\n          <div>\r\n            <p className=\"title\">{i18n.t('manageUsers.assign.title')}</p>\r\n            <p className=\"desc\">{i18n.t('manageUsers.assign.desc')}</p>\r\n          </div>\r\n        ),\r\n        content: <AssignUsers {...props} serviceUrl={this.props.serviceUrl}/>,\r\n        open: true,\r\n      },\r\n    ];\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (isAuthenticated(this.props)) {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (authenticationChanged(this.props, prevProps)) {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (!this.state.loading) {\r\n      if (isPortalAdmin()) {\r\n        return (\r\n          <div id=\"entando-customer-portal\">\r\n            <Breadcrumbs locale={this.props.locale}/>\r\n            <div className=\"form-container\">\r\n              <Accordion>\r\n                {this.userFunctionality.map((item, index) => (\r\n                  <AccordionItem key={index.toString()} index={index} title={item.label} description={item.description}\r\n                                 open={item.open}>\r\n                    {item.content}\r\n                  </AccordionItem>\r\n                ))}\r\n              </Accordion>\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n      // Unauthorized\r\n      else {\r\n        return <p>{i18n.t('userMessages.unauthorized')}</p>;\r\n      }\r\n    }\r\n    // Loading\r\n    else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport default withKeycloak(ManageUsers);\r\n","import React, {Component} from 'react';\r\nimport {HashRouter, Route, Switch} from 'react-router-dom';\r\nimport AdminDashboard from './Admin/AdminDashboard';\r\nimport Subscription from './SubscriptionDetails/Subscription';\r\nimport withKeycloak from '../auth/withKeycloak';\r\nimport {AuthenticatedView, UnauthenticatedView} from '../auth/KeycloakViews';\r\nimport {authenticationChanged, isAuthenticated, isPortalUser} from '../api/helpers';\r\nimport CustomerProjectList from './Customer/CustomerProjectList';\r\nimport i18n from '../i18n';\r\nimport ManageSubscriptions from './Admin/ManageSubscriptions/ManageSubscriptions';\r\nimport SubscriptionForm from './Forms/SubscriptionForm';\r\nimport OpenTicketForm from './Forms/OpenTicketForm';\r\nimport ManageUsers from './Admin/ManageUsers/ManageUsers';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: true,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (isAuthenticated(this.props)) {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (authenticationChanged(this.props, prevProps)) {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var { keycloak } = this.props;\r\n\r\n    if (!this.state.loading) {\r\n      if (isPortalUser()) {\r\n        return (\r\n          <div id=\"entando-customer-portal\">\r\n            <AuthenticatedView keycloak={keycloak}>\r\n              <HashRouter>\r\n                <Switch>\r\n                  <Route\r\n                    path={'**/customer-details/:id'}\r\n                    render={props => <CustomerProjectList {...props} serviceUrl={this.props.serviceUrl}\r\n                                                          locale={this.props.locale}/>}\r\n                  />\r\n                  <Route\r\n                    path={'**/subscription/:projectId/:subscriptionId?'}\r\n                    render={props => <SubscriptionForm {...props} serviceUrl={this.props.serviceUrl}\r\n                                                       locale={this.props.locale}/>}\r\n                  />\r\n                  <Route\r\n                    path={'**/manage-subscriptions/:id'}\r\n                    render={props => <ManageSubscriptions {...props} serviceUrl={this.props.serviceUrl}\r\n                                                          locale={this.props.locale}/>}\r\n                  />\r\n                  <Route\r\n                    path={'**/manage-users/:id'}\r\n                    render={props => <ManageUsers {...props} serviceUrl={this.props.serviceUrl}\r\n                                                  locale={this.props.locale}/>}\r\n                  />\r\n                  <Route\r\n                    path={'**/subscription-details/:id'}\r\n                    render={props => <Subscription {...props} serviceUrl={this.props.serviceUrl}\r\n                                                   locale={this.props.locale}/>}\r\n                  />\r\n                  <Route\r\n                    path={'**/ticket/:id'}\r\n                    render={props => <OpenTicketForm {...props} serviceUrl={this.props.serviceUrl}\r\n                                                     locale={this.props.locale}/>}\r\n                  />\r\n                  <Route\r\n                    path=\"**/\"\r\n                    render={props => <AdminDashboard {...props} serviceUrl={this.props.serviceUrl}\r\n                                                     locale={this.props.locale}/>}\r\n                  />\r\n                </Switch>\r\n              </HashRouter>\r\n            </AuthenticatedView>\r\n            <UnauthenticatedView keycloak={keycloak}>\r\n              <p>{i18n.t('userMessages.unauthorized')}</p>\r\n            </UnauthenticatedView>\r\n          </div>\r\n        );\r\n      } else {\r\n        return <p>{i18n.t('userMessages.unauthorized')}</p>;\r\n      }\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport default withKeycloak(App);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '../index.scss';\nimport * as Locale from '../i18n';\n\nimport KeycloakContext from '../auth/KeycloakContext';\nimport App from '../components/App';\n\nimport { subscribeToWidgetEvent } from '../helpers/widgetEvents';\nimport { KEYCLOAK_EVENT_TYPE } from './widgetEventTypes';\nimport {setAppContext} from '../api/helpers';\n\nconst getKeycloakInstance = () =>\n  (window && window.entando && window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\n    initialized: false,\n  };\n\nconst ATTRIBUTES = {\n  hidden: 'hidden',\n  locale: 'locale',\n  paginationMode: 'pagination-mode',\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\n  serviceUrl: 'service-url',\n  baseUrl: 'base-url',\n};\n\nclass AppElement extends HTMLElement {\n  container;\n\n  mountPoint;\n\n  unsubscribeFromKeycloakEvent;\n\n  keycloak = getKeycloakInstance();\n\n  connectedCallback() {\n    this.mountPoint = document.createElement('div');\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\n\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\n      this.render();\n    });\n\n    this.render();\n\n    //retargetEvents(shadowRoot);\n    this.appendChild(this.mountPoint);\n  }\n\n  render() {\n    const baseUrl = this.getAttribute(ATTRIBUTES.baseUrl) || '';\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\n    const locale = this.getAttribute(ATTRIBUTES.locale) || '';\n    Locale.setLocale(locale);\n    setAppContext(baseUrl);\n\n    ReactDOM.render(\n      <KeycloakContext.Provider value={this.keycloak}>\n        <App serviceUrl={serviceUrl} locale={locale} />\n      </KeycloakContext.Provider>,\n      this.mountPoint\n    );\n  }\n}\n\ncustomElements.get('cp-app') || customElements.define('cp-app', AppElement);\n","import React, {Component} from 'react';\nimport {authenticationChanged, getPageUrl, isAuthenticated, isPortalUser} from \"../../api/helpers\";\nimport i18n from \"../../i18n\";\nimport withKeycloak from \"../../auth/withKeycloak\";\nimport {PAGE_CUSTOMER_PORTAL} from '../../api/constants';\n\nconst KEYCLOAK_EVENT_ID = 'keycloak';\n\nclass Login extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      loading: true\n    };\n    this.keycloakEventHandler = this.keycloakEventHandler.bind(this);\n  }\n\n  keycloakEventHandler(event) {\n    const keycloakEvent = event.detail.eventType;\n    const {keycloak} = this.props;\n    switch (keycloakEvent) {\n      //Wait until keycloak is ready before displaying the nav elements\n      case 'onReady':\n        this.setState({\n          loading: false\n        });\n        break;\n      case 'onAuthRefreshError':\n        keycloak.logout();\n        break;\n      default:\n        break;\n    }\n  }\n\n  componentDidMount() {\n    window.addEventListener(KEYCLOAK_EVENT_ID, this.keycloakEventHandler);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (authenticationChanged(this.props, prevProps)) {\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(KEYCLOAK_EVENT_ID, this.keycloakEventHandler);\n  }\n\n  render() {\n    const {keycloak} = this.props;\n    const loginUrl = window.location;\n    const handleLogin = () => keycloak.login({redirectUri: loginUrl});\n    const handleLogout = () => keycloak.logout({redirectUri: window.location.origin});\n\n    if (!this.state.loading) {\n      return (\n        <span className=\"entando-login\">\n          {!isAuthenticated(this.props) ? (\n            <>\n              <a className=\"log-in\" href=\"#entando-customer-portal\" onClick={handleLogin}\n                 title={i18n.t('userMessages.login')}>\n                {i18n.t('userMessages.login')}<i className=\"fas fa-sign-in-alt\"/>\n              </a>\n            </>\n          ) : (\n            <>\n              {isPortalUser() && (\n                <>\n                  <a\n                    href={getPageUrl(PAGE_CUSTOMER_PORTAL, this.props.locale)}>{i18n.t('customerDashboard.customerPortal')}</a>\n                  <span className=\"divider\">&nbsp;|&nbsp;</span>\n                </>\n              )}\n              <a className=\"log-out\" href=\"#entando-customer-portal\" onClick={handleLogout}\n                 title={i18n.t('userMessages.logout')}>\n                {i18n.t('userMessages.logout')}<i className=\"fas fa-sign-out-alt\"/>\n              </a>\n            </>\n          )}\n        </span>\n      );\n    } else {\n      return null;\n    }\n  }\n}\n\nexport default withKeycloak(Login);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '../index.scss';\n\nimport KeycloakContext from '../auth/KeycloakContext';\n\nimport {subscribeToWidgetEvent} from '../helpers/widgetEvents';\nimport {KEYCLOAK_EVENT_TYPE} from './widgetEventTypes';\nimport * as Locale from '../i18n';\nimport Login from '../components/Login/Login';\nimport {setAppContext} from '../api/helpers';\n\nconst getKeycloakInstance = () =>\n  (window && window.entando && window.entando.keycloak && {...window.entando.keycloak, initialized: true}) || {\n    initialized: false,\n  };\n\nconst ATTRIBUTES = {\n  hidden: 'hidden',\n  locale: 'locale',\n  paginationMode: 'pagination-mode',\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\n  serviceUrl: 'service-url',\n  baseUrl: 'base-url',\n};\n\nclass LoginElement extends HTMLElement {\n  container;\n\n  mountPoint;\n\n  unsubscribeFromKeycloakEvent;\n\n  keycloak = getKeycloakInstance();\n\n  connectedCallback() {\n    this.mountPoint = document.createElement('span');\n    this.keycloak = {...getKeycloakInstance(), initialized: true};\n\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\n      this.keycloak = {...getKeycloakInstance(), initialized: true};\n      this.render();\n    });\n\n    this.render();\n\n    //retargetEvents(shadowRoot);\n    this.appendChild(this.mountPoint);\n  }\n\n  render() {\n    const baseUrl = this.getAttribute(ATTRIBUTES.baseUrl) || '';\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\n    const locale = this.getAttribute(ATTRIBUTES.locale) || '';\n    Locale.setLocale(locale);\n    setAppContext(baseUrl);\n\n    ReactDOM.render(\n      <KeycloakContext.Provider value={this.keycloak}>\n        <Login serviceUrl={serviceUrl} locale={locale}/>\n      </KeycloakContext.Provider>,\n      this.mountPoint\n    );\n  }\n}\n\ncustomElements.get('cp-login') || customElements.define('cp-login', LoginElement);\n","import React, {Component} from 'react';\r\nimport {BrowserRouter, Route, Switch, Link} from 'react-router-dom';\r\nimport App from '../components/App';\r\nimport withKeycloak from '../auth/withKeycloak';\r\nimport AdminConfiguration from '../components/Admin/Configuration/AdminConfiguration';\r\nimport {authenticationChanged, getPageUrl, isAuthenticated, isPortalAdmin} from '../api/helpers';\r\nimport {\r\n  PAGE_ADMIN_CONFIG,\r\n  PAGE_CUSTOMER_PORTAL\r\n} from \"../api/constants\";\r\nimport Login from \"../components/Login/Login\";\r\n\r\nclass LocalApp extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: true,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (isAuthenticated(this.props)) {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (authenticationChanged(this.props, prevProps)) {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {locale, serviceUrl} = this.props;\r\n    if (!this.state.loading) {\r\n      return (\r\n        <div>\r\n          <BrowserRouter forceRefresh={true}>\r\n            <Login locale={locale}/>\r\n            <div>\r\n              <ul>\r\n                {isPortalAdmin() && (\r\n                  <li>\r\n                    <Link to={getPageUrl(PAGE_ADMIN_CONFIG, locale)}>Admin</Link>\r\n                  </li>\r\n                )}\r\n              </ul>\r\n            </div>\r\n            <Switch>\r\n              <Route path={getPageUrl(PAGE_ADMIN_CONFIG, locale)}>\r\n                <AdminConfiguration serviceUrl={serviceUrl} locale={locale}/>\r\n              </Route>\r\n              <Route path={getPageUrl(PAGE_CUSTOMER_PORTAL, locale)}>\r\n                <App serviceUrl={serviceUrl} locale={locale}/>\r\n              </Route>\r\n              <Route path=\"/\" exact={true}>\r\n                <App serviceUrl={serviceUrl} locale={locale}/>\r\n              </Route>\r\n            </Switch>\r\n          </BrowserRouter>\r\n        </div>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport default withKeycloak(LocalApp);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '../index.scss';\nimport * as Locale from '../i18n';\nimport {setAppContext} from '../api/helpers';\n\nimport KeycloakContext from '../auth/KeycloakContext';\nimport LocalApp from '../local/LocalApp';\n\nimport {subscribeToWidgetEvent} from '../helpers/widgetEvents';\nimport {KEYCLOAK_EVENT_TYPE} from '../custom-elements/widgetEventTypes';\n\nconst getKeycloakInstance = () =>\n  (window && window.entando && window.entando.keycloak && {...window.entando.keycloak, initialized: true}) || {\n    initialized: false,\n  };\n\nconst ATTRIBUTES = {\n  hidden: 'hidden',\n  locale: 'locale',\n  paginationMode: 'pagination-mode',\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\n  serviceUrl: 'service-url',\n};\n\nclass LocalAppElement extends HTMLElement {\n  container;\n\n  mountPoint;\n\n  unsubscribeFromKeycloakEvent;\n\n  keycloak = getKeycloakInstance();\n\n  connectedCallback() {\n    this.mountPoint = document.createElement('div');\n    this.keycloak = {...getKeycloakInstance(), initialized: true};\n\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\n      this.keycloak = {...getKeycloakInstance(), initialized: true};\n      this.render();\n    });\n\n    this.render();\n\n    //retargetEvents(shadowRoot);\n    this.appendChild(this.mountPoint);\n  }\n\n  render() {\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\n    const locale = this.getAttribute(ATTRIBUTES.locale) || '';\n    Locale.setLocale(locale);\n    setAppContext('/');\n\n    ReactDOM.render(\n      <KeycloakContext.Provider value={this.keycloak}>\n        <LocalApp serviceUrl={serviceUrl} locale={locale}/>\n      </KeycloakContext.Provider>,\n      this.mountPoint\n    );\n  }\n}\n\ncustomElements.get('cp-local-app') || customElements.define('cp-local-app', LocalAppElement);\n"],"sourceRoot":""}