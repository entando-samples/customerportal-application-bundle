{"version":3,"sources":["i18n.js","auth/KeycloakContext.js","components/__types__/ref.js","auth/withKeycloak.js","api/constants.js","api/helpers.js","api/customers.js","components/Admin/AddCustomerModal.js","helpers/widgetEvents.js","custom-elements/widgetEventTypes.js","custom-elements/AdminAddCustomerElement.js","api/ticketingsystem.js","components/Admin/Configuration/TicketingSystem.js","api/productVersion.js","components/Admin/AddProductVersionModal.js","components/Admin/EditVersionModal.js","components/Admin/Configuration/ProductVersion.js","components/Admin/Configuration/AdminConfiguration.js","custom-elements/AdminConfigurationElement.js","api/partners.js","api/projects.js","auth/KeycloakViews.js","components/Admin/AddPartnerModal.js","components/Admin/AddProjectModal.js","components/Admin/EditProjectModal.js","components/Admin/ManagePartnersModal.js","components/Admin/ProjectActionItems.js","api/subscriptions.js","components/Customer/CustomerDataTable.js","components/Customer/CustomerDetails.js","components/Admin/EditCustomerModal.js","components/Customer/CustomerAccordian.js","components/Admin/AdminDashboard.js","custom-elements/AdminDashboardElement.js","api/tickets.js","components/SubscriptionDetails/TicketList.js","components/SubscriptionDetails/Subscription.js","components/Customer/CustomerProjectList.js","components/App.js","custom-elements/AppElement.js","api/portalusers.js","api/keycloak.js","components/Admin/ManageUser/AssignUser.js","custom-elements/AssignUserElement.js","components/Admin/ManageUser/DeleteUser.js","custom-elements/DeleteUserElement.js","components/Forms/OpenTicketForm.js","custom-elements/FormsOpenTicketElement.js","components/Admin/ManageSubscriptions/ManageSubscriptions.js","custom-elements/ManageSubscriptionsElement.js","components/Admin/ManageUser/ManageUser.js","custom-elements/ManageUserElement.js","components/Navigation/Navigation.js","custom-elements/NavigationElement.js","custom-elements/OpenTicketElement.js","custom-elements/ProductVersionElement.js","custom-elements/SubscriptionElement.js","components/Forms/SubscriptionForm.js","custom-elements/SubscriptionFormElement.js","custom-elements/TicketListElement.js","custom-elements/TicketingSystemElement.js","local/LocalApp.js","local/LocalAppElement.js"],"names":["i18n","defaultLocale","locale","fallbacks","translations","en","it","setLocale","KeycloakContext","PropTypes","oneOfType","func","shape","current","elementType","React","createContext","withKeycloak","WrappedComponent","WithKeycloakComponent","renderWrappedComponent","value","props","forwardedRef","rest","ref","keycloak","Consumer","this","Component","defaultProps","forwardRef","PAGE_ADMIN_CONFIG","PAGE_MANAGE_USERS","PAGE_SUBSCRIPTION_FORM","PAGE_TICKET_FORM","getKeycloakToken","window","entando","authenticated","token","isAuthenticated","initialized","authenticationChanged","prevProps","changedAuth","isPortalAdmin","hasKeycloakClientRole","isPortalSupport","isPortalPartner","isPortalCustomer","isPortalAdminOrSupport","isPortalUser","clientRole","resourceAccess","client","item","roles","includes","getDefaultOptions","headers","Headers","Authorization","getDefaultKeycloakOptions","getActiveSubscription","project","projectSubscriptions","find","status","getPageUrl","pageCode","url","getUrl","request","options","a","fetch","response","has","parseInt","get","data","json","Promise","reject","Error","statusText","resource","apiCustomerDelete","serviceUrl","id","method","apiCustomersGet","apiCustomerGet","apiCustomerPost","customer","body","JSON","stringify","apiCustomerPut","apiAddProjectToCustomer","customerId","projectId","apiDeleteProjectFromCustomer","handleChanges","e","input","target","name","setState","handleFormSubmit","handleValidation","state","customerNumber","contactName","contactPhone","contactEmail","notes","customerPost","then","submitMsg","t","submitColour","updateCustomerList","catch","clearValues","document","querySelector","className","baseState","invalid","formIsValid","lastAtPos","lastIndexOf","lastDotPos","indexOf","length","addEventListener","modalConfirmation","style","color","modalId","ModalWrapper","buttonTriggerText","modalHeading","buttonTriggerClassName","handleSubmit","primaryButtonText","secondaryButtonText","Form","onSubmit","TextInput","labelText","onChange","invalidText","TextArea","subscribeToWidgetEvent","eventType","eventHandler","removeEventListener","KEYCLOAK_EVENT_TYPE","getKeycloakInstance","ATTRIBUTES","AdminAddCustomerElement","mountPoint","createElement","unsubscribeFromKeycloakEvent","render","appendChild","getAttribute","Locale","ReactDOM","Provider","HTMLElement","customElements","define","apiTicketingSystemDelete","apiCurrentTicketingSystemGet","apiTicketingSystemsGet","ticketingSystems","apiTicketingSystemPost","ticketingSystem","secret","tsRequest","apiTicketingSystemPut","event","preventDefault","updateTicketingSystem","createTicketingSystem","ticketingSystemType","serviceAccount","serviceAccountSecret","systemId","fetchData","confirm","deleteTicketingSystem","Select","SelectItem","text","map","type","i","Button","kind","tabIndex","onClick","handleDelete","apiProductVersionsGet","apiProductVersionGet","versionId","apiUpdateProductVersionsStatus","apiProductVersionPost","productVersion","apiProductVersionPut","apiProductVersionDelete","addProductVersion","updateProductVersions","handleStartDateChange","date","startDate","moment","toISOString","format","handleEndDateChange","endDate","match","DatePicker","dateFormat","datePickerType","DatePickerInput","placeholder","version","versionPut","buttonId","getVersionDetails","buttonClassName","ProductVersion","handleDeleteVersion","deleteVersion","getProductVersions","versions","productVersions","DataTable","rows","rowData","headerData","getHeaderProps","getTableProps","TableContainer","Table","TableHead","TableRow","header","TableHeader","TableBody","Object","keys","index","TableCell","Toggle","size","handleToggleChange","aria-label","defaultToggled","display","width","key","entVersion","loading","adminConfig","label","content","Tile","Accordion","AccordionItem","title","description","toString","AdminConfigurationElement","apiPartnerPost","partner","apiProjectsGet","apiProjectGet","apiProjectPost","apiProjectPut","apiAddSubscriptionToProject","subscriptionId","apiAddUserToProject","userId","apiDeletePartnerFromProject","partnerId","apiDeleteSubscriptionFromProject","apiDeleteUserFromProject","apiAddPartnerToProject","apiGetProjectUsers","apiGetProjectSubscriptions","AuthenticatedView","children","UnauthenticatedView","partnerNumber","partnerPost","projectList","projects","console","log","result","trim","alert","projectPost","getAllProjects","customerList","getCustomers","customers","allCustomers","allProjects","projectPut","updateProjectList","getProjectDetails","ManagePartnersModal","handleRemovePartner","removePartner","err","hasForm","partners","margin","border","borderTop","handleClick","showMenu","handleOutsideClick","prevState","node","contains","isAdmin","actionDivider","topButton","padding","editProjectSubscription","subscriptionParam","subscription","newOrRenewSubscription","href","textDecoration","managePartners","manageUsers","manageSubscriptions","openTicket","viewAllTickets","substr","rel","deleteProject","handleDeleteProject","zIndex","position","backgroundColor","to","formatStartDate","String","Date","toDateString","formatEndDate","lengthInMonths","setMonth","getMonth","apiSubscriptionGet","apiProjectSubscriptionPost","projectSubscriptionCreation","apiProjectSubscriptionPut","apiRenewSubscription","projectSubscriptionRenew","action","callback","partnerIndex","entandoVersion","minHeight","paddingBottom","getCustomerDetails","getCustomer","updateCustomer","deleteCustomer","open","accordionOpened","getTime","handleSearch","newFilteredState","filter","toLowerCase","filteredCustomers","currentPage","undefined","forceUpdate","role","test","numberOfPages","Math","ceil","Search","onKeyPress","indexOfLastItem","firstIndexOfCurrentPage","PaginationNav","loop","Boolean","page","Number","totalItems","itemsShown","AdminDashboardElement","jiraResource","apiJiraTicketsGet","apiJiraTicketPost","ticket","tickets","ticketSystemUrl","ticketingSystemBaseUrl","ticketUrl","summary","priority","createDate","updateDate","subscriptionData","updateSubscription","users","params","license","level","user","username","path","AppElement","apiUserGetByUsernameAndEmail","email","apiKeycloakUserGet","realm","usersResource","mapKeycloakUserEmails","keycloakUsers","usernameEmailMap","Map","forEach","keycloakUser","set","assignUser","handleFormValidation","assignUserToProject","res","dispatchEvent","CustomEvent","getPortalUserId","portalUserId","portalUserApi","portalUser","warn","authServerUrl","search","location","URLSearchParams","userList","unshift","setupFormComponents","AssignUserElement","handleRemoveUser","displayUsers","handleUserDisplay","userAccess","row","cells","cell","DeleteUserElement","createTicket","types","priorities","error","FormsOpenTicketElement","handleDeleteSubscription","deleteSubscription","subscriptions","ManageSubscriptionsElement","userFunctionality","ManageUserElement","Navigation","NavigationElement","OpenTicketElement","ProductVersionElement","SubscriptionElement","FORM_TYPE","SUBSCRIPTION_LEVEL","GOLD","PLATINUM","SUBSCRIPTION_STATUS","requested","pending","active","expired","submitSuccess","submitError","formatted","formType","subscriptionRequest","stateToSubscription","updateStateForSuccess","newSubscription","renewSubscription","entandoVersionId","str","isNaN","isNumeric","success","renewal","projectSubscription","toUpperCase","subscriptionLevelList","entries","versionList","statusList","disabled","subscriptionType","createFormMessage","subMessageKey","titleKey","formLabelKey","successErrorMessage","renderForm","SubscriptionFormElement","TicketListCustomerElement","TicketingSystemElement","logout","forceRefresh","exact","LocalAppElement"],"mappings":"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","file":"static/js/main.31846ab5.chunk.js","sourcesContent":["import i18n from 'i18n-js';\n\nimport en from './i18n/locales/en.json';\nimport it from './i18n/locales/it.json';\n\ni18n.defaultLocale = 'en';\ni18n.locale = 'en';\ni18n.fallbacks = true;\ni18n.translations = { en, it };\n\nexport const setLocale = locale => {\n  i18n.locale = locale;\n};\n\nexport default i18n;\n","import React from 'react';\n\nconst KeycloakContext = React.createContext(null);\n\nexport default KeycloakContext;\n","import PropTypes from 'prop-types';\n\nexport default PropTypes.oneOfType([PropTypes.func, PropTypes.shape({ current: PropTypes.elementType }), PropTypes.shape(null)]);\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React, { forwardRef, Component } from 'react';\nimport refType from '../components/__types__/ref';\nimport KeycloakContext from './KeycloakContext';\n\nexport default function withKeycloak(WrappedComponent) {\n  class WithKeycloakComponent extends Component {\n    renderWrappedComponent = value => {\n      const { forwardedRef, ...rest } = this.props;\n      return <WrappedComponent {...rest} ref={forwardedRef} keycloak={value} />;\n    };\n\n    render() {\n      return <KeycloakContext.Consumer>{this.renderWrappedComponent}</KeycloakContext.Consumer>;\n    }\n  }\n\n  WithKeycloakComponent.propTypes = {\n    forwardedRef: refType,\n  };\n\n  WithKeycloakComponent.defaultProps = {\n    forwardedRef: () => {},\n  };\n\n  return forwardRef((props, ref) => <WithKeycloakComponent {...props} forwardedRef={ref} />);\n}\n","export const DOMAIN = process.env.REACT_APP_PATH || ''; // eslint-disable-line import/prefer-default-export\n\n//Customer Portal roles\nexport const ADMIN = 'cp-admin';\nexport const SUPPORT = 'cp-support';\nexport const PARTNER = 'cp-partner';\nexport const CUSTOMER = 'cp-customer';\n\n//Page codes\nexport const PAGE_CUSTOMER_PORTAL = 'customer_portal.page'\nexport const PAGE_ADMIN_CONFIG = 'cp_admin_config.page'\nexport const PAGE_MANAGE_SUBSCRIPTIONS = 'cp_manage_subscriptions.page'\nexport const PAGE_MANAGE_USERS = 'cp_manage_users.page'\nexport const PAGE_SUBSCRIPTION_FORM = 'cp_subscription.page'\nexport const PAGE_TICKET_FORM = 'cp_ticket.page'\n","import {ADMIN, SUPPORT, CUSTOMER, PARTNER, DOMAIN} from './constants';\n\nexport const getKeycloakToken = () => {\n  if (window && window.entando && window.entando.keycloak && window.entando.keycloak.authenticated) {\n    return window.entando.keycloak.token;\n  }\n  return '';\n};\n\nexport const isAuthenticated = props => {\n  const {keycloak} = props;\n  return keycloak.initialized && keycloak.authenticated;\n};\n\nexport const authenticationChanged = (props, prevProps) => {\n  const authenticated = isAuthenticated(props);\n  const changedAuth = prevProps.keycloak.authenticated !== authenticated;\n  return authenticated && changedAuth;\n};\n\nexport const isPortalAdmin = () => {\n  return hasKeycloakClientRole(ADMIN);\n};\n\nexport const isPortalSupport = () => {\n  return hasKeycloakClientRole(SUPPORT);\n};\n\nexport const isPortalPartner = () => {\n  return hasKeycloakClientRole(PARTNER);\n};\n\nexport const isPortalCustomer = () => {\n  return hasKeycloakClientRole(CUSTOMER);\n};\n\nexport const isPortalAdminOrSupport = () => {\n  return isPortalAdmin() || isPortalSupport();\n};\n\nexport const isPortalCustomerOrPartner = () => {\n  return isPortalCustomer() || isPortalPartner();\n};\n\nexport const isPortalUser = () => {\n  return isPortalAdminOrSupport() || isPortalCustomerOrPartner();\n};\n\nexport const hasKeycloakClientRole = clientRole => {\n  if (getKeycloakToken()) {\n    const { resourceAccess } = window.entando.keycloak;\n    if (resourceAccess) {\n      for (const client in resourceAccess) {\n        const item = resourceAccess[client];\n        if (item.roles && item.roles.includes(clientRole)) {\n          // console.debug(\"Found role {} with client {} \", clientRole, client);\n          return true;\n        }\n      }\n    }\n  }\n  return false;\n};\n\nexport const getDefaultOptions = () => ({\n  headers: new Headers({\n    Authorization: `Bearer ${getKeycloakToken()}`,\n    'Content-Type': 'application/json',\n  }),\n});\n\nexport const getDefaultKeycloakOptions = () => ({\n  headers: new Headers({\n    Authorization: `Bearer ${getKeycloakToken()}`,\n    'Content-Type': 'application/x-www-form-urlencoded',\n  }),\n});\n\nexport const getActiveSubscription = project => {\n  return (\n    project &&\n    project.projectSubscriptions &&\n    project.projectSubscriptions.find(item => {\n      return item.status === 'ACTIVE' ? item : null;\n    })\n  );\n};\n\nexport const getPageUrl = (pageCode, locale) => {\n  const url = `${DOMAIN}/${locale}/${pageCode}`;\n  return getUrl(url);\n}\n\nexport const getUrl = url => {\n  return `${url}`;\n};\n\nexport const request = async (url, options) => {\n  const response = await fetch(url, options);\n\n  const headers = {\n    ...(response.headers.has('X-Total-Count') ? {'X-Total-Count': parseInt(response.headers.get('X-Total-Count'), 10)} : {}),\n  };\n\n  if (response.status === 204) {\n    return { data: '', status: response.status };\n  }\n\n  return response.status >= 200 && response.status < 300\n    ? { data: await response.json(), headers, status: response.status }\n    : Promise.reject(new Error(response.statusText || response.status));\n};\n","import { getDefaultOptions, request, getUrl } from './helpers';\r\n\r\nconst resource = 'api/customers';\r\n\r\nexport const apiCustomerDelete = async (serviceUrl, id) => {\r\n  const url = `${serviceUrl}/${resource}/${id}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiCustomersGet = async serviceUrl => {\r\n  const url = getUrl(`${serviceUrl}/${resource}`);\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiCustomerGet = async (serviceUrl, id) => {\r\n  const url = getUrl(`${serviceUrl}/${resource}/${id}`);\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiCustomerPost = async (serviceUrl, customer) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n    body: customer ? JSON.stringify(customer) : null,\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiCustomerPut = async (serviceUrl, customer) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'PUT',\r\n    body: customer ? JSON.stringify(customer) : null,\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiAddProjectToCustomer = async (serviceUrl, customerId, projectId) => {\r\n  const url = `${serviceUrl}/${resource}/${customerId}/projects/${projectId}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiDeleteProjectFromCustomer = async (serviceUrl, customerId, projectId) => {\r\n  const url = `${serviceUrl}/${resource}/${customerId}/projects/${projectId}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE',\r\n  };\r\n  return request(url, options);\r\n};\r\n","import React, { Component } from 'react';\nimport i18n from '../../i18n';\nimport { ModalWrapper, Form, TextInput, TextArea } from 'carbon-components-react';\nimport withKeycloak from '../../auth/withKeycloak';\nimport {apiCustomerPost} from '../../api/customers';\nimport {isAuthenticated} from \"../../api/helpers\";\n\nclass AddCustomerModal extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      name: '',\n      customerNumber: '',\n      contactName: '',\n      contactPhone: '',\n      contactEmail: '',\n      notes: '',\n      invalid: {},\n      submitMsg: '',\n      submitColour: 'black',\n    };\n\n    this.baseState = this.state;\n  }\n\n  handleValidation() {\n    let invalid = {};\n    let formIsValid = true;\n\n    if (this.state.name === '') {\n      formIsValid = false;\n      invalid['name'] = true;\n    }\n\n    if (this.state.customerNumber === '') {\n      formIsValid = false;\n      invalid['customerNumber'] = true;\n    }\n\n    if (typeof this.state.contactEmail !== 'undefined') {\n      let lastAtPos = this.state.contactEmail.lastIndexOf('@');\n      let lastDotPos = this.state.contactEmail.lastIndexOf('.');\n\n      if (\n        !(\n          lastAtPos < lastDotPos &&\n          lastAtPos > 0 &&\n          this.state.contactEmail.indexOf('@@') === -1 &&\n          lastDotPos > 2 &&\n          this.state.contactEmail.length - lastDotPos > 2\n        )\n      ) {\n        formIsValid = false;\n        invalid['contactEmail'] = true;\n      }\n    }\n\n    this.setState({ invalid: invalid });\n    return formIsValid;\n  }\n\n  handleChanges = e => {\n    const input = e.target;\n    const name = input.name;\n    const value = input.value;\n    this.setState({ [name]: value });\n  };\n\n  async customerPost(customer) {\n    if (isAuthenticated(this.props)) {\n      return await apiCustomerPost(this.props.serviceUrl, customer);\n    }\n  }\n\n  handleFormSubmit = () => {\n    const formIsValid = this.handleValidation();\n\n    if (formIsValid) {\n      const customer = {\n        name: this.state.name,\n        customerNumber: this.state.customerNumber,\n        contactName: this.state.contactName,\n        contactPhone: this.state.contactPhone,\n        contactEmail: this.state.contactEmail,\n        notes: this.state.notes,\n      };\n\n      this.customerPost(customer)\n        .then(() => {\n          this.setState({\n            submitMsg: i18n.t('submitMessages.added'),\n            submitColour: '#24a148',\n          });\n          this.props.updateCustomerList();\n        })\n        .catch(() => {\n          this.setState({\n            submitMsg: i18n.t('submitMessages.error'),\n            submitColour: '#da1e28',\n          });\n        });\n    }\n  };\n\n  clearValues = () => {\n    const customerModalElement = document.querySelector('#modal-form-customer');\n    if (!customerModalElement.className.includes('is-visible')) {\n      this.setState(this.baseState);\n    }\n  };\n\n  componentDidMount() {\n    const modalOpenButton = document.querySelector('.add-customer-button');\n    modalOpenButton.addEventListener('click', this.clearValues, false);\n  }\n\n  render() {\n    const modalConfirmation = (\n      <div className=\"bx--modal-header\">\n        <p style={{color: this.state.submitColour}}>{this.state.submitMsg}</p>\n      </div>\n    );\n    const modalId = 'modal-form-customer';\n    return (\n      <ModalWrapper\n        buttonTriggerText={i18n.t('buttons.addCustomer')}\n        modalHeading={i18n.t('adminDashboard.addCustomer.title')}\n        buttonTriggerClassName=\"add-customer bx--btn bx--btn--tertiary add-customer-button\"\n        className=\"modal-form\"\n        id={modalId}\n        handleSubmit={this.handleFormSubmit}\n        primaryButtonText={i18n.t('modalText.save')}\n        secondaryButtonText={i18n.t('modalText.cancel')}\n      >\n        {modalConfirmation}\n        <div className=\"form-container\">\n          <Form onSubmit={this.handleFormSubmit}>\n            <TextInput\n              id={'name' + modalId}\n              name=\"name\"\n              labelText={i18n.t('adminDashboard.addCustomer.customerName') + ' *'}\n              value={this.state.name}\n              onChange={this.handleChanges}\n              invalidText={i18n.t('validation.invalid.required')}\n              invalid={this.state.invalid['name']}\n            />\n            <TextInput\n              id={'customerNumber' + modalId}\n              name=\"customerNumber\"\n              labelText={i18n.t('adminDashboard.addCustomer.customerNumber') + ' *'}\n              value={this.state.customerNumber}\n              onChange={this.handleChanges}\n              invalidText={i18n.t('validation.invalid.required')}\n              invalid={this.state.invalid['customerNumber']}\n            />\n            <TextInput\n              id={'contactName' + modalId}\n              name=\"contactName\"\n              labelText={i18n.t('adminDashboard.addCustomer.contactName')}\n              value={this.state.contactName}\n              onChange={this.handleChanges}\n            />\n            <TextInput\n              id={'contactPhone' + modalId}\n              name=\"contactPhone\"\n              labelText={i18n.t('adminDashboard.addCustomer.contactPhone')}\n              value={this.state.contactPhone}\n              onChange={this.handleChanges}\n            />\n            <TextInput\n              id={'contactEmail' + modalId}\n              name=\"contactEmail\"\n              labelText={i18n.t('adminDashboard.addCustomer.contactEmail') + ' *'}\n              value={this.state.contactEmail}\n              onChange={this.handleChanges}\n              invalidText={i18n.t('validation.invalid.email')}\n              invalid={this.state.invalid['contactEmail']}\n            />\n            <TextArea\n              id={'notes' + modalId}\n              name=\"notes\"\n              labelText={i18n.t('adminDashboard.addCustomer.notes')}\n              value={this.state.notes}\n              onChange={this.handleChanges}\n            />\n          </Form>\n        </div>\n        {modalConfirmation}\n      </ModalWrapper>\n    );\n  }\n}\n\nexport default withKeycloak(AddCustomerModal);\n","export const publishWidgetEvent = (eventId, payload) => {\n  const widgetEvent = new CustomEvent(eventId, {\n    detail: {\n      payload,\n    },\n  });\n  window.dispatchEvent(widgetEvent);\n};\n\nexport const createWidgetEventPublisher = eventType => payload => publishWidgetEvent(eventType, payload);\n\nexport const subscribeToWidgetEvent = (eventType, eventHandler) => {\n  window.addEventListener(eventType, eventHandler);\n\n  return () => {\n    window.removeEventListener(eventType, eventHandler);\n  };\n};\n\nexport const subscribeToWidgetEvents = (widgetEvents, eventHandler) => {\n  widgetEvents.forEach(eventType => window.addEventListener(eventType, eventHandler));\n\n  return () => {\n    widgetEvents.forEach(eventType => window.removeEventListener(eventType, eventHandler));\n  };\n};\n\nexport const widgetEventToFSA = widgetEvent => {\n  // for info about Flux Standard Action (FSA) see https://github.com/redux-utilities/flux-standard-action\n  const {\n    type,\n    detail: { payload, error, meta },\n  } = widgetEvent;\n  return { type, payload, error, meta };\n};\n","export const INPUT_EVENT_TYPES = {\n  formUpdate: 'customer.form.update',\n  formCreate: 'customer.form.create',\n  formDelete: 'customer.form.delete',\n};\n\nexport const OUTPUT_EVENT_TYPES = {\n  select: 'customer.table.select',\n  add: 'customer.table.add',\n  error: 'customer.table.error',\n  delete: 'customer.table.delete',\n};\n\nexport const KEYCLOAK_EVENT_TYPE = 'keycloak';\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport AddCustomerModal from '../components/Admin/AddCustomerModal';\nimport '../index.scss';\n\nimport KeycloakContext from '../auth/KeycloakContext';\n\nimport {subscribeToWidgetEvent} from '../helpers/widgetEvents';\nimport {KEYCLOAK_EVENT_TYPE} from './widgetEventTypes';\nimport * as Locale from '../i18n';\n\nconst getKeycloakInstance = () =>\n  (window && window.entando && window.entando.keycloak && {...window.entando.keycloak, initialized: true}) || {\n    initialized: false,\n  };\n\nconst ATTRIBUTES = {\n  hidden: 'hidden',\n  locale: 'locale',\n  paginationMode: 'pagination-mode',\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\n  serviceUrl: 'service-url',\n};\n\nclass AdminAddCustomerElement extends HTMLElement {\n  container;\n\n  mountPoint;\n\n  unsubscribeFromKeycloakEvent;\n\n  keycloak = getKeycloakInstance();\n\n  connectedCallback() {\n    this.mountPoint = document.createElement('div');\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\n\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\n      this.render();\n    });\n\n    this.render();\n\n    //retargetEvents(shadowRoot);\n    this.appendChild(this.mountPoint);\n  }\n\n  render() {\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\n    const locale = this.getAttribute(ATTRIBUTES.locale) || '';\n    Locale.setLocale(locale);\n\n    ReactDOM.render(\n      <KeycloakContext.Provider value={this.keycloak}>\n        <AddCustomerModal serviceUrl={serviceUrl} locale={locale}/>\n      </KeycloakContext.Provider>,\n      this.mountPoint\n    );\n  }\n}\n\ncustomElements.define('cp-admin-add-customer-widget', AdminAddCustomerElement);\n","import {getDefaultOptions, request} from './helpers';\r\n\r\nconst resource = 'api/ticketing-systems';\r\n\r\nexport const apiTicketingSystemDelete = async (serviceUrl, id) => {\r\n  const url = `${serviceUrl}/${resource}/${id}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiCurrentTicketingSystemGet = async serviceUrl => {\r\n  const ticketingSystems = (await apiTicketingSystemsGet(serviceUrl)).data;\r\n  //Simplifying assumption to take the latest ticketing system as the current config. There should be only 1.\r\n  return ticketingSystems && ticketingSystems.length ? ticketingSystems[ticketingSystems.length - 1] : null;\r\n};\r\n\r\nexport const apiTicketingSystemsGet = async serviceUrl => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\n//Note: post and put both use a ticketingsystemrequest\r\nexport const apiTicketingSystemPost = async (serviceUrl, ticketingSystem, secret) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const tsRequest = {\r\n    \"ticketingSystem\": ticketingSystem,\r\n    \"secret\": secret\r\n  }\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n    body: JSON.stringify(tsRequest),\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiTicketingSystemPut = async (serviceUrl, ticketingSystem, secret) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const tsRequest = {\r\n    \"ticketingSystem\": ticketingSystem,\r\n    \"secret\": secret\r\n  }\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'PUT',\r\n    body: JSON.stringify(tsRequest),\r\n  };\r\n  return request(url, options);\r\n};\r\n","import React, { Component } from 'react';\r\nimport i18n from '../../../i18n';\r\nimport { Form, TextInput, Select, SelectItem, Button } from 'carbon-components-react';\r\nimport {\r\n  apiCurrentTicketingSystemGet,\r\n  apiTicketingSystemDelete,\r\n  apiTicketingSystemPost,\r\n  apiTicketingSystemPut,\r\n} from '../../../api/ticketingsystem';\r\nimport {authenticationChanged, isAuthenticated, isPortalAdmin} from '../../../api/helpers';\r\nimport withKeycloak from '../../../auth/withKeycloak';\r\n\r\nclass TicketingSystem extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      ticketingSystem: {},\r\n      ticketingSystemType: 'Jira',\r\n      url: '',\r\n      serviceAccount: '',\r\n      serviceAccountSecret: '',\r\n      systemId: '',\r\n      submitMsg: '',\r\n      submitColour: 'black',\r\n    };\r\n  }\r\n\r\n  handleChanges = e => {\r\n    const input = e.target;\r\n    const name = input.name;\r\n    const value = input.value;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  async createTicketingSystem() {\r\n    const ticketingSystem = {\r\n      url: this.state.url,\r\n      serviceAccount: this.state.serviceAccount,\r\n      systemId: this.state.systemId,\r\n    };\r\n    const response = (await apiTicketingSystemPost(this.props.serviceUrl, ticketingSystem, this.state.serviceAccountSecret)).data;\r\n    this.setState({\r\n      ticketingSystem: response,\r\n    });\r\n  }\r\n\r\n  async updateTicketingSystem() {\r\n    const ticketingSystem = {\r\n      id: this.state.ticketingSystem.id,\r\n      url: this.state.url,\r\n      serviceAccount: this.state.serviceAccount,\r\n      systemId: this.state.systemId,\r\n    };\r\n    return await apiTicketingSystemPut(this.props.serviceUrl, ticketingSystem, this.state.serviceAccountSecret);\r\n  }\r\n\r\n  async fetchData() {\r\n    const ticketingSystem = await apiCurrentTicketingSystemGet(this.props.serviceUrl);\r\n    this.setState({\r\n      ticketingSystem: ticketingSystem,\r\n      url: ticketingSystem ? ticketingSystem.url : '',\r\n      serviceAccount: ticketingSystem ? ticketingSystem.serviceAccount : '',\r\n      //Secret needs to be entered each time\r\n      systemId: ticketingSystem ? ticketingSystem.systemId : '',\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (isAuthenticated(this.props)) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (authenticationChanged(this.props, prevProps)) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n\r\n  async deleteTicketingSystem() {\r\n    return await apiTicketingSystemDelete(this.props.serviceUrl, this.state.ticketingSystem.id);\r\n  }\r\n\r\n  handleDelete() {\r\n    if (window.confirm('Are you sure you want to delete this ticketing system?')) {\r\n      this.deleteTicketingSystem()\r\n        .then(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.deleted'),\r\n            submitColour: '#24a148',\r\n          });\r\n          this.fetchData();\r\n        })\r\n        .catch(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.error'),\r\n            submitColour: '#da1e28',\r\n          });\r\n        });\r\n    }\r\n  }\r\n\r\n  handleFormSubmit = event => {\r\n    event.preventDefault();\r\n    if (!this.state.ticketingSystem) {\r\n      this.createTicketingSystem()\r\n        .then(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.created'),\r\n            submitColour: '#24a148',\r\n          });\r\n        })\r\n        .catch(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.error'),\r\n            submitColour: '#da1e28',\r\n          });\r\n        });\r\n    } else {\r\n      this.updateTicketingSystem()\r\n        .then(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.updated'),\r\n            submitColour: '#24a148',\r\n          });\r\n        })\r\n        .catch(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.error'),\r\n            submitColour: '#da1e28',\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const ticketingSystemTypes = ['Jira'];\r\n    if (isPortalAdmin()) {\r\n      return (\r\n        <div className=\"cp-form\">\r\n          <p style={{ color: this.state.submitColour }}>{this.state.submitMsg}</p>\r\n          <Form onSubmit={this.handleFormSubmit}>\r\n            <div className=\"bx--grid\">\r\n              <div className=\"bx--row\">\r\n                <div className=\"bx--col\">\r\n                  <Select\r\n                    id=\"ticketingSystemType\"\r\n                    name=\"ticketingSystemType\"\r\n                    labelText={i18n.t('adminConfig.integrationTicketingSystem.selectBackendTicketingSystem')}\r\n                    value={this.state.ticketingSystemType}\r\n                    onChange={this.handleChanges}\r\n                  >\r\n                    <SelectItem text={i18n.t('adminConfig.integrationTicketingSystem.select')}\r\n                                value=\"ticketing-system\"/>\r\n                    {ticketingSystemTypes.map((type, i) => (\r\n                      <SelectItem key={i} text={type} value={type}>\r\n                        {type}\r\n                      </SelectItem>\r\n                    ))}\r\n                  </Select>\r\n                  <TextInput\r\n                    id=\"serviceAccount\"\r\n                    name=\"serviceAccount\"\r\n                    labelText={i18n.t('adminConfig.integrationTicketingSystem.userName')}\r\n                    value={this.state.serviceAccount}\r\n                    onChange={this.handleChanges}\r\n                  />\r\n                  <TextInput\r\n                    id=\"systemId\"\r\n                    name=\"systemId\"\r\n                    labelText={i18n.t('adminConfig.integrationTicketingSystem.projectName')}\r\n                    value={this.state.systemId}\r\n                    onChange={this.handleChanges}\r\n                  />\r\n                </div>\r\n                <div className=\"bx--col\">\r\n                  <TextInput\r\n                    id=\"url\"\r\n                    name=\"url\"\r\n                    labelText={i18n.t('adminConfig.integrationTicketingSystem.url')}\r\n                    value={this.state.url}\r\n                    onChange={this.handleChanges}\r\n                  />\r\n                  <TextInput\r\n                    id=\"serviceAccountSecret\"\r\n                    name=\"serviceAccountSecret\"\r\n                    type=\"password\"\r\n                    labelText={i18n.t('adminConfig.integrationTicketingSystem.password')}\r\n                    value={this.state.serviceAccountSecret}\r\n                    onChange={this.handleChanges}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <Button kind=\"primary\" tabIndex={0} type=\"submit\">\r\n                {' '}\r\n                {i18n.t('buttons.submit')}{' '}\r\n              </Button>\r\n              {this.state.ticketingSystem ? (\r\n                <Button kind=\"danger\" onClick={() => this.handleDelete()}>\r\n                  {' '}\r\n                  Delete{' '}\r\n                </Button>\r\n              ) : null}\r\n            </div>\r\n          </Form>\r\n        </div>\r\n      );\r\n    }\r\n    // Unauthorized\r\n    else {\r\n      return <p>{i18n.t('userMessages.unauthorized')}</p>;\r\n    }\r\n  }\r\n}\r\n\r\nexport default withKeycloak(TicketingSystem);\r\n","import { getDefaultOptions, request } from './helpers';\n\nconst resource = 'api/entando-versions';\n\nexport const apiProductVersionsGet = async serviceUrl => {\n  const url = `${serviceUrl}/${resource}`;\n  const options = {\n    ...getDefaultOptions(),\n    method: 'GET',\n  };\n\n  return request(url, options);\n};\n\nexport const apiProductVersionGet = async (serviceUrl, versionId) => {\n  const url = `${serviceUrl}/${resource}/${versionId}`;\n  const options = {\n    ...getDefaultOptions(),\n    method: 'GET',\n  };\n\n  return request(url, options);\n};\n\nexport const apiUpdateProductVersionsStatus = async (serviceUrl, id) => {\n  const url = `${serviceUrl}/${resource}/${id}`;\n  const options = {\n    ...getDefaultOptions(),\n    method: 'PUT',\n  };\n  return request(url, options);\n};\n\nexport const apiProductVersionPost = async (serviceUrl, productVersion) => {\n  const url = `${serviceUrl}/${resource}`;\n  const options = {\n    ...getDefaultOptions(),\n    method: 'POST',\n    body: productVersion ? JSON.stringify(productVersion) : null,\n  };\n  return request(url, options);\n};\n\nexport const apiProductVersionPut = async (serviceUrl, productVersion) => {\n  const url = `${serviceUrl}/${resource}`;\n  const options = {\n    ...getDefaultOptions(),\n    method: 'PUT',\n    body: productVersion ? JSON.stringify(productVersion) : null,\n  };\n  return request(url, options);\n};\n\nexport const apiProductVersionDelete = async (serviceUrl, id) => {\n  const url = `${serviceUrl}/${resource}/${id}`;\n  const options = {\n    ...getDefaultOptions(),\n    method: 'DELETE',\n  };\n  return request(url, options);\n};\n","import React, { Component } from 'react';\nimport i18n from '../../i18n';\nimport { ModalWrapper, Form, TextInput, DatePicker, DatePickerInput } from 'carbon-components-react';\nimport withKeycloak from '../../auth/withKeycloak';\nimport { apiProductVersionPost } from '../../api/productVersion';\nimport moment from 'moment';\nimport {isAuthenticated} from \"../../api/helpers\";\n\nclass AddProductVersionModal extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      name: '',\n      startDate: '',\n      endDate: '',\n      invalid: {},\n      submitMsg: '',\n      submitColour: 'black',\n    };\n\n    this.baseState = this.state;\n  }\n\n  handleValidation() {\n    let invalid = {};\n    let formIsValid = true;\n\n    //name\n    if (this.state.name === '') {\n      formIsValid = false;\n      invalid['name'] = true;\n    }\n\n    if (typeof this.state.startDate !== 'undefined') {\n      if (!this.state.startDate.match(/^(0[1-9]|1[0-2])\\/(0[1-9]|1\\d|2\\d|3[01])\\/(19|20)\\d{2}$/)) {\n        formIsValid = false;\n        invalid['startDate'] = true;\n      }\n    }\n\n    if (typeof this.state.endDate !== 'undefined') {\n      if (!this.state.endDate.match(/^(0[1-9]|1[0-2])\\/(0[1-9]|1\\d|2\\d|3[01])\\/(19|20)\\d{2}$/)) {\n        formIsValid = false;\n        invalid['endDate'] = true;\n      }\n    }\n\n    this.setState({ invalid: invalid });\n    return formIsValid;\n  }\n\n  handleChanges = e => {\n    const input = e.target;\n    const name = input.name;\n    const value = input.value;\n    this.setState({ [name]: value });\n  };\n\n  async addProductVersion() {\n    if (isAuthenticated(this.props)) {\n      return await apiProductVersionPost(this.props.serviceUrl, this.state);\n    }\n  }\n\n  handleFormSubmit = () => {\n    const formIsValid = this.handleValidation();\n\n    if (formIsValid) {\n      this.addProductVersion()\n        .then(() => {\n          this.setState({\n            submitMsg: i18n.t('submitMessages.added'),\n            submitColour: '#24a148',\n          });\n          this.props.updateProductVersions();\n        })\n        .catch(() => {\n          this.setState({\n            submitMsg: i18n.t('submitMessages.error'),\n            submitColour: '#da1e28',\n          });\n        });\n    }\n  };\n\n  clearValues = () => {\n    const customerModalElement = document.querySelector('#modal-form-product-version');\n    if (!customerModalElement.className.includes('is-visible')) {\n      this.setState(this.baseState);\n    }\n  };\n\n  handleStartDateChange = date => {\n    this.setState({\n      startDate: moment(date[0].toISOString()).format('MM/DD/YYYY'),\n    });\n  };\n\n  handleEndDateChange = date => {\n    this.setState({\n      endDate: moment(date[0].toISOString()).format('MM/DD/YYYY'),\n    });\n  };\n\n  componentDidMount() {\n    const modalOpenButton = document.querySelector('.add-product-version-button');\n    modalOpenButton.addEventListener('click', this.clearValues, false);\n  }\n\n  render() {\n    const modalConfirmation = (\n      <div className=\"bx--modal-header\">\n        <p style={{color: this.state.submitColour}}>{this.state.submitMsg}</p>\n      </div>\n    );\n    const modalId = 'modal-form-product-version';\n    return (\n      <ModalWrapper\n        buttonTriggerText={i18n.t('buttons.addProductVersion')}\n        modalHeading={i18n.t('adminDashboard.addProductVersion.title')}\n        buttonTriggerClassName=\"add-product-version bx--btn bx--btn--tertiary add-product-version-button\"\n        className=\"modal-form\"\n        id={modalId}\n        handleSubmit={this.handleFormSubmit}\n      >\n        {modalConfirmation}\n        <div className=\"form-container\">\n          <Form onSubmit={this.handleFormSubmit}>\n            <TextInput\n              id={'name' + modalId}\n              name=\"name\"\n              labelText={i18n.t('adminDashboard.addProductVersion.productVersion')}\n              value={this.state.name}\n              onChange={this.handleChanges}\n              invalidText={i18n.t('validation.invalid.required')}\n              invalid={this.state.invalid['name']}\n            />\n            <DatePicker dateFormat=\"m/d/Y\" datePickerType=\"single\" onChange={this.handleStartDateChange}>\n              <DatePickerInput\n                id={'startDate' + modalId}\n                name=\"startDate\"\n                placeholder=\"mm/dd/yyyy\"\n                labelText={i18n.t('adminDashboard.addProductVersion.productVersionStartDate')}\n                value={this.state.startDate}\n                //onChange={this.handleChanges}\n                type=\"text\"\n                invalidText={i18n.t('validation.invalid.date')}\n                invalid={this.state.invalid['startDate']}\n              />\n            </DatePicker>\n            <DatePicker dateFormat=\"m/d/Y\" datePickerType=\"single\" onChange={this.handleEndDateChange}>\n              <DatePickerInput\n                id={'endDate' + modalId}\n                name=\"endDate\"\n                placeholder=\"mm/dd/yyyy\"\n                labelText={i18n.t('adminDashboard.addProductVersion.productVersionEndDate')}\n                value={this.state.endDate}\n                type=\"text\"\n                invalidText={i18n.t('validation.invalid.date')}\n                invalid={this.state.invalid['endDate']}\n              />\n            </DatePicker>\n          </Form>\n        </div>\n        {modalConfirmation}\n      </ModalWrapper>\n    );\n  }\n}\n\nexport default withKeycloak(AddProductVersionModal);\n","import React, { Component } from 'react';\nimport i18n from '../../i18n';\nimport { ModalWrapper, Form, TextInput, DatePicker, DatePickerInput } from 'carbon-components-react';\nimport withKeycloak from '../../auth/withKeycloak';\nimport { apiProductVersionGet, apiProductVersionPut } from '../../api/productVersion';\nimport moment from 'moment';\nimport {authenticationChanged, isAuthenticated} from '../../api/helpers';\n\nclass EditVersionModal extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      name: '',\n      startDate: '',\n      endDate: '',\n      invalid: {},\n      modalId: '',\n      buttonId: '',\n      submitMsg: '',\n      submitColour: 'black',\n    };\n  }\n\n  handleValidation() {\n    let invalid = {};\n    let formIsValid = true;\n\n    //name\n    if (this.state.name === '') {\n      formIsValid = false;\n      invalid['name'] = true;\n    }\n\n    if (typeof this.state.startDate !== 'undefined') {\n      if (!this.state.startDate.match(/^(0[1-9]|1[0-2])\\/(0[1-9]|1\\d|2\\d|3[01])\\/(19|20)\\d{2}$/)) {\n        formIsValid = false;\n        invalid['startDate'] = true;\n      }\n    }\n\n    if (typeof this.state.endDate !== 'undefined') {\n      if (!this.state.endDate.match(/^(0[1-9]|1[0-2])\\/(0[1-9]|1\\d|2\\d|3[01])\\/(19|20)\\d{2}$/)) {\n        formIsValid = false;\n        invalid['endDate'] = true;\n      }\n    }\n\n    this.setState({ invalid: invalid });\n    return formIsValid;\n  }\n\n  componentDidUpdate(prevProps) {\n    if (authenticationChanged(this.props, prevProps)) {\n      this.getVersionDetails();\n    }\n  }\n\n  handleChanges = e => {\n    const input = e.target;\n    const name = input.name;\n    const value = input.value;\n    this.setState({ [name]: value });\n  };\n\n  handleStartDateChange = date => {\n    this.setState({\n      startDate: moment(date[0].toISOString()).format('MM/DD/YYYY'),\n    });\n  };\n\n  handleEndDateChange = date => {\n    this.setState({\n      endDate: moment(date[0].toISOString()).format('MM/DD/YYYY'),\n    });\n  };\n\n  async getVersionDetails() {\n    const version = await apiProductVersionGet(this.props.serviceUrl, this.props.version.id);\n    this.setState({\n      name: version.data.name,\n      startDate: moment(version.data.startDate).format('MM/DD/YYYY'),\n      endDate: moment(version.data.endDate).format('MM/DD/YYYY'),\n      modalId: 'modal-form-version-edit-' + version.data.id,\n      buttonId: 'edit-version-button-' + version.data.id,\n    });\n  }\n\n  async versionPut(version) {\n    return await apiProductVersionPut(this.props.serviceUrl, version);\n  }\n\n  handleFormSubmit = () => {\n    const formIsValid = this.handleValidation();\n\n    if (formIsValid) {\n      const version = {\n        id: this.props.version.id,\n        name: this.state.name,\n        startDate: moment(this.state.startDate).format(),\n        endDate: moment(this.state.endDate).format(),\n      };\n      this.versionPut(version)\n        .then(() => {\n          this.setState({\n            submitMsg: i18n.t('submitMessages.updated'),\n            submitColour: '#24a148',\n          });\n          this.props.updateProductVersions();\n        })\n        .catch(() => {\n          this.setState({\n            submitMsg: i18n.t('submitMessages.error'),\n            submitColour: '#da1e28',\n          });\n        });\n    }\n  };\n\n  componentDidMount() {\n    if (isAuthenticated(this.props)) {\n      this.getVersionDetails();\n      const modalOpenButton = document.querySelector('.edit-version-button-' + this.props.version.id);\n      modalOpenButton.addEventListener('click', this.clearValues, false);\n    }\n  }\n\n  render() {\n    const modalConfirmation = (\n      <div className=\"bx--modal-header\">\n        <p style={{color: this.state.submitColour}}>{this.state.submitMsg}</p>\n      </div>\n    );\n    const buttonClassName = 'bx--btn bx--btn--ghost edit-version-button-' + this.props.version.id;\n    const modalId = this.state.modalId;\n    return (\n      <ModalWrapper\n        buttonTriggerText={i18n.t('buttons.edit')}\n        modalHeading={i18n.t('adminDashboard.addProject.editTitle')}\n        buttonTriggerClassName={buttonClassName}\n        className=\"modal-form\"\n        id={this.state.modalId}\n        handleSubmit={this.handleFormSubmit}\n        primaryButtonText={i18n.t('modalText.save')}\n        secondaryButtonText={i18n.t('modalText.cancel')}\n      >\n        {modalConfirmation}\n        <div className=\"form-container\">\n          <Form onSubmit={this.handleFormSubmit} id={'form' + modalId}>\n            <TextInput\n              id={'name' + modalId}\n              name=\"name\"\n              labelText={i18n.t('adminDashboard.addProject.projectName') + ' *'}\n              value={this.state.name}\n              onChange={this.handleChanges}\n              invalidText={i18n.t('validation.invalid.required')}\n              invalid={this.state.invalid['name']}\n            />\n            <DatePicker dateFormat=\"m/d/Y\" datePickerType=\"single\" onChange={this.handleStartDateChange}\n                        value={this.state.startDate}>\n              <DatePickerInput\n                id={'startDate' + modalId}\n                name=\"startDate\"\n                placeholder=\"mm/dd/yyyy\"\n                labelText={i18n.t('subscriptionDetails.startDate') + ' *'}\n                onChange={this.handleChanges}\n                type=\"text\"\n                invalidText={i18n.t('validation.invalid.date')}\n                invalid={this.state.invalid['startDate']}\n              />\n            </DatePicker>\n            <DatePicker\n              dateFormat=\"m/d/Y\"\n              datePickerType=\"single\"\n              onChange={this.handleEndDateChange}\n              id={'endDate' + modalId}\n              name=\"endDate\"\n              value={this.state.endDate}\n            >\n              <DatePickerInput\n                id={'endDate' + modalId}\n                name=\"endDate\"\n                placeholder=\"mm/dd/yyyy\"\n                labelText={i18n.t('subscriptionDetails.endDate') + ' *'}\n                onChange={this.handleChanges}\n                type=\"text\"\n                invalidText={i18n.t('validation.invalid.date')}\n                invalid={this.state.invalid['endDate']}\n              />\n            </DatePicker>\n          </Form>\n        </div>\n        {modalConfirmation}\n      </ModalWrapper>\n    );\n  }\n}\n\nexport default withKeycloak(EditVersionModal);\n","import React, { Component } from 'react';\r\nimport i18n from '../../../i18n';\r\nimport {\r\n  DataTable,\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableHeader,\r\n  TableBody,\r\n  TableCell,\r\n  Toggle,\r\n  Button,\r\n} from 'carbon-components-react';\r\nimport { apiProductVersionDelete, apiProductVersionsGet, apiUpdateProductVersionsStatus } from '../../../api/productVersion';\r\nimport withKeycloak from '../../../auth/withKeycloak';\r\nimport AddProductVersionModal from '../AddProductVersionModal';\r\nimport {authenticationChanged, isAuthenticated, isPortalAdminOrSupport} from '../../../api/helpers';\r\nimport EditVersionModal from '../EditVersionModal';\r\n\r\nclass ProductVersion extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      versions: '',\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (isPortalAdminOrSupport()) {\r\n      this.getProductVersions();\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (authenticationChanged(this.props, prevProps)) {\r\n      if (isPortalAdminOrSupport()) {\r\n        this.getProductVersions();\r\n      }\r\n    }\r\n  }\r\n\r\n  async getProductVersions() {\r\n    if (isAuthenticated(this.props)) {\r\n      const productVersions = await apiProductVersionsGet(this.props.serviceUrl);\r\n\r\n      this.setState({\r\n        versions: productVersions.data,\r\n      });\r\n    }\r\n  }\r\n\r\n  async deleteVersion(id) {\r\n    if (isAuthenticated(this.props)) {\r\n      return await apiProductVersionDelete(this.props.serviceUrl, id);\r\n    }\r\n  }\r\n\r\n  handleDeleteVersion = (e, id) => {\r\n    e.preventDefault();\r\n    if (window.confirm('Are you sure you want to delete this Entando version?')) {\r\n      this.deleteVersion(id)\r\n        .then(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.deleted'),\r\n            submitColour: '#24a148',\r\n          });\r\n          this.updateProductVersions();\r\n        })\r\n        .catch(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.error'),\r\n            submitColour: '#da1e28',\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  updateProductVersions = () => {\r\n    this.getProductVersions();\r\n  };\r\n\r\n  async handleToggleChange(id) {\r\n    return await apiUpdateProductVersionsStatus(this.props.serviceUrl, id);\r\n  }\r\n\r\n  render() {\r\n    if (isPortalAdminOrSupport()) {\r\n      return (\r\n        <div>\r\n          <DataTable rows={rowData} headers={headerData}>\r\n            {({rows, headers, getHeaderProps, getTableProps}) => (\r\n              <TableContainer>\r\n                <Table {...getTableProps()}>\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      {headers.map(header => (\r\n                        <TableHeader {...getHeaderProps({header})}>{header.header}</TableHeader>\r\n                      ))}\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {Object.keys(this.state.versions).length !== 0\r\n                      ? this.state.versions.map((productVersion, index) => (\r\n                        <TableRow key={index}>\r\n                          <TableCell>{productVersion.name}</TableCell>\r\n                          <TableCell>\r\n                            <Toggle\r\n                              size=\"sm\"\r\n                              onClick={() => this.handleToggleChange(productVersion.id)}\r\n                              aria-label=\"toggle button\"\r\n                              id={'toggle' + productVersion.id}\r\n                              defaultToggled={productVersion.status}\r\n                            />\r\n                          </TableCell>\r\n                          <TableCell>{productVersion.startDate}</TableCell>\r\n                          <TableCell>{productVersion.endDate}</TableCell>\r\n                          <TableCell>\r\n                            <div style={{display: 'flex'}}>\r\n                              <EditVersionModal\r\n                                key={productVersion.id}\r\n                                version={productVersion}\r\n                                serviceUrl={this.props.serviceUrl}\r\n                                updateProductVersions={this.updateProductVersions}\r\n                              />\r\n                                <Button\r\n                                  kind=\"ghost\"\r\n                                  onClick={e => this.handleDeleteVersion(e, productVersion.id)}\r\n                                  style={{ display: 'flex', width: '100%', color: 'red' }}\r\n                                >\r\n                                  {i18n.t('buttons.delete')}\r\n                                </Button>\r\n                              </div>\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        ))\r\n                      : null}\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            )}\r\n          </DataTable>\r\n          <br />\r\n          <AddProductVersionModal serviceUrl={this.props.serviceUrl} updateProductVersions={this.updateProductVersions} />\r\n        </div>\r\n      );\r\n    } else {\r\n      return <p>{i18n.t('userMessages.unauthorized')}</p>;\r\n    }\r\n  }\r\n}\r\n\r\nconst headerData = [\r\n  {\r\n    header: i18n.t('adminConfig.manageProductVersion.entandoVersion'),\r\n    key: 'entVersion',\r\n  },\r\n  {\r\n    header: i18n.t('adminConfig.manageProductVersion.status'),\r\n    key: 'status',\r\n  },\r\n  {\r\n    header: i18n.t('adminConfig.manageProductVersion.startDate'),\r\n    key: 'startDate',\r\n  },\r\n  {\r\n    header: i18n.t('adminConfig.manageProductVersion.supportEndDate'),\r\n    key: 'endDate',\r\n  },\r\n  {\r\n    header: i18n.t('customerDashboard.action'),\r\n    key: 'action',\r\n  },\r\n];\r\n\r\nconst rowData = [\r\n  {\r\n    id: 'a',\r\n    entVersion: '5.2',\r\n    status: <Toggle size=\"sm\" aria-label=\"toggle button\" defaultToggled id=\"status-1\" />,\r\n    startDate: 'April, 2018',\r\n    endDate: 'April, 2022',\r\n  },\r\n  {\r\n    id: 'b',\r\n    entVersion: '6.3',\r\n    status: <Toggle size=\"sm\" aria-label=\"toggle button\" id=\"status-2\"/>,\r\n    startDate: 'Jile, 2019',\r\n    endDate: 'April, 2023',\r\n  },\r\n  {\r\n    id: 'c',\r\n    entVersion: '6.2',\r\n    status: <Toggle size=\"sm\" aria-label=\"toggle button\" defaultToggled id=\"status-3\"/>,\r\n    startDate: 'September, 2020',\r\n    endDate: 'April, 2024',\r\n  },\r\n];\r\n\r\nexport default withKeycloak(ProductVersion);\r\n","import React from 'react';\nimport i18n from '../../../i18n';\nimport { Accordion, AccordionItem, Tile } from 'carbon-components-react';\nimport TicketingSystem from './TicketingSystem';\nimport ProductVersion from './ProductVersion';\nimport {authenticationChanged, isAuthenticated, isPortalAdmin} from '../../../api/helpers';\nimport withKeycloak from '../../../auth/withKeycloak';\n\nclass AdminConfiguration extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n    };\n    this.adminConfig = [\n      {\n        label: (\n          <div>\n            <p className=\"title\">{i18n.t('adminConfig.integrationTicketingSystem.title')}</p>\n            <p className=\"desc\">{i18n.t('adminConfig.integrationTicketingSystem.desc')}</p>\n          </div>\n        ),\n        content: <TicketingSystem serviceUrl={this.props.serviceUrl} />,\n      },\n      {\n        label: (\n          <div>\n            <p className=\"title\">{i18n.t('adminConfig.manageProductVersion.title')}</p>\n            <p className=\"desc\">{i18n.t('adminConfig.manageProductVersion.desc')}</p>\n          </div>\n        ),\n        content: <ProductVersion serviceUrl={this.props.serviceUrl} />,\n      },\n    ];\n  }\n\n  componentDidMount() {\n    if (isAuthenticated(this.props)) {\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (authenticationChanged(this.props, prevProps)) {\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n\n  render() {\n    if (!this.state.loading) {\n      // Authorized\n      if (isPortalAdmin()) {\n        return (\n          <div>\n            <h3 className=\"pageTitle\">{i18n.t('adminDashboard.adminTitle')}</h3>\n            <div className=\"form-container\">\n              <Tile>\n                <p className=\"title\">{i18n.t('adminConfig.title')}</p>\n                <p className=\"desc\">{i18n.t('adminConfig.desc')}</p>\n              </Tile>\n              <Accordion>\n                {this.adminConfig.map((item, index) => (\n                  <AccordionItem key={index.toString()} index={index} title={item.label} description={item.description}>\n                    <div>{item.content}</div>\n                  </AccordionItem>\n                ))}\n              </Accordion>\n            </div>\n          </div>\n        );\n      }\n      // Unauthorized\n      else {\n        return <p>{i18n.t('userMessages.unauthorized')}</p>;\n      }\n    }\n    // Loading\n    else {\n      return null;\n    }\n  }\n}\nexport default withKeycloak(AdminConfiguration);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport AdminConfiguration from '../components/Admin/Configuration/AdminConfiguration';\nimport '../index.scss';\nimport * as Locale from '../i18n';\n\nimport KeycloakContext from '../auth/KeycloakContext';\n\nimport { subscribeToWidgetEvent } from '../helpers/widgetEvents';\nimport { KEYCLOAK_EVENT_TYPE } from './widgetEventTypes';\n\nconst getKeycloakInstance = () =>\n  (window && window.entando && window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\n    initialized: false,\n  };\n\nconst ATTRIBUTES = {\n  hidden: 'hidden',\n  locale: 'locale',\n  paginationMode: 'pagination-mode',\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\n  serviceUrl: 'service-url',\n};\n\nclass AdminConfigurationElement extends HTMLElement {\n  container;\n\n  mountPoint;\n\n  unsubscribeFromKeycloakEvent;\n\n  keycloak = getKeycloakInstance();\n\n  connectedCallback() {\n    this.mountPoint = document.createElement('div');\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\n\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\n      this.render();\n    });\n\n    this.render();\n\n    //retargetEvents(shadowRoot);\n    this.appendChild(this.mountPoint);\n  }\n\n  render() {\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\n    const locale = this.getAttribute(ATTRIBUTES.locale) || '';\n    Locale.setLocale(locale);\n\n    ReactDOM.render(\n      <KeycloakContext.Provider value={this.keycloak}>\n        <AdminConfiguration serviceUrl={serviceUrl} locale={locale}/>\n      </KeycloakContext.Provider>,\n      this.mountPoint\n    );\n  }\n}\n\ncustomElements.define('cp-admin-configuration-widget', AdminConfigurationElement);\n","import { getDefaultOptions, request, getUrl } from './helpers';\n\nconst resource = 'api/partners';\n\nexport const apiPartnerDelete = async (serviceUrl, id) => {\n  const url = `${serviceUrl}/${resource}/${id}`;\n  const options = {\n    ...getDefaultOptions(),\n    method: 'DELETE',\n  };\n  return request(url, options);\n};\n\nexport const apiPartnersGet = async serviceUrl => {\n  const url = getUrl(`${serviceUrl}/${resource}`);\n  const options = {\n    ...getDefaultOptions(),\n    method: 'GET',\n  };\n\n  return request(url, options);\n};\n\nexport const apiPartnerPost = async (serviceUrl, partner) => {\n  const url = `${serviceUrl}/${resource}`;\n  const options = {\n    ...getDefaultOptions(),\n    method: 'POST',\n    body: partner ? JSON.stringify(partner) : null,\n  };\n  return request(url, options);\n};\n","import { getDefaultOptions, request, getUrl } from './helpers';\r\n\r\nconst resource = 'api/projects';\r\n\r\nexport const apiProjectsDelete = async (serviceUrl, id) => {\r\n  const url = `${serviceUrl}/${resource}/${id}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiProjectsGet = async serviceUrl => {\r\n  const url = getUrl(`${serviceUrl}/${resource}`);\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiProjectGet = async (serviceUrl, id) => {\r\n  const url = getUrl(`${serviceUrl}/${resource}/${id}`);\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiProjectPost = async (serviceUrl, project) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n    body: project ? JSON.stringify(project) : null,\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiProjectPut = async (serviceUrl, project) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'PUT',\r\n    body: project ? JSON.stringify(project) : null,\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiAddTicketToProject = async (serviceUrl, projectId, ticketId) => {\r\n  const url = `${serviceUrl}/${resource}/${projectId}/tickets/${ticketId}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiAddSubscriptionToProject = async (serviceUrl, projectId, subscriptionId) => {\r\n  const url = `${serviceUrl}/${resource}/${projectId}/subscriptions/${subscriptionId}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiAddUserToProject = async (serviceUrl, projectId, userId) => {\r\n  const url = `${serviceUrl}/${resource}/${projectId}/users/${userId}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiDeletePartnerFromProject = async (serviceUrl, projectId, partnerId) => {\r\n  const url = `${serviceUrl}/${resource}/${projectId}/partners/${partnerId}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiDeleteSubscriptionFromProject = async (serviceUrl, projectId, subscriptionId) => {\r\n  const url = `${serviceUrl}/${resource}/${projectId}/subscriptions/${subscriptionId}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiDeleteUserFromProject = async (serviceUrl, projectId, userId) => {\r\n  const url = `${serviceUrl}/${resource}/${projectId}/users/${userId}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiAddPartnerToProject = async (serviceUrl, projectId, partnerId) => {\r\n  const url = `${serviceUrl}/${resource}/${projectId}/partners/${partnerId}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiGetProjectUsers = async (serviceUrl, projectId) => {\r\n  const url = `${serviceUrl}/${resource}/${projectId}/users/`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiGetProjectSubscriptions = async (serviceUrl, projectId) => {\r\n  const url = `${serviceUrl}/${resource}/${projectId}/subscriptions/`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n  return request(url, options);\r\n};\r\n","export const AuthenticatedView = ({ children, keycloak }) => {\n  const authenticated = keycloak && keycloak.initialized && keycloak.authenticated;\n  return authenticated ? children : null;\n};\n\nexport const UnauthenticatedView = ({ children, keycloak }) => {\n  const authenticated = keycloak && keycloak.initialized && keycloak.authenticated;\n  return !authenticated ? children : null;\n};\n","import React, {Component} from 'react';\nimport i18n from '../../i18n';\nimport {ModalWrapper, Form, TextInput, Select, SelectItem, TextArea} from 'carbon-components-react';\nimport withKeycloak from '../../auth/withKeycloak';\nimport {apiPartnerPost} from '../../api/partners';\nimport {apiProjectsGet, apiAddPartnerToProject} from '../../api/projects';\nimport {authenticationChanged, isAuthenticated} from '../../api/helpers';\nimport {AuthenticatedView} from '../../auth/KeycloakViews';\n\nclass AddPartnerModal extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      projectList: {},\n      projectId: '',\n      name: '',\n      partnerNumber: '',\n      notes: '',\n      invalid: {},\n      submitMsg: '',\n      submitColour: 'black',\n    };\n  }\n\n  componentDidMount() {\n    if (isAuthenticated(this.props)) {\n      this.fetchData();\n\n      const modalOpenButton = document.querySelector('.add-partner-button');\n      modalOpenButton.addEventListener('click', this.clearValues, false);\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (authenticationChanged(this.props, prevProps)) {\n      this.fetchData();\n    }\n  }\n\n  handleValidation() {\n    let invalid = {};\n    let formIsValid = true;\n\n    //project\n    if (this.state.projectId === '' || this.state.projectId === 'project-list') {\n      formIsValid = false;\n      invalid['projectId'] = true;\n    }\n\n    if (this.state.name === '') {\n      formIsValid = false;\n      invalid['name'] = true;\n    }\n\n    if (this.state.partnerNumber === '') {\n      formIsValid = false;\n      invalid['partnerNumber'] = true;\n    }\n\n    this.setState({ invalid: invalid });\n    return formIsValid;\n  }\n\n  handleChanges = e => {\n    const input = e.target;\n    const name = input.name;\n    const value = input.value;\n    this.setState({ [name]: value });\n  };\n\n  async fetchData() {\n    if (isAuthenticated(this.props)) {\n      let projects = {};\n      try {\n        projects = (await apiProjectsGet(this.props.serviceUrl)).data;\n      } catch (err) {\n        console.log(err);\n      }\n      this.setState({\n        projectList: projects ? projects : {},\n      });\n    }\n  }\n\n  async partnerPost(partner) {\n    if (isAuthenticated(this.props)) {\n      const result = await apiPartnerPost(this.props.serviceUrl, partner);\n      return await apiAddPartnerToProject(this.props.serviceUrl, this.state.projectId, result.data.id);\n    }\n  }\n\n  handleFormSubmit = () => {\n    const formIsValid = this.handleValidation();\n\n    if (formIsValid) {\n      const partner = {\n        name: this.state.name,\n        partnerNumber: this.state.partnerNumber,\n        notes: this.state.notes,\n      };\n      this.partnerPost(partner)\n        .then(() => {\n          this.setState({\n            submitMsg: i18n.t('submitMessages.added'),\n            submitColour: '#24a148',\n          });\n          this.props.updateCustomerList();\n        })\n        .catch(() => {\n          this.setState({\n            submitMsg: i18n.t('submitMessages.error'),\n            submitColour: '#da1e28',\n          });\n        });\n    }\n  };\n\n  clearValues = () => {\n    const partnerModalElement = document.querySelector('#modal-form-partner');\n    if (!partnerModalElement.className.includes('is-visible')) {\n      this.setState({\n        projectId: '',\n        name: '',\n        partnerNumber: '',\n        notes: '',\n        invalid: {},\n        submitMsg: '',\n        submitColour: 'black',\n      });\n    }\n  };\n\n  render() {\n    const modalConfirmation = (\n      <div className=\"bx--modal-header\">\n        <p style={{color: this.state.submitColour}}>{this.state.submitMsg}</p>\n      </div>\n    );\n    const {keycloak} = this.props;\n    const modalId = 'modal-form-partner';\n    return (\n      <AuthenticatedView keycloak={keycloak}>\n        <ModalWrapper\n          buttonTriggerText={i18n.t('buttons.addPartner')}\n          modalHeading={i18n.t('adminDashboard.addPartner.title')}\n          buttonTriggerClassName=\"add-partner bx--btn bx--btn--tertiary add-partner-button\"\n          className=\"modal-form\"\n          id={modalId}\n          handleSubmit={this.handleFormSubmit}\n          primaryButtonText={i18n.t('modalText.save')}\n          secondaryButtonText={i18n.t('modalText.cancel')}\n        >\n          {modalConfirmation}\n          <div className=\"form-container\">\n            <Form onSubmit={this.handleFormSubmit}>\n              <Select\n                id={'projectId' + modalId}\n                name=\"projectId\"\n                labelText={i18n.t('adminDashboard.addPartner.projectList') + ' *'}\n                value={this.state.projectId}\n                onChange={this.handleChanges}\n                invalidText={i18n.t('validation.invalid.required')}\n                invalid={this.state.invalid['projectId']}\n              >\n                <SelectItem text={i18n.t('adminDashboard.addPartner.selectProject')} value=\"project-list\"/>\n                {Object.keys(this.state.projectList).length !== 0\n                  ? this.state.projectList.map((project, i) => (\n                    <SelectItem key={i} text={project.name} value={project.id}>\n                      {project.name}\n                    </SelectItem>\n                  ))\n                  : null}\n              </Select>\n\n              <TextInput\n                id={'name' + modalId}\n                name=\"name\"\n                labelText={i18n.t('adminDashboard.addPartner.partnerName') + ' *'}\n                value={this.state.name}\n                onChange={this.handleChanges}\n                invalidText={i18n.t('validation.invalid.required')}\n                invalid={this.state.invalid['name']}\n              />\n              <TextInput\n                id={'partnerNumber' + modalId}\n                name=\"partnerNumber\"\n                labelText={i18n.t('adminDashboard.addPartner.partnerNumber') + ' *'}\n                value={this.state.partnerNumber}\n                onChange={this.handleChanges}\n                invalidText={i18n.t('validation.invalid.required')}\n                invalid={this.state.invalid['partnerNumber']}\n              />\n              <TextArea\n                name=\"notes\"\n                labelText={i18n.t('adminDashboard.addPartner.notes')}\n                value={this.state.notes}\n                onChange={this.handleChanges}\n              />\n            </Form>\n          </div>\n          {modalConfirmation}\n        </ModalWrapper>\n      </AuthenticatedView>\n    );\n  }\n}\n\nexport default withKeycloak(AddPartnerModal);\n","import React, { Component } from 'react';\nimport i18n from '../../i18n';\nimport { ModalWrapper, Form, TextInput, Select, SelectItem, TextArea } from 'carbon-components-react';\nimport withKeycloak from '../../auth/withKeycloak';\nimport { apiCustomersGet, apiAddProjectToCustomer } from '../../api/customers';\nimport {apiProjectPost, apiProjectsGet} from '../../api/projects';\nimport {authenticationChanged, isAuthenticated} from \"../../api/helpers\";\n\nclass AddProjectModal extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      projects: {},\n      customerList: {},\n      customerId: '',\n      name: '',\n      description: '',\n      systemId: '',\n      contactName: '',\n      contactPhone: '',\n      contactEmail: '',\n      notes: '',\n      invalid: {},\n      submitMsg: '',\n      submitColour: 'black',\n    };\n  }\n\n  handleValidation() {\n    let invalid = {};\n    let formIsValid = true;\n\n    //customer\n    if (this.state.customerId === '' || this.state.customerId === 'customer-list') {\n      formIsValid = false;\n      invalid['customerId'] = true;\n    }\n\n    //name\n    if (this.state.name === '') {\n      formIsValid = false;\n      invalid['name'] = true;\n    }\n\n    //description\n    if (this.state.description === '') {\n      formIsValid = false;\n      invalid['description'] = true;\n    }\n\n    //contactEmail\n    if (typeof this.state.contactEmail !== 'undefined') {\n      let lastAtPos = this.state.contactEmail.lastIndexOf('@');\n      let lastDotPos = this.state.contactEmail.lastIndexOf('.');\n\n      if (\n        !(\n          lastAtPos < lastDotPos &&\n          lastAtPos > 0 &&\n          this.state.contactEmail.indexOf('@@') === -1 &&\n          lastDotPos > 2 &&\n          this.state.contactEmail.length - lastDotPos > 2\n        )\n      ) {\n        formIsValid = false;\n        invalid['contactEmail'] = true;\n      }\n    }\n\n    this.setState({ invalid: invalid });\n    return formIsValid;\n  }\n\n  async getAllProjects() {\n    let projects = {}\n    try {\n      projects = await apiProjectsGet(this.props.serviceUrl);\n    } catch (err) {\n      console.log(err);\n    }\n    this.setState({\n      projects: projects.data ? projects.data : {},\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (authenticationChanged(this.props, prevProps)) {\n      this.getCustomers();\n      this.getAllProjects();\n    }\n  }\n\n  handleChanges = e => {\n    const input = e.target;\n    const name = input.name;\n    const value = input.value;\n    this.setState({ [name]: value });\n  };\n\n  async getCustomers() {\n    if (isAuthenticated(this.props)) {\n      let customers = {};\n      try {\n        customers = await apiCustomersGet(this.props.serviceUrl);\n      } catch (err) {\n        console.log(err);\n      }\n      this.setState({customerList: customers});\n    }\n  }\n\n  async projectPost(project) {\n    if (isAuthenticated(this.props)) {\n      const result = await apiProjectPost(this.props.serviceUrl, project);\n      return await apiAddProjectToCustomer(this.props.serviceUrl, this.state.customerId, result.data.id);\n    }\n  }\n\n  handleFormSubmit = () => {\n    const formIsValid = this.handleValidation();\n\n    if (formIsValid) {\n      const project = {\n        name: this.state.name,\n        description: this.state.description,\n        systemId: this.state.systemId,\n        contactName: this.state.contactName,\n        contactPhone: this.state.contactPhone,\n        contactEmail: this.state.contactEmail,\n        notes: this.state.notes,\n      };\n      for (var i = 0; i < this.state.projects.length; i++) {\n        if (project.systemId === this.state.projects[i].systemId && project.systemId.trim() !== '') {\n          window.alert('That system id is already in use in another project');\n          return;\n        }\n      }\n      this.projectPost(project)\n        .then(() => {\n          this.setState({\n            submitMsg: i18n.t('submitMessages.added'),\n            submitColour: '#24a148',\n          });\n          this.props.updateCustomerList();\n          this.getAllProjects();\n        })\n        .catch(() => {\n          this.setState({\n            submitMsg: i18n.t('submitMessages.error'),\n            submitColour: '#da1e28',\n          });\n        });\n    }\n  };\n\n  clearValues = () => {\n    const projectModalElement = document.querySelector('#modal-form-project');\n    if (!projectModalElement.className.includes('is-visible')) {\n      this.setState({\n        customerId: '',\n        name: '',\n        description: '',\n        systemId: '',\n        contactName: '',\n        contactPhone: '',\n        contactEmail: '',\n        notes: '',\n        invalid: {},\n      });\n    }\n  };\n\n  componentDidMount() {\n    this.getCustomers();\n    this.getAllProjects();\n\n    const modalOpenButton = document.querySelector('.add-project-button');\n    modalOpenButton.addEventListener('click', this.clearValues, false);\n  }\n\n  render() {\n    const modalConfirmation = (\n      <div className=\"bx--modal-header\">\n        <p style={{color: this.state.submitColour}}>{this.state.submitMsg}</p>\n      </div>\n    );\n    const modalId = 'modal-form-project';\n    return (\n      <ModalWrapper\n        buttonTriggerText={i18n.t('buttons.addProject')}\n        modalHeading={i18n.t('adminDashboard.addProject.title')}\n        buttonTriggerClassName=\"add-project bx--btn bx--btn--tertiary add-project-button\"\n        className=\"modal-form\"\n        id={modalId}\n        handleSubmit={this.handleFormSubmit}\n        primaryButtonText={i18n.t('modalText.save')}\n        secondaryButtonText={i18n.t('modalText.cancel')}\n      >\n        {modalConfirmation}\n        <div className=\"form-container\">\n          <Form onSubmit={this.handleFormSubmit}>\n            <Select\n              id={'customerId' + modalId}\n              name=\"customerId\"\n              labelText={i18n.t('adminDashboard.addProject.customerList') + ' *'}\n              value={this.state.customerId}\n              onChange={this.handleChanges}\n              invalidText={i18n.t('validation.invalid.required')}\n              invalid={this.state.invalid['customerId']}\n            >\n              <SelectItem text={i18n.t('adminDashboard.addProject.selectCustomer')} value=\"customer-list\" />\n              {Object.keys(this.props.allCustomers).length !== 0\n                ? this.props.allCustomers.map((customerList, i) => (\n                    <SelectItem key={i} text={customerList.name} value={customerList.id}>\n                      {customerList.name}\n                    </SelectItem>\n                  ))\n                : null}\n            </Select>\n\n            <TextInput\n              id={'name' + modalId}\n              name=\"name\"\n              labelText={i18n.t('adminDashboard.addProject.projectName') + ' *'}\n              value={this.state.name}\n              onChange={this.handleChanges}\n              invalidText={i18n.t('validation.invalid.required')}\n              invalid={this.state.invalid['name']}\n            />\n            <TextInput\n              id={'description' + modalId}\n              name=\"description\"\n              labelText={i18n.t('adminDashboard.addProject.projectDesc') + ' *'}\n              value={this.state.description}\n              onChange={this.handleChanges}\n              invalidText={i18n.t('validation.invalid.required')}\n              invalid={this.state.invalid['description']}\n            />\n            <TextInput\n              id={'systemId' + modalId}\n              name=\"systemId\"\n              labelText={i18n.t('adminDashboard.addProject.systemId')}\n              value={this.state.systemId}\n              onChange={this.handleChanges}\n            />\n            <TextInput\n              id={'contactName' + modalId}\n              name=\"contactName\"\n              labelText={i18n.t('adminDashboard.addProject.contactName')}\n              value={this.state.contactName}\n              onChange={this.handleChanges}\n            />\n            <TextInput\n              id={'contactPhone' + modalId}\n              name=\"contactPhone\"\n              labelText={i18n.t('adminDashboard.addProject.contactPhone')}\n              value={this.state.contactPhone}\n              onChange={this.handleChanges}\n            />\n            <TextInput\n              id={'contactEmail' + modalId}\n              name=\"contactEmail\"\n              labelText={i18n.t('adminDashboard.addProject.contactEmail') + ' *'}\n              value={this.state.contactEmail}\n              onChange={this.handleChanges}\n              invalidText={i18n.t('validation.invalid.email')}\n              invalid={this.state.invalid['contactEmail']}\n            />\n            <TextArea\n              id={'notes' + modalId}\n              name=\"notes\"\n              labelText={i18n.t('adminDashboard.addProject.notes')}\n              value={this.state.notes}\n              onChange={this.handleChanges}\n            />\n          </Form>\n        </div>\n        {modalConfirmation}\n      </ModalWrapper>\n    );\n  }\n}\n\nexport default withKeycloak(AddProjectModal);\n","import React, { Component } from 'react';\nimport i18n from '../../i18n';\nimport { ModalWrapper, Form, TextInput, TextArea } from 'carbon-components-react';\nimport withKeycloak from '../../auth/withKeycloak';\nimport { apiCustomersGet } from '../../api/customers';\nimport {apiProjectGet, apiProjectPut, apiProjectsGet} from '../../api/projects';\nimport {authenticationChanged, isAuthenticated} from \"../../api/helpers\";\n\nclass EditProjectModal extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      projects: {},\n      customerList: {},\n      customerId: '',\n      name: '',\n      description: '',\n      systemId: '',\n      contactName: '',\n      contactPhone: '',\n      contactEmail: '',\n      notes: '',\n      invalid: {},\n      modalId: '',\n      buttonId: '',\n      submitMsg: '',\n      submitColour: 'black',\n    };\n  }\n\n  handleValidation() {\n    let invalid = {};\n    let formIsValid = true;\n\n    //name\n    if (this.state.name === '') {\n      formIsValid = false;\n      invalid['name'] = true;\n    }\n\n    //description\n    if (this.state.description === '') {\n      formIsValid = false;\n      invalid['description'] = true;\n    }\n\n    //contactEmail\n    if (typeof this.state.contactEmail !== 'undefined') {\n      let lastAtPos = this.state.contactEmail.lastIndexOf('@');\n      let lastDotPos = this.state.contactEmail.lastIndexOf('.');\n\n      if (\n        !(\n          lastAtPos < lastDotPos &&\n          lastAtPos > 0 &&\n          this.state.contactEmail.indexOf('@@') === -1 &&\n          lastDotPos > 2 &&\n          this.state.contactEmail.length - lastDotPos > 2\n        )\n      ) {\n        formIsValid = false;\n        invalid['contactEmail'] = true;\n      }\n    }\n\n    this.setState({ invalid: invalid });\n    return formIsValid;\n  }\n\n  componentDidUpdate(prevProps) {\n    if (authenticationChanged(this.props, prevProps)) {\n      this.getCustomers();\n      this.getAllProjects();\n      this.getProjectDetails();\n    }\n  }\n\n  handleChanges = e => {\n    const input = e.target;\n    const name = input.name;\n    const value = input.value;\n    this.setState({ [name]: value });\n  };\n\n  async getCustomers() {\n    if (isAuthenticated(this.props)) {\n      const customers = await apiCustomersGet(this.props.serviceUrl);\n      this.setState({customerList: customers});\n    }\n  }\n\n  async getProjectDetails() {\n    if (isAuthenticated(this.props)) {\n      const project = await apiProjectGet(this.props.serviceUrl, this.props.project.id);\n      this.setState({\n        name: project.data.name,\n        description: project.data.description,\n        systemId: project.data.systemId,\n        contactName: project.data.contactName,\n        contactPhone: project.data.contactPhone,\n        contactEmail: project.data.contactEmail,\n        notes: project.data.notes,\n        modalId: 'modal-form-project-edit-' + project.data.id,\n        buttonId: 'edit-project-button-' + project.data.id,\n      });\n    }\n  }\n\n  async getAllProjects() {\n    const projects = await apiProjectsGet(this.props.serviceUrl);\n    this.setState({\n      projects: projects.data,\n    });\n  }\n\n  async projectPut(project) {\n    if (isAuthenticated(this.props)) {\n      return await apiProjectPut(this.props.serviceUrl, project);\n    }\n  }\n\n  handleFormSubmit = () => {\n    const formIsValid = this.handleValidation();\n\n    if (formIsValid) {\n      const project = {\n        id: this.props.project.id,\n        customer: this.props.project.customer,\n        name: this.state.name,\n        description: this.state.description,\n        systemId: this.state.systemId,\n        contactName: this.state.contactName,\n        contactPhone: this.state.contactPhone,\n        contactEmail: this.state.contactEmail,\n        notes: this.state.notes,\n      };\n      for (var i = 0; i < this.props.allProjects.length; i++) {\n        if (\n          project.systemId === this.props.allProjects[i].systemId &&\n          project.id !== this.props.allProjects[i].id &&\n          project.systemId.trim() !== ''\n        ) {\n          window.alert('That system id is already in use in another project');\n          return;\n        }\n      }\n      this.projectPut(project)\n        .then(() => {\n          this.setState({\n            submitMsg: i18n.t('submitMessages.updated'),\n            submitColour: '#24a148',\n          });\n          this.props.updateProjectList();\n        })\n        .catch(() => {\n          this.setState({\n            submitMsg: i18n.t('submitMessages.error'),\n            submitColour: '#da1e28',\n          });\n        });\n    }\n  };\n\n  clearValues = () => {\n    const customerModalElement = document.querySelector('#' + this.state.modalId);\n    if (!customerModalElement.className.includes('is-visible')) {\n      this.setState({\n        name: this.props.project.name,\n        description: this.props.project.description,\n        systemId: this.props.project.systemId,\n        contactName: this.props.project.contactName,\n        contactPhone: this.props.project.contactPhone,\n        contactEmail: this.props.project.contactEmail,\n        notes: this.props.project.notes,\n        invalid: {},\n      });\n    }\n  };\n\n  componentDidMount() {\n    if (isAuthenticated(this.props)) {\n      this.getCustomers();\n      this.getAllProjects();\n      this.getProjectDetails();\n\n      const modalOpenButton = document.querySelector('.edit-project-button-' + this.props.project.id);\n      modalOpenButton.addEventListener('click', this.clearValues, false);\n    }\n  }\n\n  render() {\n    const modalConfirmation = (\n      <div className=\"bx--modal-header\">\n        <p style={{color: this.state.submitColour}}>{this.state.submitMsg}</p>\n      </div>\n    );\n    const buttonClassName = 'dropdown-button-button bx--btn bx--btn--ghost edit-project-button-' + this.props.project.id;\n    const modalId = this.state.modalId;\n    return (\n      <ModalWrapper\n        buttonTriggerText={i18n.t('buttons.edit')}\n        modalHeading={i18n.t('adminDashboard.addProject.editTitle')}\n        buttonTriggerClassName={buttonClassName}\n        className=\"modal-form\"\n        id={this.state.modalId}\n        handleSubmit={this.handleFormSubmit}\n        primaryButtonText={i18n.t('modalText.save')}\n        secondaryButtonText={i18n.t('modalText.cancel')}\n      >\n        {modalConfirmation}\n        <div className=\"form-container\">\n          <Form onSubmit={this.handleFormSubmit}>\n            <TextInput\n              id={'name' + modalId}\n              name=\"name\"\n              labelText={i18n.t('adminDashboard.addProject.projectName') + ' *'}\n              value={this.state.name}\n              onChange={this.handleChanges}\n              invalidText={i18n.t('validation.invalid.required')}\n              invalid={this.state.invalid['name']}\n            />\n            <TextInput\n              id={'description' + modalId}\n              name=\"description\"\n              labelText={i18n.t('adminDashboard.addProject.projectDesc') + ' *'}\n              value={this.state.description}\n              onChange={this.handleChanges}\n              invalidText={i18n.t('validation.invalid.required')}\n              invalid={this.state.invalid['description']}\n            />\n            <TextInput\n              id={'systemId' + modalId}\n              name=\"systemId\"\n              labelText={i18n.t('adminDashboard.addProject.systemId')}\n              value={this.state.systemId}\n              onChange={this.handleChanges}\n            />\n            <TextInput\n              id={'contactName' + modalId}\n              name=\"contactName\"\n              labelText={i18n.t('adminDashboard.addProject.contactName')}\n              value={this.state.contactName}\n              onChange={this.handleChanges}\n            />\n            <TextInput\n              id={'contactPhone' + modalId}\n              name=\"contactPhone\"\n              labelText={i18n.t('adminDashboard.addProject.contactPhone')}\n              value={this.state.contactPhone}\n              onChange={this.handleChanges}\n            />\n            <TextInput\n              id={'contactEmail' + modalId}\n              name=\"contactEmail\"\n              labelText={i18n.t('adminDashboard.addProject.contactEmail') + ' *'}\n              value={this.state.contactEmail}\n              onChange={this.handleChanges}\n              invalidText={i18n.t('validation.invalid.email')}\n              invalid={this.state.invalid['contactEmail']}\n            />\n            <TextArea\n              name=\"notes\"\n              labelText={i18n.t('adminDashboard.addProject.notes')}\n              value={this.state.notes}\n              onChange={this.handleChanges}\n            />\n          </Form>\n        </div>\n        {modalConfirmation}\n      </ModalWrapper>\n    );\n  }\n}\n\nexport default withKeycloak(EditProjectModal);\n","import React, {Component} from 'react';\r\nimport i18n from '../../i18n';\r\nimport {\r\n  Button,\r\n  DataTable,\r\n  ModalWrapper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableHeader,\r\n  TableRow,\r\n} from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport {isPortalAdminOrSupport} from '../../api/helpers';\r\nimport {apiDeletePartnerFromProject} from '../../api/projects';\r\n\r\nclass ManagePartnersModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      projectId: this.props.project.id,\r\n      project: this.props.project,\r\n    };\r\n\r\n    this.headerData = [\r\n      {\r\n        header: i18n.t('adminDashboard.addPartner.partnerName'),\r\n        key: 'partner',\r\n      },\r\n      {\r\n        header: i18n.t('adminDashboard.addPartner.partnerNumber'),\r\n        key: 'partnerNumber',\r\n      },\r\n      {\r\n        header: i18n.t('adminDashboard.addPartner.notes'),\r\n        key: 'notes',\r\n      },\r\n      {\r\n        header: i18n.t('customerDashboard.action'),\r\n        key: 'action',\r\n      },\r\n    ];\r\n  }\r\n\r\n  async removePartner(projectId, partnerId) {\r\n    if (isPortalAdminOrSupport()) {\r\n      return await apiDeletePartnerFromProject(this.props.serviceUrl, projectId, partnerId);\r\n    }\r\n  }\r\n\r\n  handleRemovePartner = (e, projectId, partnerId) => {\r\n    e.preventDefault();\r\n    if (window.confirm('Are you sure you want to remove this partner from the project?')) {\r\n      this.removePartner(projectId, partnerId)\r\n        .then(result => {\r\n          this.setState({\r\n            project: result.data,\r\n            submitMsg: i18n.t('submitMessages.deleted'),\r\n            submitColour: '#24a148',\r\n          });\r\n          this.props.updateProjectList();\r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.error'),\r\n            submitColour: '#da1e28',\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const modalConfirmation = (\r\n      <div className=\"bx--modal-header\">\r\n        <p style={{color: this.state.submitColour}}>{this.state.submitMsg}</p>\r\n      </div>\r\n    );\r\n    const modalId = 'modal-form-manage-partners';\r\n    return (\r\n      <ModalWrapper\r\n        buttonTriggerText={i18n.t('buttons.managePartners')}\r\n        modalHeading={i18n.t('adminDashboard.managePartners.title')}\r\n        buttonTriggerClassName=\"add-partner bx--btn bx--btn--tertiary add-partner-button\"\r\n        className=\"modal-form\"\r\n        id={modalId}\r\n        hasForm={false}\r\n        primaryButtonText={i18n.t('modalText.done')}\r\n        secondaryButtonText={null}\r\n      >\r\n        {modalConfirmation}\r\n        <div>\r\n          <DataTable rows={rowData} headers={this.headerData}>\r\n            {({rows, headers, getHeaderProps, getTableProps}) => (\r\n              <TableContainer description={i18n.t('customerDashboard.tableDesc')}>\r\n                <Table {...getTableProps()}>\r\n                  <TableHead>\r\n                    <TableRow key=\"headerRow\">\r\n                      {headers.map(header => {\r\n                        return <TableHeader {...getHeaderProps({header})}>{header.header}</TableHeader>;\r\n                      })}\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {this.state.project.partners.map((partner, index) => {\r\n                      return (\r\n                        <TableRow key={'partner' + index}>\r\n                          <TableCell>{partner.name}</TableCell>\r\n                          <TableCell>{partner.partnerNumber}</TableCell>\r\n                          <TableCell>{partner.notes}</TableCell>\r\n                          <TableCell>\r\n                            <div>\r\n                              <Button\r\n                                kind=\"ghost\"\r\n                                onClick={e => this.handleRemovePartner(e, this.state.projectId, partner.id)}\r\n                                style={{display: 'block', width: '100%', color: 'red'}}\r\n                              >\r\n                                {i18n.t('buttons.delete')}\r\n                              </Button>\r\n                              <hr style={{margin: '0', border: 'none', borderTop: '1px solid lightgrey'}}/>\r\n                            </div>\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      );\r\n                    })}\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            )}\r\n          </DataTable>\r\n        </div>\r\n        {modalConfirmation}\r\n      </ModalWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nconst rowData = [\r\n  {\r\n    id: 'a',\r\n    name: 'Partner 1',\r\n    partnerNumber: '123',\r\n  },\r\n  {\r\n    id: 'b',\r\n    name: 'Partner 2',\r\n    partnerNumber: '456',\r\n  },\r\n];\r\n\r\nexport default withKeycloak(ManagePartnersModal);\r\n","import React from 'react';\nimport i18n from '../../i18n';\nimport withKeycloak from '../../auth/withKeycloak';\nimport { Button } from 'carbon-components-react';\nimport EditProjectModal from '../Admin/EditProjectModal';\nimport ManagePartnersModal from '../Admin/ManagePartnersModal';\nimport {getPageUrl, isPortalAdmin} from '../../api/helpers';\nimport {Link} from 'react-router-dom';\nimport {\n  PAGE_MANAGE_SUBSCRIPTIONS,\n  PAGE_MANAGE_USERS, PAGE_SUBSCRIPTION_FORM,\n  PAGE_TICKET_FORM\n} from \"../../api/constants\";\n\nclass ProjectActionItems extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      showMenu: false,\n    };\n  }\n\n  handleClick = () => {\n    if (!this.state.showMenu) {\n      document.addEventListener('mousedown', this.handleOutsideClick, false);\n    } else {\n      document.removeEventListener('mousedown', this.handleOutsideClick, false);\n    }\n\n    this.setState(prevState => ({\n      showMenu: !prevState.showMenu,\n    }));\n  };\n\n  handleOutsideClick = e => {\n    if (this.node && !this.node.contains(e.target)) {\n      this.handleClick();\n    }\n  };\n\n  render() {\n    const isAdmin = isPortalAdmin();\n    const actionDivider = <hr style={{margin: '0', border: 'none', borderTop: '1px solid lightgrey'}}/>;\n    const topButton = (\n      <Button onClick={this.handleClick} style={{padding: '10px 20px'}} kind=\"tertiary\">\n        +\n      </Button>\n    );\n    const editProjectSubscription = (\n      <>\n        <EditProjectModal\n          key={this.props.project.id}\n          allProjects={this.props.allProjects}\n          project={this.props.project}\n          serviceUrl={this.props.serviceUrl}\n          updateProjectList={this.props.updateProjectList}\n        />\n        {actionDivider}\n      </>\n    );\n    const subscriptionParam = this.props.subscription ? '&subscription=' + this.props.subscription.id : '';\n    const newOrRenewSubscription = (\n      <>\n        <a\n          href={`${getPageUrl(PAGE_SUBSCRIPTION_FORM, this.props.locale)}?project=${this.props.project.id}${subscriptionParam}`}\n          style={{textDecoration: 'none'}}\n        >\n          <Button kind=\"ghost\" style={{display: 'block', width: '100%'}} value=\"Subscription Request\">\n            {i18n.t('buttons.subscriptionRequest')}\n          </Button>\n        </a>\n        {actionDivider}\n      </>\n    );\n    const managePartners = (\n      <>\n        <ManagePartnersModal\n          key={this.props.project.id}\n          project={this.props.project}\n          serviceUrl={this.props.serviceUrl}\n          updateProjectList={this.props.updateProjectList}\n        />\n        {actionDivider}\n      </>\n    );\n    const manageUsers = (\n      <>\n        <a\n          href={`${getPageUrl(PAGE_MANAGE_USERS, this.props.locale)}?project=${this.props.project.id}`}\n          style={{textDecoration: 'none'}}\n        >\n          <Button kind=\"ghost\" style={{display: 'block', width: '100%'}} value=\"Manage Users\">\n            {i18n.t('buttons.manageUsers')}\n          </Button>\n        </a>\n        {actionDivider}\n      </>\n    );\n    const manageSubscriptions = (\n      <>\n        <a\n          href={`${getPageUrl(PAGE_MANAGE_SUBSCRIPTIONS, this.props.locale)}?project=${this.props.project.id}`}\n          style={{textDecoration: 'none'}}\n        >\n          <Button kind=\"ghost\" style={{display: 'block', width: '100%'}} value=\"Manage Subscriptions\">\n            {i18n.t('buttons.manageSubscriptions')}\n          </Button>\n        </a>\n        {actionDivider}\n      </>\n    );\n    const openTicket = (\n      <>\n        <a\n          href={`${getPageUrl(PAGE_TICKET_FORM, this.props.locale)}?project=${this.props.project.id}`}\n          style={{textDecoration: 'none'}}\n        >\n          <Button kind=\"ghost\" style={{display: 'block', width: '100%'}} value=\"Open Ticket\">\n            {i18n.t('buttons.openTicket')}\n          </Button>\n        </a>\n        {actionDivider}\n      </>\n    );\n    const ticketingSystem = this.props.ticketingSystem;\n    const viewAllTickets = ticketingSystem && ticketingSystem.url && (\n      <>\n        <a\n          href={\n            ticketingSystem.url.substr(0, ticketingSystem.url.indexOf('/rest')) +\n            '/issues/?jql=Organizations=' +\n            this.props.project.systemId\n          }\n          style={{textDecoration: 'none'}}\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          <Button kind=\"ghost\" style={{display: 'block', width: '100%'}} value=\"View All Tickets\">\n            {i18n.t('buttons.viewAllTickets')}\n          </Button>\n        </a>\n        {actionDivider}\n      </>\n    );\n    const deleteProject = (\n      <>\n        <Button\n          kind=\"ghost\"\n          onClick={e => this.props.handleDeleteProject(e, this.props.project.id)}\n          style={{display: 'block', width: '100%', color: 'red'}}\n        >\n          {i18n.t('buttons.delete')}\n        </Button>\n        {actionDivider}\n      </>\n    );\n    if (!this.props.subscription) {\n      return (\n        <>\n          {topButton}\n          {this.state.showMenu && (\n            <div\n              className=\"menu\"\n              style={{zIndex: '100', position: 'absolute', backgroundColor: 'white'}}\n              ref={node => {\n                this.node = node;\n              }}\n            >\n              {actionDivider}\n              {isAdmin && editProjectSubscription}\n              {newOrRenewSubscription}\n              {isAdmin && (\n                <>\n                  {openTicket}\n                  {viewAllTickets}\n                  {manageSubscriptions}\n                  {manageUsers}\n                  {managePartners}\n                  {deleteProject}\n                </>\n              )}\n            </div>\n          )}\n        </>\n      );\n    } else {\n      return (\n        <>\n          {topButton}\n          {this.state.showMenu && (\n            <div\n              className=\"menu\"\n              style={{zIndex: '100', position: 'absolute', backgroundColor: 'white'}}\n              ref={node => {\n                this.node = node;\n              }}\n            >\n              {actionDivider}\n              {/*View Project Subscription*/}\n              <Link to={`/subscription-details/${this.props.subscription.id}`} style={{textDecoration: 'none'}}>\n                <Button kind=\"ghost\" style={{display: 'block', width: '100%'}} value=\"View\">\n                  {i18n.t('buttons.view')}\n                </Button>\n              </Link>\n              {actionDivider}\n              {isAdmin && editProjectSubscription}\n              {openTicket}\n              {viewAllTickets}\n              {!isAdmin && newOrRenewSubscription}\n              {isAdmin && (\n                <>\n                  {manageSubscriptions}\n                  {manageUsers}\n                  {managePartners}\n                  {deleteProject}\n                </>\n              )}\n            </div>\n          )}\n        </>\n      );\n    }\n  }\n}\n\nexport default withKeycloak(ProjectActionItems);\n","import {getDefaultOptions, request} from './helpers';\r\nimport moment from 'moment';\r\n\r\nconst resource = 'api/project-subscriptions';\r\n\r\nexport const formatStartDate = startDate => {\r\n  return String(new Date(startDate).toDateString());\r\n};\r\n\r\nexport const formatEndDate = (startDate, lengthInMonths) => {\r\n  const endDate = new Date(startDate).setMonth(new Date(startDate).getMonth() + lengthInMonths);\r\n  return String(new Date(endDate).toDateString());\r\n};\r\n\r\nexport const stripTime = date => {\r\n  return moment(date).format('MM/DD/YYYY');\r\n};\r\n\r\nexport const apiSubscriptionGet = async (serviceUrl, id) => {\r\n  const url = `${serviceUrl}/${resource}/${id}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\n// Project Subscription creation consists of an object containing a projectSubscription, an entandoVersionId, and a\r\n// project id, see SubscriptionCreationRequest.\r\n/**\r\n * Called to create a new project subscription\r\n *\r\n * @param {string} serviceUrl\r\n * @param {ProjectSubscriptionCreation} projectSubscriptionCreation\r\n * @returns\r\n */\r\nexport const apiProjectSubscriptionPost = async (serviceUrl, projectSubscriptionCreation) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n    body: projectSubscriptionCreation ? JSON.stringify(projectSubscriptionCreation) : null,\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiProjectSubscriptionPut = async (serviceUrl, projectSubscriptionCreation) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'PUT',\r\n    body: projectSubscriptionCreation ? JSON.stringify(projectSubscriptionCreation) : null,\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\n// Same format as {projectSubscriptionCreation}\r\nexport const apiRenewSubscription = async (serviceUrl, projectSubscriptionRenew) => {\r\n  const url = `${serviceUrl}/${resource}/renew`;\r\n\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'PUT',\r\n    body: projectSubscriptionRenew ? JSON.stringify(projectSubscriptionRenew) : null,\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n","import {Component} from 'react';\nimport {\n  DataTable,\n  TableContainer,\n  Table,\n  TableHead,\n  TableRow,\n  TableHeader,\n  TableBody,\n  TableCell\n} from 'carbon-components-react';\nimport '../../index.scss';\nimport {apiDeleteProjectFromCustomer, apiCustomerGet} from '../../api/customers';\nimport withKeycloak from '../../auth/withKeycloak';\nimport {Link} from 'react-router-dom';\nimport i18n from '../../i18n';\nimport {authenticationChanged, getActiveSubscription, isAuthenticated, isPortalAdminOrSupport} from '../../api/helpers';\nimport {apiCurrentTicketingSystemGet} from '../../api/ticketingsystem';\nimport ProjectActionItems from '../Admin/ProjectActionItems';\nimport {formatEndDate, formatStartDate} from '../../api/subscriptions';\n\nclass CustomerDataTable extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      projects: {},\n      ticketingSystem: {},\n      action: 'Edit',\n      showMenu: {},\n    };\n    this.headerData = [\n      {\n        header: i18n.t('customerDashboard.projectName'),\n        key: 'projectName',\n      },\n      {\n        header: i18n.t('customerDashboard.partners'),\n        key: 'partners',\n      },\n      {\n        header: i18n.t('customerDashboard.entandoVersion'),\n        key: 'entandoVersion',\n      },\n      {\n        header: i18n.t('customerDashboard.status'),\n        key: 'status',\n      },\n      {\n        header: i18n.t('customerDashboard.startDate'),\n        key: 'startDate',\n      },\n      {\n        header: i18n.t('customerDashboard.endDate'),\n        key: 'endDate',\n      },\n      {\n        header: i18n.t('customerDetails.notes'),\n        key: 'notes',\n      },\n      {\n        header: i18n.t('customerDashboard.action'),\n        key: 'action',\n      },\n    ];\n  }\n\n  async fetchData() {\n    if (isAuthenticated(this.props)) {\n      try {\n        const customer = await apiCustomerGet(this.props.serviceUrl, this.props.customerId);\n        const projects = customer.data.projects;\n        const ticketingSystem = await apiCurrentTicketingSystemGet(this.props.serviceUrl);\n        this.setState({\n          projects: projects,\n          ticketingSystem: ticketingSystem,\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    this.render();\n  }\n\n  componentDidMount() {\n    if (isAuthenticated(this.props)) {\n      this.fetchData();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (authenticationChanged(this.props, prevProps)) {\n      this.fetchData();\n    }\n  }\n\n  // fix warning: Can't perform a React state update on an unmounted component\n  componentWillUnmount() {\n    this.setState = (state, callback) => {\n      //no-op\n    };\n  }\n\n  updateProjectList = () => {\n    this.fetchData();\n  };\n\n  async deleteProject(id) {\n    if (isAuthenticated(this.props)) {\n      return await apiDeleteProjectFromCustomer(this.props.serviceUrl, this.props.customerId, id);\n    }\n  }\n\n  handleDeleteProject = (e, id) => {\n    e.preventDefault();\n    if (window.confirm('Are you sure you want to delete this project?')) {\n      this.deleteProject(id)\n        .then(() => {\n          this.setState({\n            submitMsg: i18n.t('submitMessages.deleted'),\n            submitColour: '#24a148',\n          });\n          this.props.updateCustomerList();\n        })\n        .catch(() => {\n          this.setState({\n            submitMsg: i18n.t('submitMessages.error'),\n            submitColour: '#da1e28',\n          });\n        });\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <DataTable rows={[{id: '1'}]} headers={this.headerData}>\n          {({rows, headers, getHeaderProps, getTableProps}) => (\n            <TableContainer description={i18n.t('customerDashboard.tableDesc')}>\n              <Table {...getTableProps()}>\n                <TableHead>\n                  <TableRow key=\"headerRow\">\n                    {headers.map(header => {\n                      let result;\n                      if (header.header === i18n.t('customerDetails.notes')) {\n                        if (isPortalAdminOrSupport()) {\n                          result = <TableHeader {...getHeaderProps({header})}>{header.header}</TableHeader>;\n                        }\n                      } else {\n                        result = <TableHeader {...getHeaderProps({ header })}>{header.header}</TableHeader>;\n                      }\n                      return result;\n                    })}\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {Object.keys(this.state.projects).length !== 0\n                    ? this.state.projects.map((project, index) => {\n                      const subscription = getActiveSubscription(project);\n                      if (!subscription) {\n                        return (\n                          <TableRow key={index}>\n                            <TableCell>{project.name}</TableCell>\n                            {project.partners.length !== 0 ? (\n                              <TableCell>\n                                {project.partners.map((partner, partnerIndex) => (\n                                  <div key={partnerIndex}>{partner.name}</div>\n                                ))}\n                              </TableCell>\n                            ) : (\n                              <TableCell>{i18n.t('userMessages.none')}</TableCell>\n                            )}\n                            <TableCell>{i18n.t('userMessages.none')}</TableCell>\n                            <TableCell>{i18n.t('userMessages.none')}</TableCell>\n                            <TableCell>{i18n.t('userMessages.none')}</TableCell>\n                            <TableCell>{i18n.t('userMessages.none')}</TableCell>\n                            {isPortalAdminOrSupport() ?\n                              <TableCell style={{width: '250px'}}>{project.notes}</TableCell> : null}\n                            <TableCell>\n                              <ProjectActionItems\n                                serviceUrl={this.props.serviceUrl}\n                                ticketingSystem={this.state.ticketingSystem}\n                                locale={this.props.locale}\n                                project={project}\n                                allProjects={this.state.projects}\n                                handleDeleteProject={this.handleDeleteProject}\n                                updateProjectList={this.updateProjectList}\n                                />\n                              </TableCell>\n                            </TableRow>\n                          );\n                        } else {\n                          return (\n                            <TableRow key={index}>\n                              <TableCell>\n                                <Link to={`/subscription-details/${subscription.id}`}>{project.name}</Link>\n                              </TableCell>\n                              {project.partners.length !== 0 ? (\n                                <TableCell>\n                                  {project.partners.map((partner, partnerIndex) => (\n                                    <div key={partnerIndex}>{partner.name}</div>\n                                  ))}\n                                </TableCell>\n                              ) : (\n                                <TableCell>{i18n.t('userMessages.none')}</TableCell>\n                              )}\n                              {subscription.entandoVersion ? (\n                                <TableCell>{subscription.entandoVersion.name}</TableCell>\n                              ) : (\n                                <TableCell>{i18n.t('userMessages.none')}</TableCell>\n                              )}\n                              <TableCell>{subscription.status}</TableCell>\n                              <TableCell>{formatStartDate(subscription.startDate)}</TableCell>\n                              <TableCell>{formatEndDate(subscription.startDate, subscription.lengthInMonths)}</TableCell>\n                              {isPortalAdminOrSupport() ?\n                                <TableCell style={{width: '250px'}}>{project.notes}</TableCell> : null}\n                              <TableCell>\n                                <ProjectActionItems\n                                  serviceUrl={this.props.serviceUrl}\n                                  ticketingSystem={this.state.ticketingSystem}\n                                  locale={this.props.locale}\n                                  subscription={subscription}\n                                  project={project}\n                                  allProjects={this.state.projects}\n                                  handleDeleteProject={this.handleDeleteProject}\n                                  updateProjectList={this.updateProjectList}\n                                />\n                              </TableCell>\n                            </TableRow>\n                          );\n                        }\n                      })\n                    : null}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          )}\n        </DataTable>\n      </div>\n    );\n  }\n}\n\nexport default withKeycloak(CustomerDataTable);\n","import {Component} from 'react';\r\nimport i18n from '../../i18n';\r\nimport { Tile } from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\n\r\nclass CustomerDetails extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      customer: {},\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"customer-details\">\r\n        <Tile style={{margin: '2em 0', minHeight: '0', paddingBottom: '0'}}>\r\n          <div>\r\n            <strong>{i18n.t('customerDashboard.customerId')}</strong> {this.props.customer.id}\r\n          </div>\r\n          <div>\r\n            <strong>{i18n.t('customerDashboard.customerName')}</strong> {this.props.customer.name}\r\n          </div>\r\n        </Tile>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withKeycloak(CustomerDetails);\r\n","import React, {Component} from 'react';\nimport i18n from '../../i18n';\nimport {ModalWrapper, Form, TextInput, TextArea} from 'carbon-components-react';\nimport withKeycloak from '../../auth/withKeycloak';\nimport {apiCustomerGet, apiCustomerPut} from '../../api/customers';\nimport {authenticationChanged, isAuthenticated} from '../../api/helpers';\n\nclass EditCustomerModal extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      name: '',\n      customerNumber: '',\n      contactName: '',\n      contactPhone: '',\n      contactEmail: '',\n      notes: '',\n      invalid: {},\n      modalId: '',\n      buttonId: '',\n      submitMsg: '',\n      submitColour: 'black',\n    };\n  }\n\n  handleValidation() {\n    let invalid = {};\n    let formIsValid = true;\n\n    //name\n    if (this.state.name === '') {\n      formIsValid = false;\n      invalid['name'] = true;\n    }\n\n    //customerNumber\n    if (this.state.customerNumber === '') {\n      formIsValid = false;\n      invalid['customerNumber'] = true;\n    }\n\n    //contactEmail\n    if (typeof this.state.contactEmail !== 'undefined') {\n      let lastAtPos = this.state.contactEmail.lastIndexOf('@');\n      let lastDotPos = this.state.contactEmail.lastIndexOf('.');\n\n      if (\n        !(\n          lastAtPos < lastDotPos &&\n          lastAtPos > 0 &&\n          this.state.contactEmail.indexOf('@@') === -1 &&\n          lastDotPos > 2 &&\n          this.state.contactEmail.length - lastDotPos > 2\n        )\n      ) {\n        formIsValid = false;\n        invalid['contactEmail'] = true;\n      }\n    }\n\n    this.setState({ invalid: invalid });\n    return formIsValid;\n  }\n\n  handleChanges = e => {\n    const input = e.target;\n    const name = input.name;\n    const value = input.value;\n    this.setState({ [name]: value });\n  };\n\n  async updateCustomer(customer) {\n    if (isAuthenticated(this.props)) {\n      return await apiCustomerPut(this.props.serviceUrl, customer);\n    }\n  }\n\n  getCustomerDetails = customerId => {\n    this.getCustomer(customerId);\n  };\n\n  async getCustomer(customerId) {\n    if (isAuthenticated(this.props)) {\n      const customer = (await apiCustomerGet(this.props.serviceUrl, customerId)).data;\n      this.setState({\n        name: customer.name,\n        customerNumber: customer.customerNumber,\n        contactName: customer.contactName,\n        contactPhone: customer.contactPhone,\n        contactEmail: customer.contactEmail,\n        notes: customer.notes,\n        modalId: 'modal-form-customer-edit-' + customer.id,\n        buttonId: 'edit-customer-button-' + customer.id,\n      });\n    }\n  }\n\n  handleFormSubmit = () => {\n    const formIsValid = this.handleValidation();\n\n    if (formIsValid) {\n      const customer = {\n        id: this.props.customer.id,\n        name: this.state.name,\n        customerNumber: this.state.customerNumber,\n        contactName: this.state.contactName,\n        contactPhone: this.state.contactPhone,\n        contactEmail: this.state.contactEmail,\n        notes: this.state.notes,\n      };\n      this.updateCustomer(customer)\n        .then(() => {\n          this.setState({\n            submitMsg: i18n.t('submitMessages.updated'),\n            submitColour: '#24a148',\n          });\n          this.props.updateCustomerList();\n          this.getCustomerDetails(this.props.customer.id);\n        })\n        .catch(() => {\n          this.setState({\n            submitMsg: i18n.t('submitMessages.error'),\n            submitColour: '#da1e28',\n          });\n        });\n    }\n  };\n\n  clearValues = () => {\n    const customerModalElement = document.querySelector('#' + this.state.modalId);\n    if (!customerModalElement.className.includes('is-visible')) {\n      this.setState({\n        name: this.props.customer.name,\n        customerNumber: this.props.customer.customerNumber,\n        contactName: this.props.customer.contactName,\n        contactPhone: this.props.customer.contactPhone,\n        contactEmail: this.props.customer.contactEmail,\n        notes: this.props.customer.notes,\n        invalid: {},\n      });\n    }\n  };\n\n  componentDidMount() {\n    if (isAuthenticated(this.props)) {\n      if (this.props.customerId) {\n        this.getCustomerDetails(this.props.customerId);\n      }\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (authenticationChanged(this.props, prevProps)) {\n      this.getCustomerDetails(this.props.customerId);\n    }\n  }\n\n  render() {\n    const modalConfirmation = (\n      <div className=\"bx--modal-header\">\n        <p style={{color: this.state.submitColour}}>{this.state.submitMsg}</p>\n      </div>\n    );\n    const modalId = this.state.modalId;\n    const buttonClassName = 'bx--btn bx--btn--ghost edit-customer-button-' + this.props.customerId;\n    return (\n      modalId && (\n        <ModalWrapper\n          buttonTriggerText={i18n.t('buttons.edit')}\n          modalHeading={i18n.t('adminDashboard.editCustomer.title')}\n          buttonTriggerClassName={buttonClassName}\n          className=\"modal-form\"\n          id={modalId}\n          handleSubmit={this.handleFormSubmit}\n          primaryButtonText={i18n.t('modalText.save')}\n          secondaryButtonText={i18n.t('modalText.cancel')}\n        >\n          {modalConfirmation}\n          <div className=\"form-container\">\n            <Form onSubmit={this.handleFormSubmit} id={'form-' + modalId}>\n              <TextInput\n                id={'name' + modalId}\n                name=\"name\"\n                labelText={i18n.t('adminDashboard.addCustomer.customerName') + ' *'}\n                value={this.state.name}\n                onChange={this.handleChanges}\n                invalidText={i18n.t('validation.invalid.required')}\n                invalid={this.state.invalid['name']}\n              />\n              <TextInput\n                id={'customerNumber' + modalId}\n                name=\"customerNumber\"\n                labelText={i18n.t('adminDashboard.addCustomer.customerNumber') + ' *'}\n                value={this.state.customerNumber}\n                onChange={this.handleChanges}\n                invalidText={i18n.t('validation.invalid.required')}\n                invalid={this.state.invalid['customerNumber']}\n              />\n              <TextInput\n                id={'contactName' + modalId}\n                name=\"contactName\"\n                labelText={i18n.t('adminDashboard.addCustomer.contactName')}\n                value={this.state.contactName}\n                onChange={this.handleChanges}\n              />\n              <TextInput\n                id={'contactPhone' + modalId}\n                name=\"contactPhone\"\n                labelText={i18n.t('adminDashboard.addCustomer.contactPhone')}\n                value={this.state.contactPhone}\n                onChange={this.handleChanges}\n              />\n              <TextInput\n                id={'contactEmail' + modalId}\n                name=\"contactEmail\"\n                labelText={i18n.t('adminDashboard.addCustomer.contactEmail') + ' *'}\n                value={this.state.contactEmail}\n                onChange={this.handleChanges}\n                invalidText={i18n.t('validation.invalid.email')}\n                invalid={this.state.invalid['contactEmail']}\n              />\n              <TextArea\n                name=\"notes\"\n                labelText={i18n.t('adminDashboard.addCustomer.notes')}\n                value={this.state.notes}\n                onChange={this.handleChanges}\n              />\n            </Form>\n          </div>\n          {modalConfirmation}\n        </ModalWrapper>\n      )\n    );\n  }\n}\n\nexport default withKeycloak(EditCustomerModal);\n","import {Component} from 'react';\nimport {Link} from 'react-router-dom';\nimport {AccordionItem, Button} from 'carbon-components-react';\nimport withKeycloak from '../../auth/withKeycloak';\nimport {apiCustomerGet, apiCustomerDelete} from '../../api/customers';\nimport CustomerDataTable from './CustomerDataTable';\nimport CustomerDetails from './CustomerDetails';\nimport {\n  isPortalAdminOrSupport,\n  isPortalAdmin,\n  isPortalCustomer,\n  isAuthenticated,\n  authenticationChanged\n} from '../../api/helpers';\nimport EditCustomerModal from '../Admin/EditCustomerModal';\nimport i18n from '../../i18n';\n\nclass CustomerAccordian extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      projects: {},\n      customer: {},\n    };\n  }\n\n  componentDidMount() {\n    if (isAuthenticated(this.props)) {\n      this.fetchData();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (authenticationChanged(this.props, prevProps)) {\n      this.fetchData();\n    }\n  }\n\n  async fetchData() {\n    const customerId = this.props.customerId;\n    try {\n      const customer = await apiCustomerGet(this.props.serviceUrl, customerId);\n      this.setState({\n        customer: customer.data,\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async deleteCustomer() {\n    return await apiCustomerDelete(this.props.serviceUrl, this.state.customer.id);\n  }\n\n  handleDelete() {\n    if (window.confirm('Are you sure you want to delete this customer?')) {\n      this.deleteCustomer().then(() => {\n        this.props.updateCustomerList();\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <div>\n          {isPortalCustomer() && <CustomerDetails serviceUrl={this.props.serviceUrl} customer={this.state.customer}/>}\n          <AccordionItem title={this.props.title} open={this.props.accordionOpened}>\n            <div style={{display: 'flex'}}>\n              {isPortalAdminOrSupport() && (\n                <Link style={{textDecoration: 'none'}} to={`/customer-details/${this.state.customer.id}`}>\n                  <Button kind=\"ghost\">{i18n.t('buttons.viewDetails')}</Button>\n                </Link>\n              )}\n              {isPortalAdmin() && (\n                <div style={{display: 'flex'}}>\n                  <EditCustomerModal\n                    serviceUrl={this.props.serviceUrl}\n                    customer={this.state.customer}\n                    key={this.state.customer.id}\n                    updateCustomerList={this.props.updateCustomerList}\n                    customerId={this.state.customer.id}\n                  />\n                  <Button kind=\"ghost\" style={{color: 'red'}} onClick={() => this.handleDelete()}>\n                    {i18n.t('buttons.delete')}\n                  </Button>\n                </div>\n              )}\n            </div>\n            <CustomerDataTable\n              key={new Date().getTime()}\n              serviceUrl={this.props.serviceUrl}\n              customerId={this.props.customerId}\n              locale={this.props.locale}\n              updateCustomerList={this.props.updateCustomerList}\n            />\n          </AccordionItem>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withKeycloak(CustomerAccordian);\n","import React from 'react';\nimport i18n from '../../i18n';\nimport { Accordion, PaginationNav, Search, Tile } from 'carbon-components-react';\nimport AddCustomerModal from './AddCustomerModal';\nimport AddPartnerModal from './AddPartnerModal';\nimport AddProjectModal from './AddProjectModal';\nimport withKeycloak from '../../auth/withKeycloak';\nimport {apiCustomersGet} from '../../api/customers';\nimport CustomerAccordian from '../Customer/CustomerAccordian';\nimport {\n  authenticationChanged,\n  isPortalAdmin,\n  isPortalSupport,\n  isPortalPartner,\n  isPortalCustomer,\n  isPortalUser,\n  isAuthenticated,\n} from '../../api/helpers';\n\nclass AdminDashboard extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      customers: {},\n      role: '',\n      filteredCustomers: {},\n      currentPage: 0,\n      test: '',\n    };\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (authenticationChanged(this.props, prevProps)) {\n      this.fetchData();\n    }\n  }\n\n  async fetchData() {\n    if (isAuthenticated(this.props)) {\n      let customers = {};\n      try {\n        customers = await apiCustomersGet(this.props.serviceUrl);\n      } catch (err) {\n        console.log(err);\n      }\n\n      this.setState({\n        customers: customers.data ? customers.data : {},\n        filteredCustomers: customers.data ? customers.data : {},\n      });\n    }\n  }\n\n  handleSearch = event => {\n    if (event.key === 'Enter') {\n      //Note: should refactor this to preform filtering in db\n      const newFilteredState = this.state.customers.filter(customer =>\n        customer.name.toLowerCase().includes(event.target.value.toLowerCase())\n      );\n      this.setState({\n        filteredCustomers: newFilteredState,\n        currentPage: 0,\n      });\n    } else {\n      if (event.target.value === '' || event.target.value === undefined) {\n        this.setState({\n          filteredCustomers: this.state.customers,\n        });\n      }\n    }\n    this.forceUpdate();\n  };\n\n  updateCustomerList = () => {\n    this.fetchData();\n  };\n\n  render() {\n    var numberOfPages = 1;\n    if (Object.keys(this.state.filteredCustomers).length !== 0) {\n      numberOfPages = Math.ceil(this.state.filteredCustomers.length / 5);\n    } else {\n      numberOfPages = 1;\n    }\n\n    const props = () => ({\n      loop: Boolean(false),\n      page: Number(this.state.currentPage),\n      totalItems: Number(numberOfPages),\n      itemsShown: Number(1),\n      onChange: event => this.setState({ currentPage: event }),\n    });\n\n    return (\n      <div className=\"admin-dashboard\">\n        {isPortalAdmin() ? (\n          <h3 className=\"pageTitle\">{i18n.t('adminDashboard.adminTitle')}</h3>\n        ) : isPortalSupport() ? (\n          <h3 className=\"pageTitle\">{i18n.t('adminDashboard.supportTitle')}</h3>\n        ) : isPortalCustomer() ? (\n          <h3 className=\"pageTitle\">{i18n.t('adminDashboard.customerTitle')}</h3>\n        ) : isPortalPartner() ? (\n          <h3 className=\"pageTitle\">{i18n.t('adminDashboard.partnerTitle')}</h3>\n        ) : null}\n        {isPortalAdmin() || isPortalSupport() || isPortalPartner() ? (\n          <Tile>\n            <p className=\"title\">{i18n.t('adminDashboard.allCustomers')}</p>\n            <div className=\"bx--row\">\n              <div className=\"bx--col\">\n                <Search\n                  onChange={this.handleSearch}\n                  id=\"search\"\n                  placeholder={i18n.t('adminDashboard.searchText')}\n                  labelText={i18n.t('adminDashboard.searchLabel')}\n                  onKeyPress={this.handleSearch}\n                />\n              </div>\n              {isPortalAdmin() ? (\n                <div className=\"bx--col\">\n                  <div>\n                    <AddPartnerModal serviceUrl={this.props.serviceUrl} updateCustomerList={this.updateCustomerList}/>\n                    <AddCustomerModal serviceUrl={this.props.serviceUrl} updateCustomerList={this.updateCustomerList}/>\n                    <AddProjectModal\n                      serviceUrl={this.props.serviceUrl}\n                      updateCustomerList={this.updateCustomerList}\n                      allCustomers={this.state.customers}\n                    />\n                  </div>\n                </div>\n              ) : null}\n            </div>\n          </Tile>\n        ) : null}\n\n        <div className=\"form-container\">\n          <Accordion>\n            {Object.keys(this.state.customers).length !== 0\n              ? this.state.filteredCustomers.map((customer, index) => {\n                  // Pagination for Admin and Support roles (5 items per page)\n                  var indexOfLastItem = (this.state.currentPage + 1) * 5 - 1;\n                  var firstIndexOfCurrentPage = this.state.currentPage * 5;\n                  var accordionOpened = this.state.customers.length === 1;\n\n                  if (isPortalUser()) {\n                    if (index >= firstIndexOfCurrentPage && index <= indexOfLastItem) {\n                      return (\n                        <CustomerAccordian\n                          key={customer.id}\n                          serviceUrl={this.props.serviceUrl}\n                          customerId={customer.id}\n                          title={customer.name}\n                          updateCustomerList={this.updateCustomerList}\n                          locale={this.props.locale}\n                          accordionOpened={accordionOpened}\n                        />\n                      );\n                    } else {\n                      return null;\n                    }\n                  } else {\n                    return null;\n                  }\n                })\n              : null}\n          </Accordion>\n          <PaginationNav {...props()} className=\"pagination-right\" />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withKeycloak(AdminDashboard);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport AdminDashboard from '../components/Admin/AdminDashboard';\nimport '../index.scss';\n\nimport KeycloakContext from '../auth/KeycloakContext';\n\nimport {subscribeToWidgetEvent} from '../helpers/widgetEvents';\nimport {KEYCLOAK_EVENT_TYPE} from './widgetEventTypes';\nimport * as Locale from '../i18n';\n\nconst getKeycloakInstance = () =>\n  (window && window.entando && window.entando.keycloak && {...window.entando.keycloak, initialized: true}) || {\n    initialized: false,\n  };\n\nconst ATTRIBUTES = {\n  hidden: 'hidden',\n  locale: 'locale',\n  paginationMode: 'pagination-mode',\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\n  serviceUrl: 'service-url',\n};\n\nclass AdminDashboardElement extends HTMLElement {\n  container;\n\n  mountPoint;\n\n  unsubscribeFromKeycloakEvent;\n\n  keycloak = getKeycloakInstance();\n\n  connectedCallback() {\n    this.mountPoint = document.createElement('div');\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\n\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\n      this.render();\n    });\n\n    this.render();\n\n    //retargetEvents(shadowRoot);\n    this.appendChild(this.mountPoint);\n  }\n\n  render() {\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\n    const locale = this.getAttribute(ATTRIBUTES.locale) || '';\n    Locale.setLocale(locale);\n\n    ReactDOM.render(\n      <KeycloakContext.Provider value={this.keycloak}>\n        <AdminDashboard serviceUrl={serviceUrl} locale={locale}/>\n      </KeycloakContext.Provider>,\n      this.mountPoint\n    );\n  }\n}\n\ncustomElements.define('cp-admin-dashboard-widget', AdminDashboardElement);\n","import { getDefaultOptions, request, getUrl } from './helpers';\n\nconst resource = 'api/tickets';\n\nexport const apiTicketDelete = async (serviceUrl, id) => {\n  const url = `${serviceUrl}/${resource}/${id}`;\n  const options = {\n    ...getDefaultOptions(),\n    method: 'DELETE',\n  };\n  return request(url, options);\n};\n\nexport const apiTicketsGet = async serviceUrl => {\n  const url = getUrl(`${serviceUrl}/${resource}`);\n  const options = {\n    ...getDefaultOptions(),\n    method: 'GET',\n  };\n\n  return request(url, options);\n};\n\nexport const apiTicketPost = async (serviceUrl, ticket) => {\n  const url = `${serviceUrl}/${resource}`;\n  const options = {\n    ...getDefaultOptions(),\n    method: 'POST',\n    body: ticket ? JSON.stringify(ticket) : null,\n  };\n  return request(url, options);\n};\n\nconst jiraResource = 'api/tickets/ticketingsystem';\n\nexport const apiJiraTicketsGet = async (serviceUrl, projectId) => {\n  const url = `${serviceUrl}/${jiraResource}/${projectId}`;\n  const options = {\n    ...getDefaultOptions(),\n    method: 'GET',\n  };\n\n  return request(url, options);\n};\n\nexport const apiJiraTicketPost = async (serviceUrl, projectId, ticket) => {\n  const url = `${serviceUrl}/${jiraResource}/${projectId}`;\n  const options = {\n    ...getDefaultOptions(),\n    method: 'POST',\n    body: ticket ? JSON.stringify(ticket) : null,\n  };\n  return request(url, options);\n};\n","import React, { Component } from 'react';\nimport {\n  DataTable,\n  TableContainer,\n  Table,\n  TableHead,\n  TableRow,\n  TableHeader,\n  TableBody,\n  TableCell,\n  PaginationNav,\n  Button,\n} from 'carbon-components-react';\nimport {apiJiraTicketsGet} from '../../api/tickets';\nimport {apiCurrentTicketingSystemGet} from '../../api/ticketingsystem';\nimport withKeycloak from '../../auth/withKeycloak';\nimport {apiProjectGet} from '../../api/projects';\nimport {authenticationChanged, getPageUrl, isAuthenticated, isPortalUser} from '../../api/helpers';\nimport i18n from '../../i18n';\nimport {PAGE_TICKET_FORM} from \"../../api/constants\";\n\nclass TicketList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tickets: {},\n      project: {},\n      ticketingSystem: {},\n      currentPage: 0,\n    };\n    this.headerData = [\n      {\n        header: i18n.t('ticketDetails.issue'),\n        key: 'issue',\n      },\n      {\n        header: i18n.t('ticketDetails.summary'),\n        key: 'summary',\n      },\n      {\n        header: i18n.t('ticketDetails.status'),\n        key: 'status',\n      },\n      {\n        header: i18n.t('ticketDetails.type'),\n        key: 'type',\n      },\n      {\n        header: i18n.t('ticketDetails.priority'),\n        key: 'priority',\n      },\n      {\n        header: i18n.t('ticketDetails.created'),\n        key: 'created',\n      },\n      {\n        header: i18n.t('ticketDetails.updated'),\n        key: 'updated',\n      },\n      {\n        header: i18n.t('ticketDetails.link'),\n        key: 'link',\n      },\n    ];\n  }\n\n  async fetchData() {\n    if (isPortalUser()) {\n      try {\n        const project = (await apiProjectGet(this.props.serviceUrl, this.props.projectId)).data;\n        const ticketingSystem = await apiCurrentTicketingSystemGet(this.props.serviceUrl);\n        const tickets = await apiJiraTicketsGet(this.props.serviceUrl, project.id);\n        this.setState({\n          tickets: tickets,\n          project: project,\n          ticketingSystem: ticketingSystem,\n        });\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  }\n\n  componentDidMount() {\n    if (isAuthenticated(this.props)) {\n      this.fetchData();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (authenticationChanged(this.props, prevProps)) {\n      this.fetchData();\n    }\n  }\n\n  render() {\n    var numberOfPages = 1;\n    if (Object.keys(this.state.tickets).length !== 0) {\n      numberOfPages = Math.ceil(this.state.tickets.data.length / 10);\n    }\n\n    const paginationProps = () => ({\n      loop: Boolean(false),\n      page: Number(this.state.currentPage),\n      totalItems: Number(numberOfPages),\n      itemsShown: Number(1),\n      onChange: event => this.setState({currentPage: event}),\n    });\n    const ticketSystemUrl = this.state.ticketingSystem.url;\n    const ticketingSystemBaseUrl = ticketSystemUrl != null ? ticketSystemUrl.substr(0, ticketSystemUrl.indexOf('/rest')) : null;\n\n    return (\n      <div>\n        {this.state.project.id && (\n          <div>\n            {/*View All Ticket*/}\n            <a\n              href={ticketingSystemBaseUrl + '/issues/?jql=Organizations=' + this.state.project.systemId}\n              style={{textDecoration: 'none'}}\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              <Button kind=\"ghost\" style={{display: 'block', width: '100%'}} value=\"Open Ticket\">\n                {i18n.t('buttons.viewAllTickets')}\n              </Button>\n            </a>\n            {/*Open Ticket*/}\n            <a\n              href={`${getPageUrl(PAGE_TICKET_FORM, this.props.locale)}?project=${this.state.project.id}`}\n              style={{textDecoration: 'none'}}\n            >\n              <Button kind=\"ghost\" style={{display: 'block', width: '100%'}} value=\"Open Ticket\">\n                {i18n.t('buttons.openTicket')}\n              </Button>\n            </a>\n          </div>\n        )}\n        <DataTable rows={[{id: '1'}]} headers={this.headerData}>\n          {({rows, headers, getHeaderProps, getTableProps}) => (\n            <TableContainer title={i18n.t('ticketDetails.listOfTickets')}>\n              <Table {...getTableProps()}>\n                <TableHead>\n                  <TableRow>\n                    {headers.map(header => (\n                      <TableHeader {...getHeaderProps({header})}>{header.header}</TableHeader>\n                    ))}\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {Object.keys(this.state.tickets).length !== 0 ? (\n                    this.state.tickets.data.map((ticket, index) => {\n                      const indexOfLastItem = (this.state.currentPage + 1) * 10 - 1;\n                      const firstIndexOfCurrentPage = this.state.currentPage * 10;\n                      const ticketUrl = ticketingSystemBaseUrl + '/browse/' + ticket.systemId;\n\n                      if (index >= firstIndexOfCurrentPage && index <= indexOfLastItem) {\n                        return (\n                          <TableRow key={ticket.id}>\n                            <TableCell>\n                              <a href={ticketUrl} target=\"_blank\" rel=\"noreferrer\">\n                                {ticket.systemId}\n                              </a>\n                            </TableCell>\n                            <TableCell>{ticket.summary}</TableCell>\n                            <TableCell>{ticket.status}</TableCell>\n                            <TableCell>{ticket.type}</TableCell>\n                            <TableCell>{ticket.priority}</TableCell>\n                            <TableCell>{new Date(ticket.createDate).toDateString()}</TableCell>\n                            <TableCell>{new Date(ticket.updateDate).toDateString()}</TableCell>\n                            <TableCell>\n                              <a href={ticketUrl} target=\"_blank\" rel=\"noreferrer\">\n                                {i18n.t('ticketDetails.viewTicket')}\n                              </a>\n                            </TableCell>\n                          </TableRow>\n                        );\n                      } else {\n                        return null;\n                      }\n                    })\n                  ) : (\n                    <TableRow/>\n                  )}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          )}\n        </DataTable>\n        <PaginationNav {...paginationProps()} className=\"pagination-right\"/>\n      </div>\n    );\n  }\n}\n\nexport default withKeycloak(TicketList);\n","import React from 'react';\r\nimport TicketList from './TicketList';\r\nimport {Tile} from 'carbon-components-react';\r\nimport {apiSubscriptionGet, formatStartDate, formatEndDate} from '../../api/subscriptions';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport {apiGetProjectUsers, apiProjectGet} from '../../api/projects';\r\nimport {isPortalAdminOrSupport, isPortalUser, authenticationChanged} from '../../api/helpers';\r\nimport i18n from '../../i18n';\r\n\r\nconst subscriptionData = {\r\n  type: 'Product Support Subscription Entando Platform',\r\n  license: 'Free Commercial Open Source',\r\n};\r\n\r\nclass Subscription extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: true,\r\n      subscription: {},\r\n      users: {},\r\n      project: {},\r\n      customer: {},\r\n    };\r\n  }\r\n\r\n  async fetchData() {\r\n    if (isPortalUser()) {\r\n      try {\r\n        let users = {};\r\n        let project = {};\r\n        const subscription = await apiSubscriptionGet(this.props.serviceUrl, this.props.match.params.id);\r\n        if (subscription.data.project) {\r\n          project = await apiProjectGet(this.props.serviceUrl, subscription.data.project.id);\r\n          users = await apiGetProjectUsers(this.props.serviceUrl, project.data.id);\r\n        }\r\n        this.setState({\r\n          subscription: subscription,\r\n          project: project,\r\n          customer: project.customer,\r\n          users: users,\r\n          loading: false,\r\n        });\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n  }\r\n\r\n  updateSubscription = () => {\r\n    this.fetchData();\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (isPortalUser()) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (authenticationChanged(this.props, prevProps) && isPortalUser()) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { type, license } = subscriptionData;\r\n\r\n    if (!this.state.loading) {\r\n      if (isPortalUser()) {\r\n        if (Object.keys(this.state.subscription).length !== 0 && Object.keys(this.state.project).length !== 0) {\r\n          return (\r\n            <div className=\"subscription-details\">\r\n              <div>\r\n                <Tile>\r\n                  <div className=\"bx--grid\">\r\n                    <div className=\"bx--row\">\r\n                      <div className=\"bx--col\">\r\n                        <div>\r\n                          <strong>{i18n.t('customerDashboard.customerName')}:</strong> {this.state.project.data.customer.name}\r\n                        </div>\r\n                        <div>\r\n                          <strong>{i18n.t('customerDashboard.projectName')}:</strong> {this.state.project.data.name}\r\n                        </div>\r\n                        <div>\r\n                          <strong>{i18n.t('subscriptionDetails.description')}:</strong> {this.state.subscription.data.project.description}\r\n                        </div>\r\n                        <div>\r\n                          <strong>{i18n.t('subscriptionDetails.partners')}:</strong>\r\n                          {this.state.project.data !== '' && Object.keys(this.state.project.data.partners).length !== 0 ? (\r\n                            <>\r\n                              {this.state.project.data.partners.map((partner, index) => (\r\n                                <div key={index}>\r\n                                  {' '}\r\n                                  {index === this.state.project.data.partners.length - 1 ? partner.name : partner.name + ', '}{' '}\r\n                                </div>\r\n                              ))}\r\n                            </>\r\n                          ) : (\r\n                            <> {i18n.t('userMessages.none')} </>\r\n                          )}\r\n                        </div>\r\n                        <div>\r\n                          <strong>{i18n.t('subscriptionDetails.type')}:</strong> {type}\r\n                        </div>\r\n                        {isPortalAdminOrSupport() ? (\r\n                          <div>\r\n                            <strong>{i18n.t('subscriptionDetails.notes')}:</strong> {this.state.subscription.data.notes}\r\n                          </div>\r\n                        ) : null}\r\n                      </div>\r\n                      <div className=\"bx--col\">\r\n                        <div>\r\n                          <strong>{i18n.t('subscriptionDetails.status')}:</strong> {this.state.subscription.data.status}\r\n                        </div>\r\n                        <div>\r\n                          <strong>{i18n.t('subscriptionDetails.level')}:</strong> {this.state.subscription.data.level}\r\n                        </div>\r\n                        <div>\r\n                          <strong>{i18n.t('subscriptionDetails.startDate')}:</strong>{' '}\r\n                          {formatStartDate(this.state.subscription.data.startDate)}\r\n                        </div>\r\n                        <div>\r\n                          <strong>{i18n.t('subscriptionDetails.endDate')}:</strong>{' '}\r\n                          {formatEndDate(this.state.subscription.data.startDate, this.state.subscription.data.lengthInMonths)}\r\n                        </div>\r\n                        <div>\r\n                          <strong>{i18n.t('subscriptionDetails.license')}:</strong> {license}\r\n                        </div>\r\n                        <div>\r\n                          <strong>{i18n.t('subscriptionDetails.assignedUsers')}:</strong>\r\n                          {this.state.project.data !== '' && Object.keys(this.state.users.data).length !== 0 ? (\r\n                            <>\r\n                              {this.state.users.data.map((user, index) => (\r\n                                <div\r\n                                  key={index}> {index === this.state.users.data.length - 1 ? user.username : user.username + ', '} </div>\r\n                              ))}\r\n                            </>\r\n                          ) : (\r\n                            <> {i18n.t('userMessages.none')} </>\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </Tile>\r\n                <br/>\r\n                <TicketList projectId={this.state.project.data.id} serviceUrl={this.props.serviceUrl}\r\n                            locale={this.props.locale}/>\r\n              </div>\r\n            </div>\r\n          );\r\n        } else {\r\n          return <div>{i18n.t('userMessages.unauthorized')}</div>;\r\n        }\r\n      } else {\r\n        return <div>{i18n.t('userMessages.unauthorized')}</div>;\r\n      }\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport default withKeycloak(Subscription);\r\n","import React from 'react';\r\nimport {Tile} from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport {apiCustomerGet} from '../../api/customers';\r\nimport {authenticationChanged, isAuthenticated, isPortalAdminOrSupport} from '../../api/helpers';\r\nimport i18n from '../../i18n';\r\nimport CustomerDataTable from './CustomerDataTable';\r\n\r\nclass CustomerProjectList extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: true,\r\n      customer: {},\r\n    };\r\n  }\r\n\r\n  async fetchData() {\r\n    if (isAuthenticated(this.props)) {\r\n      try {\r\n        const customer = await apiCustomerGet(this.props.serviceUrl, this.props.match.params.id);\r\n        this.setState({\r\n          customer: customer.data,\r\n          loading: false,\r\n        });\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (isPortalAdminOrSupport()) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (authenticationChanged(this.props, prevProps)) {\r\n      if (isPortalAdminOrSupport()) {\r\n        this.fetchData();\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (!this.state.loading) {\r\n      if (isPortalAdminOrSupport()) {\r\n        const customer = this.state.customer;\r\n        if (customer) {\r\n          return (\r\n            <div>\r\n              <Tile>\r\n                <div className=\"bx--grid\">\r\n                  <div className=\"bx--row\">\r\n                    <div className=\"bx--col\">\r\n                      <p>\r\n                        <strong>{i18n.t('customerDetails.id')}: </strong> {customer.id}\r\n                      </p>\r\n                      <p>\r\n                        <strong>{i18n.t('customerDetails.name')}: </strong> {customer.name}\r\n                      </p>\r\n                      <p>\r\n                        <strong>{i18n.t('customerDetails.notes')}: </strong> {customer.notes}\r\n                      </p>\r\n                    </div>\r\n                    <div className=\"bx--col\">\r\n                      <p>\r\n                        <strong>{i18n.t('customerDetails.contactName')}: </strong> {customer.contactName}\r\n                      </p>\r\n                      <p>\r\n                        <strong>{i18n.t('customerDetails.contactPhone')}: </strong> {customer.contactPhone}\r\n                      </p>\r\n                      <p>\r\n                        <strong>{i18n.t('customerDetails.contactEmail')}: </strong> {customer.contactEmail}\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </Tile>\r\n              <CustomerDataTable serviceUrl={this.props.serviceUrl} customerId={customer.id}\r\n                                 locale={this.props.locale}/>\r\n            </div>\r\n          );\r\n        } else {\r\n          return <p>{i18n.t('userMessages.loading')}...</p>;\r\n        }\r\n      } else {\r\n        return <p>{i18n.t('userMessages.unauthorized')}</p>;\r\n      }\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport default withKeycloak(CustomerProjectList);\r\n","import React, {Component} from 'react';\r\nimport {HashRouter, Route, Switch} from 'react-router-dom';\r\nimport AdminDashboard from './Admin/AdminDashboard';\r\nimport Subscription from './SubscriptionDetails/Subscription';\r\nimport withKeycloak from '../auth/withKeycloak';\r\nimport {AuthenticatedView, UnauthenticatedView} from '../auth/KeycloakViews';\r\nimport {authenticationChanged, isAuthenticated, isPortalUser} from '../api/helpers';\r\nimport CustomerProjectList from './Customer/CustomerProjectList';\r\nimport i18n from '../i18n';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: true,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (isAuthenticated(this.props)) {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (authenticationChanged(this.props, prevProps)) {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var { keycloak } = this.props;\r\n\r\n    if (!this.state.loading) {\r\n      if (isPortalUser()) {\r\n        return (\r\n          <div id=\"entando-customer-portal\">\r\n            <AuthenticatedView keycloak={keycloak}>\r\n              <HashRouter>\r\n                <Switch>\r\n                  <Route\r\n                    path={'**/customer-details/:id'}\r\n                    render={props => <CustomerProjectList {...props} serviceUrl={this.props.serviceUrl} locale={this.props.locale} />}\r\n                  />\r\n                  <Route\r\n                    path={'**/subscription-details/:id'}\r\n                    render={props => <Subscription {...props} serviceUrl={this.props.serviceUrl} locale={this.props.locale} />}\r\n                  />\r\n                  <Route\r\n                    path=\"**/\"\r\n                    render={props => <AdminDashboard {...props} serviceUrl={this.props.serviceUrl} locale={this.props.locale} />}\r\n                  />\r\n                </Switch>\r\n              </HashRouter>\r\n            </AuthenticatedView>\r\n            <UnauthenticatedView keycloak={keycloak}>\r\n              <p>{i18n.t('userMessages.unauthorized')}</p>\r\n            </UnauthenticatedView>\r\n          </div>\r\n        );\r\n      } else {\r\n        return <p>{i18n.t('userMessages.unauthorized')}</p>;\r\n      }\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport default withKeycloak(App);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '../index.scss';\nimport * as Locale from '../i18n';\n\nimport KeycloakContext from '../auth/KeycloakContext';\nimport App from '../components/App';\n\nimport { subscribeToWidgetEvent } from '../helpers/widgetEvents';\nimport { KEYCLOAK_EVENT_TYPE } from './widgetEventTypes';\n\nconst getKeycloakInstance = () =>\n  (window && window.entando && window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\n    initialized: false,\n  };\n\nconst ATTRIBUTES = {\n  hidden: 'hidden',\n  locale: 'locale',\n  paginationMode: 'pagination-mode',\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\n  serviceUrl: 'service-url',\n};\n\nclass AppElement extends HTMLElement {\n  container;\n\n  mountPoint;\n\n  unsubscribeFromKeycloakEvent;\n\n  keycloak = getKeycloakInstance();\n\n  connectedCallback() {\n    this.mountPoint = document.createElement('div');\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\n\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\n      this.render();\n    });\n\n    this.render();\n\n    //retargetEvents(shadowRoot);\n    this.appendChild(this.mountPoint);\n  }\n\n  render() {\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\n    const locale = this.getAttribute(ATTRIBUTES.locale) || '';\n    Locale.setLocale(locale);\n\n    ReactDOM.render(\n      <KeycloakContext.Provider value={this.keycloak}>\n        <App serviceUrl={serviceUrl} locale={locale} />\n      </KeycloakContext.Provider>,\n      this.mountPoint\n    );\n  }\n}\n\ncustomElements.define('cp-app-element', AppElement);\n","import { getDefaultOptions, request, getUrl } from './helpers';\r\n\r\nconst resource = 'api/portal-users';\r\n\r\nexport const apiUserDelete = async (serviceUrl, id) => {\r\n  const url = `${serviceUrl}/${resource}/${id}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE',\r\n  };\r\n  return await request(url, options);\r\n};\r\n\r\nexport const apiUsersPut = async (serviceUrl, user) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'PUT',\r\n    body: user ? JSON.stringify(user) : null,\r\n  };\r\n  return await request(url, options);\r\n};\r\n\r\nexport const apiUsersGet = async serviceUrl => {\r\n  const url = getUrl(`${serviceUrl}/${resource}`);\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return await request(url, options);\r\n};\r\n\r\nexport const apiUserGet = async (serviceUrl, userId) => {\r\n  const url = getUrl(`${serviceUrl}/${resource}/${userId}`);\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return await request(url, options);\r\n};\r\n\r\nexport const apiUserPost = async (serviceUrl, user) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n    body: user ? JSON.stringify(user) : null,\r\n  };\r\n  return await request(url, options);\r\n};\r\n\r\nexport const apiUserGetByUsernameAndEmail = async (serviceUrl, username, email) => {\r\n  const url = getUrl(`${serviceUrl}/${resource}/username/${username}/email/${email}`);\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return await request(url, options);\r\n};\r\n","import { getDefaultKeycloakOptions, request, getUrl } from './helpers';\n\nexport const apiKeycloakUserGet = async (serviceUrl, realm) => {\n  const usersResource = `admin/realms/${realm}/users`;\n  const url = `${serviceUrl}/${usersResource}`;\n  const options = {\n    ...getDefaultKeycloakOptions(),\n    method: 'GET',\n  };\n  return await request(url, options);\n};\n\nexport const apiKeycloakToken = async (serviceUrl, realm) => {\n  const tokenResource = `realms/${realm}/protocol/openid-connect/token`;\n  const url = getUrl(`${serviceUrl}/${tokenResource}`);\n  const keycloakBody = {\n    client_id: 'web_app',\n    username: 'admin',\n    password: 'admin',\n    grant_type: 'password',\n  };\n  const options = {\n    ...getDefaultKeycloakOptions(),\n    method: 'POST',\n    body: keycloakBody ? serialize(keycloakBody) : null,\n  };\n  return await request(url, options);\n};\n\nfunction serialize(obj) {\n  var str = [];\n  for (var p in obj)\n    if (obj.hasOwnProperty(p)) {\n      str.push(encodeURIComponent(p) + '=' + encodeURIComponent(obj[p]));\n    }\n  return str.join('&');\n}\n","import React, { Component } from 'react';\r\nimport { Form, Select, SelectItem, Button } from 'carbon-components-react';\r\nimport * as portalUserApi from '../../../api/portalusers';\r\nimport {apiAddUserToProject, apiProjectGet} from '../../../api/projects';\r\nimport withKeycloak from '../../../auth/withKeycloak';\r\nimport { apiKeycloakUserGet } from '../../../api/keycloak';\r\nimport i18n from '../../../i18n';\r\nimport {authenticationChanged, isAuthenticated} from \"../../../api/helpers\";\r\nclass AssignUser extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      project: null,\r\n      projectId: '',\r\n      assignUser: '',\r\n      users: new Map(),\r\n      invalid: {},\r\n      submitMsg: '',\r\n      submitColour: 'black',\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (isAuthenticated(this.props)) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (authenticationChanged(this.props, prevProps)) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n\r\n  async fetchData() {\r\n    const {keycloak} = this.props;\r\n    const users = this.mapKeycloakUserEmails((await apiKeycloakUserGet(keycloak.authServerUrl, keycloak.realm)).data);\r\n    const search = window.location.search;\r\n    const params = new URLSearchParams(search);\r\n    let projectId = params.get('project');\r\n    let project = null;\r\n    if (projectId != null) {\r\n      project = (await apiProjectGet(this.props.serviceUrl, projectId)).data;\r\n    } else {\r\n      projectId = '';\r\n    }\r\n\r\n    this.setState({\r\n      projectId: projectId,\r\n      project: project,\r\n      users: users,\r\n    });\r\n  }\r\n\r\n  mapKeycloakUserEmails = keycloakUsers => {\r\n    const usernameEmailMap = new Map();\r\n    keycloakUsers.forEach(keycloakUser => usernameEmailMap.set(keycloakUser.username, keycloakUser.email));\r\n    return usernameEmailMap;\r\n  };\r\n\r\n  handleChanges = e => {\r\n    const input = e.target;\r\n    const name = input.name;\r\n    const value = input.value;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleFormSubmit = event => {\r\n    event.preventDefault();\r\n    const { projectId, assignUser } = this.state;\r\n    const formIsValid = this.handleFormValidation();\r\n\r\n    if (formIsValid) {\r\n      this.assignUserToProject(projectId, assignUser).then(res => {\r\n        if (res && res.status === 201) {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.updated'),\r\n            submitColour: '#24a148',\r\n          });\r\n          window.dispatchEvent(new CustomEvent('cp-user-assigned'));\r\n        } else {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.error'),\r\n            submitColour: '#da1e28',\r\n          });\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  handleFormValidation() {\r\n    let invalid = {};\r\n    let formIsValid = true;\r\n    const { projectId, assignUser } = this.state;\r\n\r\n    //name\r\n    if (projectId === '') {\r\n      formIsValid = false;\r\n      invalid['projectId'] = true;\r\n    }\r\n\r\n    //customerNumber\r\n    if (assignUser === '') {\r\n      formIsValid = false;\r\n      invalid['assignUser'] = true;\r\n    }\r\n\r\n    this.setState({ invalid: invalid });\r\n    return formIsValid;\r\n  }\r\n\r\n  assignUserToProject = async (projectId, username) => {\r\n    const email = this.state.users.get(username);\r\n    if (!email) {\r\n      alert(\"User is missing an email address in keycloak and cannot be assigned.\")\r\n      return null;\r\n    }\r\n    const portalUserId = await this.getPortalUserId({username, email: this.state.users.get(username)});\r\n    return await apiAddUserToProject(this.props.serviceUrl, projectId, portalUserId);\r\n  };\r\n\r\n  getPortalUserId = async keycloakUser => {\r\n    let portalUserId = null;\r\n    try {\r\n      const portalUser = await portalUserApi.apiUserGetByUsernameAndEmail(this.props.serviceUrl,\r\n        keycloakUser.username, keycloakUser.email);\r\n      portalUserId = portalUser.data.id;\r\n    } catch (e) {\r\n      console.warn(e);\r\n    }\r\n\r\n    return portalUserId;\r\n  };\r\n\r\n  setupFormComponents() {\r\n    const users = this.state.users;\r\n    const project = this.state.project;\r\n    let userList;\r\n    let projectList;\r\n\r\n    if (users.size > 0) {\r\n      userList = [...users.keys()].map((assignUser, i) => (\r\n        <SelectItem key={i} text={assignUser} value={assignUser}>\r\n          {assignUser}\r\n        </SelectItem>\r\n      ));\r\n      userList.unshift(<SelectItem key=\"-1\" text={i18n.t('manageUsers.assign.userList')} value=\"\"/>);\r\n    } else {\r\n      userList = <SelectItem text={i18n.t('manageUsers.assign.noUsers')} value=\"\"/>;\r\n    }\r\n\r\n    if (project != null) {\r\n      projectList = <SelectItem key={project.id} text={project.name} value={project.id}/>;\r\n    } else {\r\n      projectList = <SelectItem text={i18n.t('manageUsers.assign.noProjects')} value=\"\"/>;\r\n    }\r\n\r\n    return {userList, projectList};\r\n  }\r\n\r\n  render() {\r\n    const { userList, projectList } = this.setupFormComponents();\r\n\r\n    return (\r\n      <div>\r\n        <p style={{ color: this.state.submitColour }}>{this.state.submitMsg}</p>\r\n        <Form onSubmit={this.handleFormSubmit}>\r\n          <div className=\"bx--grid\">\r\n            <div className=\"bx--row\">\r\n              <div className=\"bx--col\">\r\n                <Select\r\n                  id=\"projectId\"\r\n                  name=\"projectId\"\r\n                  labelText={i18n.t('manageUsers.assign.projectName')}\r\n                  value={this.state.projectId}\r\n                  onChange={this.handleChanges}\r\n                  invalidText={i18n.t('validation.invalid.required')}\r\n                  invalid={this.state.invalid['projectId']}\r\n                >\r\n                  {projectList}\r\n                </Select>\r\n              </div>\r\n            </div>\r\n            <div className=\"bx--row\">\r\n              <div className=\"bx--col\">\r\n                <Select\r\n                  id=\"assignUser\"\r\n                  name=\"assignUser\"\r\n                  labelText={i18n.t('manageUsers.assign.assignUser')}\r\n                  value={this.state.assignUser}\r\n                  onChange={this.handleChanges}\r\n                  invalidText={i18n.t('validation.invalid.required')}\r\n                  invalid={this.state.invalid['assignUser']}\r\n                >\r\n                  {userList}\r\n                </Select>\r\n              </div>\r\n            </div>\r\n            <Button kind=\"primary\" tabIndex={0} type=\"submit\">\r\n              {' '}\r\n              {i18n.t('buttons.submit')}{' '}\r\n            </Button>\r\n          </div>\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withKeycloak(AssignUser);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport AssignUser from '../components/Admin/ManageUser/AssignUser';\nimport '../index.scss';\n\nimport KeycloakContext from '../auth/KeycloakContext';\n\nimport {subscribeToWidgetEvent} from '../helpers/widgetEvents';\nimport {KEYCLOAK_EVENT_TYPE} from './widgetEventTypes';\n\nconst getKeycloakInstance = () =>\n  (window && window.entando && window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\n    initialized: false,\n  };\n\nconst ATTRIBUTES = {\n  hidden: 'hidden',\n  locale: 'locale',\n  paginationMode: 'pagination-mode',\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\n  serviceUrl: 'service-url',\n};\n\nclass AssignUserElement extends HTMLElement {\n  container;\n\n  mountPoint;\n\n  unsubscribeFromKeycloakEvent;\n\n  keycloak = getKeycloakInstance();\n\n  connectedCallback() {\n    this.mountPoint = document.createElement('div');\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\n\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\n      this.render();\n    });\n\n    this.render();\n\n    //retargetEvents(shadowRoot);\n    this.appendChild(this.mountPoint);\n  }\n\n  render() {\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\n\n    ReactDOM.render(\n      <KeycloakContext.Provider value={this.keycloak}>\n        <AssignUser serviceUrl={serviceUrl} />\n      </KeycloakContext.Provider>,\n      this.mountPoint\n    );\n  }\n}\n\ncustomElements.define('cp-assign-user-widget', AssignUserElement);\n","import React, {Component} from 'react';\nimport {\n  DataTable,\n  TableContainer,\n  Table,\n  TableHead,\n  TableRow,\n  TableHeader,\n  TableBody,\n  TableCell,\n  Button\n} from 'carbon-components-react';\nimport withKeycloak from '../../../auth/withKeycloak';\nimport i18n from '../../../i18n';\nimport {apiGetProjectUsers, apiDeleteUserFromProject} from '../../../api/projects';\nimport {authenticationChanged, isAuthenticated} from \"../../../api/helpers\";\n\nclass DeleteUser extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      users: [],\n      displayUsers: [],\n      projectId: '',\n    };\n    this.headerData = [\n      {\n        header: i18n.t('manageUsers.delete.userName'),\n        key: 'username',\n      },\n      {\n        header: i18n.t('manageUsers.delete.userEmail'),\n        key: 'email',\n      },\n      {\n        header: i18n.t('manageUsers.delete.userAccess'),\n        key: 'userAccess',\n      },\n    ];\n    window.addEventListener('cp-user-assigned', event => {\n      this.fetchData();\n    });\n  }\n\n  componentDidMount() {\n    if (isAuthenticated(this.props)) {\n      this.fetchData();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (authenticationChanged(this.props, prevProps)) {\n      this.fetchData();\n    }\n  }\n\n  async fetchData() {\n    if (isAuthenticated(this.props)) {\n      let search = window.location.search;\n      const params = new URLSearchParams(search);\n      const projectId = params.get('project');\n      let users = [];\n      if (projectId != null) {\n        users = (await apiGetProjectUsers(this.props.serviceUrl, projectId)).data;\n      }\n\n      this.setState({\n        users,\n        projectId,\n      });\n\n      this.handleUserDisplay();\n    }\n  }\n\n  handleUserDisplay() {\n    const users = this.state.users;\n    const projectId = this.state.projectId;\n\n    const displayUsers = users.map(user => ({\n      id: user.username,\n      username: user.username,\n      email: user.email,\n      userAccess: (\n        <Button kind=\"ghost\" onClick={event => this.handleRemoveUser(user.id, projectId, event)}\n                className=\"button-warning\">\n          {i18n.t('manageUsers.delete.removeUser')}\n        </Button>\n      ),\n    }));\n\n    this.setState({\n      displayUsers,\n    });\n  }\n\n  handleRemoveUser = (userId, projectId, event) => {\n    event.preventDefault();\n\n    apiDeleteUserFromProject(this.props.serviceUrl, projectId, userId).then(res => {\n      if (res.status === 201) {\n        this.fetchData();\n      } else {\n        console.warn('Failed to delete user', res);\n      }\n    });\n  };\n\n  render() {\n    return (\n      <DataTable rows={this.state.displayUsers} headers={this.headerData}>\n        {({ rows, headers, getHeaderProps, getTableProps }) => (\n          <TableContainer>\n            <Table {...getTableProps()}>\n              <TableHead>\n                <TableRow>\n                  {headers.map(header => (\n                    <TableHeader {...getHeaderProps({ header })}>{header.header}</TableHeader>\n                  ))}\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {rows.map(row => (\n                  <TableRow key={row.id}>\n                    {row.cells.map(cell => (\n                      <TableCell key={cell.id}>{cell.value}</TableCell>\n                    ))}\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        )}\n      </DataTable>\n    );\n  }\n}\n\nexport default withKeycloak(DeleteUser);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport DeleteUser from '../components/Admin/ManageUser/DeleteUser';\nimport '../index.scss';\n\nimport KeycloakContext from '../auth/KeycloakContext';\n\nimport {subscribeToWidgetEvent} from '../helpers/widgetEvents';\nimport {KEYCLOAK_EVENT_TYPE} from './widgetEventTypes';\n\nconst getKeycloakInstance = () =>\n  (window && window.entando && window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\n    initialized: false,\n  };\n\nconst ATTRIBUTES = {\n  hidden: 'hidden',\n  locale: 'locale',\n  paginationMode: 'pagination-mode',\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\n  serviceUrl: 'service-url',\n};\n\nclass DeleteUserElement extends HTMLElement {\n  container;\n\n  mountPoint;\n\n  unsubscribeFromKeycloakEvent;\n\n  keycloak = getKeycloakInstance();\n\n  connectedCallback() {\n    this.mountPoint = document.createElement('div');\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\n\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\n      this.render();\n    });\n\n    this.render();\n\n    //retargetEvents(shadowRoot);\n    this.appendChild(this.mountPoint);\n  }\n\n  render() {\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\n\n    ReactDOM.render(\n      <KeycloakContext.Provider value={this.keycloak}>\n        <DeleteUser serviceUrl={serviceUrl} />\n      </KeycloakContext.Provider>,\n      this.mountPoint\n    );\n  }\n}\n\ncustomElements.define('cp-delete-user-widget', DeleteUserElement);\n","import React, {Component} from 'react';\nimport i18n from '../../i18n';\nimport {Form, Select, SelectItem, Button, TextArea, TextInput} from 'carbon-components-react';\nimport withKeycloak from '../../auth/withKeycloak';\nimport {apiProjectGet} from '../../api/projects';\nimport {apiJiraTicketPost} from '../../api/tickets';\nimport {authenticationChanged, getActiveSubscription, isAuthenticated, isPortalUser} from '../../api/helpers';\n\nclass OpenTicketForm extends Component {\n  constructor() {\n    super();\n    this.state = {\n      loading: true,\n      project: {},\n      role: '',\n      invalid: {},\n      submitMsg: '',\n      submitColour: 'black',\n      //form fields\n      type: 'Support',\n      priority: 'Medium',\n      status: 'To Do',\n      summary: '',\n      description: '',\n    };\n    this.types = ['Support', 'New Feature', 'Bug'];\n    this.priorities = ['Critical', 'High', 'Medium', 'Low'];\n  }\n\n  componentDidMount() {\n    if (isAuthenticated(this.props)) {\n      this.fetchData();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (authenticationChanged(this.props, prevProps)) {\n      this.fetchData();\n    }\n  }\n\n  async fetchData() {\n    if (!isPortalUser()) {\n      return;\n    }\n\n    let search = window.location.search;\n    let params = new URLSearchParams(search);\n    let projectId = params.get('project');\n    let project = (await apiProjectGet(this.props.serviceUrl, projectId)).data;\n\n    if (!project) {\n      console.error('Unable to retrieve projectId ', projectId);\n      project = {};\n    }\n\n    this.setState({\n      project: project,\n      loading: false,\n    });\n  }\n\n  handleValidation() {\n    let invalid = {};\n    let formIsValid = true;\n\n    if (this.state.type === '') {\n      formIsValid = false;\n      invalid['type'] = true;\n    }\n\n    if (this.state.summary === '') {\n      formIsValid = false;\n      invalid['summary'] = true;\n    }\n\n    if (this.state.description === '') {\n      formIsValid = false;\n      invalid['description'] = true;\n    }\n\n    if (this.state.priority === '') {\n      formIsValid = false;\n      invalid['priority'] = true;\n    }\n\n    this.setState({\n      invalid: invalid,\n    });\n    return formIsValid;\n  }\n\n  handleChanges = e => {\n    const input = e.target;\n    const name = input.name;\n    const value = input.value;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n\n    const formIsValid = this.handleValidation();\n\n    if (formIsValid) {\n      const subscription = getActiveSubscription(this.state.project);\n      if (subscription) {\n        this.createTicket()\n          .then(() => {\n            this.setState({\n              submitMsg: i18n.t('submitMessages.created'),\n              submitColour: '#24a148',\n            });\n          })\n          .catch(() => {\n            this.setState({\n              submitMsg: i18n.t('submitMessages.ticketError'),\n              submitColour: '#da1e28',\n            });\n          });\n      }\n      // if no subscriptions, don't create ticket\n      else {\n        this.setState({\n          submitMsg: i18n.t('submitMessages.subscriptionRequired'),\n          submitColour: '#da1e28',\n        });\n      }\n    } else {\n      this.setState({\n        submitMsg: i18n.t('submitMessages.error'),\n        submitColour: '#da1e28',\n      });\n    }\n  };\n\n  async createTicket() {\n    if (isPortalUser()) {\n      const ticket = {\n        type: this.state.type,\n        summary: this.state.summary,\n        description: this.state.description,\n        priority: this.state.priority,\n        // these fields are just placeholders to validate the POST request (fields will be set in the backend)\n        systemId: '999',\n        status: 'To Do',\n        createDate: '2021-02-22T14:14:09-05:00',\n        updateDate: '2021-02-22T14:14:09-05:00',\n      };\n      return await apiJiraTicketPost(this.props.serviceUrl, this.state.project.id, ticket);\n    }\n  }\n\n  render() {\n    if (!this.state.loading) {\n      if (isPortalUser()) {\n        return (\n          <div>\n            <div className=\"form-container\">\n              <p style={{color: this.state.submitColour}}>{this.state.submitMsg}</p>\n              <Form onSubmit={this.handleFormSubmit}>\n                <div className=\"bx--grid\">\n                  <div className=\"bx--row\" style={{padding: '1em 0'}}>\n                    <div className=\"bx--col\">\n                      <div className=\"form-desc\">\n                        <h4>{i18n.t('supportTicketForm.formTitle')}</h4>\n                        <div>{i18n.t('supportTicketForm.desc')}</div>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"bx--row\">\n                    <div className=\"bx--col\">\n                      <div>\n                        <strong>{i18n.t('projectDetails.project')}:</strong> {this.state.project.name}\n                      </div>\n                      <Select\n                        id=\"type\"\n                        name=\"type\"\n                        labelText={i18n.t('supportTicketForm.type') + ' *'}\n                        value={this.state.type}\n                        onChange={this.handleChanges}\n                        invalidText={i18n.t('validation.invalid.required')}\n                        invalid={this.state.invalid['type']}\n                      >\n                        {this.types.map((type, i) => (\n                          <SelectItem key={i} text={type} value={type}>\n                            {type}\n                          </SelectItem>\n                        ))}\n                      </Select>\n                      <Select\n                        id=\"priority\"\n                        name=\"priority\"\n                        labelText={i18n.t('supportTicketForm.priority') + ' *'}\n                        value={this.state.priority}\n                        onChange={this.handleChanges}\n                        invalidText={i18n.t('validation.invalid.required')}\n                        invalid={this.state.invalid['priority']}\n                      >\n                        {this.priorities.map((priority, i) => (\n                          <SelectItem key={i} text={priority} value={priority}>\n                            {priority}\n                          </SelectItem>\n                        ))}\n                      </Select>\n                    </div>\n                  </div>\n                  <div className=\"bx--row\">\n                    <div className=\"bx--col\">\n                      <TextInput\n                        labelText={i18n.t('supportTicketForm.ticketSummary') + ' *'}\n                        placeholder={i18n.t('supportTicketForm.addticketSummary')}\n                        id=\"summary\"\n                        name=\"summary\"\n                        value={this.state.summary}\n                        onChange={this.handleChanges}\n                        invalidText={i18n.t('validation.invalid.required')}\n                        invalid={this.state.invalid['summary']}\n                      />\n                    </div>\n                  </div>\n                  <div className=\"bx--row\">\n                    <div className=\"bx--col\">\n                      <TextArea\n                        labelText={i18n.t('supportTicketForm.ticketDescription') + ' *'}\n                        placeholder={i18n.t('supportTicketForm.addticketDescription')}\n                        name=\"description\"\n                        value={this.state.description}\n                        onChange={this.handleChanges}\n                        invalidText={i18n.t('validation.invalid.required')}\n                        invalid={this.state.invalid['description']}\n                      />\n                      <Button kind=\"primary\" tabIndex={0} type=\"submit\">\n                        {' '}\n                        {i18n.t('buttons.submit')}{' '}\n                      </Button>\n                    </div>\n                  </div>\n                </div>\n              </Form>\n            </div>\n          </div>\n        );\n      } else {\n        return <p>{i18n.t('userMessages.unauthorized')}</p>;\n      }\n    } else {\n      return null;\n    }\n  }\n}\n\nexport default withKeycloak(OpenTicketForm);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport OpenTicketForm from '../components/Forms/OpenTicketForm';\nimport KeycloakContext from '../auth/KeycloakContext';\n\nimport {subscribeToWidgetEvent} from '../helpers/widgetEvents';\nimport {KEYCLOAK_EVENT_TYPE} from './widgetEventTypes';\nimport * as Locale from '../i18n';\n\nconst getKeycloakInstance = () =>\n  (window && window.entando && window.entando.keycloak && {...window.entando.keycloak, initialized: true}) || {\n    initialized: false,\n  };\n\nconst ATTRIBUTES = {\n  hidden: 'hidden',\n  locale: 'locale',\n  paginationMode: 'pagination-mode',\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\n  serviceUrl: 'service-url',\n};\n\nclass FormsOpenTicketElement extends HTMLElement {\n  container;\n\n  mountPoint;\n\n  unsubscribeFromKeycloakEvent;\n\n  keycloak = getKeycloakInstance();\n\n  connectedCallback() {\n    this.mountPoint = document.createElement('div');\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\n\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\n      this.render();\n    });\n\n    this.render();\n\n    //retargetEvents(shadowRoot);\n    this.appendChild(this.mountPoint);\n  }\n\n  render() {\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\n    const locale = this.getAttribute(ATTRIBUTES.locale) || '';\n    Locale.setLocale(locale);\n\n    ReactDOM.render(\n      <KeycloakContext.Provider value={this.keycloak}>\n        <OpenTicketForm serviceUrl={serviceUrl} locale={locale}/>\n      </KeycloakContext.Provider>,\n      this.mountPoint\n    );\n  }\n}\n\ncustomElements.define('cp-forms-openticket-widget', FormsOpenTicketElement);\n","import React, {Component} from 'react';\nimport {\n  DataTable,\n  TableContainer,\n  Table,\n  TableHead,\n  TableRow,\n  TableHeader,\n  TableBody,\n  TableCell,\n  Button\n} from 'carbon-components-react';\nimport '../../../index.scss';\nimport withKeycloak from '../../../auth/withKeycloak';\nimport i18n from '../../../i18n';\nimport {isAuthenticated, authenticationChanged, getPageUrl} from '../../../api/helpers';\nimport {apiDeleteSubscriptionFromProject, apiGetProjectSubscriptions, apiProjectGet} from '../../../api/projects';\nimport {formatEndDate, formatStartDate} from '../../../api/subscriptions';\nimport {PAGE_SUBSCRIPTION_FORM} from \"../../../api/constants\";\n\nclass ManageSubscriptions extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      projectId: '',\n      project: {},\n      subscriptions: [],\n    };\n    this.headerData = [\n      {\n        header: i18n.t('projectDetails.id'),\n        key: 'id',\n      },\n      {\n        header: i18n.t('subscriptionDetails.status'),\n        key: 'status',\n      },\n      {\n        header: i18n.t('projectDetails.entandoVersion'),\n        key: 'entandoVersion',\n      },\n      {\n        header: i18n.t('subscriptionDetails.level'),\n        key: 'level',\n      },\n      {\n        header: i18n.t('subscriptionDetails.startDate'),\n        key: 'startDate',\n      },\n      {\n        header: i18n.t('subscriptionDetails.endDate'),\n        key: 'endDate',\n      },\n      {\n        header: i18n.t('subscriptionDetails.lengthInMonths'),\n        key: 'lengthInMonths',\n      },\n      {\n        header: i18n.t('subscriptionDetails.notes'),\n        key: 'notes',\n      },\n      {\n        header: i18n.t('customerDashboard.action'),\n        key: 'action',\n      },\n    ];\n  }\n\n  componentDidMount() {\n    if (isAuthenticated(this.props)) {\n      this.fetchData();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (authenticationChanged(this.props, prevProps)) {\n      this.fetchData();\n    }\n  }\n\n  async fetchData() {\n    if (isAuthenticated(this.props)) {\n      let search = window.location.search;\n      const params = new URLSearchParams(search);\n      const projectId = params.get('project');\n\n      let project = {};\n      let subscriptions = {};\n      if (projectId != null) {\n        project = (await apiProjectGet(this.props.serviceUrl, projectId)).data;\n        subscriptions = (await apiGetProjectSubscriptions(this.props.serviceUrl, projectId)).data;\n      }\n\n      this.setState({\n        projectId: projectId,\n        project: project,\n        subscriptions: subscriptions,\n      });\n    }\n  }\n\n  async deleteSubscription(subscriptionId) {\n    if (isAuthenticated(this.props)) {\n      return await apiDeleteSubscriptionFromProject(this.props.serviceUrl, this.state.projectId, subscriptionId);\n    }\n  }\n\n  handleDeleteSubscription = (e, id) => {\n    e.preventDefault();\n    if (window.confirm(i18n.t('submitMessages.confirmDelete'))) {\n      console.log('confirmed to delete', id);\n      this.deleteSubscription(id)\n        .then(() => {\n          this.setState({\n            submitMsg: i18n.t('submitMessages.deleted'),\n            submitColour: '#24a148',\n          });\n          this.fetchData();\n        })\n        .catch(() => {\n          this.setState({\n            submitMsg: i18n.t('submitMessages.error'),\n            submitColour: '#da1e28',\n          });\n        });\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <h5>{this.state.project !== null && this.state.project.name}</h5>\n        <a\n          href={`${getPageUrl(PAGE_SUBSCRIPTION_FORM, this.props.locale)}?project=${this.state.projectId}`}\n          style={{textDecoration: 'none'}}\n        >\n          <Button kind=\"ghost\" style={{display: 'block', width: '100%'}} value=\"Add Subscription\">\n            {i18n.t('buttons.addSubscription')}\n          </Button>\n        </a>\n\n        <DataTable rows={[{id: '1'}]} headers={this.headerData}>\n          {({headers, getHeaderProps, getTableProps}) => (\n            <TableContainer>\n              <Table {...getTableProps()}>\n                <TableHead>\n                  <TableRow>\n                    {headers.map(header => (\n                      <TableHeader {...getHeaderProps({header})}>{header.header}</TableHeader>\n                    ))}\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {Object.keys(this.state.subscriptions).length !== 0 &&\n                  this.state.subscriptions.map((subscription, index) => (\n                    <TableRow key={index}>\n                      <TableCell>{subscription.id}</TableCell>\n                      <TableCell>{subscription.status}</TableCell>\n                      <TableCell>{subscription.entandoVersion.name}</TableCell>\n                      <TableCell>{subscription.level}</TableCell>\n                      <TableCell>{formatStartDate(subscription.startDate)}</TableCell>\n                      <TableCell>{formatEndDate(subscription.startDate, subscription.lengthInMonths)}</TableCell>\n                      <TableCell>{subscription.lengthInMonths}</TableCell>\n                      <TableCell>{subscription.notes}</TableCell>\n                      <TableCell>\n                        <a\n                          href={`${getPageUrl(PAGE_SUBSCRIPTION_FORM, this.props.locale)}?project=${this.state.projectId}&subscription=${subscription.id}`}\n                          style={{textDecoration: 'none'}}\n                        >\n                          <Button kind=\"ghost\" style={{display: 'block', width: '100%'}} value=\"Edit\">\n                            {i18n.t('buttons.edit')}\n                          </Button>\n                        </a>\n                        <Button\n                          kind=\"ghost\"\n                          onClick={event => this.handleDeleteSubscription(event, subscription.id)}\n                          className=\"button-warning\"\n                        >\n                          {i18n.t('buttons.delete')}\n                        </Button>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          )}\n        </DataTable>\n      </div>\n    );\n  }\n}\n\nexport default withKeycloak(ManageSubscriptions);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ManageSubscriptions from '../components/Admin/ManageSubscriptions/ManageSubscriptions';\nimport * as Locale from '../i18n';\n\nimport KeycloakContext from '../auth/KeycloakContext';\n\nimport {subscribeToWidgetEvent} from '../helpers/widgetEvents';\nimport {KEYCLOAK_EVENT_TYPE} from './widgetEventTypes';\n\nconst getKeycloakInstance = () =>\n  (window && window.entando && window.entando.keycloak && {...window.entando.keycloak, initialized: true}) || {\n    initialized: false,\n  };\n\nconst ATTRIBUTES = {\n  hidden: 'hidden',\n  locale: 'locale',\n  paginationMode: 'pagination-mode',\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\n  serviceUrl: 'service-url',\n};\n\nclass ManageSubscriptionsElement extends HTMLElement {\n  container;\n\n  mountPoint;\n\n  unsubscribeFromKeycloakEvent;\n\n  keycloak = getKeycloakInstance();\n\n  connectedCallback() {\n    this.mountPoint = document.createElement('div');\n    this.keycloak = {...getKeycloakInstance(), initialized: true};\n\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\n      this.keycloak = {...getKeycloakInstance(), initialized: true};\n      this.render();\n    });\n\n    this.render();\n\n    //retargetEvents(shadowRoot);\n    this.appendChild(this.mountPoint);\n  }\n\n  render() {\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\n    const locale = this.getAttribute(ATTRIBUTES.locale) || '';\n    Locale.setLocale(locale);\n\n    ReactDOM.render(\n      <KeycloakContext.Provider value={this.keycloak}>\n        <ManageSubscriptions serviceUrl={serviceUrl} locale={locale}/>\n      </KeycloakContext.Provider>,\n      this.mountPoint\n    );\n  }\n}\n\ncustomElements.define('cp-manage-subscriptions-widget', ManageSubscriptionsElement);\n","import React, { Component } from 'react';\nimport i18n from '../../../i18n';\nimport { Accordion, AccordionItem } from 'carbon-components-react';\nimport AssignUser from './AssignUser';\nimport DeleteUser from './DeleteUser';\nimport {authenticationChanged, isAuthenticated, isPortalAdmin} from '../../../api/helpers';\nimport withKeycloak from '../../../auth/withKeycloak';\n\nclass ManageUser extends Component {\n  userFunctionality;\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n    };\n    this.userFunctionality = [\n      {\n        label: (\n          <div>\n            <p className=\"title\">{i18n.t('manageUsers.manage.title')}</p>\n            <p className=\"desc\">{i18n.t('manageUsers.manage.desc')}</p>\n          </div>\n        ),\n        content: <DeleteUser serviceUrl={this.props.serviceUrl}/>,\n        open: true,\n      },\n      {\n        label: (\n          <div>\n            <p className=\"title\">{i18n.t('manageUsers.assign.title')}</p>\n            <p className=\"desc\">{i18n.t('manageUsers.assign.desc')}</p>\n          </div>\n        ),\n        content: <AssignUser serviceUrl={this.props.serviceUrl}/>,\n        open: true,\n      },\n    ];\n  }\n\n  componentDidMount() {\n    if (isAuthenticated(this.props)) {\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (authenticationChanged(this.props, prevProps)) {\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n\n  render() {\n    if (!this.state.loading) {\n      if (isPortalAdmin()) {\n        return (\n          <div>\n            <h3 className=\"pageTitle\">{i18n.t('adminDashboard.adminTitle')}</h3>\n            <div className=\"form-container\">\n              <Accordion>\n                {this.userFunctionality.map((item, index) => (\n                  <AccordionItem key={index.toString()} index={index} title={item.label} description={item.description} open={item.open}>\n                    {item.content}\n                  </AccordionItem>\n                ))}\n              </Accordion>\n            </div>\n          </div>\n        );\n      }\n      // Unauthorized\n      else {\n        return <p>{i18n.t('userMessages.unauthorized')}</p>;\n      }\n    }\n    // Loading\n    else {\n      return null;\n    }\n  }\n}\n\nexport default withKeycloak(ManageUser);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ManageUser from '../components/Admin/ManageUser/ManageUser';\nimport '../index.scss';\nimport * as Locale from '../i18n';\n\nimport KeycloakContext from '../auth/KeycloakContext';\n\nimport { subscribeToWidgetEvent } from '../helpers/widgetEvents';\nimport { KEYCLOAK_EVENT_TYPE } from './widgetEventTypes';\n\nconst getKeycloakInstance = () =>\n  (window && window.entando && window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\n    initialized: false,\n  };\n\nconst ATTRIBUTES = {\n  hidden: 'hidden',\n  locale: 'locale',\n  paginationMode: 'pagination-mode',\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\n  serviceUrl: 'service-url',\n};\n\nclass ManageUserElement extends HTMLElement {\n  container;\n\n  mountPoint;\n\n  unsubscribeFromKeycloakEvent;\n\n  keycloak = getKeycloakInstance();\n\n  connectedCallback() {\n    this.mountPoint = document.createElement('div');\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\n\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\n      this.render();\n    });\n\n    this.render();\n\n    //retargetEvents(shadowRoot);\n    this.appendChild(this.mountPoint);\n  }\n\n  render() {\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\n    const locale = this.getAttribute(ATTRIBUTES.locale) || '';\n    Locale.setLocale(locale);\n\n    ReactDOM.render(\n      <KeycloakContext.Provider value={this.keycloak}>\n        <ManageUser serviceUrl={serviceUrl} locale={locale}/>\n      </KeycloakContext.Provider>,\n      this.mountPoint\n    );\n  }\n}\n\ncustomElements.define('cp-manage-user-widget', ManageUserElement);\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst Navigation = () => {\n  return (\n    <ul id=\"navigation\">\n      <li>\n        <NavLink to=\"/\">Home</NavLink>\n      </li>\n      <li>\n        <NavLink to=\"/subscription-details\">Subscription Details</NavLink>\n      </li>\n      <li>\n        <NavLink to=\"/subscription\">New or Renew Subscription</NavLink>\n      </li>\n      <li>\n        <NavLink to=\"/service-ticket\">Open Service Ticket</NavLink>\n      </li>\n      <li>\n        <NavLink to=\"/enhancement\">Request for Enhancement Process</NavLink>\n      </li>\n      <li>\n        <NavLink to=\"/manage-users\">Manage Users</NavLink>\n      </li>\n      <li>\n        <NavLink to=\"/configuration-settings\">Configuration Settings</NavLink>\n      </li>\n    </ul>\n  );\n};\n\nexport default Navigation;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Navigation from '../components/Navigation/Navigation';\nimport KeycloakContext from '../auth/KeycloakContext';\n\nimport {subscribeToWidgetEvent} from '../helpers/widgetEvents';\nimport {KEYCLOAK_EVENT_TYPE} from './widgetEventTypes';\n\nconst getKeycloakInstance = () =>\n  (window && window.entando && window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\n    initialized: false,\n  };\n\nconst ATTRIBUTES = {\n  hidden: 'hidden',\n  locale: 'locale',\n  paginationMode: 'pagination-mode',\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\n  serviceUrl: 'service-url',\n};\n\nclass NavigationElement extends HTMLElement {\n  container;\n\n  mountPoint;\n\n  unsubscribeFromKeycloakEvent;\n\n  keycloak = getKeycloakInstance();\n\n  connectedCallback() {\n    this.mountPoint = document.createElement('div');\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\n\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\n      this.render();\n    });\n\n    this.render();\n\n    //retargetEvents(shadowRoot);\n    this.appendChild(this.mountPoint);\n  }\n\n  render() {\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\n\n    ReactDOM.render(\n      <KeycloakContext.Provider value={this.keycloak}>\n        <Navigation serviceUrl={serviceUrl} />\n      </KeycloakContext.Provider>,\n      this.mountPoint\n    );\n  }\n}\n\ncustomElements.define('cp-navigation-widget', NavigationElement);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport OpenTicketForm from '../components/Forms/OpenTicketForm';\nimport '../index.scss';\nimport * as Locale from '../i18n';\n\nimport KeycloakContext from '../auth/KeycloakContext';\n\nimport {subscribeToWidgetEvent} from '../helpers/widgetEvents';\nimport {KEYCLOAK_EVENT_TYPE} from './widgetEventTypes';\n\nconst getKeycloakInstance = () =>\n  (window && window.entando && window.entando.keycloak && {...window.entando.keycloak, initialized: true}) || {\n    initialized: false,\n  };\n\nconst ATTRIBUTES = {\n  hidden: 'hidden',\n  locale: 'locale',\n  paginationMode: 'pagination-mode',\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\n  serviceUrl: 'service-url',\n};\n\nclass OpenTicketElement extends HTMLElement {\n  container;\n\n  mountPoint;\n\n  unsubscribeFromKeycloakEvent;\n\n  keycloak = getKeycloakInstance();\n\n  connectedCallback() {\n    this.mountPoint = document.createElement('div');\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\n\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\n      this.render();\n    });\n\n    this.render();\n\n    //retargetEvents(shadowRoot);\n    this.appendChild(this.mountPoint);\n  }\n\n  render() {\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\n    const locale = this.getAttribute(ATTRIBUTES.locale) || '';\n    Locale.setLocale(locale);\n\n    ReactDOM.render(\n      <KeycloakContext.Provider value={this.keycloak}>\n        <OpenTicketForm serviceUrl={serviceUrl} locale={locale}/>\n      </KeycloakContext.Provider>,\n      this.mountPoint\n    );\n  }\n}\n\ncustomElements.define('cp-open-ticket-widget', OpenTicketElement);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ProductVersion from '../components/Admin/Configuration/ProductVersion';\nimport '../index.scss';\n\nimport KeycloakContext from '../auth/KeycloakContext';\n\nimport { subscribeToWidgetEvent } from '../helpers/widgetEvents';\nimport { KEYCLOAK_EVENT_TYPE } from './widgetEventTypes';\n\nconst getKeycloakInstance = () =>\n  (window && window.entando && window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\n    initialized: false,\n  };\n\nconst ATTRIBUTES = {\n  hidden: 'hidden',\n  locale: 'locale',\n  paginationMode: 'pagination-mode',\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\n  serviceUrl: 'service-url',\n};\n\nclass ProductVersionElement extends HTMLElement {\n  container;\n\n  mountPoint;\n\n  unsubscribeFromKeycloakEvent;\n\n  keycloak = getKeycloakInstance();\n\n  connectedCallback() {\n    this.mountPoint = document.createElement('div');\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\n\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\n      this.render();\n    });\n\n    this.render();\n\n    //retargetEvents(shadowRoot);\n    this.appendChild(this.mountPoint);\n  }\n\n  render() {\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\n\n    ReactDOM.render(\n      <KeycloakContext.Provider value={this.keycloak}>\n        <ProductVersion serviceUrl={serviceUrl} />\n      </KeycloakContext.Provider>,\n      this.mountPoint\n    );\n  }\n}\n\ncustomElements.define('cp-product-version-widget', ProductVersionElement);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Subscription from '../components/SubscriptionDetails/Subscription';\nimport KeycloakContext from '../auth/KeycloakContext';\n\nimport {subscribeToWidgetEvent} from '../helpers/widgetEvents';\nimport {KEYCLOAK_EVENT_TYPE} from './widgetEventTypes';\n\nconst getKeycloakInstance = () =>\n  (window && window.entando && window.entando.keycloak && {...window.entando.keycloak, initialized: true}) || {\n    initialized: false,\n  };\n\nconst ATTRIBUTES = {\n  hidden: 'hidden',\n  locale: 'locale',\n  paginationMode: 'pagination-mode',\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\n  serviceUrl: 'service-url',\n};\n\nclass SubscriptionElement extends HTMLElement {\n  container;\n\n  mountPoint;\n\n  unsubscribeFromKeycloakEvent;\n\n  keycloak = getKeycloakInstance();\n\n  connectedCallback() {\n    this.mountPoint = document.createElement('div');\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\n\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\n      this.render();\n    });\n\n    this.render();\n\n    //retargetEvents(shadowRoot);\n    this.appendChild(this.mountPoint);\n  }\n\n  render() {\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\n\n    ReactDOM.render(\n      <KeycloakContext.Provider value={this.keycloak}>\n        <Subscription serviceUrl={serviceUrl} />\n      </KeycloakContext.Provider>,\n      this.mountPoint\n    );\n  }\n}\n\ncustomElements.define('cp-subscription-widget', SubscriptionElement);\n","import React, {Component} from 'react';\r\nimport i18n from '../../i18n';\r\nimport {\r\n  Form,\r\n  TextInput,\r\n  Select,\r\n  SelectItem,\r\n  Button,\r\n  DatePicker,\r\n  DatePickerInput,\r\n  TextArea\r\n} from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport {apiProjectGet} from '../../api/projects';\r\nimport {\r\n  apiProjectSubscriptionPost,\r\n  apiProjectSubscriptionPut,\r\n  apiRenewSubscription,\r\n  apiSubscriptionGet,\r\n  stripTime,\r\n} from '../../api/subscriptions';\r\nimport {apiProductVersionsGet} from '../../api/productVersion';\r\nimport {authenticationChanged, isAuthenticated, isPortalAdmin, isPortalUser} from '../../api/helpers';\r\nimport {apiAddSubscriptionToProject} from '../../api/projects';\r\nimport moment from 'moment';\r\n\r\nconst FORM_TYPE = {\r\n  new: 'new',\r\n  renewal: 'renewal',\r\n  edit: 'edit',\r\n};\r\n\r\nconst SUBSCRIPTION_LEVEL = {\r\n  GOLD: 'GOLD',\r\n  PLATINUM: 'PLATINUM',\r\n};\r\n\r\nconst SUBSCRIPTION_STATUS = {\r\n  requested: 'REQUESTED',\r\n  pending: 'PENDING',\r\n  active: 'ACTIVE',\r\n  expired: 'EXPIRED',\r\n};\r\n\r\nclass SubscriptionForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: true,\r\n      project: {},\r\n      projectId: '',\r\n      subscription: {},\r\n      startDate: '',\r\n      level: 'PLATINUM',\r\n      lengthInMonths: '',\r\n      notes: '',\r\n      entandoVersionId: '',\r\n      status: '',\r\n      formType: 'new',\r\n      invalid: {},\r\n      productVersions: [],\r\n      submitSuccess: false,\r\n      submitError: false,\r\n      submitColour: 'black',\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (isAuthenticated(this.props)) {\r\n      this.fetchData();\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (authenticationChanged(this.props, prevProps)) {\r\n      this.fetchData();\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  async fetchData() {\r\n    if (!isPortalUser()) {\r\n      return;\r\n    }\r\n\r\n    const serviceUrl = this.props.serviceUrl;\r\n\r\n    const search = window.location.search;\r\n    const params = new URLSearchParams(search);\r\n\r\n    const subscriptionId = params.get('subscription');\r\n    let projectId = params.get('project');\r\n\r\n    let subscription = {};\r\n    let project = {};\r\n    let formType = FORM_TYPE.new;\r\n    let status = '';\r\n    const isAdmin = isPortalAdmin();\r\n\r\n    if (subscriptionId !== null) {\r\n      subscription = (await apiSubscriptionGet(serviceUrl, subscriptionId)).data;\r\n      status = isAdmin ? subscription.status : SUBSCRIPTION_STATUS.requested;\r\n      formType = isAdmin ? FORM_TYPE.edit : FORM_TYPE.renewal;\r\n      project = subscription.project;\r\n    } else if (projectId !== null) {\r\n      project = (await apiProjectGet(serviceUrl, projectId)).data;\r\n      status = isAdmin ? SUBSCRIPTION_STATUS.pending : SUBSCRIPTION_STATUS.requested;\r\n    } else {\r\n      console.log('Unable to load project and/or subscription');\r\n      return;\r\n    }\r\n\r\n    const productVersions = (await apiProductVersionsGet(serviceUrl)).data;\r\n\r\n    this.setState({\r\n      subscription: subscription,\r\n      level: subscription.level ? subscription.level : '',\r\n      entandoVersionId: subscription.entandoVersion ? subscription.entandoVersion.id : '',\r\n      startDate: stripTime(subscription.startDate),\r\n      lengthInMonths: subscription.lengthInMonths ? subscription.lengthInMonths : '',\r\n      notes: subscription.notes ? subscription.notes : '',\r\n      status: status,\r\n      formType: formType,\r\n      project: project,\r\n      projectId: projectId,\r\n      productVersions: productVersions,\r\n    });\r\n  }\r\n\r\n  isNumeric(str) {\r\n    return !isNaN(str) && !isNaN(parseInt(str));\r\n  }\r\n\r\n  handleValidation() {\r\n    let invalid = {};\r\n\r\n    if (!this.state.startDate || !this.state.startDate.match(/^(0[1-9]|1[0-2])\\/(0[1-9]|1\\d|2\\d|3[01])\\/(19|20)\\d{2}$/)) {\r\n      invalid['startDate'] = true;\r\n    }\r\n\r\n    if (!this.state.lengthInMonths || !this.isNumeric(this.state.lengthInMonths)) {\r\n      invalid['lengthInMonths'] = true;\r\n    }\r\n\r\n    if (!this.state.level) {\r\n      invalid['level'] = true;\r\n    }\r\n\r\n    if (this.state.entandoVersionId === '') {\r\n      invalid['entandoVersionId'] = true;\r\n    }\r\n\r\n    this.setState({ invalid: invalid });\r\n    return Object.keys(invalid).length === 0;\r\n  }\r\n\r\n  handleChanges = e => {\r\n    const input = e.target;\r\n    const name = input.name;\r\n    const value = input.value;\r\n    this.setState({ [name]: value });\r\n    this.setState({\r\n      submitSuccess: false,\r\n      submitError: false,\r\n    });\r\n  };\r\n\r\n  handleStartDateChange = date => {\r\n    let formatted = '';\r\n    if (date && date[0]) {\r\n      formatted = moment(date[0].toISOString()).format('MM/DD/YYYY');\r\n    }\r\n    this.setState({\r\n      startDate: formatted,\r\n    });\r\n  };\r\n\r\n  updateStateForSuccess(success) {\r\n    if (success) {\r\n      this.setState({\r\n        submitSuccess: true,\r\n        submitError: false,\r\n        submitColour: '#24a148',\r\n      });\r\n    } else {\r\n      this.setState({\r\n        submitSuccess: false,\r\n        submitError: true,\r\n        submitColour: '#da1e28',\r\n      });\r\n    }\r\n  }\r\n\r\n  handleFormSubmit = event => {\r\n    event.preventDefault();\r\n    this.setState({\r\n      submitSuccess: false,\r\n      submitError: false,\r\n    });\r\n    const formIsValid = this.handleValidation();\r\n\r\n    if (formIsValid) {\r\n      const formType = this.state.formType;\r\n      const serviceUrl = this.props.serviceUrl;\r\n      const subscriptionRequest = this.stateToSubscription();\r\n\r\n      if (formType === FORM_TYPE.edit) {\r\n        apiProjectSubscriptionPut(serviceUrl, subscriptionRequest)\r\n          .then(() => {\r\n            this.updateStateForSuccess(true);\r\n          })\r\n          .catch(() => {\r\n            this.updateStateForSuccess(false);\r\n          });\r\n      } else if (formType === FORM_TYPE.new) {\r\n        this.newSubscription(subscriptionRequest)\r\n          .then(res => {\r\n            apiAddSubscriptionToProject(serviceUrl, this.state.projectId, res.data.id);\r\n            this.updateStateForSuccess(true);\r\n          })\r\n          .catch(() => {\r\n            this.updateStateForSuccess(false);\r\n          });\r\n      } else if (formType === FORM_TYPE.renewal) {\r\n        this.renewSubscription(subscriptionRequest)\r\n          .then(res => {\r\n            apiAddSubscriptionToProject(serviceUrl, this.state.projectId, res.data.id);\r\n            this.updateStateForSuccess(true);\r\n          })\r\n          .catch(() => {\r\n            this.updateStateForSuccess(false);\r\n          });\r\n      } else {\r\n        console.log('Illegal operation');\r\n      }\r\n    }\r\n  };\r\n\r\n  stateToSubscription() {\r\n    return {\r\n      entandoVersionId: this.state.entandoVersionId,\r\n      projectId: this.state.projectId,\r\n      renewal: this.state.formType === FORM_TYPE.renewal,\r\n      projectSubscription: {\r\n        id: this.state.subscription.id,\r\n        startDate: new Date(this.state.startDate),\r\n        lengthInMonths: this.state.lengthInMonths,\r\n        level: this.state.level,\r\n        status: this.state.status.toUpperCase(),\r\n        notes: this.state.notes,\r\n      },\r\n    };\r\n  }\r\n\r\n  async newSubscription(request) {\r\n    return await apiProjectSubscriptionPost(this.props.serviceUrl, request);\r\n  }\r\n\r\n  async renewSubscription(request) {\r\n    return await apiRenewSubscription(this.props.serviceUrl, request);\r\n  }\r\n\r\n  setupFormComponents() {\r\n    const subscriptionLevelList = Object.entries(SUBSCRIPTION_LEVEL).map(([key, value]) => (\r\n      <SelectItem key={key} text={value} value={key}>\r\n        {value}\r\n      </SelectItem>\r\n    ));\r\n    subscriptionLevelList.unshift(<SelectItem key=\"-1\" text={i18n.t('subscriptionForm.chooseLevel')} value=\"\"/>);\r\n\r\n    const versionList = this.state.productVersions.map(version => {\r\n      // only allow the user to choose from active entando versions\r\n      if (version.status) {\r\n        return (\r\n          <SelectItem key={version.id} text={version.name} value={version.id}>\r\n            {version.name}\r\n          </SelectItem>\r\n        );\r\n      } else {\r\n        return null;\r\n      }\r\n    });\r\n    versionList.unshift(<SelectItem key=\"-1\" text={i18n.t('subscriptionForm.chooseVersion')} value=\"\"/>);\r\n\r\n    const statusList = Object.entries(SUBSCRIPTION_STATUS).map(([key, value]) => (\r\n      <SelectItem key={key} text={value} value={value}>\r\n        {value}\r\n      </SelectItem>\r\n    ));\r\n\r\n    return {subscriptionLevelList, versionList, statusList};\r\n  }\r\n\r\n  renderForm() {\r\n    const {subscriptionLevelList, versionList, statusList} = this.setupFormComponents();\r\n    return (\r\n      <div>\r\n        <div className=\"bx--row\">\r\n          <div className=\"bx--col\">\r\n            <div>\r\n              <span>{i18n.t('subscriptionForm.projectName')}:</span> {this.state.project.name}\r\n            </div>\r\n            <Select\r\n              id=\"status\"\r\n              name=\"status\"\r\n              labelText={i18n.t('subscriptionForm.subscriptionStatus')}\r\n              value={this.state.status}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.required')}\r\n              invalid={this.state.invalid['status']}\r\n              disabled={!isPortalAdmin()}\r\n            >\r\n              {statusList}\r\n            </Select>\r\n            <Select\r\n              id=\"level\"\r\n              name=\"level\"\r\n              labelText={i18n.t('subscriptionForm.subscriptionLevel') + ' *'}\r\n              value={this.state.level || ''}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.required')}\r\n              invalid={this.state.invalid['level']}\r\n            >\r\n              {subscriptionLevelList}\r\n            </Select>\r\n            <Select\r\n              id=\"entandoVersionId\"\r\n              name=\"entandoVersionId\"\r\n              labelText={i18n.t('subscriptionForm.entandoVersion') + ' *'}\r\n              value={this.state.entandoVersionId}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.required')}\r\n              invalid={this.state.invalid['entandoVersionId']}\r\n            >\r\n              {versionList}\r\n            </Select>\r\n          </div>\r\n          <div className=\"bx--col\">\r\n            <DatePicker dateFormat=\"m/d/Y\" datePickerType=\"single\" value={this.state.startDate}\r\n                        onChange={this.handleStartDateChange}>\r\n              <DatePickerInput\r\n                id=\"startDate\"\r\n                name=\"startDate\"\r\n                placeholder=\"mm/dd/yyyy\"\r\n                labelText={i18n.t('subscriptionForm.subscriptionStartDate')}\r\n                type=\"text\"\r\n                invalidText={i18n.t('validation.invalid.date')}\r\n                invalid={this.state.invalid['startDate']}\r\n              />\r\n            </DatePicker>\r\n            <TextInput\r\n              id=\"lengthInMonths\"\r\n              name=\"lengthInMonths\"\r\n              labelText={i18n.t('subscriptionForm.subscriptionLength') + ' *'}\r\n              value={this.state.lengthInMonths}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.number')}\r\n              invalid={this.state.invalid['lengthInMonths']}\r\n            />\r\n            {isPortalAdmin() && (\r\n              <TextArea\r\n                id={'notes'}\r\n                name=\"notes\"\r\n                labelText={i18n.t('adminDashboard.addProject.notes')}\r\n                value={this.state.notes}\r\n                onChange={this.handleChanges}\r\n              />\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  successErrorMessage() {\r\n    const isAdmin = isPortalAdmin();\r\n    const { subscriptionType, submitSuccess, submitError } = this.state;\r\n\r\n    if (subscriptionType === 'new') {\r\n      if (submitSuccess) {\r\n        return isAdmin ? this.createFormMessage('adminSubmitNewSuccess') : this.createFormMessage('customerSubmitSuccess');\r\n      } else if (submitError) {\r\n        return this.createFormMessage('newSubError');\r\n      }\r\n    } else {\r\n      if (submitSuccess) {\r\n        return isAdmin ? this.createFormMessage('adminRenewNewSuccess') : this.createFormMessage('customerSubmitSuccess');\r\n      } else if (submitError) {\r\n        return this.createFormMessage('renewSubError');\r\n      }\r\n    }\r\n  }\r\n\r\n  createFormMessage(subMessageKey) {\r\n    return <p style={{ color: this.state.submitColour }}>{i18n.t(`subscriptionForm.${subMessageKey}`)}</p>;\r\n  }\r\n\r\n  render() {\r\n    const titleKey = isPortalAdmin() ? 'subscriptionForm.adminTitle' : 'subscriptionForm.formTitle';\r\n    const formType = this.state.formType;\r\n    let formLabelKey = 'subscriptionForm.newSubscription';\r\n    if (formType !== 'new') {\r\n      formLabelKey = isPortalAdmin() ? 'subscriptionForm.editSubscription' : 'subscriptionForm.renewSubscription';\r\n    }\r\n\r\n    if (!this.state.loading) {\r\n      if (isPortalUser()) {\r\n        return (\r\n          <div>\r\n            <h3 className=\"pageTitle\">{i18n.t(titleKey)}</h3>\r\n            <div className=\"form-container\">\r\n              {this.successErrorMessage()}\r\n              <Form onSubmit={this.handleFormSubmit}>\r\n                <div className=\"bx--grid\">\r\n                  <div className=\"bx--row\">\r\n                    <div className=\"bx--col\">\r\n                      <strong>{i18n.t(formLabelKey)}</strong>\r\n                    </div>\r\n                  </div>\r\n                  {this.renderForm()}\r\n                  <Button kind=\"primary\" tabIndex={0} type=\"submit\">\r\n                    {' '}\r\n                    {i18n.t('buttons.submit')}\r\n                  </Button>\r\n                </div>\r\n              </Form>\r\n            </div>\r\n          </div>\r\n        );\r\n      } else {\r\n        return <p>{i18n.t('userMessages.unauthorized')}</p>;\r\n      }\r\n    }\r\n    // Loading\r\n    else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport default withKeycloak(SubscriptionForm);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport SubscriptionForm from '../components/Forms/SubscriptionForm';\nimport '../index.scss';\nimport * as Locale from '../i18n';\n\nimport KeycloakContext from '../auth/KeycloakContext';\n\nimport { subscribeToWidgetEvent } from '../helpers/widgetEvents';\nimport { KEYCLOAK_EVENT_TYPE } from './widgetEventTypes';\n\nconst getKeycloakInstance = () =>\n  (window && window.entando && window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\n    initialized: false,\n  };\n\nconst ATTRIBUTES = {\n  hidden: 'hidden',\n  locale: 'locale',\n  paginationMode: 'pagination-mode',\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\n  serviceUrl: 'service-url',\n};\n\nclass SubscriptionFormElement extends HTMLElement {\n  container;\n\n  mountPoint;\n\n  unsubscribeFromKeycloakEvent;\n\n  keycloak = getKeycloakInstance();\n\n  connectedCallback() {\n    this.mountPoint = document.createElement('div');\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\n\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\n      this.render();\n    });\n\n    this.render();\n\n    //retargetEvents(shadowRoot);\n    this.appendChild(this.mountPoint);\n  }\n\n  render() {\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\n    const locale = this.getAttribute(ATTRIBUTES.locale) || '';\n    Locale.setLocale(locale);\n\n    ReactDOM.render(\n      <KeycloakContext.Provider value={this.keycloak}>\n        <SubscriptionForm serviceUrl={serviceUrl} />\n      </KeycloakContext.Provider>,\n      this.mountPoint\n    );\n  }\n}\n\ncustomElements.define('cp-subscription-form-widget', SubscriptionFormElement);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport TicketList from '../components/SubscriptionDetails/TicketList';\nimport '../index.scss';\n\nimport KeycloakContext from '../auth/KeycloakContext';\n\nimport {subscribeToWidgetEvent} from '../helpers/widgetEvents';\nimport {KEYCLOAK_EVENT_TYPE} from './widgetEventTypes';\n\nconst getKeycloakInstance = () =>\n  (window && window.entando && window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\n    initialized: false,\n  };\n\nconst ATTRIBUTES = {\n  hidden: 'hidden',\n  locale: 'locale',\n  paginationMode: 'pagination-mode',\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\n  serviceUrl: 'service-url',\n};\n\nclass TicketListCustomerElement extends HTMLElement {\n  container;\n\n  mountPoint;\n\n  unsubscribeFromKeycloakEvent;\n\n  keycloak = getKeycloakInstance();\n\n  connectedCallback() {\n    this.mountPoint = document.createElement('div');\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\n\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\n      this.render();\n    });\n\n    this.render();\n\n    //retargetEvents(shadowRoot);\n    this.appendChild(this.mountPoint);\n  }\n\n  render() {\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\n\n    ReactDOM.render(\n      <KeycloakContext.Provider value={this.keycloak}>\n        <TicketList serviceUrl={serviceUrl} />\n      </KeycloakContext.Provider>,\n      this.mountPoint\n    );\n  }\n}\n\ncustomElements.define('cp-ticket-list-widget', TicketListCustomerElement);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport TicketingSystem from '../components/Admin/Configuration/TicketingSystem';\nimport '../index.scss';\n\nimport KeycloakContext from '../auth/KeycloakContext';\n\nimport { subscribeToWidgetEvent } from '../helpers/widgetEvents';\nimport { KEYCLOAK_EVENT_TYPE } from './widgetEventTypes';\n\nconst getKeycloakInstance = () =>\n  (window && window.entando && window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\n    initialized: false,\n  };\n\nconst ATTRIBUTES = {\n  hidden: 'hidden',\n  locale: 'locale',\n  paginationMode: 'pagination-mode',\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\n  serviceUrl: 'service-url',\n};\n\nclass TicketingSystemElement extends HTMLElement {\n  container;\n\n  mountPoint;\n\n  unsubscribeFromKeycloakEvent;\n\n  keycloak = getKeycloakInstance();\n\n  connectedCallback() {\n    this.mountPoint = document.createElement('div');\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\n\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\n      this.render();\n    });\n\n    this.render();\n\n    //retargetEvents(shadowRoot);\n    this.appendChild(this.mountPoint);\n  }\n\n  render() {\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\n\n    ReactDOM.render(\n      <KeycloakContext.Provider value={this.keycloak}>\n        <TicketingSystem serviceUrl={serviceUrl} />\n      </KeycloakContext.Provider>,\n      this.mountPoint\n    );\n  }\n}\n\ncustomElements.define('cp-ticketing-system-widget', TicketingSystemElement);\n","import React, {Component} from 'react';\nimport {BrowserRouter, Route, Switch, Link} from 'react-router-dom';\nimport App from '../components/App';\nimport withKeycloak from '../auth/withKeycloak';\nimport SubscriptionForm from '../components/Forms/SubscriptionForm';\nimport AdminConfiguration from '../components/Admin/Configuration/AdminConfiguration';\nimport OpenTicketForm from '../components/Forms/OpenTicketForm';\nimport ManageUser from '../components/Admin/ManageUser/ManageUser';\nimport ManageSubscriptions from '../components/Admin/ManageSubscriptions/ManageSubscriptions';\nimport {authenticationChanged, getPageUrl, isAuthenticated, isPortalAdmin} from '../api/helpers';\nimport {\n  PAGE_ADMIN_CONFIG,\n  PAGE_MANAGE_USERS,\n  PAGE_SUBSCRIPTION_FORM,\n  PAGE_TICKET_FORM\n} from \"../api/constants\";\n\nclass LocalApp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n    };\n  }\n\n  componentDidMount() {\n    if (isAuthenticated(this.props)) {\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (authenticationChanged(this.props, prevProps)) {\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n\n  async logout() {\n    await window.entando.keycloak.logout();\n  }\n\n  render() {\n    if (!this.state.loading) {\n      return (\n        <div>\n          <BrowserRouter forceRefresh={true}>\n            {/*Simple Menu for switching to page-based elements*/}\n            <div>\n              <ul>\n                <li>\n                  <Link to='/'>Home</Link>\n                </li>\n                {isPortalAdmin() && (\n                  <li>\n                    <Link to={getPageUrl(PAGE_ADMIN_CONFIG, this.props.locale)}>Admin</Link>\n                  </li>\n                )}\n                <li>\n                  <a href=\"/\" onClick={this.logout}>\n                    Logout\n                  </a>\n                </li>\n              </ul>\n            </div>\n            <Switch>\n              <Route path={getPageUrl(PAGE_ADMIN_CONFIG, this.props.locale)}>\n                <AdminConfiguration serviceUrl={this.props.serviceUrl} locale={this.props.locale}/>\n              </Route>\n              <Route path={getPageUrl(PAGE_SUBSCRIPTION_FORM, this.props.locale)}>\n                <ManageSubscriptions serviceUrl={this.props.serviceUrl} locale={this.props.locale}/>\n              </Route>\n              <Route path={getPageUrl(PAGE_MANAGE_USERS, this.props.locale)}>\n                <ManageUser serviceUrl={this.props.serviceUrl} locale={this.props.locale}/>\n              </Route>\n              <Route path={getPageUrl(PAGE_SUBSCRIPTION_FORM, this.props.locale)}>\n                <SubscriptionForm serviceUrl={this.props.serviceUrl} locale={this.props.locale}/>\n              </Route>\n              <Route path={getPageUrl(PAGE_TICKET_FORM, this.props.locale)}>\n                <OpenTicketForm serviceUrl={this.props.serviceUrl} locale={this.props.locale}/>\n              </Route>\n              <Route path=\"/\" exact={true}>\n                <App serviceUrl={this.props.serviceUrl} locale={this.props.locale}/>\n              </Route>\n            </Switch>\n          </BrowserRouter>\n        </div>\n      );\n    } else {\n      return null;\n    }\n  }\n}\n\nexport default withKeycloak(LocalApp);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '../index.scss';\nimport * as Locale from '../i18n';\n\nimport KeycloakContext from '../auth/KeycloakContext';\nimport LocalApp from '../local/LocalApp';\n\nimport {subscribeToWidgetEvent} from '../helpers/widgetEvents';\nimport {KEYCLOAK_EVENT_TYPE} from '../custom-elements/widgetEventTypes';\n\nconst getKeycloakInstance = () =>\n  (window && window.entando && window.entando.keycloak && {...window.entando.keycloak, initialized: true}) || {\n    initialized: false,\n  };\n\nconst ATTRIBUTES = {\n  hidden: 'hidden',\n  locale: 'locale',\n  paginationMode: 'pagination-mode',\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\n  serviceUrl: 'service-url',\n};\n\nclass LocalAppElement extends HTMLElement {\n  container;\n\n  mountPoint;\n\n  unsubscribeFromKeycloakEvent;\n\n  keycloak = getKeycloakInstance();\n\n  connectedCallback() {\n    this.mountPoint = document.createElement('div');\n    this.keycloak = {...getKeycloakInstance(), initialized: true};\n\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\n      this.keycloak = {...getKeycloakInstance(), initialized: true};\n      this.render();\n    });\n\n    this.render();\n\n    //retargetEvents(shadowRoot);\n    this.appendChild(this.mountPoint);\n  }\n\n  render() {\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\n    const locale = this.getAttribute(ATTRIBUTES.locale) || '';\n    Locale.setLocale(locale);\n\n    ReactDOM.render(\n      <KeycloakContext.Provider value={this.keycloak}>\n        <LocalApp serviceUrl={serviceUrl} locale={locale}/>\n      </KeycloakContext.Provider>,\n      this.mountPoint\n    );\n  }\n}\n\ncustomElements.define('local-app-element', LocalAppElement);\n"],"sourceRoot":""}