{"version":3,"sources":["i18n.js","auth/KeycloakContext.js","components/__types__/ref.js","auth/withKeycloak.js","api/helpers.js","api/customers.js","components/Admin/AddCustomerModal.js","helpers/widgetEvents.js","custom-elements/widgetEventTypes.js","custom-elements/AdminAddCustomerElement.js","api/ticketingsystem.js","components/Admin/Configuration/TicketingSystem.js","api/productVersion.js","components/Admin/AddProductVersionModal.js","components/Admin/EditVersionModal.js","components/Admin/Configuration/ProductVersion.js","components/Admin/Configuration/AdminConfiguration.js","custom-elements/AdminConfigurationElement.js","api/partners.js","api/projects.js","auth/KeycloakViews.js","components/Admin/AddPartnerModal.js","components/Admin/AddProjectModal.js","components/Admin/EditProjectModal.js","components/Admin/ManagePartnersModal.js","components/Admin/ProjectActionItems.js","api/subscriptions.js","components/Customer/CustomerDataTable.js","components/Customer/CustomerDetails.js","components/Admin/EditCustomerModal.js","components/Customer/CustomerAccordian.js","components/Admin/AdminDashboard.js","custom-elements/AdminDashboardElement.js","api/tickets.js","components/SubscriptionDetails/TicketList.js","components/SubscriptionDetails/Subscription.js","components/Customer/CustomerProjectList.js","components/App.js","custom-elements/AppElement.js","api/portalusers.js","api/keycloak.js","components/Admin/ManageUser/AssignUser.js","custom-elements/AssignUserElement.js","components/Admin/ManageUser/DeleteUser.js","custom-elements/DeleteUserElement.js","components/Forms/OpenTicketForm.js","custom-elements/FormsOpenTicketElement.js","components/Admin/ManageSubscriptions/ManageSubscriptions.js","custom-elements/ManageSubscriptionsElement.js","components/Admin/ManageUser/ManageUser.js","custom-elements/ManageUserElement.js","components/Navigation/Navigation.js","custom-elements/NavigationElement.js","custom-elements/OpenTicketElement.js","custom-elements/ProductVersionElement.js","custom-elements/SubscriptionElement.js","components/Forms/SubscriptionForm.js","custom-elements/SubscriptionFormElement.js","custom-elements/TicketListElement.js","custom-elements/TicketingSystemElement.js","local/LocalApp.js","local/LocalAppElement.js"],"names":["i18n","defaultLocale","locale","fallbacks","translations","en","it","setLocale","KeycloakContext","PropTypes","oneOfType","func","shape","current","elementType","React","createContext","withKeycloak","WrappedComponent","WithKeycloakComponent","renderWrappedComponent","value","props","forwardedRef","rest","ref","keycloak","Consumer","this","Component","defaultProps","forwardRef","getKeycloakToken","window","entando","authenticated","token","isAuthenticated","initialized","authenticationChanged","prevProps","changedAuth","isPortalAdmin","hasKeycloakClientRole","isPortalSupport","isPortalPartner","isPortalCustomer","isPortalAdminOrSupport","isPortalUser","clientRole","resourceAccess","client","item","roles","includes","getDefaultOptions","headers","Headers","Authorization","getDefaultKeycloakOptions","getActiveSubscription","project","projectSubscriptions","find","status","getUrl","url","request","options","a","fetch","response","has","parseInt","get","data","json","Promise","reject","Error","statusText","resource","apiCustomerDelete","serviceUrl","id","method","apiCustomersGet","apiCustomerGet","apiCustomerPost","customer","body","JSON","stringify","apiCustomerPut","apiAddProjectToCustomer","customerId","projectId","apiDeleteProjectFromCustomer","handleChanges","e","input","target","name","setState","handleFormSubmit","handleValidation","state","customerNumber","contactName","contactPhone","contactEmail","notes","customerPost","then","submitMsg","t","submitColour","updateCustomerList","catch","clearValues","document","querySelector","className","baseState","invalid","formIsValid","lastAtPos","lastIndexOf","lastDotPos","indexOf","length","addEventListener","modalConfirmation","style","color","modalId","ModalWrapper","buttonTriggerText","modalHeading","buttonTriggerClassName","handleSubmit","primaryButtonText","secondaryButtonText","Form","onSubmit","TextInput","labelText","onChange","invalidText","TextArea","subscribeToWidgetEvent","eventType","eventHandler","removeEventListener","KEYCLOAK_EVENT_TYPE","getKeycloakInstance","ATTRIBUTES","AdminAddCustomerElement","mountPoint","createElement","unsubscribeFromKeycloakEvent","render","appendChild","getAttribute","Locale","ReactDOM","Provider","HTMLElement","customElements","define","apiTicketingSystemDelete","apiCurrentTicketingSystemGet","apiTicketingSystemsGet","ticketingSystems","apiTicketingSystemPost","ticketingSystem","secret","tsRequest","apiTicketingSystemPut","event","preventDefault","updateTicketingSystem","createTicketingSystem","ticketingSystemType","serviceAccount","serviceAccountSecret","systemId","fetchData","confirm","deleteTicketingSystem","Select","SelectItem","text","map","type","i","Button","kind","tabIndex","onClick","handleDelete","apiProductVersionsGet","apiProductVersionGet","versionId","apiUpdateProductVersionsStatus","apiProductVersionPost","productVersion","apiProductVersionPut","apiProductVersionDelete","addProductVersion","updateProductVersions","handleStartDateChange","date","startDate","moment","toISOString","format","handleEndDateChange","endDate","match","DatePicker","dateFormat","datePickerType","DatePickerInput","placeholder","version","versionPut","buttonId","getVersionDetails","buttonClassName","ProductVersion","handleDeleteVersion","deleteVersion","getProductVersions","versions","productVersions","DataTable","rows","rowData","headerData","getHeaderProps","getTableProps","TableContainer","Table","TableHead","TableRow","header","TableHeader","TableBody","Object","keys","index","TableCell","Toggle","size","handleToggleChange","aria-label","defaultToggled","display","width","key","entVersion","loading","adminConfig","label","content","Tile","Accordion","AccordionItem","title","description","toString","AdminConfigurationElement","apiPartnerPost","partner","apiProjectsGet","apiProjectGet","apiProjectPost","apiProjectPut","apiAddSubscriptionToProject","subscriptionId","apiAddUserToProject","userId","apiDeletePartnerFromProject","partnerId","apiDeleteSubscriptionFromProject","apiDeleteUserFromProject","apiAddPartnerToProject","apiGetProjectUsers","apiGetProjectSubscriptions","AuthenticatedView","children","UnauthenticatedView","partnerNumber","partnerPost","projectList","projects","result","trim","alert","projectPost","getAllProjects","customerList","getCustomers","customers","allCustomers","allProjects","projectPut","updateProjectList","getProjectDetails","ManagePartnersModal","handleRemovePartner","removePartner","err","console","log","hasForm","partners","margin","border","borderTop","handleClick","showMenu","handleOutsideClick","prevState","node","contains","isAdmin","actionDivider","topButton","padding","editProjectSubscription","subscriptionParam","subscription","newOrRenewSubscription","href","textDecoration","managePartners","manageUsers","manageSubscriptions","openTicket","viewAllTickets","substr","rel","deleteProject","handleDeleteProject","zIndex","position","backgroundColor","to","formatStartDate","String","Date","toDateString","formatEndDate","lengthInMonths","setMonth","getMonth","apiSubscriptionGet","apiProjectSubscriptionPost","projectSubscriptionCreation","apiProjectSubscriptionPut","apiRenewSubscription","projectSubscriptionRenew","action","callback","partnerIndex","entandoVersion","tickets","minHeight","paddingBottom","getCustomerDetails","getCustomer","updateCustomer","deleteCustomer","open","accordionOpened","getTime","handleSearch","newFilteredState","filter","toLowerCase","filteredCustomers","currentPage","undefined","forceUpdate","role","test","numberOfPages","Math","ceil","Search","onKeyPress","indexOfLastItem","firstIndexOfCurrentPage","PaginationNav","loop","Boolean","page","Number","totalItems","itemsShown","AdminDashboardElement","jiraResource","apiJiraTicketsGet","apiJiraTicketPost","ticket","ticketSystemUrl","ticketingSystemBaseUrl","ticketUrl","summary","priority","createDate","updateDate","subscriptionData","updateSubscription","users","params","license","level","user","username","path","AppElement","apiUserGetByUsernameAndEmail","email","apiKeycloakUserGet","realm","usersResource","mapKeycloakUserEmails","keycloakUsers","usernameEmailMap","Map","forEach","keycloakUser","set","assignUser","handleFormValidation","assignUserToProject","res","dispatchEvent","CustomEvent","getPortalUserId","portalUserId","portalUserApi","portalUser","warn","authServerUrl","search","location","URLSearchParams","userList","unshift","setupFormComponents","AssignUserElement","handleRemoveUser","displayUsers","handleUserDisplay","userAccess","row","cells","cell","DeleteUserElement","createTicket","types","priorities","error","FormsOpenTicketElement","handleDeleteSubscription","deleteSubscription","subscriptions","ManageSubscriptionsElement","userFunctionality","ManageUserElement","Navigation","NavigationElement","OpenTicketElement","ProductVersionElement","SubscriptionElement","FORM_TYPE","SUBSCRIPTION_LEVEL","GOLD","PLATINUM","SUBSCRIPTION_STATUS","requested","pending","active","expired","submitSuccess","submitError","formatted","formType","subscriptionRequest","stateToSubscription","updateStateForSuccess","newSubscription","renewSubscription","entandoVersionId","str","isNaN","isNumeric","success","renewal","projectSubscription","toUpperCase","subscriptionLevelList","entries","versionList","statusList","disabled","subscriptionType","createFormMessage","subMessageKey","titleKey","formLabelKey","successErrorMessage","renderForm","SubscriptionFormElement","TicketListCustomerElement","TicketingSystemElement","logout","forceRefresh","exact","LocalAppElement"],"mappings":"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","file":"static/js/main.1f6a09b9.chunk.js","sourcesContent":["import i18n from 'i18n-js';\n\nimport en from './i18n/locales/en.json';\nimport it from './i18n/locales/it.json';\n\ni18n.defaultLocale = 'en';\ni18n.locale = 'en';\ni18n.fallbacks = true;\ni18n.translations = { en, it };\n\nexport const setLocale = locale => {\n  i18n.locale = locale;\n};\n\nexport default i18n;\n","import React from 'react';\n\nconst KeycloakContext = React.createContext(null);\n\nexport default KeycloakContext;\n","import PropTypes from 'prop-types';\n\nexport default PropTypes.oneOfType([PropTypes.func, PropTypes.shape({ current: PropTypes.elementType }), PropTypes.shape(null)]);\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React, { forwardRef, Component } from 'react';\nimport refType from '../components/__types__/ref';\nimport KeycloakContext from './KeycloakContext';\n\nexport default function withKeycloak(WrappedComponent) {\n  class WithKeycloakComponent extends Component {\n    renderWrappedComponent = value => {\n      const { forwardedRef, ...rest } = this.props;\n      return <WrappedComponent {...rest} ref={forwardedRef} keycloak={value} />;\n    };\n\n    render() {\n      return <KeycloakContext.Consumer>{this.renderWrappedComponent}</KeycloakContext.Consumer>;\n    }\n  }\n\n  WithKeycloakComponent.propTypes = {\n    forwardedRef: refType,\n  };\n\n  WithKeycloakComponent.defaultProps = {\n    forwardedRef: () => {},\n  };\n\n  return forwardRef((props, ref) => <WithKeycloakComponent {...props} forwardedRef={ref} />);\n}\n","export const getKeycloakToken = () => {\r\n  if (window && window.entando && window.entando.keycloak && window.entando.keycloak.authenticated) {\r\n    return window.entando.keycloak.token;\r\n  }\r\n  return '';\r\n};\r\n\r\nconst ADMIN = 'cp-admin';\r\nconst SUPPORT = 'cp-support';\r\nconst PARTNER = 'cp-partner';\r\nconst CUSTOMER = 'cp-customer';\r\n\r\nexport const isAuthenticated = props => {\r\n  const {keycloak} = props;\r\n  return keycloak.initialized && keycloak.authenticated;\r\n};\r\n\r\nexport const authenticationChanged = (props, prevProps) => {\r\n  const authenticated = isAuthenticated(props);\r\n  const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n  return authenticated && changedAuth;\r\n};\r\n\r\nexport const isPortalAdmin = () => {\r\n  return hasKeycloakClientRole(ADMIN);\r\n};\r\n\r\nexport const isPortalSupport = () => {\r\n  return hasKeycloakClientRole(SUPPORT);\r\n};\r\n\r\nexport const isPortalPartner = () => {\r\n  return hasKeycloakClientRole(PARTNER);\r\n};\r\n\r\nexport const isPortalCustomer = () => {\r\n  return hasKeycloakClientRole(CUSTOMER);\r\n};\r\n\r\nexport const isPortalAdminOrSupport = () => {\r\n  return isPortalAdmin() || isPortalSupport();\r\n};\r\n\r\nexport const isPortalCustomerOrPartner = () => {\r\n  return isPortalCustomer() || isPortalPartner();\r\n};\r\n\r\nexport const isPortalUser = () => {\r\n  return isPortalAdminOrSupport() || isPortalCustomerOrPartner();\r\n};\r\n\r\nexport const hasKeycloakClientRole = clientRole => {\r\n  if (getKeycloakToken()) {\r\n    const { resourceAccess } = window.entando.keycloak;\r\n    if (resourceAccess) {\r\n      for (const client in resourceAccess) {\r\n        const item = resourceAccess[client];\r\n        if (item.roles && item.roles.includes(clientRole)) {\r\n          // console.debug(\"Found role {} with client {} \", clientRole, client);\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return false;\r\n};\r\n\r\nexport const getDefaultOptions = () => ({\r\n  headers: new Headers({\r\n    Authorization: `Bearer ${getKeycloakToken()}`,\r\n    'Content-Type': 'application/json',\r\n  }),\r\n});\r\n\r\nexport const getDefaultKeycloakOptions = () => ({\r\n  headers: new Headers({\r\n    Authorization: `Bearer ${getKeycloakToken()}`,\r\n    'Content-Type': 'application/x-www-form-urlencoded',\r\n  }),\r\n});\r\n\r\nexport const getActiveSubscription = project => {\r\n  return (\r\n    project &&\r\n    project.projectSubscriptions &&\r\n    project.projectSubscriptions.find(item => {\r\n      return item.status === 'ACTIVE' ? item : null;\r\n    })\r\n  );\r\n};\r\n\r\nexport const getUrl = url => {\r\n  return `${url}`;\r\n};\r\n\r\nexport const request = async (url, options) => {\r\n  const response = await fetch(url, options);\r\n\r\n  const headers = {\r\n    ...(response.headers.has('X-Total-Count') ? {'X-Total-Count': parseInt(response.headers.get('X-Total-Count'), 10)} : {}),\r\n  };\r\n\r\n  if (response.status === 204) {\r\n    return { data: '', status: response.status };\r\n  }\r\n\r\n  return response.status >= 200 && response.status < 300\r\n    ? { data: await response.json(), headers, status: response.status }\r\n    : Promise.reject(new Error(response.statusText || response.status));\r\n};\r\n","import { getDefaultOptions, request, getUrl } from './helpers';\r\n\r\nconst resource = 'api/customers';\r\n\r\nexport const apiCustomerDelete = async (serviceUrl, id) => {\r\n  const url = `${serviceUrl}/${resource}/${id}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiCustomersGet = async serviceUrl => {\r\n  const url = getUrl(`${serviceUrl}/${resource}`);\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiCustomerGet = async (serviceUrl, id) => {\r\n  const url = getUrl(`${serviceUrl}/${resource}/${id}`);\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiCustomerPost = async (serviceUrl, customer) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n    body: customer ? JSON.stringify(customer) : null,\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiCustomerPut = async (serviceUrl, customer) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'PUT',\r\n    body: customer ? JSON.stringify(customer) : null,\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiAddProjectToCustomer = async (serviceUrl, customerId, projectId) => {\r\n  const url = `${serviceUrl}/${resource}/${customerId}/projects/${projectId}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiDeleteProjectFromCustomer = async (serviceUrl, customerId, projectId) => {\r\n  const url = `${serviceUrl}/${resource}/${customerId}/projects/${projectId}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE',\r\n  };\r\n  return request(url, options);\r\n};\r\n","import React, { Component } from 'react';\r\nimport i18n from '../../i18n';\r\nimport { ModalWrapper, Form, TextInput, TextArea } from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport { apiCustomerPost } from '../../api/customers';\r\n\r\nclass AddCustomerModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      name: '',\r\n      customerNumber: '',\r\n      contactName: '',\r\n      contactPhone: '',\r\n      contactEmail: '',\r\n      notes: '',\r\n      invalid: {},\r\n      submitMsg: '',\r\n      submitColour: 'black',\r\n    };\r\n\r\n    this.baseState = this.state;\r\n  }\r\n\r\n  handleValidation() {\r\n    let invalid = {};\r\n    let formIsValid = true;\r\n\r\n    if (this.state.name === '') {\r\n      formIsValid = false;\r\n      invalid['name'] = true;\r\n    }\r\n\r\n    if (this.state.customerNumber === '') {\r\n      formIsValid = false;\r\n      invalid['customerNumber'] = true;\r\n    }\r\n\r\n    if (typeof this.state.contactEmail !== 'undefined') {\r\n      let lastAtPos = this.state.contactEmail.lastIndexOf('@');\r\n      let lastDotPos = this.state.contactEmail.lastIndexOf('.');\r\n\r\n      if (\r\n        !(\r\n          lastAtPos < lastDotPos &&\r\n          lastAtPos > 0 &&\r\n          this.state.contactEmail.indexOf('@@') === -1 &&\r\n          lastDotPos > 2 &&\r\n          this.state.contactEmail.length - lastDotPos > 2\r\n        )\r\n      ) {\r\n        formIsValid = false;\r\n        invalid['contactEmail'] = true;\r\n      }\r\n    }\r\n\r\n    this.setState({ invalid: invalid });\r\n    return formIsValid;\r\n  }\r\n\r\n  handleChanges = e => {\r\n    const input = e.target;\r\n    const name = input.name;\r\n    const value = input.value;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  async customerPost(customer) {\r\n    const { keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n    if (authenticated) {\r\n      return await apiCustomerPost(this.props.serviceUrl, customer);\r\n    }\r\n  }\r\n\r\n  handleFormSubmit = () => {\r\n    const formIsValid = this.handleValidation();\r\n\r\n    if (formIsValid) {\r\n      const customer = {\r\n        name: this.state.name,\r\n        customerNumber: this.state.customerNumber,\r\n        contactName: this.state.contactName,\r\n        contactPhone: this.state.contactPhone,\r\n        contactEmail: this.state.contactEmail,\r\n        notes: this.state.notes,\r\n      };\r\n\r\n      this.customerPost(customer)\r\n        .then(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.added'),\r\n            submitColour: '#24a148',\r\n          });\r\n          this.props.updateCustomerList();\r\n        })\r\n        .catch(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.error'),\r\n            submitColour: '#da1e28',\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  clearValues = () => {\r\n    const customerModalElement = document.querySelector('#modal-form-customer');\r\n    if (!customerModalElement.className.includes('is-visible')) {\r\n      this.setState(this.baseState);\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    const modalOpenButton = document.querySelector('.add-customer-button');\r\n    modalOpenButton.addEventListener('click', this.clearValues, false);\r\n  }\r\n\r\n  render() {\r\n    const modalConfirmation = (\r\n      <div className=\"bx--modal-header\">\r\n        <p style={{color: this.state.submitColour}}>{this.state.submitMsg}</p>\r\n      </div>\r\n    );\r\n    const modalId = 'modal-form-customer';\r\n    return (\r\n      <ModalWrapper\r\n        buttonTriggerText={i18n.t('buttons.addCustomer')}\r\n        modalHeading={i18n.t('adminDashboard.addCustomer.title')}\r\n        buttonTriggerClassName=\"add-customer bx--btn bx--btn--tertiary add-customer-button\"\r\n        className=\"modal-form\"\r\n        id={modalId}\r\n        handleSubmit={this.handleFormSubmit}\r\n        primaryButtonText={i18n.t('modalText.save')}\r\n        secondaryButtonText={i18n.t('modalText.cancel')}\r\n      >\r\n        {modalConfirmation}\r\n        <div className=\"form-container\">\r\n          <Form onSubmit={this.handleFormSubmit}>\r\n            <TextInput\r\n              id={'name' + modalId}\r\n              name=\"name\"\r\n              labelText={i18n.t('adminDashboard.addCustomer.customerName') + ' *'}\r\n              value={this.state.name}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.required')}\r\n              invalid={this.state.invalid['name']}\r\n            />\r\n            <TextInput\r\n              id={'customerNumber' + modalId}\r\n              name=\"customerNumber\"\r\n              labelText={i18n.t('adminDashboard.addCustomer.customerNumber') + ' *'}\r\n              value={this.state.customerNumber}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.required')}\r\n              invalid={this.state.invalid['customerNumber']}\r\n            />\r\n            <TextInput\r\n              id={'contactName' + modalId}\r\n              name=\"contactName\"\r\n              labelText={i18n.t('adminDashboard.addCustomer.contactName')}\r\n              value={this.state.contactName}\r\n              onChange={this.handleChanges}\r\n            />\r\n            <TextInput\r\n              id={'contactPhone' + modalId}\r\n              name=\"contactPhone\"\r\n              labelText={i18n.t('adminDashboard.addCustomer.contactPhone')}\r\n              value={this.state.contactPhone}\r\n              onChange={this.handleChanges}\r\n            />\r\n            <TextInput\r\n              id={'contactEmail' + modalId}\r\n              name=\"contactEmail\"\r\n              labelText={i18n.t('adminDashboard.addCustomer.contactEmail') + ' *'}\r\n              value={this.state.contactEmail}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.email')}\r\n              invalid={this.state.invalid['contactEmail']}\r\n            />\r\n            <TextArea\r\n              id={'notes' + modalId}\r\n              name=\"notes\"\r\n              labelText={i18n.t('adminDashboard.addCustomer.notes')}\r\n              value={this.state.notes}\r\n              onChange={this.handleChanges}\r\n            />\r\n          </Form>\r\n        </div>\r\n        {modalConfirmation}\r\n      </ModalWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withKeycloak(AddCustomerModal);\r\n","export const publishWidgetEvent = (eventId, payload) => {\n  const widgetEvent = new CustomEvent(eventId, {\n    detail: {\n      payload,\n    },\n  });\n  window.dispatchEvent(widgetEvent);\n};\n\nexport const createWidgetEventPublisher = eventType => payload => publishWidgetEvent(eventType, payload);\n\nexport const subscribeToWidgetEvent = (eventType, eventHandler) => {\n  window.addEventListener(eventType, eventHandler);\n\n  return () => {\n    window.removeEventListener(eventType, eventHandler);\n  };\n};\n\nexport const subscribeToWidgetEvents = (widgetEvents, eventHandler) => {\n  widgetEvents.forEach(eventType => window.addEventListener(eventType, eventHandler));\n\n  return () => {\n    widgetEvents.forEach(eventType => window.removeEventListener(eventType, eventHandler));\n  };\n};\n\nexport const widgetEventToFSA = widgetEvent => {\n  // for info about Flux Standard Action (FSA) see https://github.com/redux-utilities/flux-standard-action\n  const {\n    type,\n    detail: { payload, error, meta },\n  } = widgetEvent;\n  return { type, payload, error, meta };\n};\n","export const INPUT_EVENT_TYPES = {\n  formUpdate: 'customer.form.update',\n  formCreate: 'customer.form.create',\n  formDelete: 'customer.form.delete',\n};\n\nexport const OUTPUT_EVENT_TYPES = {\n  select: 'customer.table.select',\n  add: 'customer.table.add',\n  error: 'customer.table.error',\n  delete: 'customer.table.delete',\n};\n\nexport const KEYCLOAK_EVENT_TYPE = 'keycloak';\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport AddCustomerModal from '../components/Admin/AddCustomerModal';\nimport '../index.scss';\n\nimport KeycloakContext from '../auth/KeycloakContext';\n\nimport {subscribeToWidgetEvent} from '../helpers/widgetEvents';\nimport {KEYCLOAK_EVENT_TYPE} from './widgetEventTypes';\nimport * as Locale from '../i18n';\n\nconst getKeycloakInstance = () =>\n  (window && window.entando && window.entando.keycloak && {...window.entando.keycloak, initialized: true}) || {\n    initialized: false,\n  };\n\nconst ATTRIBUTES = {\n  hidden: 'hidden',\n  locale: 'locale',\n  paginationMode: 'pagination-mode',\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\n  serviceUrl: 'service-url',\n};\n\nclass AdminAddCustomerElement extends HTMLElement {\n  container;\n\n  mountPoint;\n\n  unsubscribeFromKeycloakEvent;\n\n  keycloak = getKeycloakInstance();\n\n  connectedCallback() {\n    this.mountPoint = document.createElement('div');\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\n\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\n      this.render();\n    });\n\n    this.render();\n\n    //retargetEvents(shadowRoot);\n    this.appendChild(this.mountPoint);\n  }\n\n  render() {\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\n    const locale = this.getAttribute(ATTRIBUTES.locale) || '';\n    Locale.setLocale(locale);\n\n    ReactDOM.render(\n      <KeycloakContext.Provider value={this.keycloak}>\n        <AddCustomerModal serviceUrl={serviceUrl} locale={locale}/>\n      </KeycloakContext.Provider>,\n      this.mountPoint\n    );\n  }\n}\n\ncustomElements.define('cp-admin-add-customer-widget', AdminAddCustomerElement);\n","import {getDefaultOptions, request} from './helpers';\r\n\r\nconst resource = 'api/ticketing-systems';\r\n\r\nexport const apiTicketingSystemDelete = async (serviceUrl, id) => {\r\n  const url = `${serviceUrl}/${resource}/${id}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiCurrentTicketingSystemGet = async serviceUrl => {\r\n  const ticketingSystems = (await apiTicketingSystemsGet(serviceUrl)).data;\r\n  //Simplifying assumption to take the latest ticketing system as the current config. There should be only 1.\r\n  return ticketingSystems && ticketingSystems.length ? ticketingSystems[ticketingSystems.length - 1] : null;\r\n};\r\n\r\nexport const apiTicketingSystemsGet = async serviceUrl => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\n//Note: post and put both use a ticketingsystemrequest\r\nexport const apiTicketingSystemPost = async (serviceUrl, ticketingSystem, secret) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const tsRequest = {\r\n    \"ticketingSystem\": ticketingSystem,\r\n    \"secret\": secret\r\n  }\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n    body: JSON.stringify(tsRequest),\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiTicketingSystemPut = async (serviceUrl, ticketingSystem, secret) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const tsRequest = {\r\n    \"ticketingSystem\": ticketingSystem,\r\n    \"secret\": secret\r\n  }\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'PUT',\r\n    body: JSON.stringify(tsRequest),\r\n  };\r\n  return request(url, options);\r\n};\r\n","import React, { Component } from 'react';\r\nimport i18n from '../../../i18n';\r\nimport { Form, TextInput, Select, SelectItem, Button } from 'carbon-components-react';\r\nimport {\r\n  apiCurrentTicketingSystemGet,\r\n  apiTicketingSystemDelete,\r\n  apiTicketingSystemPost,\r\n  apiTicketingSystemPut,\r\n} from '../../../api/ticketingsystem';\r\nimport {authenticationChanged, isAuthenticated, isPortalAdmin} from '../../../api/helpers';\r\nimport withKeycloak from '../../../auth/withKeycloak';\r\n\r\nclass TicketingSystem extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      ticketingSystem: {},\r\n      ticketingSystemType: 'Jira',\r\n      url: '',\r\n      serviceAccount: '',\r\n      serviceAccountSecret: '',\r\n      systemId: '',\r\n      submitMsg: '',\r\n      submitColour: 'black',\r\n    };\r\n  }\r\n\r\n  handleChanges = e => {\r\n    const input = e.target;\r\n    const name = input.name;\r\n    const value = input.value;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  async createTicketingSystem() {\r\n    const ticketingSystem = {\r\n      url: this.state.url,\r\n      serviceAccount: this.state.serviceAccount,\r\n      systemId: this.state.systemId,\r\n    };\r\n    const response = (await apiTicketingSystemPost(this.props.serviceUrl, ticketingSystem, this.state.serviceAccountSecret)).data;\r\n    this.setState({\r\n      ticketingSystem: response,\r\n    });\r\n  }\r\n\r\n  async updateTicketingSystem() {\r\n    const ticketingSystem = {\r\n      id: this.state.ticketingSystem.id,\r\n      url: this.state.url,\r\n      serviceAccount: this.state.serviceAccount,\r\n      systemId: this.state.systemId,\r\n    };\r\n    return await apiTicketingSystemPut(this.props.serviceUrl, ticketingSystem, this.state.serviceAccountSecret);\r\n  }\r\n\r\n  async fetchData() {\r\n    const ticketingSystem = await apiCurrentTicketingSystemGet(this.props.serviceUrl);\r\n    this.setState({\r\n      ticketingSystem: ticketingSystem,\r\n      url: ticketingSystem ? ticketingSystem.url : '',\r\n      serviceAccount: ticketingSystem ? ticketingSystem.serviceAccount : '',\r\n      //Secret needs to be entered each time\r\n      systemId: ticketingSystem ? ticketingSystem.systemId : '',\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (isAuthenticated(this.props)) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (authenticationChanged(this.props, prevProps)) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n\r\n  async deleteTicketingSystem() {\r\n    return await apiTicketingSystemDelete(this.props.serviceUrl, this.state.ticketingSystem.id);\r\n  }\r\n\r\n  handleDelete() {\r\n    if (window.confirm('Are you sure you want to delete this ticketing system?')) {\r\n      this.deleteTicketingSystem()\r\n        .then(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.deleted'),\r\n            submitColour: '#24a148',\r\n          });\r\n          this.fetchData();\r\n        })\r\n        .catch(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.error'),\r\n            submitColour: '#da1e28',\r\n          });\r\n        });\r\n    }\r\n  }\r\n\r\n  handleFormSubmit = event => {\r\n    event.preventDefault();\r\n    if (!this.state.ticketingSystem) {\r\n      this.createTicketingSystem()\r\n        .then(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.created'),\r\n            submitColour: '#24a148',\r\n          });\r\n        })\r\n        .catch(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.error'),\r\n            submitColour: '#da1e28',\r\n          });\r\n        });\r\n    } else {\r\n      this.updateTicketingSystem()\r\n        .then(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.updated'),\r\n            submitColour: '#24a148',\r\n          });\r\n        })\r\n        .catch(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.error'),\r\n            submitColour: '#da1e28',\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const ticketingSystemTypes = ['Jira'];\r\n    if (isPortalAdmin()) {\r\n      return (\r\n        <div className=\"cp-form\">\r\n          <p style={{ color: this.state.submitColour }}>{this.state.submitMsg}</p>\r\n          <Form onSubmit={this.handleFormSubmit}>\r\n            <div className=\"bx--grid\">\r\n              <div className=\"bx--row\">\r\n                <div className=\"bx--col\">\r\n                  <Select\r\n                    id=\"ticketingSystemType\"\r\n                    name=\"ticketingSystemType\"\r\n                    labelText={i18n.t('adminConfig.integrationTicketingSystem.selectBackendTicketingSystem')}\r\n                    value={this.state.ticketingSystemType}\r\n                    onChange={this.handleChanges}\r\n                  >\r\n                    <SelectItem text={i18n.t('adminConfig.integrationTicketingSystem.select')}\r\n                                value=\"ticketing-system\"/>\r\n                    {ticketingSystemTypes.map((type, i) => (\r\n                      <SelectItem key={i} text={type} value={type}>\r\n                        {type}\r\n                      </SelectItem>\r\n                    ))}\r\n                  </Select>\r\n                  <TextInput\r\n                    id=\"serviceAccount\"\r\n                    name=\"serviceAccount\"\r\n                    labelText={i18n.t('adminConfig.integrationTicketingSystem.userName')}\r\n                    value={this.state.serviceAccount}\r\n                    onChange={this.handleChanges}\r\n                  />\r\n                  <TextInput\r\n                    id=\"systemId\"\r\n                    name=\"systemId\"\r\n                    labelText={i18n.t('adminConfig.integrationTicketingSystem.projectName')}\r\n                    value={this.state.systemId}\r\n                    onChange={this.handleChanges}\r\n                  />\r\n                </div>\r\n                <div className=\"bx--col\">\r\n                  <TextInput\r\n                    id=\"url\"\r\n                    name=\"url\"\r\n                    labelText={i18n.t('adminConfig.integrationTicketingSystem.url')}\r\n                    value={this.state.url}\r\n                    onChange={this.handleChanges}\r\n                  />\r\n                  <TextInput\r\n                    id=\"serviceAccountSecret\"\r\n                    name=\"serviceAccountSecret\"\r\n                    type=\"password\"\r\n                    labelText={i18n.t('adminConfig.integrationTicketingSystem.password')}\r\n                    value={this.state.serviceAccountSecret}\r\n                    onChange={this.handleChanges}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <Button kind=\"primary\" tabIndex={0} type=\"submit\">\r\n                {' '}\r\n                {i18n.t('buttons.submit')}{' '}\r\n              </Button>\r\n              {this.state.ticketingSystem ? (\r\n                <Button kind=\"danger\" onClick={() => this.handleDelete()}>\r\n                  {' '}\r\n                  Delete{' '}\r\n                </Button>\r\n              ) : null}\r\n            </div>\r\n          </Form>\r\n        </div>\r\n      );\r\n    }\r\n    // Unauthorized\r\n    else {\r\n      return <p>{i18n.t('userMessages.unauthorized')}</p>;\r\n    }\r\n  }\r\n}\r\n\r\nexport default withKeycloak(TicketingSystem);\r\n","import { getDefaultOptions, request } from './helpers';\n\nconst resource = 'api/entando-versions';\n\nexport const apiProductVersionsGet = async serviceUrl => {\n  const url = `${serviceUrl}/${resource}`;\n  const options = {\n    ...getDefaultOptions(),\n    method: 'GET',\n  };\n\n  return request(url, options);\n};\n\nexport const apiProductVersionGet = async (serviceUrl, versionId) => {\n  const url = `${serviceUrl}/${resource}/${versionId}`;\n  const options = {\n    ...getDefaultOptions(),\n    method: 'GET',\n  };\n\n  return request(url, options);\n};\n\nexport const apiUpdateProductVersionsStatus = async (serviceUrl, id) => {\n  const url = `${serviceUrl}/${resource}/${id}`;\n  const options = {\n    ...getDefaultOptions(),\n    method: 'PUT',\n  };\n  return request(url, options);\n};\n\nexport const apiProductVersionPost = async (serviceUrl, productVersion) => {\n  const url = `${serviceUrl}/${resource}`;\n  const options = {\n    ...getDefaultOptions(),\n    method: 'POST',\n    body: productVersion ? JSON.stringify(productVersion) : null,\n  };\n  return request(url, options);\n};\n\nexport const apiProductVersionPut = async (serviceUrl, productVersion) => {\n  const url = `${serviceUrl}/${resource}`;\n  const options = {\n    ...getDefaultOptions(),\n    method: 'PUT',\n    body: productVersion ? JSON.stringify(productVersion) : null,\n  };\n  return request(url, options);\n};\n\nexport const apiProductVersionDelete = async (serviceUrl, id) => {\n  const url = `${serviceUrl}/${resource}/${id}`;\n  const options = {\n    ...getDefaultOptions(),\n    method: 'DELETE',\n  };\n  return request(url, options);\n};\n","import React, { Component } from 'react';\r\nimport i18n from '../../i18n';\r\nimport { ModalWrapper, Form, TextInput, DatePicker, DatePickerInput } from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport { apiProductVersionPost } from '../../api/productVersion';\r\nimport moment from 'moment';\r\n\r\nclass AddProductVersionModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      name: '',\r\n      startDate: '',\r\n      endDate: '',\r\n      invalid: {},\r\n      submitMsg: '',\r\n      submitColour: 'black',\r\n    };\r\n\r\n    this.baseState = this.state;\r\n  }\r\n\r\n  handleValidation() {\r\n    let invalid = {};\r\n    let formIsValid = true;\r\n\r\n    //name\r\n    if (this.state.name === '') {\r\n      formIsValid = false;\r\n      invalid['name'] = true;\r\n    }\r\n\r\n    if (typeof this.state.startDate !== 'undefined') {\r\n      if (!this.state.startDate.match(/^(0[1-9]|1[0-2])\\/(0[1-9]|1\\d|2\\d|3[01])\\/(19|20)\\d{2}$/)) {\r\n        formIsValid = false;\r\n        invalid['startDate'] = true;\r\n      }\r\n    }\r\n\r\n    if (typeof this.state.endDate !== 'undefined') {\r\n      if (!this.state.endDate.match(/^(0[1-9]|1[0-2])\\/(0[1-9]|1\\d|2\\d|3[01])\\/(19|20)\\d{2}$/)) {\r\n        formIsValid = false;\r\n        invalid['endDate'] = true;\r\n      }\r\n    }\r\n\r\n    this.setState({ invalid: invalid });\r\n    return formIsValid;\r\n  }\r\n\r\n  handleChanges = e => {\r\n    const input = e.target;\r\n    const name = input.name;\r\n    const value = input.value;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  async addProductVersion() {\r\n    const { keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n    if (authenticated) {\r\n      return await apiProductVersionPost(this.props.serviceUrl, this.state);\r\n    }\r\n  }\r\n\r\n  handleFormSubmit = () => {\r\n    const formIsValid = this.handleValidation();\r\n\r\n    if (formIsValid) {\r\n      this.addProductVersion()\r\n        .then(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.added'),\r\n            submitColour: '#24a148',\r\n          });\r\n          this.props.updateProductVersions();\r\n        })\r\n        .catch(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.error'),\r\n            submitColour: '#da1e28',\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  clearValues = () => {\r\n    const customerModalElement = document.querySelector('#modal-form-product-version');\r\n    if (!customerModalElement.className.includes('is-visible')) {\r\n      this.setState(this.baseState);\r\n    }\r\n  };\r\n\r\n  handleStartDateChange = date => {\r\n    this.setState({\r\n      startDate: moment(date[0].toISOString()).format('MM/DD/YYYY'),\r\n    });\r\n  };\r\n\r\n  handleEndDateChange = date => {\r\n    this.setState({\r\n      endDate: moment(date[0].toISOString()).format('MM/DD/YYYY'),\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    const modalOpenButton = document.querySelector('.add-product-version-button');\r\n    modalOpenButton.addEventListener('click', this.clearValues, false);\r\n  }\r\n\r\n  render() {\r\n    const modalConfirmation = (\r\n      <div className=\"bx--modal-header\">\r\n        <p style={{color: this.state.submitColour}}>{this.state.submitMsg}</p>\r\n      </div>\r\n    );\r\n    const modalId = 'modal-form-product-version';\r\n    return (\r\n      <ModalWrapper\r\n        buttonTriggerText={i18n.t('buttons.addProductVersion')}\r\n        modalHeading={i18n.t('adminDashboard.addProductVersion.title')}\r\n        buttonTriggerClassName=\"add-product-version bx--btn bx--btn--tertiary add-product-version-button\"\r\n        className=\"modal-form\"\r\n        id={modalId}\r\n        handleSubmit={this.handleFormSubmit}\r\n      >\r\n        {modalConfirmation}\r\n        <div className=\"form-container\">\r\n          <Form onSubmit={this.handleFormSubmit}>\r\n            <TextInput\r\n              id={'name' + modalId}\r\n              name=\"name\"\r\n              labelText={i18n.t('adminDashboard.addProductVersion.productVersion')}\r\n              value={this.state.name}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.required')}\r\n              invalid={this.state.invalid['name']}\r\n            />\r\n            <DatePicker dateFormat=\"m/d/Y\" datePickerType=\"single\" onChange={this.handleStartDateChange}>\r\n              <DatePickerInput\r\n                id={'startDate' + modalId}\r\n                name=\"startDate\"\r\n                placeholder=\"mm/dd/yyyy\"\r\n                labelText={i18n.t('adminDashboard.addProductVersion.productVersionStartDate')}\r\n                value={this.state.startDate}\r\n                //onChange={this.handleChanges}\r\n                type=\"text\"\r\n                invalidText={i18n.t('validation.invalid.date')}\r\n                invalid={this.state.invalid['startDate']}\r\n              />\r\n            </DatePicker>\r\n            <DatePicker dateFormat=\"m/d/Y\" datePickerType=\"single\" onChange={this.handleEndDateChange}>\r\n              <DatePickerInput\r\n                id={'endDate' + modalId}\r\n                name=\"endDate\"\r\n                placeholder=\"mm/dd/yyyy\"\r\n                labelText={i18n.t('adminDashboard.addProductVersion.productVersionEndDate')}\r\n                value={this.state.endDate}\r\n                type=\"text\"\r\n                invalidText={i18n.t('validation.invalid.date')}\r\n                invalid={this.state.invalid['endDate']}\r\n              />\r\n            </DatePicker>\r\n          </Form>\r\n        </div>\r\n        {modalConfirmation}\r\n      </ModalWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withKeycloak(AddProductVersionModal);\r\n","import React, { Component } from 'react';\r\nimport i18n from '../../i18n';\r\nimport { ModalWrapper, Form, TextInput, DatePicker, DatePickerInput } from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport { apiProductVersionGet, apiProductVersionPut } from '../../api/productVersion';\r\nimport moment from 'moment';\r\nimport {authenticationChanged} from '../../api/helpers';\r\n\r\nclass EditVersionModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      name: '',\r\n      startDate: '',\r\n      endDate: '',\r\n      invalid: {},\r\n      modalId: '',\r\n      buttonId: '',\r\n      submitMsg: '',\r\n      submitColour: 'black',\r\n    };\r\n  }\r\n\r\n  handleValidation() {\r\n    let invalid = {};\r\n    let formIsValid = true;\r\n\r\n    //name\r\n    if (this.state.name === '') {\r\n      formIsValid = false;\r\n      invalid['name'] = true;\r\n    }\r\n\r\n    if (typeof this.state.startDate !== 'undefined') {\r\n      if (!this.state.startDate.match(/^(0[1-9]|1[0-2])\\/(0[1-9]|1\\d|2\\d|3[01])\\/(19|20)\\d{2}$/)) {\r\n        formIsValid = false;\r\n        invalid['startDate'] = true;\r\n      }\r\n    }\r\n\r\n    if (typeof this.state.endDate !== 'undefined') {\r\n      if (!this.state.endDate.match(/^(0[1-9]|1[0-2])\\/(0[1-9]|1\\d|2\\d|3[01])\\/(19|20)\\d{2}$/)) {\r\n        formIsValid = false;\r\n        invalid['endDate'] = true;\r\n      }\r\n    }\r\n\r\n    this.setState({ invalid: invalid });\r\n    return formIsValid;\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (authenticationChanged(this.props, prevProps)) {\r\n      this.getVersionDetails();\r\n    }\r\n  }\r\n\r\n  handleChanges = e => {\r\n    const input = e.target;\r\n    const name = input.name;\r\n    const value = input.value;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleStartDateChange = date => {\r\n    this.setState({\r\n      startDate: moment(date[0].toISOString()).format('MM/DD/YYYY'),\r\n    });\r\n  };\r\n\r\n  handleEndDateChange = date => {\r\n    this.setState({\r\n      endDate: moment(date[0].toISOString()).format('MM/DD/YYYY'),\r\n    });\r\n  };\r\n\r\n  async getVersionDetails() {\r\n    const { keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n    if (authenticated) {\r\n      const version = await apiProductVersionGet(this.props.serviceUrl, this.props.version.id);\r\n      this.setState({\r\n        name: version.data.name,\r\n        startDate: moment(version.data.startDate).format('MM/DD/YYYY'),\r\n        endDate: moment(version.data.endDate).format('MM/DD/YYYY'),\r\n        modalId: 'modal-form-version-edit-' + version.data.id,\r\n        buttonId: 'edit-version-button-' + version.data.id,\r\n      });\r\n    }\r\n  }\r\n\r\n  async versionPut(version) {\r\n    const { keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n    if (authenticated) {\r\n      return await apiProductVersionPut(this.props.serviceUrl, version);\r\n    }\r\n  }\r\n\r\n  handleFormSubmit = () => {\r\n    const formIsValid = this.handleValidation();\r\n\r\n    if (formIsValid) {\r\n      const version = {\r\n        id: this.props.version.id,\r\n        name: this.state.name,\r\n        startDate: moment(this.state.startDate).format(),\r\n        endDate: moment(this.state.endDate).format(),\r\n      };\r\n      this.versionPut(version)\r\n        .then(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.updated'),\r\n            submitColour: '#24a148',\r\n          });\r\n          this.props.updateProductVersions();\r\n        })\r\n        .catch(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.error'),\r\n            submitColour: '#da1e28',\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n    if (authenticated) {\r\n      this.getVersionDetails();\r\n      const modalOpenButton = document.querySelector('.edit-version-button-' + this.props.version.id);\r\n      modalOpenButton.addEventListener('click', this.clearValues, false);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const modalConfirmation = (\r\n      <div className=\"bx--modal-header\">\r\n        <p style={{color: this.state.submitColour}}>{this.state.submitMsg}</p>\r\n      </div>\r\n    );\r\n    const buttonClassName = 'bx--btn bx--btn--ghost edit-version-button-' + this.props.version.id;\r\n    const modalId = this.state.modalId;\r\n    return (\r\n      <ModalWrapper\r\n        buttonTriggerText={i18n.t('buttons.edit')}\r\n        modalHeading={i18n.t('adminDashboard.addProject.editTitle')}\r\n        buttonTriggerClassName={buttonClassName}\r\n        className=\"modal-form\"\r\n        id={this.state.modalId}\r\n        handleSubmit={this.handleFormSubmit}\r\n        primaryButtonText={i18n.t('modalText.save')}\r\n        secondaryButtonText={i18n.t('modalText.cancel')}\r\n      >\r\n        {modalConfirmation}\r\n        <div className=\"form-container\">\r\n          <Form onSubmit={this.handleFormSubmit} id={'form' + modalId}>\r\n            <TextInput\r\n              id={'name' + modalId}\r\n              name=\"name\"\r\n              labelText={i18n.t('adminDashboard.addProject.projectName') + ' *'}\r\n              value={this.state.name}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.required')}\r\n              invalid={this.state.invalid['name']}\r\n            />\r\n            <DatePicker dateFormat=\"m/d/Y\" datePickerType=\"single\" onChange={this.handleStartDateChange}\r\n                        value={this.state.startDate}>\r\n              <DatePickerInput\r\n                id={'startDate' + modalId}\r\n                name=\"startDate\"\r\n                placeholder=\"mm/dd/yyyy\"\r\n                labelText={i18n.t('subscriptionDetails.startDate') + ' *'}\r\n                onChange={this.handleChanges}\r\n                type=\"text\"\r\n                invalidText={i18n.t('validation.invalid.date')}\r\n                invalid={this.state.invalid['startDate']}\r\n              />\r\n            </DatePicker>\r\n            <DatePicker\r\n              dateFormat=\"m/d/Y\"\r\n              datePickerType=\"single\"\r\n              onChange={this.handleEndDateChange}\r\n              id={'endDate' + modalId}\r\n              name=\"endDate\"\r\n              value={this.state.endDate}\r\n            >\r\n              <DatePickerInput\r\n                id={'endDate' + modalId}\r\n                name=\"endDate\"\r\n                placeholder=\"mm/dd/yyyy\"\r\n                labelText={i18n.t('subscriptionDetails.endDate') + ' *'}\r\n                onChange={this.handleChanges}\r\n                type=\"text\"\r\n                invalidText={i18n.t('validation.invalid.date')}\r\n                invalid={this.state.invalid['endDate']}\r\n              />\r\n            </DatePicker>\r\n          </Form>\r\n        </div>\r\n        {modalConfirmation}\r\n      </ModalWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withKeycloak(EditVersionModal);\r\n","import React, { Component } from 'react';\r\nimport i18n from '../../../i18n';\r\nimport {\r\n  DataTable,\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableHeader,\r\n  TableBody,\r\n  TableCell,\r\n  Toggle,\r\n  Button,\r\n} from 'carbon-components-react';\r\nimport { apiProductVersionDelete, apiProductVersionsGet, apiUpdateProductVersionsStatus } from '../../../api/productVersion';\r\nimport withKeycloak from '../../../auth/withKeycloak';\r\nimport AddProductVersionModal from '../AddProductVersionModal';\r\nimport {authenticationChanged, isAuthenticated, isPortalAdminOrSupport} from '../../../api/helpers';\r\nimport EditVersionModal from '../EditVersionModal';\r\n\r\nclass ProductVersion extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      versions: '',\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (isPortalAdminOrSupport()) {\r\n      this.getProductVersions();\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (authenticationChanged(this.props, prevProps)) {\r\n      if (isPortalAdminOrSupport()) {\r\n        this.getProductVersions();\r\n      }\r\n    }\r\n  }\r\n\r\n  async getProductVersions() {\r\n    if (isAuthenticated(this.props)) {\r\n      const productVersions = await apiProductVersionsGet(this.props.serviceUrl);\r\n\r\n      this.setState({\r\n        versions: productVersions.data,\r\n      });\r\n    }\r\n  }\r\n\r\n  async deleteVersion(id) {\r\n    if (isAuthenticated(this.props)) {\r\n      return await apiProductVersionDelete(this.props.serviceUrl, id);\r\n    }\r\n  }\r\n\r\n  handleDeleteVersion = (e, id) => {\r\n    e.preventDefault();\r\n    if (window.confirm('Are you sure you want to delete this Entando version?')) {\r\n      this.deleteVersion(id)\r\n        .then(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.deleted'),\r\n            submitColour: '#24a148',\r\n          });\r\n          this.updateProductVersions();\r\n        })\r\n        .catch(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.error'),\r\n            submitColour: '#da1e28',\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  updateProductVersions = () => {\r\n    this.getProductVersions();\r\n  };\r\n\r\n  async handleToggleChange(id) {\r\n    return await apiUpdateProductVersionsStatus(this.props.serviceUrl, id);\r\n  }\r\n\r\n  render() {\r\n    if (isPortalAdminOrSupport()) {\r\n      return (\r\n        <div>\r\n          <DataTable rows={rowData} headers={headerData}>\r\n            {({rows, headers, getHeaderProps, getTableProps}) => (\r\n              <TableContainer>\r\n                <Table {...getTableProps()}>\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      {headers.map(header => (\r\n                        <TableHeader {...getHeaderProps({header})}>{header.header}</TableHeader>\r\n                      ))}\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {Object.keys(this.state.versions).length !== 0\r\n                      ? this.state.versions.map((productVersion, index) => (\r\n                        <TableRow key={index}>\r\n                          <TableCell>{productVersion.name}</TableCell>\r\n                          <TableCell>\r\n                            <Toggle\r\n                              size=\"sm\"\r\n                              onClick={() => this.handleToggleChange(productVersion.id)}\r\n                              aria-label=\"toggle button\"\r\n                              id={'toggle' + productVersion.id}\r\n                              defaultToggled={productVersion.status}\r\n                            />\r\n                          </TableCell>\r\n                          <TableCell>{productVersion.startDate}</TableCell>\r\n                          <TableCell>{productVersion.endDate}</TableCell>\r\n                          <TableCell>\r\n                            <div style={{display: 'flex'}}>\r\n                              <EditVersionModal\r\n                                key={productVersion.id}\r\n                                version={productVersion}\r\n                                serviceUrl={this.props.serviceUrl}\r\n                                updateProductVersions={this.updateProductVersions}\r\n                              />\r\n                                <Button\r\n                                  kind=\"ghost\"\r\n                                  onClick={e => this.handleDeleteVersion(e, productVersion.id)}\r\n                                  style={{ display: 'flex', width: '100%', color: 'red' }}\r\n                                >\r\n                                  {i18n.t('buttons.delete')}\r\n                                </Button>\r\n                              </div>\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        ))\r\n                      : null}\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            )}\r\n          </DataTable>\r\n          <br />\r\n          <AddProductVersionModal serviceUrl={this.props.serviceUrl} updateProductVersions={this.updateProductVersions} />\r\n        </div>\r\n      );\r\n    } else {\r\n      return <p>{i18n.t('userMessages.unauthorized')}</p>;\r\n    }\r\n  }\r\n}\r\n\r\nconst headerData = [\r\n  {\r\n    header: i18n.t('adminConfig.manageProductVersion.entandoVersion'),\r\n    key: 'entVersion',\r\n  },\r\n  {\r\n    header: i18n.t('adminConfig.manageProductVersion.status'),\r\n    key: 'status',\r\n  },\r\n  {\r\n    header: i18n.t('adminConfig.manageProductVersion.startDate'),\r\n    key: 'startDate',\r\n  },\r\n  {\r\n    header: i18n.t('adminConfig.manageProductVersion.supportEndDate'),\r\n    key: 'endDate',\r\n  },\r\n  {\r\n    header: i18n.t('customerDashboard.action'),\r\n    key: 'action',\r\n  },\r\n];\r\n\r\nconst rowData = [\r\n  {\r\n    id: 'a',\r\n    entVersion: '5.2',\r\n    status: <Toggle size=\"sm\" aria-label=\"toggle button\" defaultToggled id=\"status-1\" />,\r\n    startDate: 'April, 2018',\r\n    endDate: 'April, 2022',\r\n  },\r\n  {\r\n    id: 'b',\r\n    entVersion: '6.3',\r\n    status: <Toggle size=\"sm\" aria-label=\"toggle button\" id=\"status-2\"/>,\r\n    startDate: 'Jile, 2019',\r\n    endDate: 'April, 2023',\r\n  },\r\n  {\r\n    id: 'c',\r\n    entVersion: '6.2',\r\n    status: <Toggle size=\"sm\" aria-label=\"toggle button\" defaultToggled id=\"status-3\"/>,\r\n    startDate: 'September, 2020',\r\n    endDate: 'April, 2024',\r\n  },\r\n];\r\n\r\nexport default withKeycloak(ProductVersion);\r\n","import React from 'react';\nimport i18n from '../../../i18n';\nimport { Accordion, AccordionItem, Tile } from 'carbon-components-react';\nimport TicketingSystem from './TicketingSystem';\nimport ProductVersion from './ProductVersion';\nimport { isPortalAdmin } from '../../../api/helpers';\nimport withKeycloak from '../../../auth/withKeycloak';\n\nclass AdminConfiguration extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n    };\n    this.adminConfig = [\n      {\n        label: (\n          <div>\n            <p className=\"title\">{i18n.t('adminConfig.integrationTicketingSystem.title')}</p>\n            <p className=\"desc\">{i18n.t('adminConfig.integrationTicketingSystem.desc')}</p>\n          </div>\n        ),\n        content: <TicketingSystem serviceUrl={this.props.serviceUrl} />,\n      },\n      {\n        label: (\n          <div>\n            <p className=\"title\">{i18n.t('adminConfig.manageProductVersion.title')}</p>\n            <p className=\"desc\">{i18n.t('adminConfig.manageProductVersion.desc')}</p>\n          </div>\n        ),\n        content: <ProductVersion serviceUrl={this.props.serviceUrl} />,\n      },\n    ];\n  }\n\n  componentDidMount() {\n    const { keycloak } = this.props;\n    const authenticated = keycloak.initialized && keycloak.authenticated;\n\n    if (authenticated) {\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { keycloak } = this.props;\n    const authenticated = keycloak.initialized && keycloak.authenticated;\n\n    const changedAuth = prevProps.keycloak.authenticated !== authenticated;\n\n    if (authenticated && changedAuth) {\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n\n  render() {\n    if (!this.state.loading) {\n      // Authorized\n      if (isPortalAdmin()) {\n        return (\n          <div>\n            <h3 className=\"pageTitle\">{i18n.t('adminDashboard.adminTitle')}</h3>\n            <div className=\"form-container\">\n              <Tile>\n                <p className=\"title\">{i18n.t('adminConfig.title')}</p>\n                <p className=\"desc\">{i18n.t('adminConfig.desc')}</p>\n              </Tile>\n              <Accordion>\n                {this.adminConfig.map((item, index) => (\n                  <AccordionItem key={index.toString()} index={index} title={item.label} description={item.description}>\n                    <div>{item.content}</div>\n                  </AccordionItem>\n                ))}\n              </Accordion>\n            </div>\n          </div>\n        );\n      }\n      // Unauthorized\n      else {\n        return <p>{i18n.t('userMessages.unauthorized')}</p>;\n      }\n    }\n    // Loading\n    else {\n      return null;\n    }\n  }\n}\nexport default withKeycloak(AdminConfiguration);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport AdminConfiguration from '../components/Admin/Configuration/AdminConfiguration';\nimport '../index.scss';\nimport * as Locale from '../i18n';\n\nimport KeycloakContext from '../auth/KeycloakContext';\n\nimport { subscribeToWidgetEvent } from '../helpers/widgetEvents';\nimport { KEYCLOAK_EVENT_TYPE } from './widgetEventTypes';\n\nconst getKeycloakInstance = () =>\n  (window && window.entando && window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\n    initialized: false,\n  };\n\nconst ATTRIBUTES = {\n  hidden: 'hidden',\n  locale: 'locale',\n  paginationMode: 'pagination-mode',\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\n  serviceUrl: 'service-url',\n};\n\nclass AdminConfigurationElement extends HTMLElement {\n  container;\n\n  mountPoint;\n\n  unsubscribeFromKeycloakEvent;\n\n  keycloak = getKeycloakInstance();\n\n  connectedCallback() {\n    this.mountPoint = document.createElement('div');\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\n\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\n      this.render();\n    });\n\n    this.render();\n\n    //retargetEvents(shadowRoot);\n    this.appendChild(this.mountPoint);\n  }\n\n  render() {\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\n    const locale = this.getAttribute(ATTRIBUTES.locale) || '';\n    Locale.setLocale(locale);\n\n    ReactDOM.render(\n      <KeycloakContext.Provider value={this.keycloak}>\n        <AdminConfiguration serviceUrl={serviceUrl} locale={locale}/>\n      </KeycloakContext.Provider>,\n      this.mountPoint\n    );\n  }\n}\n\ncustomElements.define('cp-admin-configuration-widget', AdminConfigurationElement);\n","import { getDefaultOptions, request, getUrl } from './helpers';\n\nconst resource = 'api/partners';\n\nexport const apiPartnerDelete = async (serviceUrl, id) => {\n  const url = `${serviceUrl}/${resource}/${id}`;\n  const options = {\n    ...getDefaultOptions(),\n    method: 'DELETE',\n  };\n  return request(url, options);\n};\n\nexport const apiPartnersGet = async serviceUrl => {\n  const url = getUrl(`${serviceUrl}/${resource}`);\n  const options = {\n    ...getDefaultOptions(),\n    method: 'GET',\n  };\n\n  return request(url, options);\n};\n\nexport const apiPartnerPost = async (serviceUrl, partner) => {\n  const url = `${serviceUrl}/${resource}`;\n  const options = {\n    ...getDefaultOptions(),\n    method: 'POST',\n    body: partner ? JSON.stringify(partner) : null,\n  };\n  return request(url, options);\n};\n","import { getDefaultOptions, request, getUrl } from './helpers';\r\n\r\nconst resource = 'api/projects';\r\n\r\nexport const apiProjectsDelete = async (serviceUrl, id) => {\r\n  const url = `${serviceUrl}/${resource}/${id}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiProjectsGet = async serviceUrl => {\r\n  const url = getUrl(`${serviceUrl}/${resource}`);\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiProjectGet = async (serviceUrl, id) => {\r\n  const url = getUrl(`${serviceUrl}/${resource}/${id}`);\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiProjectPost = async (serviceUrl, project) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n    body: project ? JSON.stringify(project) : null,\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiProjectPut = async (serviceUrl, project) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'PUT',\r\n    body: project ? JSON.stringify(project) : null,\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiAddTicketToProject = async (serviceUrl, projectId, ticketId) => {\r\n  const url = `${serviceUrl}/${resource}/${projectId}/tickets/${ticketId}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiAddSubscriptionToProject = async (serviceUrl, projectId, subscriptionId) => {\r\n  const url = `${serviceUrl}/${resource}/${projectId}/subscriptions/${subscriptionId}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiAddUserToProject = async (serviceUrl, projectId, userId) => {\r\n  const url = `${serviceUrl}/${resource}/${projectId}/users/${userId}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiDeletePartnerFromProject = async (serviceUrl, projectId, partnerId) => {\r\n  const url = `${serviceUrl}/${resource}/${projectId}/partners/${partnerId}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiDeleteSubscriptionFromProject = async (serviceUrl, projectId, subscriptionId) => {\r\n  const url = `${serviceUrl}/${resource}/${projectId}/subscriptions/${subscriptionId}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiDeleteUserFromProject = async (serviceUrl, projectId, userId) => {\r\n  const url = `${serviceUrl}/${resource}/${projectId}/users/${userId}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiAddPartnerToProject = async (serviceUrl, projectId, partnerId) => {\r\n  const url = `${serviceUrl}/${resource}/${projectId}/partners/${partnerId}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiGetProjectUsers = async (serviceUrl, projectId) => {\r\n  const url = `${serviceUrl}/${resource}/${projectId}/users/`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiGetProjectSubscriptions = async (serviceUrl, projectId) => {\r\n  const url = `${serviceUrl}/${resource}/${projectId}/subscriptions/`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n  return request(url, options);\r\n};\r\n","export const AuthenticatedView = ({ children, keycloak }) => {\n  const authenticated = keycloak && keycloak.initialized && keycloak.authenticated;\n  return authenticated ? children : null;\n};\n\nexport const UnauthenticatedView = ({ children, keycloak }) => {\n  const authenticated = keycloak && keycloak.initialized && keycloak.authenticated;\n  return !authenticated ? children : null;\n};\n","import React, {Component} from 'react';\r\nimport i18n from '../../i18n';\r\nimport {ModalWrapper, Form, TextInput, Select, SelectItem, TextArea} from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport {apiPartnerPost} from '../../api/partners';\r\nimport {apiProjectsGet, apiAddPartnerToProject} from '../../api/projects';\r\nimport {authenticationChanged, isAuthenticated} from '../../api/helpers';\r\nimport {AuthenticatedView} from '../../auth/KeycloakViews';\r\n\r\nclass AddPartnerModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      projectList: {},\r\n      projectId: '',\r\n      name: '',\r\n      partnerNumber: '',\r\n      notes: '',\r\n      invalid: {},\r\n      submitMsg: '',\r\n      submitColour: 'black',\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (isAuthenticated(this.props)) {\r\n      this.fetchData();\r\n\r\n      const modalOpenButton = document.querySelector('.add-partner-button');\r\n      modalOpenButton.addEventListener('click', this.clearValues, false);\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (authenticationChanged(this.props, prevProps)) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n\r\n  handleValidation() {\r\n    let invalid = {};\r\n    let formIsValid = true;\r\n\r\n    //project\r\n    if (this.state.projectId === '' || this.state.projectId === 'project-list') {\r\n      formIsValid = false;\r\n      invalid['projectId'] = true;\r\n    }\r\n\r\n    if (this.state.name === '') {\r\n      formIsValid = false;\r\n      invalid['name'] = true;\r\n    }\r\n\r\n    if (this.state.partnerNumber === '') {\r\n      formIsValid = false;\r\n      invalid['partnerNumber'] = true;\r\n    }\r\n\r\n    this.setState({ invalid: invalid });\r\n    return formIsValid;\r\n  }\r\n\r\n  handleChanges = e => {\r\n    const input = e.target;\r\n    const name = input.name;\r\n    const value = input.value;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  async fetchData() {\r\n    if (isAuthenticated(this.props)) {\r\n      const projects = await apiProjectsGet(this.props.serviceUrl);\r\n      this.setState({\r\n        projectList: projects.data,\r\n      });\r\n    }\r\n  }\r\n\r\n  async partnerPost(partner) {\r\n    if (isAuthenticated(this.props)) {\r\n      const result = await apiPartnerPost(this.props.serviceUrl, partner);\r\n      return await apiAddPartnerToProject(this.props.serviceUrl, this.state.projectId, result.data.id);\r\n    }\r\n  }\r\n\r\n  handleFormSubmit = () => {\r\n    const formIsValid = this.handleValidation();\r\n\r\n    if (formIsValid) {\r\n      const partner = {\r\n        name: this.state.name,\r\n        partnerNumber: this.state.partnerNumber,\r\n        notes: this.state.notes,\r\n      };\r\n      this.partnerPost(partner)\r\n        .then(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.added'),\r\n            submitColour: '#24a148',\r\n          });\r\n          this.props.updateCustomerList();\r\n        })\r\n        .catch(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.error'),\r\n            submitColour: '#da1e28',\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  clearValues = () => {\r\n    const partnerModalElement = document.querySelector('#modal-form-partner');\r\n    if (!partnerModalElement.className.includes('is-visible')) {\r\n      this.setState({\r\n        projectId: '',\r\n        name: '',\r\n        partnerNumber: '',\r\n        notes: '',\r\n        invalid: {},\r\n        submitMsg: '',\r\n        submitColour: 'black',\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const modalConfirmation = (\r\n      <div className=\"bx--modal-header\">\r\n        <p style={{color: this.state.submitColour}}>{this.state.submitMsg}</p>\r\n      </div>\r\n    );\r\n    const {keycloak} = this.props;\r\n    const modalId = 'modal-form-partner';\r\n    return (\r\n      <AuthenticatedView keycloak={keycloak}>\r\n        <ModalWrapper\r\n          buttonTriggerText={i18n.t('buttons.addPartner')}\r\n          modalHeading={i18n.t('adminDashboard.addPartner.title')}\r\n          buttonTriggerClassName=\"add-partner bx--btn bx--btn--tertiary add-partner-button\"\r\n          className=\"modal-form\"\r\n          id={modalId}\r\n          handleSubmit={this.handleFormSubmit}\r\n          primaryButtonText={i18n.t('modalText.save')}\r\n          secondaryButtonText={i18n.t('modalText.cancel')}\r\n        >\r\n          {modalConfirmation}\r\n          <div className=\"form-container\">\r\n            <Form onSubmit={this.handleFormSubmit}>\r\n              <Select\r\n                id={'projectId' + modalId}\r\n                name=\"projectId\"\r\n                labelText={i18n.t('adminDashboard.addPartner.projectList') + ' *'}\r\n                value={this.state.projectId}\r\n                onChange={this.handleChanges}\r\n                invalidText={i18n.t('validation.invalid.required')}\r\n                invalid={this.state.invalid['projectId']}\r\n              >\r\n                <SelectItem text={i18n.t('adminDashboard.addPartner.selectProject')} value=\"project-list\"/>\r\n                {Object.keys(this.state.projectList).length !== 0\r\n                  ? this.state.projectList.map((project, i) => (\r\n                    <SelectItem key={i} text={project.name} value={project.id}>\r\n                      {project.name}\r\n                    </SelectItem>\r\n                  ))\r\n                  : null}\r\n              </Select>\r\n\r\n              <TextInput\r\n                id={'name' + modalId}\r\n                name=\"name\"\r\n                labelText={i18n.t('adminDashboard.addPartner.partnerName') + ' *'}\r\n                value={this.state.name}\r\n                onChange={this.handleChanges}\r\n                invalidText={i18n.t('validation.invalid.required')}\r\n                invalid={this.state.invalid['name']}\r\n              />\r\n              <TextInput\r\n                id={'partnerNumber' + modalId}\r\n                name=\"partnerNumber\"\r\n                labelText={i18n.t('adminDashboard.addPartner.partnerNumber') + ' *'}\r\n                value={this.state.partnerNumber}\r\n                onChange={this.handleChanges}\r\n                invalidText={i18n.t('validation.invalid.required')}\r\n                invalid={this.state.invalid['partnerNumber']}\r\n              />\r\n              <TextArea\r\n                name=\"notes\"\r\n                labelText={i18n.t('adminDashboard.addPartner.notes')}\r\n                value={this.state.notes}\r\n                onChange={this.handleChanges}\r\n              />\r\n            </Form>\r\n          </div>\r\n          {modalConfirmation}\r\n        </ModalWrapper>\r\n      </AuthenticatedView>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withKeycloak(AddPartnerModal);\r\n","import React, { Component } from 'react';\r\nimport i18n from '../../i18n';\r\nimport { ModalWrapper, Form, TextInput, Select, SelectItem, TextArea } from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport { apiCustomersGet, apiAddProjectToCustomer } from '../../api/customers';\r\nimport { apiProjectPost, apiProjectsGet } from '../../api/projects';\r\n\r\nclass AddProjectModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      projects: {},\r\n      customerList: {},\r\n      customerId: '',\r\n      name: '',\r\n      description: '',\r\n      systemId: '',\r\n      contactName: '',\r\n      contactPhone: '',\r\n      contactEmail: '',\r\n      notes: '',\r\n      invalid: {},\r\n      submitMsg: '',\r\n      submitColour: 'black',\r\n    };\r\n  }\r\n\r\n  handleValidation() {\r\n    let invalid = {};\r\n    let formIsValid = true;\r\n\r\n    //customer\r\n    if (this.state.customerId === '' || this.state.customerId === 'customer-list') {\r\n      formIsValid = false;\r\n      invalid['customerId'] = true;\r\n    }\r\n\r\n    //name\r\n    if (this.state.name === '') {\r\n      formIsValid = false;\r\n      invalid['name'] = true;\r\n    }\r\n\r\n    //description\r\n    if (this.state.description === '') {\r\n      formIsValid = false;\r\n      invalid['description'] = true;\r\n    }\r\n\r\n    //contactEmail\r\n    if (typeof this.state.contactEmail !== 'undefined') {\r\n      let lastAtPos = this.state.contactEmail.lastIndexOf('@');\r\n      let lastDotPos = this.state.contactEmail.lastIndexOf('.');\r\n\r\n      if (\r\n        !(\r\n          lastAtPos < lastDotPos &&\r\n          lastAtPos > 0 &&\r\n          this.state.contactEmail.indexOf('@@') === -1 &&\r\n          lastDotPos > 2 &&\r\n          this.state.contactEmail.length - lastDotPos > 2\r\n        )\r\n      ) {\r\n        formIsValid = false;\r\n        invalid['contactEmail'] = true;\r\n      }\r\n    }\r\n\r\n    this.setState({ invalid: invalid });\r\n    return formIsValid;\r\n  }\r\n\r\n  async getAllProjects() {\r\n    const projects = await apiProjectsGet(this.props.serviceUrl);\r\n    this.setState({\r\n      projects: projects.data,\r\n    });\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n    const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n\r\n    if (authenticated && changedAuth) {\r\n      this.getCustomers();\r\n      this.getAllProjects();\r\n    }\r\n  }\r\n\r\n  handleChanges = e => {\r\n    const input = e.target;\r\n    const name = input.name;\r\n    const value = input.value;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  async getCustomers() {\r\n    const { keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n    if (authenticated) {\r\n      const customers = await apiCustomersGet(this.props.serviceUrl);\r\n      this.setState({ customerList: customers });\r\n    }\r\n  }\r\n\r\n  async projectPost(project) {\r\n    const { keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n    if (authenticated) {\r\n      const result = await apiProjectPost(this.props.serviceUrl, project);\r\n      return await apiAddProjectToCustomer(this.props.serviceUrl, this.state.customerId, result.data.id);\r\n    }\r\n  }\r\n\r\n  handleFormSubmit = () => {\r\n    const formIsValid = this.handleValidation();\r\n\r\n    if (formIsValid) {\r\n      const project = {\r\n        name: this.state.name,\r\n        description: this.state.description,\r\n        systemId: this.state.systemId,\r\n        contactName: this.state.contactName,\r\n        contactPhone: this.state.contactPhone,\r\n        contactEmail: this.state.contactEmail,\r\n        notes: this.state.notes,\r\n      };\r\n      for (var i = 0; i < this.state.projects.length; i++) {\r\n        if (project.systemId === this.state.projects[i].systemId && project.systemId.trim() !== '') {\r\n          window.alert('That system id is already in use in another project');\r\n          return;\r\n        }\r\n      }\r\n      this.projectPost(project)\r\n        .then(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.added'),\r\n            submitColour: '#24a148',\r\n          });\r\n          this.props.updateCustomerList();\r\n          this.getAllProjects();\r\n        })\r\n        .catch(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.error'),\r\n            submitColour: '#da1e28',\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  clearValues = () => {\r\n    const projectModalElement = document.querySelector('#modal-form-project');\r\n    if (!projectModalElement.className.includes('is-visible')) {\r\n      this.setState({\r\n        customerId: '',\r\n        name: '',\r\n        description: '',\r\n        systemId: '',\r\n        contactName: '',\r\n        contactPhone: '',\r\n        contactEmail: '',\r\n        notes: '',\r\n        invalid: {},\r\n      });\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getCustomers();\r\n    this.getAllProjects();\r\n\r\n    const modalOpenButton = document.querySelector('.add-project-button');\r\n    modalOpenButton.addEventListener('click', this.clearValues, false);\r\n  }\r\n\r\n  render() {\r\n    const modalConfirmation = (\r\n      <div className=\"bx--modal-header\">\r\n        <p style={{color: this.state.submitColour}}>{this.state.submitMsg}</p>\r\n      </div>\r\n    );\r\n    const modalId = 'modal-form-project';\r\n    return (\r\n      <ModalWrapper\r\n        buttonTriggerText={i18n.t('buttons.addProject')}\r\n        modalHeading={i18n.t('adminDashboard.addProject.title')}\r\n        buttonTriggerClassName=\"add-project bx--btn bx--btn--tertiary add-project-button\"\r\n        className=\"modal-form\"\r\n        id={modalId}\r\n        handleSubmit={this.handleFormSubmit}\r\n        primaryButtonText={i18n.t('modalText.save')}\r\n        secondaryButtonText={i18n.t('modalText.cancel')}\r\n      >\r\n        {modalConfirmation}\r\n        <div className=\"form-container\">\r\n          <Form onSubmit={this.handleFormSubmit}>\r\n            <Select\r\n              id={'customerId' + modalId}\r\n              name=\"customerId\"\r\n              labelText={i18n.t('adminDashboard.addProject.customerList') + ' *'}\r\n              value={this.state.customerId}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.required')}\r\n              invalid={this.state.invalid['customerId']}\r\n            >\r\n              <SelectItem text={i18n.t('adminDashboard.addProject.selectCustomer')} value=\"customer-list\" />\r\n              {Object.keys(this.props.allCustomers).length !== 0\r\n                ? this.props.allCustomers.map((customerList, i) => (\r\n                    <SelectItem key={i} text={customerList.name} value={customerList.id}>\r\n                      {customerList.name}\r\n                    </SelectItem>\r\n                  ))\r\n                : null}\r\n            </Select>\r\n\r\n            <TextInput\r\n              id={'name' + modalId}\r\n              name=\"name\"\r\n              labelText={i18n.t('adminDashboard.addProject.projectName') + ' *'}\r\n              value={this.state.name}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.required')}\r\n              invalid={this.state.invalid['name']}\r\n            />\r\n            <TextInput\r\n              id={'description' + modalId}\r\n              name=\"description\"\r\n              labelText={i18n.t('adminDashboard.addProject.projectDesc') + ' *'}\r\n              value={this.state.description}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.required')}\r\n              invalid={this.state.invalid['description']}\r\n            />\r\n            <TextInput\r\n              id={'systemId' + modalId}\r\n              name=\"systemId\"\r\n              labelText={i18n.t('adminDashboard.addProject.systemId')}\r\n              value={this.state.systemId}\r\n              onChange={this.handleChanges}\r\n            />\r\n            <TextInput\r\n              id={'contactName' + modalId}\r\n              name=\"contactName\"\r\n              labelText={i18n.t('adminDashboard.addProject.contactName')}\r\n              value={this.state.contactName}\r\n              onChange={this.handleChanges}\r\n            />\r\n            <TextInput\r\n              id={'contactPhone' + modalId}\r\n              name=\"contactPhone\"\r\n              labelText={i18n.t('adminDashboard.addProject.contactPhone')}\r\n              value={this.state.contactPhone}\r\n              onChange={this.handleChanges}\r\n            />\r\n            <TextInput\r\n              id={'contactEmail' + modalId}\r\n              name=\"contactEmail\"\r\n              labelText={i18n.t('adminDashboard.addProject.contactEmail') + ' *'}\r\n              value={this.state.contactEmail}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.email')}\r\n              invalid={this.state.invalid['contactEmail']}\r\n            />\r\n            <TextArea\r\n              id={'notes' + modalId}\r\n              name=\"notes\"\r\n              labelText={i18n.t('adminDashboard.addProject.notes')}\r\n              value={this.state.notes}\r\n              onChange={this.handleChanges}\r\n            />\r\n          </Form>\r\n        </div>\r\n        {modalConfirmation}\r\n      </ModalWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withKeycloak(AddProjectModal);\r\n","import React, { Component } from 'react';\r\nimport i18n from '../../i18n';\r\nimport { ModalWrapper, Form, TextInput, TextArea } from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport { apiCustomersGet } from '../../api/customers';\r\nimport {apiProjectGet, apiProjectPut, apiProjectsGet} from '../../api/projects';\r\nimport {authenticationChanged, isAuthenticated} from \"../../api/helpers\";\r\n\r\nclass EditProjectModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      projects: {},\r\n      customerList: {},\r\n      customerId: '',\r\n      name: '',\r\n      description: '',\r\n      systemId: '',\r\n      contactName: '',\r\n      contactPhone: '',\r\n      contactEmail: '',\r\n      notes: '',\r\n      invalid: {},\r\n      modalId: '',\r\n      buttonId: '',\r\n      submitMsg: '',\r\n      submitColour: 'black',\r\n    };\r\n  }\r\n\r\n  handleValidation() {\r\n    let invalid = {};\r\n    let formIsValid = true;\r\n\r\n    //name\r\n    if (this.state.name === '') {\r\n      formIsValid = false;\r\n      invalid['name'] = true;\r\n    }\r\n\r\n    //description\r\n    if (this.state.description === '') {\r\n      formIsValid = false;\r\n      invalid['description'] = true;\r\n    }\r\n\r\n    //contactEmail\r\n    if (typeof this.state.contactEmail !== 'undefined') {\r\n      let lastAtPos = this.state.contactEmail.lastIndexOf('@');\r\n      let lastDotPos = this.state.contactEmail.lastIndexOf('.');\r\n\r\n      if (\r\n        !(\r\n          lastAtPos < lastDotPos &&\r\n          lastAtPos > 0 &&\r\n          this.state.contactEmail.indexOf('@@') === -1 &&\r\n          lastDotPos > 2 &&\r\n          this.state.contactEmail.length - lastDotPos > 2\r\n        )\r\n      ) {\r\n        formIsValid = false;\r\n        invalid['contactEmail'] = true;\r\n      }\r\n    }\r\n\r\n    this.setState({ invalid: invalid });\r\n    return formIsValid;\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (authenticationChanged(this.props, prevProps)) {\r\n      this.getCustomers();\r\n      this.getAllProjects();\r\n      this.getProjectDetails();\r\n    }\r\n  }\r\n\r\n  handleChanges = e => {\r\n    const input = e.target;\r\n    const name = input.name;\r\n    const value = input.value;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  async getCustomers() {\r\n    if (isAuthenticated(this.props)) {\r\n      const customers = await apiCustomersGet(this.props.serviceUrl);\r\n      this.setState({customerList: customers});\r\n    }\r\n  }\r\n\r\n  async getProjectDetails() {\r\n    const { keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n    if (authenticated) {\r\n      const project = await apiProjectGet(this.props.serviceUrl, this.props.project.id);\r\n      this.setState({\r\n        name: project.data.name,\r\n        description: project.data.description,\r\n        systemId: project.data.systemId,\r\n        contactName: project.data.contactName,\r\n        contactPhone: project.data.contactPhone,\r\n        contactEmail: project.data.contactEmail,\r\n        notes: project.data.notes,\r\n        modalId: 'modal-form-project-edit-' + project.data.id,\r\n        buttonId: 'edit-project-button-' + project.data.id,\r\n      });\r\n    }\r\n  }\r\n\r\n  async getAllProjects() {\r\n    const projects = await apiProjectsGet(this.props.serviceUrl);\r\n    this.setState({\r\n      projects: projects.data,\r\n    });\r\n  }\r\n\r\n  async projectPut(project) {\r\n    if (isAuthenticated(this.props)) {\r\n      return await apiProjectPut(this.props.serviceUrl, project);\r\n    }\r\n  }\r\n\r\n  handleFormSubmit = () => {\r\n    const formIsValid = this.handleValidation();\r\n\r\n    if (formIsValid) {\r\n      const project = {\r\n        id: this.props.project.id,\r\n        customer: this.props.project.customer,\r\n        name: this.state.name,\r\n        description: this.state.description,\r\n        systemId: this.state.systemId,\r\n        contactName: this.state.contactName,\r\n        contactPhone: this.state.contactPhone,\r\n        contactEmail: this.state.contactEmail,\r\n        notes: this.state.notes,\r\n      };\r\n      for (var i = 0; i < this.props.allProjects.length; i++) {\r\n        if (\r\n          project.systemId === this.props.allProjects[i].systemId &&\r\n          project.id !== this.props.allProjects[i].id &&\r\n          project.systemId.trim() !== ''\r\n        ) {\r\n          window.alert('That system id is already in use in another project');\r\n          return;\r\n        }\r\n      }\r\n      this.projectPut(project)\r\n        .then(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.updated'),\r\n            submitColour: '#24a148',\r\n          });\r\n          this.props.updateProjectList();\r\n        })\r\n        .catch(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.error'),\r\n            submitColour: '#da1e28',\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  clearValues = () => {\r\n    const { keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n    const customerModalElement = document.querySelector('#' + this.state.modalId);\r\n    if (!customerModalElement.className.includes('is-visible') && authenticated) {\r\n      this.setState({\r\n        name: this.props.project.name,\r\n        description: this.props.project.description,\r\n        systemId: this.props.project.systemId,\r\n        contactName: this.props.project.contactName,\r\n        contactPhone: this.props.project.contactPhone,\r\n        contactEmail: this.props.project.contactEmail,\r\n        notes: this.props.project.notes,\r\n        invalid: {},\r\n      });\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n    if (authenticated) {\r\n      this.getCustomers();\r\n      this.getAllProjects();\r\n      this.getProjectDetails();\r\n\r\n      const modalOpenButton = document.querySelector('.edit-project-button-' + this.props.project.id);\r\n      modalOpenButton.addEventListener('click', this.clearValues, false);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const modalConfirmation = (\r\n      <div className=\"bx--modal-header\">\r\n        <p style={{color: this.state.submitColour}}>{this.state.submitMsg}</p>\r\n      </div>\r\n    );\r\n    const buttonClassName = 'dropdown-button-button bx--btn bx--btn--ghost edit-project-button-' + this.props.project.id;\r\n    const modalId = this.state.modalId;\r\n    return (\r\n      <ModalWrapper\r\n        buttonTriggerText={i18n.t('buttons.edit')}\r\n        modalHeading={i18n.t('adminDashboard.addProject.editTitle')}\r\n        buttonTriggerClassName={buttonClassName}\r\n        className=\"modal-form\"\r\n        id={this.state.modalId}\r\n        handleSubmit={this.handleFormSubmit}\r\n        primaryButtonText={i18n.t('modalText.save')}\r\n        secondaryButtonText={i18n.t('modalText.cancel')}\r\n      >\r\n        {modalConfirmation}\r\n        <div className=\"form-container\">\r\n          <Form onSubmit={this.handleFormSubmit}>\r\n            <TextInput\r\n              id={'name' + modalId}\r\n              name=\"name\"\r\n              labelText={i18n.t('adminDashboard.addProject.projectName') + ' *'}\r\n              value={this.state.name}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.required')}\r\n              invalid={this.state.invalid['name']}\r\n            />\r\n            <TextInput\r\n              id={'description' + modalId}\r\n              name=\"description\"\r\n              labelText={i18n.t('adminDashboard.addProject.projectDesc') + ' *'}\r\n              value={this.state.description}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.required')}\r\n              invalid={this.state.invalid['description']}\r\n            />\r\n            <TextInput\r\n              id={'systemId' + modalId}\r\n              name=\"systemId\"\r\n              labelText={i18n.t('adminDashboard.addProject.systemId')}\r\n              value={this.state.systemId}\r\n              onChange={this.handleChanges}\r\n            />\r\n            <TextInput\r\n              id={'contactName' + modalId}\r\n              name=\"contactName\"\r\n              labelText={i18n.t('adminDashboard.addProject.contactName')}\r\n              value={this.state.contactName}\r\n              onChange={this.handleChanges}\r\n            />\r\n            <TextInput\r\n              id={'contactPhone' + modalId}\r\n              name=\"contactPhone\"\r\n              labelText={i18n.t('adminDashboard.addProject.contactPhone')}\r\n              value={this.state.contactPhone}\r\n              onChange={this.handleChanges}\r\n            />\r\n            <TextInput\r\n              id={'contactEmail' + modalId}\r\n              name=\"contactEmail\"\r\n              labelText={i18n.t('adminDashboard.addProject.contactEmail') + ' *'}\r\n              value={this.state.contactEmail}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.email')}\r\n              invalid={this.state.invalid['contactEmail']}\r\n            />\r\n            <TextArea\r\n              name=\"notes\"\r\n              labelText={i18n.t('adminDashboard.addProject.notes')}\r\n              value={this.state.notes}\r\n              onChange={this.handleChanges}\r\n            />\r\n          </Form>\r\n        </div>\r\n        {modalConfirmation}\r\n      </ModalWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withKeycloak(EditProjectModal);\r\n","import React, {Component} from 'react';\r\nimport i18n from '../../i18n';\r\nimport {\r\n  Button,\r\n  DataTable,\r\n  ModalWrapper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableHeader,\r\n  TableRow,\r\n} from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport {isPortalAdminOrSupport} from '../../api/helpers';\r\nimport {apiDeletePartnerFromProject} from '../../api/projects';\r\n\r\nclass ManagePartnersModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      projectId: this.props.project.id,\r\n      project: this.props.project,\r\n    };\r\n\r\n    this.headerData = [\r\n      {\r\n        header: i18n.t('adminDashboard.addPartner.partnerName'),\r\n        key: 'partner',\r\n      },\r\n      {\r\n        header: i18n.t('adminDashboard.addPartner.partnerNumber'),\r\n        key: 'partnerNumber',\r\n      },\r\n      {\r\n        header: i18n.t('adminDashboard.addPartner.notes'),\r\n        key: 'notes',\r\n      },\r\n      {\r\n        header: i18n.t('customerDashboard.action'),\r\n        key: 'action',\r\n      },\r\n    ];\r\n  }\r\n\r\n  async removePartner(projectId, partnerId) {\r\n    if (isPortalAdminOrSupport()) {\r\n      return await apiDeletePartnerFromProject(this.props.serviceUrl, projectId, partnerId);\r\n    }\r\n  }\r\n\r\n  handleRemovePartner = (e, projectId, partnerId) => {\r\n    e.preventDefault();\r\n    if (window.confirm('Are you sure you want to remove this partner from the project?')) {\r\n      this.removePartner(projectId, partnerId)\r\n        .then(result => {\r\n          this.setState({\r\n            project: result.data,\r\n            submitMsg: i18n.t('submitMessages.deleted'),\r\n            submitColour: '#24a148',\r\n          });\r\n          this.props.updateProjectList();\r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.error'),\r\n            submitColour: '#da1e28',\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const modalConfirmation = (\r\n      <div className=\"bx--modal-header\">\r\n        <p style={{color: this.state.submitColour}}>{this.state.submitMsg}</p>\r\n      </div>\r\n    );\r\n    const modalId = 'modal-form-manage-partners';\r\n    return (\r\n      <ModalWrapper\r\n        buttonTriggerText={i18n.t('buttons.managePartners')}\r\n        modalHeading={i18n.t('adminDashboard.managePartners.title')}\r\n        buttonTriggerClassName=\"add-partner bx--btn bx--btn--tertiary add-partner-button\"\r\n        className=\"modal-form\"\r\n        id={modalId}\r\n        hasForm={false}\r\n        primaryButtonText={i18n.t('modalText.done')}\r\n        secondaryButtonText={null}\r\n      >\r\n        {modalConfirmation}\r\n        <div>\r\n          <DataTable rows={rowData} headers={this.headerData}>\r\n            {({rows, headers, getHeaderProps, getTableProps}) => (\r\n              <TableContainer description={i18n.t('customerDashboard.tableDesc')}>\r\n                <Table {...getTableProps()}>\r\n                  <TableHead>\r\n                    <TableRow key=\"headerRow\">\r\n                      {headers.map(header => {\r\n                        return <TableHeader {...getHeaderProps({header})}>{header.header}</TableHeader>;\r\n                      })}\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {this.state.project.partners.map((partner, index) => {\r\n                      return (\r\n                        <TableRow key={'partner' + index}>\r\n                          <TableCell>{partner.name}</TableCell>\r\n                          <TableCell>{partner.partnerNumber}</TableCell>\r\n                          <TableCell>{partner.notes}</TableCell>\r\n                          <TableCell>\r\n                            <div>\r\n                              <Button\r\n                                kind=\"ghost\"\r\n                                onClick={e => this.handleRemovePartner(e, this.state.projectId, partner.id)}\r\n                                style={{display: 'block', width: '100%', color: 'red'}}\r\n                              >\r\n                                {i18n.t('buttons.delete')}\r\n                              </Button>\r\n                              <hr style={{margin: '0', border: 'none', borderTop: '1px solid lightgrey'}}/>\r\n                            </div>\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      );\r\n                    })}\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            )}\r\n          </DataTable>\r\n        </div>\r\n        {modalConfirmation}\r\n      </ModalWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nconst rowData = [\r\n  {\r\n    id: 'a',\r\n    name: 'Partner 1',\r\n    partnerNumber: '123',\r\n  },\r\n  {\r\n    id: 'b',\r\n    name: 'Partner 2',\r\n    partnerNumber: '456',\r\n  },\r\n];\r\n\r\nexport default withKeycloak(ManagePartnersModal);\r\n","import React from 'react';\r\nimport i18n from '../../i18n';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport { Button } from 'carbon-components-react';\r\nimport EditProjectModal from '../Admin/EditProjectModal';\r\nimport ManagePartnersModal from '../Admin/ManagePartnersModal';\r\nimport {isPortalAdmin} from '../../api/helpers';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass ProjectActionItems extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      showMenu: false,\r\n    };\r\n  }\r\n\r\n  handleClick = () => {\r\n    if (!this.state.showMenu) {\r\n      document.addEventListener('mousedown', this.handleOutsideClick, false);\r\n    } else {\r\n      document.removeEventListener('mousedown', this.handleOutsideClick, false);\r\n    }\r\n\r\n    this.setState(prevState => ({\r\n      showMenu: !prevState.showMenu,\r\n    }));\r\n  };\r\n\r\n  handleOutsideClick = e => {\r\n    if (this.node && !this.node.contains(e.target)) {\r\n      this.handleClick();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const isAdmin = isPortalAdmin();\r\n    const actionDivider = <hr style={{margin: '0', border: 'none', borderTop: '1px solid lightgrey'}}/>;\r\n    const topButton = (\r\n      <Button onClick={this.handleClick} style={{padding: '10px 20px'}} kind=\"tertiary\">\r\n        +\r\n      </Button>\r\n    );\r\n    const editProjectSubscription = (\r\n      <>\r\n        <EditProjectModal\r\n          key={this.props.project.id}\r\n          allProjects={this.props.allProjects}\r\n          project={this.props.project}\r\n          serviceUrl={this.props.serviceUrl}\r\n          updateProjectList={this.props.updateProjectList}\r\n        />\r\n        {actionDivider}\r\n      </>\r\n    );\r\n    const subscriptionParam = this.props.subscription ? '&subscription=' + this.props.subscription.id : '';\r\n    const newOrRenewSubscription = (\r\n      <>\r\n        <a\r\n          href={`/entando-de-app/${this.props.locale}/new_or_renew_subscription.page?project=${this.props.project.id}${subscriptionParam}`}\r\n          style={{textDecoration: 'none'}}\r\n        >\r\n          <Button kind=\"ghost\" style={{display: 'block', width: '100%'}} value=\"Subscription Request\">\r\n            {i18n.t('buttons.subscriptionRequest')}\r\n          </Button>\r\n        </a>\r\n        {actionDivider}\r\n      </>\r\n    );\r\n    const managePartners = (\r\n      <>\r\n        <ManagePartnersModal\r\n          key={this.props.project.id}\r\n          project={this.props.project}\r\n          serviceUrl={this.props.serviceUrl}\r\n          updateProjectList={this.props.updateProjectList}\r\n        />\r\n        {actionDivider}\r\n      </>\r\n    );\r\n    const manageUsers = (\r\n      <>\r\n        <a\r\n          href={`/entando-de-app/${this.props.locale}/manage_users.page?project=${this.props.project.id}`}\r\n          style={{textDecoration: 'none'}}\r\n        >\r\n          <Button kind=\"ghost\" style={{display: 'block', width: '100%'}} value=\"Manage Users\">\r\n            {i18n.t('buttons.manageUsers')}\r\n          </Button>\r\n        </a>\r\n        {actionDivider}\r\n      </>\r\n    );\r\n    const manageSubscriptions = (\r\n      <>\r\n        <a\r\n          href={`/entando-de-app/${this.props.locale}/manage_subscriptions.page?project=${this.props.project.id}`}\r\n          style={{textDecoration: 'none'}}\r\n        >\r\n          <Button kind=\"ghost\" style={{display: 'block', width: '100%'}} value=\"Manage Subscriptions\">\r\n            {i18n.t('buttons.manageSubscriptions')}\r\n          </Button>\r\n        </a>\r\n        {actionDivider}\r\n      </>\r\n    );\r\n    const openTicket = (\r\n      <>\r\n        <a\r\n          href={`/entando-de-app/${this.props.locale}/open_service_ticket.page?project=${this.props.project.id}`}\r\n          style={{textDecoration: 'none'}}\r\n        >\r\n          <Button kind=\"ghost\" style={{display: 'block', width: '100%'}} value=\"Open Ticket\">\r\n            {i18n.t('buttons.openTicket')}\r\n          </Button>\r\n        </a>\r\n        {actionDivider}\r\n      </>\r\n    );\r\n    const viewAllTickets = (\r\n      <>\r\n        <a\r\n          href={\r\n            this.props.ticketingSystem.url.substr(0, this.props.ticketingSystem.url.indexOf('/rest')) +\r\n            '/issues/?jql=Organizations=' +\r\n            this.props.project.systemId\r\n          }\r\n          style={{textDecoration: 'none'}}\r\n          target=\"_blank\"\r\n          rel=\"noreferrer\"\r\n        >\r\n          <Button kind=\"ghost\" style={{display: 'block', width: '100%'}} value=\"View All Tickets\">\r\n            {i18n.t('buttons.viewAllTickets')}\r\n          </Button>\r\n        </a>\r\n        {actionDivider}\r\n      </>\r\n    );\r\n    const deleteProject = (\r\n      <>\r\n        <Button\r\n          kind=\"ghost\"\r\n          onClick={e => this.props.handleDeleteProject(e, this.props.project.id)}\r\n          style={{display: 'block', width: '100%', color: 'red'}}\r\n        >\r\n          {i18n.t('buttons.delete')}\r\n        </Button>\r\n        {actionDivider}\r\n      </>\r\n    );\r\n    if (!this.props.subscription) {\r\n      return (\r\n        <>\r\n          {topButton}\r\n          {this.state.showMenu && (\r\n            <div\r\n              className=\"menu\"\r\n              style={{zIndex: '100', position: 'absolute', backgroundColor: 'white'}}\r\n              ref={node => {\r\n                this.node = node;\r\n              }}\r\n            >\r\n              {actionDivider}\r\n              {isAdmin && editProjectSubscription}\r\n              {newOrRenewSubscription}\r\n              {isAdmin && (\r\n                <>\r\n                  {openTicket}\r\n                  {viewAllTickets}\r\n                  {manageSubscriptions}\r\n                  {manageUsers}\r\n                  {managePartners}\r\n                  {deleteProject}\r\n                </>\r\n              )}\r\n            </div>\r\n          )}\r\n        </>\r\n      );\r\n    } else {\r\n      return (\r\n        <>\r\n          {topButton}\r\n          {this.state.showMenu && (\r\n            <div\r\n              className=\"menu\"\r\n              style={{zIndex: '100', position: 'absolute', backgroundColor: 'white'}}\r\n              ref={node => {\r\n                this.node = node;\r\n              }}\r\n            >\r\n              {actionDivider}\r\n              {/*View Project Subscription*/}\r\n              <Link to={`/subscription-details/${this.props.subscription.id}`} style={{textDecoration: 'none'}}>\r\n                <Button kind=\"ghost\" style={{display: 'block', width: '100%'}} value=\"View\">\r\n                  {i18n.t('buttons.view')}\r\n                </Button>\r\n              </Link>\r\n              {actionDivider}\r\n              {isAdmin && editProjectSubscription}\r\n              {openTicket}\r\n              {viewAllTickets}\r\n              {!isAdmin && newOrRenewSubscription}\r\n              {isAdmin && (\r\n                <>\r\n                  {manageSubscriptions}\r\n                  {manageUsers}\r\n                  {managePartners}\r\n                  {deleteProject}\r\n                </>\r\n              )}\r\n            </div>\r\n          )}\r\n        </>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default withKeycloak(ProjectActionItems);\r\n","import {getDefaultOptions, request} from './helpers';\r\nimport moment from 'moment';\r\n\r\nconst resource = 'api/project-subscriptions';\r\n\r\nexport const formatStartDate = startDate => {\r\n  return String(new Date(startDate).toDateString());\r\n};\r\n\r\nexport const formatEndDate = (startDate, lengthInMonths) => {\r\n  const endDate = new Date(startDate).setMonth(new Date(startDate).getMonth() + lengthInMonths);\r\n  return String(new Date(endDate).toDateString());\r\n};\r\n\r\nexport const stripTime = date => {\r\n  return moment(date).format('MM/DD/YYYY');\r\n};\r\n\r\nexport const apiSubscriptionGet = async (serviceUrl, id) => {\r\n  const url = `${serviceUrl}/${resource}/${id}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\n// Project Subscription creation consists of an object containing a projectSubscription, an entandoVersionId, and a\r\n// project id, see SubscriptionCreationRequest.\r\n/**\r\n * Called to create a new project subscription\r\n *\r\n * @param {string} serviceUrl\r\n * @param {ProjectSubscriptionCreation} projectSubscriptionCreation\r\n * @returns\r\n */\r\nexport const apiProjectSubscriptionPost = async (serviceUrl, projectSubscriptionCreation) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n    body: projectSubscriptionCreation ? JSON.stringify(projectSubscriptionCreation) : null,\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiProjectSubscriptionPut = async (serviceUrl, projectSubscriptionCreation) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'PUT',\r\n    body: projectSubscriptionCreation ? JSON.stringify(projectSubscriptionCreation) : null,\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\n// Same format as {projectSubscriptionCreation}\r\nexport const apiRenewSubscription = async (serviceUrl, projectSubscriptionRenew) => {\r\n  const url = `${serviceUrl}/${resource}/renew`;\r\n\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'PUT',\r\n    body: projectSubscriptionRenew ? JSON.stringify(projectSubscriptionRenew) : null,\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n","import {Component} from 'react';\r\nimport {\r\n  DataTable,\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableHeader,\r\n  TableBody,\r\n  TableCell\r\n} from 'carbon-components-react';\r\nimport '../../index.scss';\r\nimport {apiDeleteProjectFromCustomer, apiCustomerGet} from '../../api/customers';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport {Link} from 'react-router-dom';\r\nimport i18n from '../../i18n';\r\nimport {authenticationChanged, getActiveSubscription, isAuthenticated, isPortalAdminOrSupport} from '../../api/helpers';\r\nimport {apiCurrentTicketingSystemGet} from '../../api/ticketingsystem';\r\nimport ProjectActionItems from '../Admin/ProjectActionItems';\r\nimport {formatEndDate, formatStartDate} from '../../api/subscriptions';\r\n\r\nclass CustomerDataTable extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      projects: {},\r\n      ticketingSystem: {},\r\n      action: 'Edit',\r\n      showMenu: {},\r\n    };\r\n    this.headerData = [\r\n      {\r\n        header: i18n.t('customerDashboard.projectName'),\r\n        key: 'projectName',\r\n      },\r\n      {\r\n        header: i18n.t('customerDashboard.partners'),\r\n        key: 'partners',\r\n      },\r\n      {\r\n        header: i18n.t('customerDashboard.entandoVersion'),\r\n        key: 'entandoVersion',\r\n      },\r\n      {\r\n        header: i18n.t('customerDashboard.status'),\r\n        key: 'status',\r\n      },\r\n      {\r\n        header: i18n.t('customerDashboard.startDate'),\r\n        key: 'startDate',\r\n      },\r\n      {\r\n        header: i18n.t('customerDashboard.endDate'),\r\n        key: 'endDate',\r\n      },\r\n      {\r\n        header: i18n.t('customerDashboard.openTickets'),\r\n        key: 'openTickets',\r\n      },\r\n      {\r\n        header: i18n.t('customerDetails.notes'),\r\n        key: 'notes',\r\n      },\r\n      {\r\n        header: i18n.t('customerDashboard.action'),\r\n        key: 'action',\r\n      },\r\n    ];\r\n  }\r\n\r\n  async fetchData() {\r\n    if (isAuthenticated(this.props)) {\r\n      try {\r\n        const customer = await apiCustomerGet(this.props.serviceUrl, this.props.customerId);\r\n        const projects = customer.data.projects;\r\n        const ticketingSystem = await apiCurrentTicketingSystemGet(this.props.serviceUrl);\r\n        this.setState({\r\n          projects: projects,\r\n          ticketingSystem: ticketingSystem,\r\n        });\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n    this.render();\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (isAuthenticated(this.props)) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (authenticationChanged(this.props, prevProps)) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n\r\n  // fix warning: Can't perform a React state update on an unmounted component\r\n  componentWillUnmount() {\r\n    this.setState = (state, callback) => {\r\n      //no-op\r\n    };\r\n  }\r\n\r\n  updateProjectList = () => {\r\n    this.fetchData();\r\n  };\r\n\r\n  async deleteProject(id) {\r\n    if (isAuthenticated(this.props)) {\r\n      return await apiDeleteProjectFromCustomer(this.props.serviceUrl, this.props.customerId, id);\r\n    }\r\n  }\r\n\r\n  handleDeleteProject = (e, id) => {\r\n    e.preventDefault();\r\n    if (window.confirm('Are you sure you want to delete this project?')) {\r\n      this.deleteProject(id)\r\n        .then(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.deleted'),\r\n            submitColour: '#24a148',\r\n          });\r\n          this.props.updateCustomerList();\r\n        })\r\n        .catch(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.error'),\r\n            submitColour: '#da1e28',\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <DataTable rows={[{id: '1'}]} headers={this.headerData}>\r\n          {({rows, headers, getHeaderProps, getTableProps}) => (\r\n            <TableContainer description={i18n.t('customerDashboard.tableDesc')}>\r\n              <Table {...getTableProps()}>\r\n                <TableHead>\r\n                  <TableRow key=\"headerRow\">\r\n                    {headers.map(header => {\r\n                      let result;\r\n                      if (header.header === i18n.t('customerDetails.notes')) {\r\n                        if (isPortalAdminOrSupport()) {\r\n                          result = <TableHeader {...getHeaderProps({header})}>{header.header}</TableHeader>;\r\n                        }\r\n                      } else {\r\n                        result = <TableHeader {...getHeaderProps({ header })}>{header.header}</TableHeader>;\r\n                      }\r\n                      return result;\r\n                    })}\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {Object.keys(this.state.projects).length !== 0\r\n                    ? this.state.projects.map((project, index) => {\r\n                      const subscription = getActiveSubscription(project);\r\n                      if (!subscription) {\r\n                        return (\r\n                          <TableRow key={index}>\r\n                            <TableCell>{project.name}</TableCell>\r\n                            {project.partners.length !== 0 ? (\r\n                              <TableCell>\r\n                                {project.partners.map((partner, partnerIndex) => (\r\n                                  <div key={partnerIndex}>{partner.name}</div>\r\n                                ))}\r\n                              </TableCell>\r\n                            ) : (\r\n                              <TableCell>{i18n.t('userMessages.none')}</TableCell>\r\n                            )}\r\n                            <TableCell>{i18n.t('userMessages.none')}</TableCell>\r\n                            <TableCell>{i18n.t('userMessages.none')}</TableCell>\r\n                            <TableCell>{i18n.t('userMessages.none')}</TableCell>\r\n                            <TableCell>{i18n.t('userMessages.none')}</TableCell>\r\n                            <TableCell>{project.tickets && project.tickets.length}</TableCell>\r\n                            {isPortalAdminOrSupport() ?\r\n                              <TableCell style={{width: '250px'}}>{project.notes}</TableCell> : null}\r\n                            <TableCell>\r\n                              <ProjectActionItems\r\n                                serviceUrl={this.props.serviceUrl}\r\n                                ticketingSystem={this.state.ticketingSystem}\r\n                                locale={this.props.locale}\r\n                                project={project}\r\n                                allProjects={this.state.projects}\r\n                                handleDeleteProject={this.handleDeleteProject}\r\n                                updateProjectList={this.updateProjectList}\r\n                                />\r\n                              </TableCell>\r\n                            </TableRow>\r\n                          );\r\n                        } else {\r\n                          return (\r\n                            <TableRow key={index}>\r\n                              <TableCell>\r\n                                <Link to={`/subscription-details/${subscription.id}`}>{project.name}</Link>\r\n                              </TableCell>\r\n                              {project.partners.length !== 0 ? (\r\n                                <TableCell>\r\n                                  {project.partners.map((partner, partnerIndex) => (\r\n                                    <div key={partnerIndex}>{partner.name}</div>\r\n                                  ))}\r\n                                </TableCell>\r\n                              ) : (\r\n                                <TableCell>{i18n.t('userMessages.none')}</TableCell>\r\n                              )}\r\n                              {subscription.entandoVersion ? (\r\n                                <TableCell>{subscription.entandoVersion.name}</TableCell>\r\n                              ) : (\r\n                                <TableCell>{i18n.t('userMessages.none')}</TableCell>\r\n                              )}\r\n                              <TableCell>{subscription.status}</TableCell>\r\n                              <TableCell>{formatStartDate(subscription.startDate)}</TableCell>\r\n                              <TableCell>{formatEndDate(subscription.startDate, subscription.lengthInMonths)}</TableCell>\r\n                              <TableCell>{project.tickets && project.tickets.length}</TableCell>\r\n                              {isPortalAdminOrSupport() ?\r\n                                <TableCell style={{width: '250px'}}>{project.notes}</TableCell> : null}\r\n                              <TableCell>\r\n                                <ProjectActionItems\r\n                                  serviceUrl={this.props.serviceUrl}\r\n                                  ticketingSystem={this.state.ticketingSystem}\r\n                                  locale={this.props.locale}\r\n                                  subscription={subscription}\r\n                                  project={project}\r\n                                  allProjects={this.state.projects}\r\n                                  handleDeleteProject={this.handleDeleteProject}\r\n                                  updateProjectList={this.updateProjectList}\r\n                                />\r\n                              </TableCell>\r\n                            </TableRow>\r\n                          );\r\n                        }\r\n                      })\r\n                    : null}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          )}\r\n        </DataTable>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withKeycloak(CustomerDataTable);\r\n","import {Component} from 'react';\r\nimport i18n from '../../i18n';\r\nimport { Tile } from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\n\r\nclass CustomerDetails extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      customer: {},\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"customer-details\">\r\n        <Tile style={{margin: '2em 0', minHeight: '0', paddingBottom: '0'}}>\r\n          <div>\r\n            <strong>{i18n.t('customerDashboard.customerId')}</strong> {this.props.customer.id}\r\n          </div>\r\n          <div>\r\n            <strong>{i18n.t('customerDashboard.customerName')}</strong> {this.props.customer.name}\r\n          </div>\r\n        </Tile>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withKeycloak(CustomerDetails);\r\n","import React, {Component} from 'react';\r\nimport i18n from '../../i18n';\r\nimport {ModalWrapper, Form, TextInput, TextArea} from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport {apiCustomerGet, apiCustomerPut} from '../../api/customers';\r\nimport {authenticationChanged, isAuthenticated} from '../../api/helpers';\r\n\r\nclass EditCustomerModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      name: '',\r\n      customerNumber: '',\r\n      contactName: '',\r\n      contactPhone: '',\r\n      contactEmail: '',\r\n      notes: '',\r\n      invalid: {},\r\n      modalId: '',\r\n      buttonId: '',\r\n      submitMsg: '',\r\n      submitColour: 'black',\r\n    };\r\n  }\r\n\r\n  handleValidation() {\r\n    let invalid = {};\r\n    let formIsValid = true;\r\n\r\n    //name\r\n    if (this.state.name === '') {\r\n      formIsValid = false;\r\n      invalid['name'] = true;\r\n    }\r\n\r\n    //customerNumber\r\n    if (this.state.customerNumber === '') {\r\n      formIsValid = false;\r\n      invalid['customerNumber'] = true;\r\n    }\r\n\r\n    //contactEmail\r\n    if (typeof this.state.contactEmail !== 'undefined') {\r\n      let lastAtPos = this.state.contactEmail.lastIndexOf('@');\r\n      let lastDotPos = this.state.contactEmail.lastIndexOf('.');\r\n\r\n      if (\r\n        !(\r\n          lastAtPos < lastDotPos &&\r\n          lastAtPos > 0 &&\r\n          this.state.contactEmail.indexOf('@@') === -1 &&\r\n          lastDotPos > 2 &&\r\n          this.state.contactEmail.length - lastDotPos > 2\r\n        )\r\n      ) {\r\n        formIsValid = false;\r\n        invalid['contactEmail'] = true;\r\n      }\r\n    }\r\n\r\n    this.setState({ invalid: invalid });\r\n    return formIsValid;\r\n  }\r\n\r\n  handleChanges = e => {\r\n    const input = e.target;\r\n    const name = input.name;\r\n    const value = input.value;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  async updateCustomer(customer) {\r\n    if (isAuthenticated(this.props)) {\r\n      return await apiCustomerPut(this.props.serviceUrl, customer);\r\n    }\r\n  }\r\n\r\n  getCustomerDetails = customerId => {\r\n    this.getCustomer(customerId);\r\n  };\r\n\r\n  async getCustomer(customerId) {\r\n    if (isAuthenticated(this.props)) {\r\n      const customer = (await apiCustomerGet(this.props.serviceUrl, customerId)).data;\r\n      this.setState({\r\n        name: customer.name,\r\n        customerNumber: customer.customerNumber,\r\n        contactName: customer.contactName,\r\n        contactPhone: customer.contactPhone,\r\n        contactEmail: customer.contactEmail,\r\n        notes: customer.notes,\r\n        modalId: 'modal-form-customer-edit-' + customer.id,\r\n        buttonId: 'edit-customer-button-' + customer.id,\r\n      });\r\n    }\r\n  }\r\n\r\n  handleFormSubmit = () => {\r\n    const formIsValid = this.handleValidation();\r\n\r\n    if (formIsValid) {\r\n      const customer = {\r\n        id: this.props.customer.id,\r\n        name: this.state.name,\r\n        customerNumber: this.state.customerNumber,\r\n        contactName: this.state.contactName,\r\n        contactPhone: this.state.contactPhone,\r\n        contactEmail: this.state.contactEmail,\r\n        notes: this.state.notes,\r\n      };\r\n      this.updateCustomer(customer)\r\n        .then(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.updated'),\r\n            submitColour: '#24a148',\r\n          });\r\n          this.props.updateCustomerList();\r\n          this.getCustomerDetails(this.props.customer.id);\r\n        })\r\n        .catch(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.error'),\r\n            submitColour: '#da1e28',\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  clearValues = () => {\r\n    const { keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n    const customerModalElement = document.querySelector('#' + this.state.modalId);\r\n    if (!customerModalElement.className.includes('is-visible') && authenticated) {\r\n      this.setState({\r\n        name: this.props.customer.name,\r\n        customerNumber: this.props.customer.customerNumber,\r\n        contactName: this.props.customer.contactName,\r\n        contactPhone: this.props.customer.contactPhone,\r\n        contactEmail: this.props.customer.contactEmail,\r\n        notes: this.props.customer.notes,\r\n        invalid: {},\r\n      });\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (isAuthenticated(this.props)) {\r\n      if (this.props.customerId) {\r\n        this.getCustomerDetails(this.props.customerId);\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (authenticationChanged(this.props, prevProps)) {\r\n      this.getCustomerDetails(this.props.customerId);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const modalConfirmation = (\r\n      <div className=\"bx--modal-header\">\r\n        <p style={{color: this.state.submitColour}}>{this.state.submitMsg}</p>\r\n      </div>\r\n    );\r\n    const modalId = this.state.modalId;\r\n    const buttonClassName = 'bx--btn bx--btn--ghost edit-customer-button-' + this.props.customerId;\r\n    return (\r\n      modalId && (\r\n        <ModalWrapper\r\n          buttonTriggerText={i18n.t('buttons.edit')}\r\n          modalHeading={i18n.t('adminDashboard.editCustomer.title')}\r\n          buttonTriggerClassName={buttonClassName}\r\n          className=\"modal-form\"\r\n          id={modalId}\r\n          handleSubmit={this.handleFormSubmit}\r\n          primaryButtonText={i18n.t('modalText.save')}\r\n          secondaryButtonText={i18n.t('modalText.cancel')}\r\n        >\r\n          {modalConfirmation}\r\n          <div className=\"form-container\">\r\n            <Form onSubmit={this.handleFormSubmit} id={'form-' + modalId}>\r\n              <TextInput\r\n                id={'name' + modalId}\r\n                name=\"name\"\r\n                labelText={i18n.t('adminDashboard.addCustomer.customerName') + ' *'}\r\n                value={this.state.name}\r\n                onChange={this.handleChanges}\r\n                invalidText={i18n.t('validation.invalid.required')}\r\n                invalid={this.state.invalid['name']}\r\n              />\r\n              <TextInput\r\n                id={'customerNumber' + modalId}\r\n                name=\"customerNumber\"\r\n                labelText={i18n.t('adminDashboard.addCustomer.customerNumber') + ' *'}\r\n                value={this.state.customerNumber}\r\n                onChange={this.handleChanges}\r\n                invalidText={i18n.t('validation.invalid.required')}\r\n                invalid={this.state.invalid['customerNumber']}\r\n              />\r\n              <TextInput\r\n                id={'contactName' + modalId}\r\n                name=\"contactName\"\r\n                labelText={i18n.t('adminDashboard.addCustomer.contactName')}\r\n                value={this.state.contactName}\r\n                onChange={this.handleChanges}\r\n              />\r\n              <TextInput\r\n                id={'contactPhone' + modalId}\r\n                name=\"contactPhone\"\r\n                labelText={i18n.t('adminDashboard.addCustomer.contactPhone')}\r\n                value={this.state.contactPhone}\r\n                onChange={this.handleChanges}\r\n              />\r\n              <TextInput\r\n                id={'contactEmail' + modalId}\r\n                name=\"contactEmail\"\r\n                labelText={i18n.t('adminDashboard.addCustomer.contactEmail') + ' *'}\r\n                value={this.state.contactEmail}\r\n                onChange={this.handleChanges}\r\n                invalidText={i18n.t('validation.invalid.email')}\r\n                invalid={this.state.invalid['contactEmail']}\r\n              />\r\n              <TextArea\r\n                name=\"notes\"\r\n                labelText={i18n.t('adminDashboard.addCustomer.notes')}\r\n                value={this.state.notes}\r\n                onChange={this.handleChanges}\r\n              />\r\n            </Form>\r\n          </div>\r\n          {modalConfirmation}\r\n        </ModalWrapper>\r\n      )\r\n    );\r\n  }\r\n}\r\n\r\nexport default withKeycloak(EditCustomerModal);\r\n","import {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {AccordionItem, Button} from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport {apiCustomerGet, apiCustomerDelete} from '../../api/customers';\r\nimport CustomerDataTable from './CustomerDataTable';\r\nimport CustomerDetails from './CustomerDetails';\r\nimport {\r\n  isPortalAdminOrSupport,\r\n  isPortalAdmin,\r\n  isPortalCustomer,\r\n  isAuthenticated,\r\n  authenticationChanged\r\n} from '../../api/helpers';\r\nimport EditCustomerModal from '../Admin/EditCustomerModal';\r\nimport i18n from '../../i18n';\r\n\r\nclass CustomerAccordian extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      projects: {},\r\n      customer: {},\r\n      authenticated: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (isAuthenticated(this.props)) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (authenticationChanged(this.props, prevProps)) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n\r\n  async fetchData() {\r\n    const customerId = this.props.customerId;\r\n    try {\r\n      const customer = await apiCustomerGet(this.props.serviceUrl, customerId);\r\n      this.setState({\r\n        customer: customer.data,\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  async deleteCustomer() {\r\n    return await apiCustomerDelete(this.props.serviceUrl, this.state.customer.id);\r\n  }\r\n\r\n  handleDelete() {\r\n    if (window.confirm('Are you sure you want to delete this customer?')) {\r\n      this.deleteCustomer().then(() => {\r\n        this.props.updateCustomerList();\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div>\r\n          {isPortalCustomer() && <CustomerDetails serviceUrl={this.props.serviceUrl} customer={this.state.customer}/>}\r\n          <AccordionItem title={this.props.title} open={this.props.accordionOpened}>\r\n            <div style={{display: 'flex'}}>\r\n              {isPortalAdminOrSupport() && (\r\n                <Link style={{textDecoration: 'none'}} to={`/customer-details/${this.state.customer.id}`}>\r\n                  <Button kind=\"ghost\">{i18n.t('buttons.viewDetails')}</Button>\r\n                </Link>\r\n              )}\r\n              {isPortalAdmin() && (\r\n                <div style={{display: 'flex'}}>\r\n                  <EditCustomerModal\r\n                    serviceUrl={this.props.serviceUrl}\r\n                    customer={this.state.customer}\r\n                    key={this.state.customer.id}\r\n                    updateCustomerList={this.props.updateCustomerList}\r\n                    customerId={this.state.customer.id}\r\n                  />\r\n                  <Button kind=\"ghost\" style={{color: 'red'}} onClick={() => this.handleDelete()}>\r\n                    {i18n.t('buttons.delete')}\r\n                  </Button>\r\n                </div>\r\n              )}\r\n            </div>\r\n            <CustomerDataTable\r\n              key={new Date().getTime()}\r\n              serviceUrl={this.props.serviceUrl}\r\n              customerId={this.props.customerId}\r\n              locale={this.props.locale}\r\n              updateCustomerList={this.props.updateCustomerList}\r\n            />\r\n          </AccordionItem>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withKeycloak(CustomerAccordian);\r\n","import React from 'react';\r\nimport i18n from '../../i18n';\r\nimport { Accordion, PaginationNav, Search, Tile } from 'carbon-components-react';\r\nimport AddCustomerModal from './AddCustomerModal';\r\nimport AddPartnerModal from './AddPartnerModal';\r\nimport AddProjectModal from './AddProjectModal';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport {apiCustomersGet} from '../../api/customers';\r\nimport CustomerAccordian from '../Customer/CustomerAccordian';\r\nimport {\r\n  authenticationChanged,\r\n  isPortalAdmin,\r\n  isPortalSupport,\r\n  isPortalPartner,\r\n  isPortalCustomer,\r\n  isPortalUser,\r\n  isAuthenticated,\r\n} from '../../api/helpers';\r\n\r\nclass AdminDashboard extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      customers: {},\r\n      role: '',\r\n      filteredCustomers: {},\r\n      currentPage: 0,\r\n      test: '',\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchData();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (authenticationChanged(this.props, prevProps)) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n\r\n  async fetchData() {\r\n    if (isAuthenticated(this.props)) {\r\n      const customers = await apiCustomersGet(this.props.serviceUrl);\r\n      this.setState({\r\n        customers: customers.data,\r\n        filteredCustomers: customers.data,\r\n      });\r\n    }\r\n  }\r\n\r\n  handleSearch = event => {\r\n    if (event.key === 'Enter') {\r\n      //Note: should refactor this to preform filtering in db\r\n      const newFilteredState = this.state.customers.filter(customer =>\r\n        customer.name.toLowerCase().includes(event.target.value.toLowerCase())\r\n      );\r\n      this.setState({\r\n        filteredCustomers: newFilteredState,\r\n        currentPage: 0,\r\n      });\r\n    } else {\r\n      if (event.target.value === '' || event.target.value === undefined) {\r\n        this.setState({\r\n          filteredCustomers: this.state.customers,\r\n        });\r\n      }\r\n    }\r\n    this.forceUpdate();\r\n  };\r\n\r\n  updateCustomerList = () => {\r\n    this.fetchData();\r\n  };\r\n\r\n  render() {\r\n    var numberOfPages = 1;\r\n    if (Object.keys(this.state.filteredCustomers).length !== 0) {\r\n      numberOfPages = Math.ceil(this.state.filteredCustomers.length / 5);\r\n    } else {\r\n      numberOfPages = 1;\r\n    }\r\n\r\n    const props = () => ({\r\n      loop: Boolean(false),\r\n      page: Number(this.state.currentPage),\r\n      totalItems: Number(numberOfPages),\r\n      itemsShown: Number(1),\r\n      onChange: event => this.setState({ currentPage: event }),\r\n    });\r\n\r\n    return (\r\n      <div className=\"admin-dashboard\">\r\n        {isPortalAdmin() ? (\r\n          <h3 className=\"pageTitle\">{i18n.t('adminDashboard.adminTitle')}</h3>\r\n        ) : isPortalSupport() ? (\r\n          <h3 className=\"pageTitle\">{i18n.t('adminDashboard.supportTitle')}</h3>\r\n        ) : isPortalCustomer() ? (\r\n          <h3 className=\"pageTitle\">{i18n.t('adminDashboard.customerTitle')}</h3>\r\n        ) : isPortalPartner() ? (\r\n          <h3 className=\"pageTitle\">{i18n.t('adminDashboard.partnerTitle')}</h3>\r\n        ) : null}\r\n        {isPortalAdmin() || isPortalSupport() || isPortalPartner() ? (\r\n          <Tile>\r\n            <p className=\"title\">{i18n.t('adminDashboard.allCustomers')}</p>\r\n            <div className=\"bx--row\">\r\n              <div className=\"bx--col\">\r\n                <Search\r\n                  onChange={this.handleSearch}\r\n                  id=\"search\"\r\n                  placeholder={i18n.t('adminDashboard.searchText')}\r\n                  labelText={i18n.t('adminDashboard.searchLabel')}\r\n                  onKeyPress={this.handleSearch}\r\n                />\r\n              </div>\r\n              {isPortalAdmin() ? (\r\n                <div className=\"bx--col\">\r\n                  <div>\r\n                    <AddPartnerModal serviceUrl={this.props.serviceUrl} updateCustomerList={this.updateCustomerList}/>\r\n                    <AddCustomerModal serviceUrl={this.props.serviceUrl} updateCustomerList={this.updateCustomerList}/>\r\n                    <AddProjectModal\r\n                      serviceUrl={this.props.serviceUrl}\r\n                      updateCustomerList={this.updateCustomerList}\r\n                      allCustomers={this.state.customers}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n          </Tile>\r\n        ) : null}\r\n\r\n        <div className=\"form-container\">\r\n          <Accordion>\r\n            {Object.keys(this.state.customers).length !== 0\r\n              ? this.state.filteredCustomers.map((customer, index) => {\r\n                  // Pagination for Admin and Support roles (5 items per page)\r\n                  var indexOfLastItem = (this.state.currentPage + 1) * 5 - 1;\r\n                  var firstIndexOfCurrentPage = this.state.currentPage * 5;\r\n                  var accordionOpened = this.state.customers.length === 1;\r\n\r\n                  if (isPortalUser()) {\r\n                    if (index >= firstIndexOfCurrentPage && index <= indexOfLastItem) {\r\n                      return (\r\n                        <CustomerAccordian\r\n                          key={customer.id}\r\n                          serviceUrl={this.props.serviceUrl}\r\n                          customerId={customer.id}\r\n                          title={customer.name}\r\n                          updateCustomerList={this.updateCustomerList}\r\n                          locale={this.props.locale}\r\n                          accordionOpened={accordionOpened}\r\n                        />\r\n                      );\r\n                    } else {\r\n                      return null;\r\n                    }\r\n                  } else {\r\n                    return null;\r\n                  }\r\n                })\r\n              : null}\r\n          </Accordion>\r\n          <PaginationNav {...props()} className=\"pagination-right\" />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withKeycloak(AdminDashboard);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport AdminDashboard from '../components/Admin/AdminDashboard';\nimport '../index.scss';\n\nimport KeycloakContext from '../auth/KeycloakContext';\n\nimport {subscribeToWidgetEvent} from '../helpers/widgetEvents';\nimport {KEYCLOAK_EVENT_TYPE} from './widgetEventTypes';\nimport * as Locale from '../i18n';\n\nconst getKeycloakInstance = () =>\n  (window && window.entando && window.entando.keycloak && {...window.entando.keycloak, initialized: true}) || {\n    initialized: false,\n  };\n\nconst ATTRIBUTES = {\n  hidden: 'hidden',\n  locale: 'locale',\n  paginationMode: 'pagination-mode',\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\n  serviceUrl: 'service-url',\n};\n\nclass AdminDashboardElement extends HTMLElement {\n  container;\n\n  mountPoint;\n\n  unsubscribeFromKeycloakEvent;\n\n  keycloak = getKeycloakInstance();\n\n  connectedCallback() {\n    this.mountPoint = document.createElement('div');\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\n\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\n      this.render();\n    });\n\n    this.render();\n\n    //retargetEvents(shadowRoot);\n    this.appendChild(this.mountPoint);\n  }\n\n  render() {\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\n    const locale = this.getAttribute(ATTRIBUTES.locale) || '';\n    Locale.setLocale(locale);\n\n    ReactDOM.render(\n      <KeycloakContext.Provider value={this.keycloak}>\n        <AdminDashboard serviceUrl={serviceUrl} locale={locale}/>\n      </KeycloakContext.Provider>,\n      this.mountPoint\n    );\n  }\n}\n\ncustomElements.define('cp-admin-dashboard-widget', AdminDashboardElement);\n","import { getDefaultOptions, request, getUrl } from './helpers';\n\nconst resource = 'api/tickets';\n\nexport const apiTicketDelete = async (serviceUrl, id) => {\n  const url = `${serviceUrl}/${resource}/${id}`;\n  const options = {\n    ...getDefaultOptions(),\n    method: 'DELETE',\n  };\n  return request(url, options);\n};\n\nexport const apiTicketsGet = async serviceUrl => {\n  const url = getUrl(`${serviceUrl}/${resource}`);\n  const options = {\n    ...getDefaultOptions(),\n    method: 'GET',\n  };\n\n  return request(url, options);\n};\n\nexport const apiTicketPost = async (serviceUrl, ticket) => {\n  const url = `${serviceUrl}/${resource}`;\n  const options = {\n    ...getDefaultOptions(),\n    method: 'POST',\n    body: ticket ? JSON.stringify(ticket) : null,\n  };\n  return request(url, options);\n};\n\nconst jiraResource = 'api/tickets/ticketingsystem';\n\nexport const apiJiraTicketsGet = async (serviceUrl, projectId) => {\n  const url = `${serviceUrl}/${jiraResource}/${projectId}`;\n  const options = {\n    ...getDefaultOptions(),\n    method: 'GET',\n  };\n\n  return request(url, options);\n};\n\nexport const apiJiraTicketPost = async (serviceUrl, projectId, ticket) => {\n  const url = `${serviceUrl}/${jiraResource}/${projectId}`;\n  const options = {\n    ...getDefaultOptions(),\n    method: 'POST',\n    body: ticket ? JSON.stringify(ticket) : null,\n  };\n  return request(url, options);\n};\n","import React, { Component } from 'react';\r\nimport {\r\n  DataTable,\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableHeader,\r\n  TableBody,\r\n  TableCell,\r\n  PaginationNav,\r\n  Button,\r\n} from 'carbon-components-react';\r\nimport {apiJiraTicketsGet} from '../../api/tickets';\r\nimport {apiCurrentTicketingSystemGet} from '../../api/ticketingsystem';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport {apiProjectGet} from '../../api/projects';\r\nimport {authenticationChanged, isAuthenticated, isPortalUser} from '../../api/helpers';\r\nimport i18n from '../../i18n';\r\n\r\nclass TicketList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      tickets: {},\r\n      project: {},\r\n      ticketingSystem: {},\r\n      currentPage: 0,\r\n    };\r\n    this.headerData = [\r\n      {\r\n        header: i18n.t('ticketDetails.issue'),\r\n        key: 'issue',\r\n      },\r\n      {\r\n        header: i18n.t('ticketDetails.summary'),\r\n        key: 'summary',\r\n      },\r\n      {\r\n        header: i18n.t('ticketDetails.status'),\r\n        key: 'status',\r\n      },\r\n      {\r\n        header: i18n.t('ticketDetails.type'),\r\n        key: 'type',\r\n      },\r\n      {\r\n        header: i18n.t('ticketDetails.priority'),\r\n        key: 'priority',\r\n      },\r\n      {\r\n        header: i18n.t('ticketDetails.created'),\r\n        key: 'created',\r\n      },\r\n      {\r\n        header: i18n.t('ticketDetails.updated'),\r\n        key: 'updated',\r\n      },\r\n      {\r\n        header: i18n.t('ticketDetails.link'),\r\n        key: 'link',\r\n      },\r\n    ];\r\n  }\r\n\r\n  async fetchData() {\r\n    if (isPortalUser()) {\r\n      try {\r\n        const project = (await apiProjectGet(this.props.serviceUrl, this.props.projectId)).data;\r\n        const ticketingSystem = await apiCurrentTicketingSystemGet(this.props.serviceUrl);\r\n        const tickets = await apiJiraTicketsGet(this.props.serviceUrl, project.id);\r\n        this.setState({\r\n          tickets: tickets,\r\n          project: project,\r\n          ticketingSystem: ticketingSystem,\r\n        });\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (isAuthenticated(this.props)) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (authenticationChanged(this.props, prevProps)) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var numberOfPages = 1;\r\n    if (Object.keys(this.state.tickets).length !== 0) {\r\n      numberOfPages = Math.ceil(this.state.tickets.data.length / 10);\r\n    }\r\n\r\n    const paginationProps = () => ({\r\n      loop: Boolean(false),\r\n      page: Number(this.state.currentPage),\r\n      totalItems: Number(numberOfPages),\r\n      itemsShown: Number(1),\r\n      onChange: event => this.setState({currentPage: event}),\r\n    });\r\n    const ticketSystemUrl = this.state.ticketingSystem.url;\r\n    const ticketingSystemBaseUrl = ticketSystemUrl != null ? ticketSystemUrl.substr(0, ticketSystemUrl.indexOf('/rest')) : null;\r\n\r\n    return (\r\n      <div>\r\n        {this.state.project.id && (\r\n          <div>\r\n            {/*View All Ticket*/}\r\n            <a\r\n              href={ticketingSystemBaseUrl + '/issues/?jql=Organizations=' + this.state.project.systemId}\r\n              style={{textDecoration: 'none'}}\r\n              target=\"_blank\"\r\n              rel=\"noreferrer\"\r\n            >\r\n              <Button kind=\"ghost\" style={{display: 'block', width: '100%'}} value=\"Open Ticket\">\r\n                {i18n.t('buttons.viewAllTickets')}\r\n              </Button>\r\n            </a>\r\n            {/*Open Ticket*/}\r\n            <a\r\n              href={`/entando-de-app/${this.props.locale}/open_service_ticket.page?project=${this.state.project.id}`}\r\n              style={{textDecoration: 'none'}}\r\n            >\r\n              <Button kind=\"ghost\" style={{display: 'block', width: '100%'}} value=\"Open Ticket\">\r\n                {i18n.t('buttons.openTicket')}\r\n              </Button>\r\n            </a>\r\n          </div>\r\n        )}\r\n        <DataTable rows={[{id: '1'}]} headers={this.headerData}>\r\n          {({rows, headers, getHeaderProps, getTableProps}) => (\r\n            <TableContainer title={i18n.t('ticketDetails.listOfTickets')}>\r\n              <Table {...getTableProps()}>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    {headers.map(header => (\r\n                      <TableHeader {...getHeaderProps({header})}>{header.header}</TableHeader>\r\n                    ))}\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {Object.keys(this.state.tickets).length !== 0 ? (\r\n                    this.state.tickets.data.map((ticket, index) => {\r\n                      const indexOfLastItem = (this.state.currentPage + 1) * 10 - 1;\r\n                      const firstIndexOfCurrentPage = this.state.currentPage * 10;\r\n                      const ticketUrl = ticketingSystemBaseUrl + '/browse/' + ticket.systemId;\r\n\r\n                      if (index >= firstIndexOfCurrentPage && index <= indexOfLastItem) {\r\n                        return (\r\n                          <TableRow key={ticket.id}>\r\n                            <TableCell>\r\n                              <a href={ticketUrl} target=\"_blank\" rel=\"noreferrer\">\r\n                                {ticket.systemId}\r\n                              </a>\r\n                            </TableCell>\r\n                            <TableCell>{ticket.summary}</TableCell>\r\n                            <TableCell>{ticket.status}</TableCell>\r\n                            <TableCell>{ticket.type}</TableCell>\r\n                            <TableCell>{ticket.priority}</TableCell>\r\n                            <TableCell>{new Date(ticket.createDate).toDateString()}</TableCell>\r\n                            <TableCell>{new Date(ticket.updateDate).toDateString()}</TableCell>\r\n                            <TableCell>\r\n                              <a href={ticketUrl} target=\"_blank\" rel=\"noreferrer\">\r\n                                {i18n.t('ticketDetails.viewTicket')}\r\n                              </a>\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        );\r\n                      } else {\r\n                        return null;\r\n                      }\r\n                    })\r\n                  ) : (\r\n                    <TableRow/>\r\n                  )}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          )}\r\n        </DataTable>\r\n        <PaginationNav {...paginationProps()} className=\"pagination-right\"/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withKeycloak(TicketList);\r\n","import React from 'react';\r\nimport TicketList from './TicketList';\r\nimport {Tile} from 'carbon-components-react';\r\nimport {apiSubscriptionGet, formatStartDate, formatEndDate} from '../../api/subscriptions';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport {apiGetProjectUsers, apiProjectGet} from '../../api/projects';\r\nimport {isPortalAdminOrSupport, isPortalUser, authenticationChanged} from '../../api/helpers';\r\nimport i18n from '../../i18n';\r\n\r\nconst subscriptionData = {\r\n  type: 'Product Support Subscription Entando Platform',\r\n  license: 'Free Commercial Open Source',\r\n};\r\n\r\nclass Subscription extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: true,\r\n      subscription: {},\r\n      users: {},\r\n      project: {},\r\n      customer: {},\r\n    };\r\n  }\r\n\r\n  async fetchData() {\r\n    if (isPortalUser()) {\r\n      try {\r\n        let users = {};\r\n        let project = {};\r\n        const subscription = await apiSubscriptionGet(this.props.serviceUrl, this.props.match.params.id);\r\n        if (subscription.data.project) {\r\n          project = await apiProjectGet(this.props.serviceUrl, subscription.data.project.id);\r\n          users = await apiGetProjectUsers(this.props.serviceUrl, project.data.id);\r\n        }\r\n        this.setState({\r\n          subscription: subscription,\r\n          project: project,\r\n          customer: project.customer,\r\n          users: users,\r\n          loading: false,\r\n        });\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n  }\r\n\r\n  updateSubscription = () => {\r\n    this.fetchData();\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (isPortalUser()) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (authenticationChanged(this.props, prevProps) && isPortalUser()) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { type, license } = subscriptionData;\r\n\r\n    if (!this.state.loading) {\r\n      if (isPortalUser()) {\r\n        if (Object.keys(this.state.subscription).length !== 0 && Object.keys(this.state.project).length !== 0) {\r\n          return (\r\n            <div className=\"subscription-details\">\r\n              <div>\r\n                <Tile>\r\n                  <div className=\"bx--grid\">\r\n                    <div className=\"bx--row\">\r\n                      <div className=\"bx--col\">\r\n                        <div>\r\n                          <strong>{i18n.t('customerDashboard.customerName')}:</strong> {this.state.project.data.customer.name}\r\n                        </div>\r\n                        <div>\r\n                          <strong>{i18n.t('customerDashboard.projectName')}:</strong> {this.state.project.data.name}\r\n                        </div>\r\n                        <div>\r\n                          <strong>{i18n.t('subscriptionDetails.description')}:</strong> {this.state.subscription.data.project.description}\r\n                        </div>\r\n                        <div>\r\n                          <strong>{i18n.t('subscriptionDetails.partners')}:</strong>\r\n                          {this.state.project.data !== '' && Object.keys(this.state.project.data.partners).length !== 0 ? (\r\n                            <>\r\n                              {this.state.project.data.partners.map((partner, index) => (\r\n                                <div key={index}>\r\n                                  {' '}\r\n                                  {index === this.state.project.data.partners.length - 1 ? partner.name : partner.name + ', '}{' '}\r\n                                </div>\r\n                              ))}\r\n                            </>\r\n                          ) : (\r\n                            <> {i18n.t('userMessages.none')} </>\r\n                          )}\r\n                        </div>\r\n                        <div>\r\n                          <strong>{i18n.t('subscriptionDetails.type')}:</strong> {type}\r\n                        </div>\r\n                        {isPortalAdminOrSupport() ? (\r\n                          <div>\r\n                            <strong>{i18n.t('subscriptionDetails.notes')}:</strong> {this.state.subscription.data.notes}\r\n                          </div>\r\n                        ) : null}\r\n                      </div>\r\n                      <div className=\"bx--col\">\r\n                        <div>\r\n                          <strong>{i18n.t('subscriptionDetails.status')}:</strong> {this.state.subscription.data.status}\r\n                        </div>\r\n                        <div>\r\n                          <strong>{i18n.t('subscriptionDetails.level')}:</strong> {this.state.subscription.data.level}\r\n                        </div>\r\n                        <div>\r\n                          <strong>{i18n.t('subscriptionDetails.startDate')}:</strong>{' '}\r\n                          {formatStartDate(this.state.subscription.data.startDate)}\r\n                        </div>\r\n                        <div>\r\n                          <strong>{i18n.t('subscriptionDetails.endDate')}:</strong>{' '}\r\n                          {formatEndDate(this.state.subscription.data.startDate, this.state.subscription.data.lengthInMonths)}\r\n                        </div>\r\n                        <div>\r\n                          <strong>{i18n.t('subscriptionDetails.license')}:</strong> {license}\r\n                        </div>\r\n                        <div>\r\n                          <strong>{i18n.t('subscriptionDetails.assignedUsers')}:</strong>\r\n                          {this.state.project.data !== '' && Object.keys(this.state.users.data).length !== 0 ? (\r\n                            <>\r\n                              {this.state.users.data.map((user, index) => (\r\n                                <div\r\n                                  key={index}> {index === this.state.users.data.length - 1 ? user.username : user.username + ', '} </div>\r\n                              ))}\r\n                            </>\r\n                          ) : (\r\n                            <> {i18n.t('userMessages.none')} </>\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </Tile>\r\n                <br/>\r\n                <TicketList projectId={this.state.project.data.id} serviceUrl={this.props.serviceUrl}\r\n                            locale={this.props.locale}/>\r\n              </div>\r\n            </div>\r\n          );\r\n        } else {\r\n          return <div>{i18n.t('userMessages.unauthorized')}</div>;\r\n        }\r\n      } else {\r\n        return <div>{i18n.t('userMessages.unauthorized')}</div>;\r\n      }\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport default withKeycloak(Subscription);\r\n","import React from 'react';\r\nimport {Tile} from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport {apiCustomerGet} from '../../api/customers';\r\nimport {authenticationChanged, isAuthenticated, isPortalAdminOrSupport} from '../../api/helpers';\r\nimport i18n from '../../i18n';\r\nimport CustomerDataTable from './CustomerDataTable';\r\n\r\nclass CustomerProjectList extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: true,\r\n      customer: {},\r\n    };\r\n  }\r\n\r\n  async fetchData() {\r\n    if (isAuthenticated(this.props)) {\r\n      try {\r\n        const customer = await apiCustomerGet(this.props.serviceUrl, this.props.match.params.id);\r\n        this.setState({\r\n          customer: customer.data,\r\n          loading: false,\r\n        });\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (isPortalAdminOrSupport()) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (authenticationChanged(this.props, prevProps)) {\r\n      if (isPortalAdminOrSupport()) {\r\n        this.fetchData();\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (!this.state.loading) {\r\n      if (isPortalAdminOrSupport()) {\r\n        const customer = this.state.customer;\r\n        if (customer) {\r\n          return (\r\n            <div>\r\n              <Tile>\r\n                <div className=\"bx--grid\">\r\n                  <div className=\"bx--row\">\r\n                    <div className=\"bx--col\">\r\n                      <p>\r\n                        <strong>{i18n.t('customerDetails.id')}: </strong> {customer.id}\r\n                      </p>\r\n                      <p>\r\n                        <strong>{i18n.t('customerDetails.name')}: </strong> {customer.name}\r\n                      </p>\r\n                      <p>\r\n                        <strong>{i18n.t('customerDetails.notes')}: </strong> {customer.notes}\r\n                      </p>\r\n                    </div>\r\n                    <div className=\"bx--col\">\r\n                      <p>\r\n                        <strong>{i18n.t('customerDetails.contactName')}: </strong> {customer.contactName}\r\n                      </p>\r\n                      <p>\r\n                        <strong>{i18n.t('customerDetails.contactPhone')}: </strong> {customer.contactPhone}\r\n                      </p>\r\n                      <p>\r\n                        <strong>{i18n.t('customerDetails.contactEmail')}: </strong> {customer.contactEmail}\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </Tile>\r\n              <CustomerDataTable serviceUrl={this.props.serviceUrl} customerId={customer.id}\r\n                                 locale={this.props.locale}/>\r\n            </div>\r\n          );\r\n        } else {\r\n          return <p>{i18n.t('userMessages.loading')}...</p>;\r\n        }\r\n      } else {\r\n        return <p>{i18n.t('userMessages.unauthorized')}</p>;\r\n      }\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport default withKeycloak(CustomerProjectList);\r\n","import React, {Component} from 'react';\r\nimport {HashRouter, Route, Switch} from 'react-router-dom';\r\nimport AdminDashboard from './Admin/AdminDashboard';\r\nimport Subscription from './SubscriptionDetails/Subscription';\r\nimport withKeycloak from '../auth/withKeycloak';\r\nimport {AuthenticatedView, UnauthenticatedView} from '../auth/KeycloakViews';\r\nimport {authenticationChanged, isAuthenticated, isPortalUser} from '../api/helpers';\r\nimport CustomerProjectList from './Customer/CustomerProjectList';\r\nimport i18n from '../i18n';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: true,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (isAuthenticated(this.props)) {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (authenticationChanged(this.props, prevProps)) {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var { keycloak } = this.props;\r\n\r\n    if (!this.state.loading) {\r\n      if (isPortalUser()) {\r\n        return (\r\n          <div id=\"entando-customer-portal\">\r\n            <AuthenticatedView keycloak={keycloak}>\r\n              <HashRouter>\r\n                <Switch>\r\n                  <Route\r\n                    path={'**/customer-details/:id'}\r\n                    render={props => <CustomerProjectList {...props} serviceUrl={this.props.serviceUrl} locale={this.props.locale} />}\r\n                  />\r\n                  <Route\r\n                    path={'**/subscription-details/:id'}\r\n                    render={props => <Subscription {...props} serviceUrl={this.props.serviceUrl} locale={this.props.locale} />}\r\n                  />\r\n                  <Route\r\n                    path=\"**/\"\r\n                    render={props => <AdminDashboard {...props} serviceUrl={this.props.serviceUrl} locale={this.props.locale} />}\r\n                  />\r\n                </Switch>\r\n              </HashRouter>\r\n            </AuthenticatedView>\r\n            <UnauthenticatedView keycloak={keycloak}>\r\n              <p>{i18n.t('userMessages.unauthorized')}</p>\r\n            </UnauthenticatedView>\r\n          </div>\r\n        );\r\n      } else {\r\n        return <p>{i18n.t('userMessages.unauthorized')}</p>;\r\n      }\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport default withKeycloak(App);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '../index.scss';\nimport * as Locale from '../i18n';\n\nimport KeycloakContext from '../auth/KeycloakContext';\nimport App from '../components/App';\n\nimport { subscribeToWidgetEvent } from '../helpers/widgetEvents';\nimport { KEYCLOAK_EVENT_TYPE } from './widgetEventTypes';\n\nconst getKeycloakInstance = () =>\n  (window && window.entando && window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\n    initialized: false,\n  };\n\nconst ATTRIBUTES = {\n  hidden: 'hidden',\n  locale: 'locale',\n  paginationMode: 'pagination-mode',\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\n  serviceUrl: 'service-url',\n};\n\nclass AppElement extends HTMLElement {\n  container;\n\n  mountPoint;\n\n  unsubscribeFromKeycloakEvent;\n\n  keycloak = getKeycloakInstance();\n\n  connectedCallback() {\n    this.mountPoint = document.createElement('div');\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\n\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\n      this.render();\n    });\n\n    this.render();\n\n    //retargetEvents(shadowRoot);\n    this.appendChild(this.mountPoint);\n  }\n\n  render() {\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\n    const locale = this.getAttribute(ATTRIBUTES.locale) || '';\n    Locale.setLocale(locale);\n\n    ReactDOM.render(\n      <KeycloakContext.Provider value={this.keycloak}>\n        <App serviceUrl={serviceUrl} locale={locale} />\n      </KeycloakContext.Provider>,\n      this.mountPoint\n    );\n  }\n}\n\ncustomElements.define('cp-app-element', AppElement);\n","import { getDefaultOptions, request, getUrl } from './helpers';\r\n\r\nconst resource = 'api/portal-users';\r\n\r\nexport const apiUserDelete = async (serviceUrl, id) => {\r\n  const url = `${serviceUrl}/${resource}/${id}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE',\r\n  };\r\n  return await request(url, options);\r\n};\r\n\r\nexport const apiUsersPut = async (serviceUrl, user) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'PUT',\r\n    body: user ? JSON.stringify(user) : null,\r\n  };\r\n  return await request(url, options);\r\n};\r\n\r\nexport const apiUsersGet = async serviceUrl => {\r\n  const url = getUrl(`${serviceUrl}/${resource}`);\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return await request(url, options);\r\n};\r\n\r\nexport const apiUserGet = async (serviceUrl, userId) => {\r\n  const url = getUrl(`${serviceUrl}/${resource}/${userId}`);\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return await request(url, options);\r\n};\r\n\r\nexport const apiUserPost = async (serviceUrl, user) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n    body: user ? JSON.stringify(user) : null,\r\n  };\r\n  return await request(url, options);\r\n};\r\n\r\nexport const apiUserGetByUsernameAndEmail = async (serviceUrl, username, email) => {\r\n  const url = getUrl(`${serviceUrl}/${resource}/username/${username}/email/${email}`);\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return await request(url, options);\r\n};\r\n","import { getDefaultKeycloakOptions, request, getUrl } from './helpers';\n\nexport const apiKeycloakUserGet = async (serviceUrl, realm) => {\n  const usersResource = `admin/realms/${realm}/users`;\n  const url = `${serviceUrl}/${usersResource}`;\n  const options = {\n    ...getDefaultKeycloakOptions(),\n    method: 'GET',\n  };\n  return await request(url, options);\n};\n\nexport const apiKeycloakToken = async (serviceUrl, realm) => {\n  const tokenResource = `realms/${realm}/protocol/openid-connect/token`;\n  const url = getUrl(`${serviceUrl}/${tokenResource}`);\n  const keycloakBody = {\n    client_id: 'web_app',\n    username: 'admin',\n    password: 'admin',\n    grant_type: 'password',\n  };\n  const options = {\n    ...getDefaultKeycloakOptions(),\n    method: 'POST',\n    body: keycloakBody ? serialize(keycloakBody) : null,\n  };\n  return await request(url, options);\n};\n\nfunction serialize(obj) {\n  var str = [];\n  for (var p in obj)\n    if (obj.hasOwnProperty(p)) {\n      str.push(encodeURIComponent(p) + '=' + encodeURIComponent(obj[p]));\n    }\n  return str.join('&');\n}\n","import React, { Component } from 'react';\r\nimport { Form, Select, SelectItem, Button } from 'carbon-components-react';\r\nimport * as portalUserApi from '../../../api/portalusers';\r\nimport {apiAddUserToProject, apiProjectGet} from '../../../api/projects';\r\nimport withKeycloak from '../../../auth/withKeycloak';\r\nimport { apiKeycloakUserGet } from '../../../api/keycloak';\r\nimport i18n from '../../../i18n';\r\nimport {authenticationChanged, isAuthenticated} from \"../../../api/helpers\";\r\nclass AssignUser extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      project: null,\r\n      projectId: '',\r\n      assignUser: '',\r\n      users: new Map(),\r\n      invalid: {},\r\n      submitMsg: '',\r\n      submitColour: 'black',\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (isAuthenticated(this.props)) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (authenticationChanged(this.props, prevProps)) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n\r\n  async fetchData() {\r\n    const {keycloak} = this.props;\r\n    const users = this.mapKeycloakUserEmails((await apiKeycloakUserGet(keycloak.authServerUrl, keycloak.realm)).data);\r\n    const search = window.location.search;\r\n    const params = new URLSearchParams(search);\r\n    let projectId = params.get('project');\r\n    let project = null;\r\n    if (projectId != null) {\r\n      project = (await apiProjectGet(this.props.serviceUrl, projectId)).data;\r\n    } else {\r\n      projectId = '';\r\n    }\r\n\r\n    this.setState({\r\n      projectId: projectId,\r\n      project: project,\r\n      users: users,\r\n    });\r\n  }\r\n\r\n  mapKeycloakUserEmails = keycloakUsers => {\r\n    const usernameEmailMap = new Map();\r\n    keycloakUsers.forEach(keycloakUser => usernameEmailMap.set(keycloakUser.username, keycloakUser.email));\r\n    return usernameEmailMap;\r\n  };\r\n\r\n  handleChanges = e => {\r\n    const input = e.target;\r\n    const name = input.name;\r\n    const value = input.value;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleFormSubmit = event => {\r\n    event.preventDefault();\r\n    const { projectId, assignUser } = this.state;\r\n    const formIsValid = this.handleFormValidation();\r\n\r\n    if (formIsValid) {\r\n      this.assignUserToProject(projectId, assignUser).then(res => {\r\n        if (res && res.status === 201) {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.updated'),\r\n            submitColour: '#24a148',\r\n          });\r\n          window.dispatchEvent(new CustomEvent('cp-user-assigned'));\r\n        } else {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.error'),\r\n            submitColour: '#da1e28',\r\n          });\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  handleFormValidation() {\r\n    let invalid = {};\r\n    let formIsValid = true;\r\n    const { projectId, assignUser } = this.state;\r\n\r\n    //name\r\n    if (projectId === '') {\r\n      formIsValid = false;\r\n      invalid['projectId'] = true;\r\n    }\r\n\r\n    //customerNumber\r\n    if (assignUser === '') {\r\n      formIsValid = false;\r\n      invalid['assignUser'] = true;\r\n    }\r\n\r\n    this.setState({ invalid: invalid });\r\n    return formIsValid;\r\n  }\r\n\r\n  assignUserToProject = async (projectId, username) => {\r\n    const email = this.state.users.get(username);\r\n    if (!email) {\r\n      alert(\"User is missing an email address in keycloak and cannot be assigned.\")\r\n      return null;\r\n    }\r\n    const portalUserId = await this.getPortalUserId({username, email: this.state.users.get(username)});\r\n    return await apiAddUserToProject(this.props.serviceUrl, projectId, portalUserId);\r\n  };\r\n\r\n  getPortalUserId = async keycloakUser => {\r\n    let portalUserId = null;\r\n    try {\r\n      const portalUser = await portalUserApi.apiUserGetByUsernameAndEmail(this.props.serviceUrl,\r\n        keycloakUser.username, keycloakUser.email);\r\n      portalUserId = portalUser.data.id;\r\n    } catch (e) {\r\n      console.warn(e);\r\n    }\r\n\r\n    return portalUserId;\r\n  };\r\n\r\n  setupFormComponents() {\r\n    const users = this.state.users;\r\n    const project = this.state.project;\r\n    let userList;\r\n    let projectList;\r\n\r\n    if (users.size > 0) {\r\n      userList = [...users.keys()].map((assignUser, i) => (\r\n        <SelectItem key={i} text={assignUser} value={assignUser}>\r\n          {assignUser}\r\n        </SelectItem>\r\n      ));\r\n      userList.unshift(<SelectItem key=\"-1\" text={i18n.t('manageUsers.assign.userList')} value=\"\"/>);\r\n    } else {\r\n      userList = <SelectItem text={i18n.t('manageUsers.assign.noUsers')} value=\"\"/>;\r\n    }\r\n\r\n    if (project != null) {\r\n      projectList = <SelectItem key={project.id} text={project.name} value={project.id}/>;\r\n    } else {\r\n      projectList = <SelectItem text={i18n.t('manageUsers.assign.noProjects')} value=\"\"/>;\r\n    }\r\n\r\n    return {userList, projectList};\r\n  }\r\n\r\n  render() {\r\n    const { userList, projectList } = this.setupFormComponents();\r\n\r\n    return (\r\n      <div>\r\n        <p style={{ color: this.state.submitColour }}>{this.state.submitMsg}</p>\r\n        <Form onSubmit={this.handleFormSubmit}>\r\n          <div className=\"bx--grid\">\r\n            <div className=\"bx--row\">\r\n              <div className=\"bx--col\">\r\n                <Select\r\n                  id=\"projectId\"\r\n                  name=\"projectId\"\r\n                  labelText={i18n.t('manageUsers.assign.projectName')}\r\n                  value={this.state.projectId}\r\n                  onChange={this.handleChanges}\r\n                  invalidText={i18n.t('validation.invalid.required')}\r\n                  invalid={this.state.invalid['projectId']}\r\n                >\r\n                  {projectList}\r\n                </Select>\r\n              </div>\r\n            </div>\r\n            <div className=\"bx--row\">\r\n              <div className=\"bx--col\">\r\n                <Select\r\n                  id=\"assignUser\"\r\n                  name=\"assignUser\"\r\n                  labelText={i18n.t('manageUsers.assign.assignUser')}\r\n                  value={this.state.assignUser}\r\n                  onChange={this.handleChanges}\r\n                  invalidText={i18n.t('validation.invalid.required')}\r\n                  invalid={this.state.invalid['assignUser']}\r\n                >\r\n                  {userList}\r\n                </Select>\r\n              </div>\r\n            </div>\r\n            <Button kind=\"primary\" tabIndex={0} type=\"submit\">\r\n              {' '}\r\n              {i18n.t('buttons.submit')}{' '}\r\n            </Button>\r\n          </div>\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withKeycloak(AssignUser);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport AssignUser from '../components/Admin/ManageUser/AssignUser';\nimport '../index.scss';\n\nimport KeycloakContext from '../auth/KeycloakContext';\n\nimport { subscribeToWidgetEvent } from '../helpers/widgetEvents';\nimport { KEYCLOAK_EVENT_TYPE } from './widgetEventTypes';\n\nconst getKeycloakInstance = () =>\n  (window && window.entando && window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\n    initialized: false,\n  };\n\nconst ATTRIBUTES = {\n  hidden: 'hidden',\n  locale: 'locale',\n  paginationMode: 'pagination-mode',\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\n  serviceUrl: 'service-url',\n};\n\nclass AssignUserElement extends HTMLElement {\n  container;\n\n  mountPoint;\n\n  unsubscribeFromKeycloakEvent;\n\n  keycloak = getKeycloakInstance();\n\n  connectedCallback() {\n    this.mountPoint = document.createElement('div');\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\n\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\n      this.render();\n    });\n\n    this.render();\n\n    //retargetEvents(shadowRoot);\n    this.appendChild(this.mountPoint);\n  }\n\n  render() {\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\n\n    ReactDOM.render(\n      <KeycloakContext.Provider value={this.keycloak}>\n        <AssignUser serviceUrl={serviceUrl} />\n      </KeycloakContext.Provider>,\n      this.mountPoint\n    );\n  }\n}\n\ncustomElements.define('cp-assign-user-widget', AssignUserElement);\n","import React, {Component} from 'react';\r\nimport {\r\n  DataTable,\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableHeader,\r\n  TableBody,\r\n  TableCell,\r\n  Button\r\n} from 'carbon-components-react';\r\nimport withKeycloak from '../../../auth/withKeycloak';\r\nimport i18n from '../../../i18n';\r\nimport {apiGetProjectUsers, apiDeleteUserFromProject} from '../../../api/projects';\r\n\r\nclass DeleteUser extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      users: [],\r\n      displayUsers: [],\r\n      projectId: '',\r\n    };\r\n    this.headerData = [\r\n      {\r\n        header: i18n.t('manageUsers.delete.userName'),\r\n        key: 'username',\r\n      },\r\n      {\r\n        header: i18n.t('manageUsers.delete.userEmail'),\r\n        key: 'email',\r\n      },\r\n      {\r\n        header: i18n.t('manageUsers.delete.userAccess'),\r\n        key: 'userAccess',\r\n      },\r\n    ];\r\n    window.addEventListener('cp-user-assigned', event => {\r\n      this.fetchData();\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n    if (authenticated) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n    const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n\r\n    if (authenticated && changedAuth) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n\r\n  async fetchData() {\r\n    const {keycloak} = this.props;\r\n\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n    if (authenticated) {\r\n      let search = window.location.search;\r\n      const params = new URLSearchParams(search);\r\n      const projectId = params.get('project');\r\n      let users = [];\r\n      if (projectId != null) {\r\n        users = (await apiGetProjectUsers(this.props.serviceUrl, projectId)).data;\r\n      }\r\n\r\n      this.setState({\r\n        users,\r\n        projectId,\r\n      });\r\n\r\n      this.handleUserDisplay();\r\n    }\r\n  }\r\n\r\n  handleUserDisplay() {\r\n    const users = this.state.users;\r\n    const projectId = this.state.projectId;\r\n\r\n    const displayUsers = users.map(user => ({\r\n      id: user.username,\r\n      username: user.username,\r\n      email: user.email,\r\n      userAccess: (\r\n        <Button kind=\"ghost\" onClick={event => this.handleRemoveUser(user.id, projectId, event)}\r\n                className=\"button-warning\">\r\n          {i18n.t('manageUsers.delete.removeUser')}\r\n        </Button>\r\n      ),\r\n    }));\r\n\r\n    this.setState({\r\n      displayUsers,\r\n    });\r\n  }\r\n\r\n  handleRemoveUser = (userId, projectId, event) => {\r\n    event.preventDefault();\r\n\r\n    apiDeleteUserFromProject(this.props.serviceUrl, projectId, userId).then(res => {\r\n      if (res.status === 201) {\r\n        this.fetchData();\r\n      } else {\r\n        console.warn('Failed to delete user', res);\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <DataTable rows={this.state.displayUsers} headers={this.headerData}>\r\n        {({ rows, headers, getHeaderProps, getTableProps }) => (\r\n          <TableContainer>\r\n            <Table {...getTableProps()}>\r\n              <TableHead>\r\n                <TableRow>\r\n                  {headers.map(header => (\r\n                    <TableHeader {...getHeaderProps({ header })}>{header.header}</TableHeader>\r\n                  ))}\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {rows.map(row => (\r\n                  <TableRow key={row.id}>\r\n                    {row.cells.map(cell => (\r\n                      <TableCell key={cell.id}>{cell.value}</TableCell>\r\n                    ))}\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        )}\r\n      </DataTable>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withKeycloak(DeleteUser);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport DeleteUser from '../components/Admin/ManageUser/DeleteUser';\nimport '../index.scss';\n\nimport KeycloakContext from '../auth/KeycloakContext';\n\nimport { subscribeToWidgetEvent } from '../helpers/widgetEvents';\nimport { KEYCLOAK_EVENT_TYPE } from './widgetEventTypes';\n\nconst getKeycloakInstance = () =>\n  (window && window.entando && window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\n    initialized: false,\n  };\n\nconst ATTRIBUTES = {\n  hidden: 'hidden',\n  locale: 'locale',\n  paginationMode: 'pagination-mode',\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\n  serviceUrl: 'service-url',\n};\n\nclass DeleteUserElement extends HTMLElement {\n  container;\n\n  mountPoint;\n\n  unsubscribeFromKeycloakEvent;\n\n  keycloak = getKeycloakInstance();\n\n  connectedCallback() {\n    this.mountPoint = document.createElement('div');\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\n\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\n      this.render();\n    });\n\n    this.render();\n\n    //retargetEvents(shadowRoot);\n    this.appendChild(this.mountPoint);\n  }\n\n  render() {\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\n\n    ReactDOM.render(\n      <KeycloakContext.Provider value={this.keycloak}>\n        <DeleteUser serviceUrl={serviceUrl} />\n      </KeycloakContext.Provider>,\n      this.mountPoint\n    );\n  }\n}\n\ncustomElements.define('cp-delete-user-widget', DeleteUserElement);\n","import React, {Component} from 'react';\r\nimport i18n from '../../i18n';\r\nimport {Form, Select, SelectItem, Button, TextArea, TextInput} from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport {apiProjectGet} from '../../api/projects';\r\nimport {apiJiraTicketPost} from '../../api/tickets';\r\nimport {authenticationChanged, getActiveSubscription, isAuthenticated, isPortalUser} from '../../api/helpers';\r\n\r\nclass OpenTicketForm extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      loading: true,\r\n      project: {},\r\n      role: '',\r\n      invalid: {},\r\n      submitMsg: '',\r\n      submitColour: 'black',\r\n      //form fields\r\n      type: 'Support',\r\n      priority: 'Medium',\r\n      status: 'To Do',\r\n      summary: '',\r\n      description: '',\r\n    };\r\n    this.types = ['Support', 'Feature Request'];\r\n    this.priorities = ['Critical', 'High', 'Medium', 'Low'];\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (isAuthenticated(this.props)) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (authenticationChanged(this.props, prevProps)) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n\r\n  async fetchData() {\r\n    if (!isPortalUser()) {\r\n      return;\r\n    }\r\n\r\n    let search = window.location.search;\r\n    let params = new URLSearchParams(search);\r\n    let projectId = params.get('project');\r\n    let project = (await apiProjectGet(this.props.serviceUrl, projectId)).data;\r\n\r\n    if (!project) {\r\n      console.error('Unable to retrieve projectId ', projectId);\r\n      project = {};\r\n    }\r\n\r\n    this.setState({\r\n      project: project,\r\n      loading: false,\r\n    });\r\n  }\r\n\r\n  handleValidation() {\r\n    let invalid = {};\r\n    let formIsValid = true;\r\n\r\n    if (this.state.type === '') {\r\n      formIsValid = false;\r\n      invalid['type'] = true;\r\n    }\r\n\r\n    if (this.state.summary === '') {\r\n      formIsValid = false;\r\n      invalid['summary'] = true;\r\n    }\r\n\r\n    if (this.state.description === '') {\r\n      formIsValid = false;\r\n      invalid['description'] = true;\r\n    }\r\n\r\n    if (this.state.priority === '') {\r\n      formIsValid = false;\r\n      invalid['priority'] = true;\r\n    }\r\n\r\n    this.setState({\r\n      invalid: invalid,\r\n    });\r\n    return formIsValid;\r\n  }\r\n\r\n  handleChanges = e => {\r\n    const input = e.target;\r\n    const name = input.name;\r\n    const value = input.value;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleFormSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    const formIsValid = this.handleValidation();\r\n\r\n    if (formIsValid) {\r\n      const subscription = getActiveSubscription(this.state.project);\r\n      if (subscription) {\r\n        this.createTicket()\r\n          .then(() => {\r\n            this.setState({\r\n              submitMsg: i18n.t('submitMessages.created'),\r\n              submitColour: '#24a148',\r\n            });\r\n          })\r\n          .catch(() => {\r\n            this.setState({\r\n              submitMsg: i18n.t('submitMessages.ticketError'),\r\n              submitColour: '#da1e28',\r\n            });\r\n          });\r\n      }\r\n      // if no subscriptions, don't create ticket\r\n      else {\r\n        this.setState({\r\n          submitMsg: i18n.t('submitMessages.subscriptionRequired'),\r\n          submitColour: '#da1e28',\r\n        });\r\n      }\r\n    } else {\r\n      this.setState({\r\n        submitMsg: i18n.t('submitMessages.error'),\r\n        submitColour: '#da1e28',\r\n      });\r\n    }\r\n  };\r\n\r\n  async createTicket() {\r\n    if (isPortalUser()) {\r\n      const ticket = {\r\n        type: this.state.type,\r\n        summary: this.state.summary,\r\n        description: this.state.description,\r\n        priority: this.state.priority,\r\n        // these fields are just placeholders to validate the POST request (fields will be set in the backend)\r\n        systemId: '999',\r\n        status: 'To Do',\r\n        createDate: '2021-02-22T14:14:09-05:00',\r\n        updateDate: '2021-02-22T14:14:09-05:00',\r\n      };\r\n      return await apiJiraTicketPost(this.props.serviceUrl, this.state.project.id, ticket);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (!this.state.loading) {\r\n      if (isPortalUser()) {\r\n        return (\r\n          <div>\r\n            <div className=\"form-container\">\r\n              <p style={{color: this.state.submitColour}}>{this.state.submitMsg}</p>\r\n              <Form onSubmit={this.handleFormSubmit}>\r\n                <div className=\"bx--grid\">\r\n                  <div className=\"bx--row\" style={{padding: '1em 0'}}>\r\n                    <div className=\"bx--col\">\r\n                      <div className=\"form-desc\">\r\n                        <h4>{i18n.t('supportTicketForm.formTitle')}</h4>\r\n                        <div>{i18n.t('supportTicketForm.desc')}</div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"bx--row\">\r\n                    <div className=\"bx--col\">\r\n                      <div>\r\n                        <strong>{i18n.t('projectDetails.project')}:</strong> {this.state.project.name}\r\n                      </div>\r\n                      <Select\r\n                        id=\"type\"\r\n                        name=\"type\"\r\n                        labelText={i18n.t('supportTicketForm.type') + ' *'}\r\n                        value={this.state.type}\r\n                        onChange={this.handleChanges}\r\n                        invalidText={i18n.t('validation.invalid.required')}\r\n                        invalid={this.state.invalid['type']}\r\n                      >\r\n                        {this.types.map((type, i) => (\r\n                          <SelectItem key={i} text={type} value={type}>\r\n                            {type}\r\n                          </SelectItem>\r\n                        ))}\r\n                      </Select>\r\n                      <Select\r\n                        id=\"priority\"\r\n                        name=\"priority\"\r\n                        labelText={i18n.t('supportTicketForm.priority') + ' *'}\r\n                        value={this.state.priority}\r\n                        onChange={this.handleChanges}\r\n                        invalidText={i18n.t('validation.invalid.required')}\r\n                        invalid={this.state.invalid['priority']}\r\n                      >\r\n                        {this.priorities.map((priority, i) => (\r\n                          <SelectItem key={i} text={priority} value={priority}>\r\n                            {priority}\r\n                          </SelectItem>\r\n                        ))}\r\n                      </Select>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"bx--row\">\r\n                    <div className=\"bx--col\">\r\n                      <TextInput\r\n                        labelText={i18n.t('supportTicketForm.ticketSummary') + ' *'}\r\n                        placeholder={i18n.t('supportTicketForm.addticketSummary')}\r\n                        id=\"summary\"\r\n                        name=\"summary\"\r\n                        value={this.state.summary}\r\n                        onChange={this.handleChanges}\r\n                        invalidText={i18n.t('validation.invalid.required')}\r\n                        invalid={this.state.invalid['summary']}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"bx--row\">\r\n                    <div className=\"bx--col\">\r\n                      <TextArea\r\n                        labelText={i18n.t('supportTicketForm.ticketDescription') + ' *'}\r\n                        placeholder={i18n.t('supportTicketForm.addticketDescription')}\r\n                        name=\"description\"\r\n                        value={this.state.description}\r\n                        onChange={this.handleChanges}\r\n                        invalidText={i18n.t('validation.invalid.required')}\r\n                        invalid={this.state.invalid['description']}\r\n                      />\r\n                      <Button kind=\"primary\" tabIndex={0} type=\"submit\">\r\n                        {' '}\r\n                        {i18n.t('buttons.submit')}{' '}\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </Form>\r\n            </div>\r\n          </div>\r\n        );\r\n      } else {\r\n        return <p>{i18n.t('userMessages.unauthorized')}</p>;\r\n      }\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport default withKeycloak(OpenTicketForm);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport OpenTicketForm from '../components/Forms/OpenTicketForm';\nimport KeycloakContext from '../auth/KeycloakContext';\n\nimport {subscribeToWidgetEvent} from '../helpers/widgetEvents';\nimport {KEYCLOAK_EVENT_TYPE} from './widgetEventTypes';\nimport * as Locale from '../i18n';\n\nconst getKeycloakInstance = () =>\n  (window && window.entando && window.entando.keycloak && {...window.entando.keycloak, initialized: true}) || {\n    initialized: false,\n  };\n\nconst ATTRIBUTES = {\n  hidden: 'hidden',\n  locale: 'locale',\n  paginationMode: 'pagination-mode',\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\n  serviceUrl: 'service-url',\n};\n\nclass FormsOpenTicketElement extends HTMLElement {\n  container;\n\n  mountPoint;\n\n  unsubscribeFromKeycloakEvent;\n\n  keycloak = getKeycloakInstance();\n\n  connectedCallback() {\n    this.mountPoint = document.createElement('div');\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\n\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\n      this.render();\n    });\n\n    this.render();\n\n    //retargetEvents(shadowRoot);\n    this.appendChild(this.mountPoint);\n  }\n\n  render() {\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\n    const locale = this.getAttribute(ATTRIBUTES.locale) || '';\n    Locale.setLocale(locale);\n\n    ReactDOM.render(\n      <KeycloakContext.Provider value={this.keycloak}>\n        <OpenTicketForm serviceUrl={serviceUrl} locale={locale}/>\n      </KeycloakContext.Provider>,\n      this.mountPoint\n    );\n  }\n}\n\ncustomElements.define('cp-forms-openticket-widget', FormsOpenTicketElement);\n","import React, {Component} from 'react';\r\nimport {\r\n  DataTable,\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableHeader,\r\n  TableBody,\r\n  TableCell,\r\n  Button\r\n} from 'carbon-components-react';\r\nimport '../../../index.scss';\r\nimport withKeycloak from '../../../auth/withKeycloak';\r\nimport i18n from '../../../i18n';\r\nimport {isAuthenticated, authenticationChanged} from '../../../api/helpers';\r\nimport {apiDeleteSubscriptionFromProject, apiGetProjectSubscriptions, apiProjectGet} from '../../../api/projects';\r\nimport {formatEndDate, formatStartDate} from '../../../api/subscriptions';\r\n\r\nclass ManageSubscriptions extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      projectId: '',\r\n      project: {},\r\n      subscriptions: [],\r\n    };\r\n    this.headerData = [\r\n      {\r\n        header: i18n.t('projectDetails.id'),\r\n        key: 'id',\r\n      },\r\n      {\r\n        header: i18n.t('subscriptionDetails.status'),\r\n        key: 'status',\r\n      },\r\n      {\r\n        header: i18n.t('projectDetails.entandoVersion'),\r\n        key: 'entandoVersion',\r\n      },\r\n      {\r\n        header: i18n.t('subscriptionDetails.level'),\r\n        key: 'level',\r\n      },\r\n      {\r\n        header: i18n.t('subscriptionDetails.startDate'),\r\n        key: 'startDate',\r\n      },\r\n      {\r\n        header: i18n.t('subscriptionDetails.endDate'),\r\n        key: 'endDate',\r\n      },\r\n      {\r\n        header: i18n.t('subscriptionDetails.lengthInMonths'),\r\n        key: 'lengthInMonths',\r\n      },\r\n      {\r\n        header: i18n.t('subscriptionDetails.notes'),\r\n        key: 'notes',\r\n      },\r\n      {\r\n        header: i18n.t('customerDashboard.action'),\r\n        key: 'action',\r\n      },\r\n    ];\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (isAuthenticated(this.props)) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (authenticationChanged(this.props, prevProps)) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n\r\n  async fetchData() {\r\n    if (isAuthenticated(this.props)) {\r\n      let search = window.location.search;\r\n      const params = new URLSearchParams(search);\r\n      const projectId = params.get('project');\r\n\r\n      let project = {};\r\n      let subscriptions = {};\r\n      if (projectId != null) {\r\n        project = (await apiProjectGet(this.props.serviceUrl, projectId)).data;\r\n        subscriptions = (await apiGetProjectSubscriptions(this.props.serviceUrl, projectId)).data;\r\n      }\r\n\r\n      this.setState({\r\n        projectId: projectId,\r\n        project: project,\r\n        subscriptions: subscriptions,\r\n      });\r\n    }\r\n  }\r\n\r\n  async deleteSubscription(subscriptionId) {\r\n    if (isAuthenticated(this.props)) {\r\n      return await apiDeleteSubscriptionFromProject(this.props.serviceUrl, this.state.projectId, subscriptionId);\r\n    }\r\n  }\r\n\r\n  handleDeleteSubscription = (e, id) => {\r\n    e.preventDefault();\r\n    if (window.confirm(i18n.t('submitMessages.confirmDelete'))) {\r\n      console.log('confirmed to delete', id);\r\n      this.deleteSubscription(id)\r\n        .then(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.deleted'),\r\n            submitColour: '#24a148',\r\n          });\r\n          this.fetchData();\r\n        })\r\n        .catch(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.error'),\r\n            submitColour: '#da1e28',\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h5>{this.state.project !== null && this.state.project.name}</h5>\r\n        <a\r\n          href={`/entando-de-app/${this.props.locale}/new_or_renew_subscription.page?project=${this.state.projectId}`}\r\n          style={{textDecoration: 'none'}}\r\n        >\r\n          <Button kind=\"ghost\" style={{display: 'block', width: '100%'}} value=\"Add Subscription\">\r\n            {i18n.t('buttons.addSubscription')}\r\n          </Button>\r\n        </a>\r\n\r\n        <DataTable rows={[{id: '1'}]} headers={this.headerData}>\r\n          {({headers, getHeaderProps, getTableProps}) => (\r\n            <TableContainer>\r\n              <Table {...getTableProps()}>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    {headers.map(header => (\r\n                      <TableHeader {...getHeaderProps({header})}>{header.header}</TableHeader>\r\n                    ))}\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {Object.keys(this.state.subscriptions).length !== 0 &&\r\n                  this.state.subscriptions.map((subscription, index) => (\r\n                    <TableRow key={index}>\r\n                      <TableCell>{subscription.id}</TableCell>\r\n                      <TableCell>{subscription.status}</TableCell>\r\n                      <TableCell>{subscription.entandoVersion.name}</TableCell>\r\n                      <TableCell>{subscription.level}</TableCell>\r\n                      <TableCell>{formatStartDate(subscription.startDate)}</TableCell>\r\n                      <TableCell>{formatEndDate(subscription.startDate, subscription.lengthInMonths)}</TableCell>\r\n                      <TableCell>{subscription.lengthInMonths}</TableCell>\r\n                      <TableCell>{subscription.notes}</TableCell>\r\n                      <TableCell>\r\n                        <a\r\n                          href={`/entando-de-app/${this.props.locale}/new_or_renew_subscription.page?project=${this.state.projectId}&subscription=${subscription.id}`}\r\n                          style={{textDecoration: 'none'}}\r\n                        >\r\n                          <Button kind=\"ghost\" style={{display: 'block', width: '100%'}} value=\"Edit\">\r\n                            {i18n.t('buttons.edit')}\r\n                          </Button>\r\n                        </a>\r\n                        <Button\r\n                          kind=\"ghost\"\r\n                          onClick={event => this.handleDeleteSubscription(event, subscription.id)}\r\n                          className=\"button-warning\"\r\n                        >\r\n                          {i18n.t('buttons.delete')}\r\n                        </Button>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          )}\r\n        </DataTable>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withKeycloak(ManageSubscriptions);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ManageSubscriptions from '../components/Admin/ManageSubscriptions/ManageSubscriptions';\nimport * as Locale from '../i18n';\n\nimport KeycloakContext from '../auth/KeycloakContext';\n\nimport {subscribeToWidgetEvent} from '../helpers/widgetEvents';\nimport {KEYCLOAK_EVENT_TYPE} from './widgetEventTypes';\n\nconst getKeycloakInstance = () =>\n  (window && window.entando && window.entando.keycloak && {...window.entando.keycloak, initialized: true}) || {\n    initialized: false,\n  };\n\nconst ATTRIBUTES = {\n  hidden: 'hidden',\n  locale: 'locale',\n  paginationMode: 'pagination-mode',\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\n  serviceUrl: 'service-url',\n};\n\nclass ManageSubscriptionsElement extends HTMLElement {\n  container;\n\n  mountPoint;\n\n  unsubscribeFromKeycloakEvent;\n\n  keycloak = getKeycloakInstance();\n\n  connectedCallback() {\n    this.mountPoint = document.createElement('div');\n    this.keycloak = {...getKeycloakInstance(), initialized: true};\n\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\n      this.keycloak = {...getKeycloakInstance(), initialized: true};\n      this.render();\n    });\n\n    this.render();\n\n    //retargetEvents(shadowRoot);\n    this.appendChild(this.mountPoint);\n  }\n\n  render() {\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\n    const locale = this.getAttribute(ATTRIBUTES.locale) || '';\n    Locale.setLocale(locale);\n\n    ReactDOM.render(\n      <KeycloakContext.Provider value={this.keycloak}>\n        <ManageSubscriptions serviceUrl={serviceUrl} locale={locale}/>\n      </KeycloakContext.Provider>,\n      this.mountPoint\n    );\n  }\n}\n\ncustomElements.define('cp-manage-subscriptions-widget', ManageSubscriptionsElement);\n","import React, { Component } from 'react';\r\nimport i18n from '../../../i18n';\r\nimport { Accordion, AccordionItem } from 'carbon-components-react';\r\nimport AssignUser from './AssignUser';\r\nimport DeleteUser from './DeleteUser';\r\nimport { isPortalAdmin } from '../../../api/helpers';\r\nimport withKeycloak from '../../../auth/withKeycloak';\r\n\r\nclass ManageUser extends Component {\r\n  userFunctionality;\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: true,\r\n    };\r\n    this.userFunctionality = [\r\n      {\r\n        label: (\r\n          <div>\r\n            <p className=\"title\">{i18n.t('manageUsers.manage.title')}</p>\r\n            <p className=\"desc\">{i18n.t('manageUsers.manage.desc')}</p>\r\n          </div>\r\n        ),\r\n        content: <DeleteUser serviceUrl={this.props.serviceUrl}/>,\r\n        open: true,\r\n      },\r\n      {\r\n        label: (\r\n          <div>\r\n            <p className=\"title\">{i18n.t('manageUsers.assign.title')}</p>\r\n            <p className=\"desc\">{i18n.t('manageUsers.assign.desc')}</p>\r\n          </div>\r\n        ),\r\n        content: <AssignUser serviceUrl={this.props.serviceUrl}/>,\r\n        open: true,\r\n      },\r\n    ];\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n    if (authenticated) {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n    const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n\r\n    if (authenticated && changedAuth) {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (!this.state.loading) {\r\n      if (isPortalAdmin()) {\r\n        return (\r\n          <div>\r\n            <h3 className=\"pageTitle\">{i18n.t('adminDashboard.adminTitle')}</h3>\r\n            <div className=\"form-container\">\r\n              <Accordion>\r\n                {this.userFunctionality.map((item, index) => (\r\n                  <AccordionItem key={index.toString()} index={index} title={item.label} description={item.description} open={item.open}>\r\n                    {item.content}\r\n                  </AccordionItem>\r\n                ))}\r\n              </Accordion>\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n      // Unauthorized\r\n      else {\r\n        return <p>{i18n.t('userMessages.unauthorized')}</p>;\r\n      }\r\n    }\r\n    // Loading\r\n    else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport default withKeycloak(ManageUser);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ManageUser from '../components/Admin/ManageUser/ManageUser';\nimport '../index.scss';\nimport * as Locale from '../i18n';\n\nimport KeycloakContext from '../auth/KeycloakContext';\n\nimport { subscribeToWidgetEvent } from '../helpers/widgetEvents';\nimport { KEYCLOAK_EVENT_TYPE } from './widgetEventTypes';\n\nconst getKeycloakInstance = () =>\n  (window && window.entando && window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\n    initialized: false,\n  };\n\nconst ATTRIBUTES = {\n  hidden: 'hidden',\n  locale: 'locale',\n  paginationMode: 'pagination-mode',\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\n  serviceUrl: 'service-url',\n};\n\nclass ManageUserElement extends HTMLElement {\n  container;\n\n  mountPoint;\n\n  unsubscribeFromKeycloakEvent;\n\n  keycloak = getKeycloakInstance();\n\n  connectedCallback() {\n    this.mountPoint = document.createElement('div');\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\n\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\n      this.render();\n    });\n\n    this.render();\n\n    //retargetEvents(shadowRoot);\n    this.appendChild(this.mountPoint);\n  }\n\n  render() {\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\n    const locale = this.getAttribute(ATTRIBUTES.locale) || '';\n    Locale.setLocale(locale);\n\n    ReactDOM.render(\n      <KeycloakContext.Provider value={this.keycloak}>\n        <ManageUser serviceUrl={serviceUrl} locale={locale}/>\n      </KeycloakContext.Provider>,\n      this.mountPoint\n    );\n  }\n}\n\ncustomElements.define('cp-manage-user-widget', ManageUserElement);\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst Navigation = () => {\n  return (\n    <ul id=\"navigation\">\n      <li>\n        <NavLink to=\"/\">Home</NavLink>\n      </li>\n      <li>\n        <NavLink to=\"/subscription-details\">Subscription Details</NavLink>\n      </li>\n      <li>\n        <NavLink to=\"/subscription\">New or Renew Subscription</NavLink>\n      </li>\n      <li>\n        <NavLink to=\"/service-ticket\">Open Service Ticket</NavLink>\n      </li>\n      <li>\n        <NavLink to=\"/enhancement\">Request for Enhancement Process</NavLink>\n      </li>\n      <li>\n        <NavLink to=\"/manage-users\">Manage Users</NavLink>\n      </li>\n      <li>\n        <NavLink to=\"/configuration-settings\">Configuration Settings</NavLink>\n      </li>\n    </ul>\n  );\n};\n\nexport default Navigation;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Navigation from '../components/Navigation/Navigation';\nimport KeycloakContext from '../auth/KeycloakContext';\n\nimport { subscribeToWidgetEvent } from '../helpers/widgetEvents';\nimport { KEYCLOAK_EVENT_TYPE } from './widgetEventTypes';\n\nconst getKeycloakInstance = () =>\n  (window && window.entando && window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\n    initialized: false,\n  };\n\nconst ATTRIBUTES = {\n  hidden: 'hidden',\n  locale: 'locale',\n  paginationMode: 'pagination-mode',\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\n  serviceUrl: 'service-url',\n};\n\nclass NavigationElement extends HTMLElement {\n  container;\n\n  mountPoint;\n\n  unsubscribeFromKeycloakEvent;\n\n  keycloak = getKeycloakInstance();\n\n  connectedCallback() {\n    this.mountPoint = document.createElement('div');\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\n\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\n      this.render();\n    });\n\n    this.render();\n\n    //retargetEvents(shadowRoot);\n    this.appendChild(this.mountPoint);\n  }\n\n  render() {\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\n\n    ReactDOM.render(\n      <KeycloakContext.Provider value={this.keycloak}>\n        <Navigation serviceUrl={serviceUrl} />\n      </KeycloakContext.Provider>,\n      this.mountPoint\n    );\n  }\n}\n\ncustomElements.define('cp-navigation-widget', NavigationElement);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport OpenTicketForm from '../components/Forms/OpenTicketForm';\nimport '../index.scss';\nimport * as Locale from '../i18n';\n\nimport KeycloakContext from '../auth/KeycloakContext';\n\nimport {subscribeToWidgetEvent} from '../helpers/widgetEvents';\nimport {KEYCLOAK_EVENT_TYPE} from './widgetEventTypes';\n\nconst getKeycloakInstance = () =>\n  (window && window.entando && window.entando.keycloak && {...window.entando.keycloak, initialized: true}) || {\n    initialized: false,\n  };\n\nconst ATTRIBUTES = {\n  hidden: 'hidden',\n  locale: 'locale',\n  paginationMode: 'pagination-mode',\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\n  serviceUrl: 'service-url',\n};\n\nclass OpenTicketElement extends HTMLElement {\n  container;\n\n  mountPoint;\n\n  unsubscribeFromKeycloakEvent;\n\n  keycloak = getKeycloakInstance();\n\n  connectedCallback() {\n    this.mountPoint = document.createElement('div');\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\n\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\n      this.render();\n    });\n\n    this.render();\n\n    //retargetEvents(shadowRoot);\n    this.appendChild(this.mountPoint);\n  }\n\n  render() {\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\n    const locale = this.getAttribute(ATTRIBUTES.locale) || '';\n    Locale.setLocale(locale);\n\n    ReactDOM.render(\n      <KeycloakContext.Provider value={this.keycloak}>\n        <OpenTicketForm serviceUrl={serviceUrl} locale={locale}/>\n      </KeycloakContext.Provider>,\n      this.mountPoint\n    );\n  }\n}\n\ncustomElements.define('cp-open-ticket-widget', OpenTicketElement);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ProductVersion from '../components/Admin/Configuration/ProductVersion';\nimport '../index.scss';\n\nimport KeycloakContext from '../auth/KeycloakContext';\n\nimport { subscribeToWidgetEvent } from '../helpers/widgetEvents';\nimport { KEYCLOAK_EVENT_TYPE } from './widgetEventTypes';\n\nconst getKeycloakInstance = () =>\n  (window && window.entando && window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\n    initialized: false,\n  };\n\nconst ATTRIBUTES = {\n  hidden: 'hidden',\n  locale: 'locale',\n  paginationMode: 'pagination-mode',\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\n  serviceUrl: 'service-url',\n};\n\nclass ProductVersionElement extends HTMLElement {\n  container;\n\n  mountPoint;\n\n  unsubscribeFromKeycloakEvent;\n\n  keycloak = getKeycloakInstance();\n\n  connectedCallback() {\n    this.mountPoint = document.createElement('div');\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\n\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\n      this.render();\n    });\n\n    this.render();\n\n    //retargetEvents(shadowRoot);\n    this.appendChild(this.mountPoint);\n  }\n\n  render() {\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\n\n    ReactDOM.render(\n      <KeycloakContext.Provider value={this.keycloak}>\n        <ProductVersion serviceUrl={serviceUrl} />\n      </KeycloakContext.Provider>,\n      this.mountPoint\n    );\n  }\n}\n\ncustomElements.define('cp-product-version-widget', ProductVersionElement);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Subscription from '../components/SubscriptionDetails/Subscription';\nimport KeycloakContext from '../auth/KeycloakContext';\n\nimport {subscribeToWidgetEvent} from '../helpers/widgetEvents';\nimport {KEYCLOAK_EVENT_TYPE} from './widgetEventTypes';\n\nconst getKeycloakInstance = () =>\n  (window && window.entando && window.entando.keycloak && {...window.entando.keycloak, initialized: true}) || {\n    initialized: false,\n  };\n\nconst ATTRIBUTES = {\n  hidden: 'hidden',\n  locale: 'locale',\n  paginationMode: 'pagination-mode',\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\n  serviceUrl: 'service-url',\n};\n\nclass SubscriptionElement extends HTMLElement {\n  container;\n\n  mountPoint;\n\n  unsubscribeFromKeycloakEvent;\n\n  keycloak = getKeycloakInstance();\n\n  connectedCallback() {\n    this.mountPoint = document.createElement('div');\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\n\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\n      this.render();\n    });\n\n    this.render();\n\n    //retargetEvents(shadowRoot);\n    this.appendChild(this.mountPoint);\n  }\n\n  render() {\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\n\n    ReactDOM.render(\n      <KeycloakContext.Provider value={this.keycloak}>\n        <Subscription serviceUrl={serviceUrl} />\n      </KeycloakContext.Provider>,\n      this.mountPoint\n    );\n  }\n}\n\ncustomElements.define('cp-subscription-widget', SubscriptionElement);\n","import React, {Component} from 'react';\r\nimport i18n from '../../i18n';\r\nimport {\r\n  Form,\r\n  TextInput,\r\n  Select,\r\n  SelectItem,\r\n  Button,\r\n  DatePicker,\r\n  DatePickerInput,\r\n  TextArea\r\n} from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport {apiProjectGet} from '../../api/projects';\r\nimport {\r\n  apiProjectSubscriptionPost,\r\n  apiProjectSubscriptionPut,\r\n  apiRenewSubscription,\r\n  apiSubscriptionGet,\r\n  stripTime,\r\n} from '../../api/subscriptions';\r\nimport {apiProductVersionsGet} from '../../api/productVersion';\r\nimport {authenticationChanged, isAuthenticated, isPortalAdmin, isPortalUser} from '../../api/helpers';\r\nimport {apiAddSubscriptionToProject} from '../../api/projects';\r\nimport moment from 'moment';\r\n\r\nconst FORM_TYPE = {\r\n  new: 'new',\r\n  renewal: 'renewal',\r\n  edit: 'edit',\r\n};\r\n\r\nconst SUBSCRIPTION_LEVEL = {\r\n  GOLD: 'GOLD',\r\n  PLATINUM: 'PLATINUM',\r\n};\r\n\r\nconst SUBSCRIPTION_STATUS = {\r\n  requested: 'REQUESTED',\r\n  pending: 'PENDING',\r\n  active: 'ACTIVE',\r\n  expired: 'EXPIRED',\r\n};\r\n\r\nclass SubscriptionForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: true,\r\n      project: {},\r\n      projectId: '',\r\n      subscription: {},\r\n      startDate: '',\r\n      level: 'PLATINUM',\r\n      lengthInMonths: '',\r\n      notes: '',\r\n      entandoVersionId: '',\r\n      status: '',\r\n      formType: 'new',\r\n      invalid: {},\r\n      productVersions: [],\r\n      submitSuccess: false,\r\n      submitError: false,\r\n      submitColour: 'black',\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (isAuthenticated(this.props)) {\r\n      this.fetchData();\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (authenticationChanged(this.props, prevProps)) {\r\n      this.fetchData();\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  async fetchData() {\r\n    if (!isPortalUser()) {\r\n      return;\r\n    }\r\n\r\n    const serviceUrl = this.props.serviceUrl;\r\n\r\n    const search = window.location.search;\r\n    const params = new URLSearchParams(search);\r\n\r\n    const subscriptionId = params.get('subscription');\r\n    let projectId = params.get('project');\r\n\r\n    let subscription = {};\r\n    let project = {};\r\n    let formType = FORM_TYPE.new;\r\n    let status = '';\r\n    const isAdmin = isPortalAdmin();\r\n\r\n    if (subscriptionId !== null) {\r\n      subscription = (await apiSubscriptionGet(serviceUrl, subscriptionId)).data;\r\n      status = isAdmin ? subscription.status : SUBSCRIPTION_STATUS.requested;\r\n      formType = isAdmin ? FORM_TYPE.edit : FORM_TYPE.renewal;\r\n      project = subscription.project;\r\n    } else if (projectId !== null) {\r\n      project = (await apiProjectGet(serviceUrl, projectId)).data;\r\n      status = isAdmin ? SUBSCRIPTION_STATUS.pending : SUBSCRIPTION_STATUS.requested;\r\n    } else {\r\n      console.log('Unable to load project and/or subscription');\r\n      return;\r\n    }\r\n\r\n    const productVersions = (await apiProductVersionsGet(serviceUrl)).data;\r\n\r\n    this.setState({\r\n      subscription: subscription,\r\n      level: subscription.level ? subscription.level : '',\r\n      entandoVersionId: subscription.entandoVersion ? subscription.entandoVersion.id : '',\r\n      startDate: stripTime(subscription.startDate),\r\n      lengthInMonths: subscription.lengthInMonths ? subscription.lengthInMonths : '',\r\n      notes: subscription.notes ? subscription.notes : '',\r\n      status: status,\r\n      formType: formType,\r\n      project: project,\r\n      projectId: projectId,\r\n      productVersions: productVersions,\r\n    });\r\n  }\r\n\r\n  isNumeric(str) {\r\n    return !isNaN(str) && !isNaN(parseInt(str));\r\n  }\r\n\r\n  handleValidation() {\r\n    let invalid = {};\r\n\r\n    if (!this.state.startDate || !this.state.startDate.match(/^(0[1-9]|1[0-2])\\/(0[1-9]|1\\d|2\\d|3[01])\\/(19|20)\\d{2}$/)) {\r\n      invalid['startDate'] = true;\r\n    }\r\n\r\n    if (!this.state.lengthInMonths || !this.isNumeric(this.state.lengthInMonths)) {\r\n      invalid['lengthInMonths'] = true;\r\n    }\r\n\r\n    if (!this.state.level) {\r\n      invalid['level'] = true;\r\n    }\r\n\r\n    if (this.state.entandoVersionId === '') {\r\n      invalid['entandoVersionId'] = true;\r\n    }\r\n\r\n    this.setState({ invalid: invalid });\r\n    return Object.keys(invalid).length === 0;\r\n  }\r\n\r\n  handleChanges = e => {\r\n    const input = e.target;\r\n    const name = input.name;\r\n    const value = input.value;\r\n    this.setState({ [name]: value });\r\n    this.setState({\r\n      submitSuccess: false,\r\n      submitError: false,\r\n    });\r\n  };\r\n\r\n  handleStartDateChange = date => {\r\n    let formatted = '';\r\n    if (date && date[0]) {\r\n      formatted = moment(date[0].toISOString()).format('MM/DD/YYYY');\r\n    }\r\n    this.setState({\r\n      startDate: formatted,\r\n    });\r\n  };\r\n\r\n  updateStateForSuccess(success) {\r\n    if (success) {\r\n      this.setState({\r\n        submitSuccess: true,\r\n        submitError: false,\r\n        submitColour: '#24a148',\r\n      });\r\n    } else {\r\n      this.setState({\r\n        submitSuccess: false,\r\n        submitError: true,\r\n        submitColour: '#da1e28',\r\n      });\r\n    }\r\n  }\r\n\r\n  handleFormSubmit = event => {\r\n    event.preventDefault();\r\n    this.setState({\r\n      submitSuccess: false,\r\n      submitError: false,\r\n    });\r\n    const formIsValid = this.handleValidation();\r\n\r\n    if (formIsValid) {\r\n      const formType = this.state.formType;\r\n      const serviceUrl = this.props.serviceUrl;\r\n      const subscriptionRequest = this.stateToSubscription();\r\n\r\n      if (formType === FORM_TYPE.edit) {\r\n        apiProjectSubscriptionPut(serviceUrl, subscriptionRequest)\r\n          .then(() => {\r\n            this.updateStateForSuccess(true);\r\n          })\r\n          .catch(() => {\r\n            this.updateStateForSuccess(false);\r\n          });\r\n      } else if (formType === FORM_TYPE.new) {\r\n        this.newSubscription(subscriptionRequest)\r\n          .then(res => {\r\n            apiAddSubscriptionToProject(serviceUrl, this.state.projectId, res.data.id);\r\n            this.updateStateForSuccess(true);\r\n          })\r\n          .catch(() => {\r\n            this.updateStateForSuccess(false);\r\n          });\r\n      } else if (formType === FORM_TYPE.renewal) {\r\n        this.renewSubscription(subscriptionRequest)\r\n          .then(res => {\r\n            apiAddSubscriptionToProject(serviceUrl, this.state.projectId, res.data.id);\r\n            this.updateStateForSuccess(true);\r\n          })\r\n          .catch(() => {\r\n            this.updateStateForSuccess(false);\r\n          });\r\n      } else {\r\n        console.log('Illegal operation');\r\n      }\r\n    }\r\n  };\r\n\r\n  stateToSubscription() {\r\n    return {\r\n      entandoVersionId: this.state.entandoVersionId,\r\n      projectId: this.state.projectId,\r\n      renewal: this.state.formType === FORM_TYPE.renewal,\r\n      projectSubscription: {\r\n        id: this.state.subscription.id,\r\n        startDate: new Date(this.state.startDate),\r\n        lengthInMonths: this.state.lengthInMonths,\r\n        level: this.state.level,\r\n        status: this.state.status.toUpperCase(),\r\n        notes: this.state.notes,\r\n      },\r\n    };\r\n  }\r\n\r\n  async newSubscription(request) {\r\n    return await apiProjectSubscriptionPost(this.props.serviceUrl, request);\r\n  }\r\n\r\n  async renewSubscription(request) {\r\n    return await apiRenewSubscription(this.props.serviceUrl, request);\r\n  }\r\n\r\n  setupFormComponents() {\r\n    const subscriptionLevelList = Object.entries(SUBSCRIPTION_LEVEL).map(([key, value]) => (\r\n      <SelectItem key={key} text={value} value={key}>\r\n        {value}\r\n      </SelectItem>\r\n    ));\r\n    subscriptionLevelList.unshift(<SelectItem key=\"-1\" text={i18n.t('subscriptionForm.chooseLevel')} value=\"\"/>);\r\n\r\n    const versionList = this.state.productVersions.map(version => {\r\n      // only allow the user to choose from active entando versions\r\n      if (version.status) {\r\n        return (\r\n          <SelectItem key={version.id} text={version.name} value={version.id}>\r\n            {version.name}\r\n          </SelectItem>\r\n        );\r\n      } else {\r\n        return null;\r\n      }\r\n    });\r\n    versionList.unshift(<SelectItem key=\"-1\" text={i18n.t('subscriptionForm.chooseVersion')} value=\"\"/>);\r\n\r\n    const statusList = Object.entries(SUBSCRIPTION_STATUS).map(([key, value]) => (\r\n      <SelectItem key={key} text={value} value={value}>\r\n        {value}\r\n      </SelectItem>\r\n    ));\r\n\r\n    return {subscriptionLevelList, versionList, statusList};\r\n  }\r\n\r\n  renderForm() {\r\n    const {subscriptionLevelList, versionList, statusList} = this.setupFormComponents();\r\n    return (\r\n      <div>\r\n        <div className=\"bx--row\">\r\n          <div className=\"bx--col\">\r\n            <div>\r\n              <span>{i18n.t('subscriptionForm.projectName')}:</span> {this.state.project.name}\r\n            </div>\r\n            <Select\r\n              id=\"status\"\r\n              name=\"status\"\r\n              labelText={i18n.t('subscriptionForm.subscriptionStatus')}\r\n              value={this.state.status}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.required')}\r\n              invalid={this.state.invalid['status']}\r\n              disabled={!isPortalAdmin()}\r\n            >\r\n              {statusList}\r\n            </Select>\r\n            <Select\r\n              id=\"level\"\r\n              name=\"level\"\r\n              labelText={i18n.t('subscriptionForm.subscriptionLevel') + ' *'}\r\n              value={this.state.level || ''}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.required')}\r\n              invalid={this.state.invalid['level']}\r\n            >\r\n              {subscriptionLevelList}\r\n            </Select>\r\n            <Select\r\n              id=\"entandoVersionId\"\r\n              name=\"entandoVersionId\"\r\n              labelText={i18n.t('subscriptionForm.entandoVersion') + ' *'}\r\n              value={this.state.entandoVersionId}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.required')}\r\n              invalid={this.state.invalid['entandoVersionId']}\r\n            >\r\n              {versionList}\r\n            </Select>\r\n          </div>\r\n          <div className=\"bx--col\">\r\n            <DatePicker dateFormat=\"m/d/Y\" datePickerType=\"single\" value={this.state.startDate}\r\n                        onChange={this.handleStartDateChange}>\r\n              <DatePickerInput\r\n                id=\"startDate\"\r\n                name=\"startDate\"\r\n                placeholder=\"mm/dd/yyyy\"\r\n                labelText={i18n.t('subscriptionForm.subscriptionStartDate')}\r\n                type=\"text\"\r\n                invalidText={i18n.t('validation.invalid.date')}\r\n                invalid={this.state.invalid['startDate']}\r\n              />\r\n            </DatePicker>\r\n            <TextInput\r\n              id=\"lengthInMonths\"\r\n              name=\"lengthInMonths\"\r\n              labelText={i18n.t('subscriptionForm.subscriptionLength') + ' *'}\r\n              value={this.state.lengthInMonths}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.number')}\r\n              invalid={this.state.invalid['lengthInMonths']}\r\n            />\r\n            {isPortalAdmin() && (\r\n              <TextArea\r\n                id={'notes'}\r\n                name=\"notes\"\r\n                labelText={i18n.t('adminDashboard.addProject.notes')}\r\n                value={this.state.notes}\r\n                onChange={this.handleChanges}\r\n              />\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  successErrorMessage() {\r\n    const isAdmin = isPortalAdmin();\r\n    const { subscriptionType, submitSuccess, submitError } = this.state;\r\n\r\n    if (subscriptionType === 'new') {\r\n      if (submitSuccess) {\r\n        return isAdmin ? this.createFormMessage('adminSubmitNewSuccess') : this.createFormMessage('customerSubmitSuccess');\r\n      } else if (submitError) {\r\n        return this.createFormMessage('newSubError');\r\n      }\r\n    } else {\r\n      if (submitSuccess) {\r\n        return isAdmin ? this.createFormMessage('adminRenewNewSuccess') : this.createFormMessage('customerSubmitSuccess');\r\n      } else if (submitError) {\r\n        return this.createFormMessage('renewSubError');\r\n      }\r\n    }\r\n  }\r\n\r\n  createFormMessage(subMessageKey) {\r\n    return <p style={{ color: this.state.submitColour }}>{i18n.t(`subscriptionForm.${subMessageKey}`)}</p>;\r\n  }\r\n\r\n  render() {\r\n    const titleKey = isPortalAdmin() ? 'subscriptionForm.adminTitle' : 'subscriptionForm.formTitle';\r\n    const formType = this.state.formType;\r\n    let formLabelKey = 'subscriptionForm.newSubscription';\r\n    if (formType !== 'new') {\r\n      formLabelKey = isPortalAdmin() ? 'subscriptionForm.editSubscription' : 'subscriptionForm.renewSubscription';\r\n    }\r\n\r\n    if (!this.state.loading) {\r\n      if (isPortalUser()) {\r\n        return (\r\n          <div>\r\n            <h3 className=\"pageTitle\">{i18n.t(titleKey)}</h3>\r\n            <div className=\"form-container\">\r\n              {this.successErrorMessage()}\r\n              <Form onSubmit={this.handleFormSubmit}>\r\n                <div className=\"bx--grid\">\r\n                  <div className=\"bx--row\">\r\n                    <div className=\"bx--col\">\r\n                      <strong>{i18n.t(formLabelKey)}</strong>\r\n                    </div>\r\n                  </div>\r\n                  {this.renderForm()}\r\n                  <Button kind=\"primary\" tabIndex={0} type=\"submit\">\r\n                    {' '}\r\n                    {i18n.t('buttons.submit')}\r\n                  </Button>\r\n                </div>\r\n              </Form>\r\n            </div>\r\n          </div>\r\n        );\r\n      } else {\r\n        return <p>{i18n.t('userMessages.unauthorized')}</p>;\r\n      }\r\n    }\r\n    // Loading\r\n    else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport default withKeycloak(SubscriptionForm);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport SubscriptionForm from '../components/Forms/SubscriptionForm';\nimport '../index.scss';\nimport * as Locale from '../i18n';\n\nimport KeycloakContext from '../auth/KeycloakContext';\n\nimport { subscribeToWidgetEvent } from '../helpers/widgetEvents';\nimport { KEYCLOAK_EVENT_TYPE } from './widgetEventTypes';\n\nconst getKeycloakInstance = () =>\n  (window && window.entando && window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\n    initialized: false,\n  };\n\nconst ATTRIBUTES = {\n  hidden: 'hidden',\n  locale: 'locale',\n  paginationMode: 'pagination-mode',\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\n  serviceUrl: 'service-url',\n};\n\nclass SubscriptionFormElement extends HTMLElement {\n  container;\n\n  mountPoint;\n\n  unsubscribeFromKeycloakEvent;\n\n  keycloak = getKeycloakInstance();\n\n  connectedCallback() {\n    this.mountPoint = document.createElement('div');\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\n\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\n      this.render();\n    });\n\n    this.render();\n\n    //retargetEvents(shadowRoot);\n    this.appendChild(this.mountPoint);\n  }\n\n  render() {\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\n    const locale = this.getAttribute(ATTRIBUTES.locale) || '';\n    Locale.setLocale(locale);\n\n    ReactDOM.render(\n      <KeycloakContext.Provider value={this.keycloak}>\n        <SubscriptionForm serviceUrl={serviceUrl} />\n      </KeycloakContext.Provider>,\n      this.mountPoint\n    );\n  }\n}\n\ncustomElements.define('cp-subscription-form-widget', SubscriptionFormElement);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport TicketList from '../components/SubscriptionDetails/TicketList';\nimport '../index.scss';\n\nimport KeycloakContext from '../auth/KeycloakContext';\n\nimport { subscribeToWidgetEvent } from '../helpers/widgetEvents';\nimport { KEYCLOAK_EVENT_TYPE } from './widgetEventTypes';\n\nconst getKeycloakInstance = () =>\n  (window && window.entando && window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\n    initialized: false,\n  };\n\nconst ATTRIBUTES = {\n  hidden: 'hidden',\n  locale: 'locale',\n  paginationMode: 'pagination-mode',\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\n  serviceUrl: 'service-url',\n};\n\nclass TicketListCustomerElement extends HTMLElement {\n  container;\n\n  mountPoint;\n\n  unsubscribeFromKeycloakEvent;\n\n  keycloak = getKeycloakInstance();\n\n  connectedCallback() {\n    this.mountPoint = document.createElement('div');\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\n\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\n      this.render();\n    });\n\n    this.render();\n\n    //retargetEvents(shadowRoot);\n    this.appendChild(this.mountPoint);\n  }\n\n  render() {\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\n\n    ReactDOM.render(\n      <KeycloakContext.Provider value={this.keycloak}>\n        <TicketList serviceUrl={serviceUrl} />\n      </KeycloakContext.Provider>,\n      this.mountPoint\n    );\n  }\n}\n\ncustomElements.define('cp-ticket-list-widget', TicketListCustomerElement);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport TicketingSystem from '../components/Admin/Configuration/TicketingSystem';\nimport '../index.scss';\n\nimport KeycloakContext from '../auth/KeycloakContext';\n\nimport { subscribeToWidgetEvent } from '../helpers/widgetEvents';\nimport { KEYCLOAK_EVENT_TYPE } from './widgetEventTypes';\n\nconst getKeycloakInstance = () =>\n  (window && window.entando && window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\n    initialized: false,\n  };\n\nconst ATTRIBUTES = {\n  hidden: 'hidden',\n  locale: 'locale',\n  paginationMode: 'pagination-mode',\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\n  serviceUrl: 'service-url',\n};\n\nclass TicketingSystemElement extends HTMLElement {\n  container;\n\n  mountPoint;\n\n  unsubscribeFromKeycloakEvent;\n\n  keycloak = getKeycloakInstance();\n\n  connectedCallback() {\n    this.mountPoint = document.createElement('div');\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\n\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\n      this.render();\n    });\n\n    this.render();\n\n    //retargetEvents(shadowRoot);\n    this.appendChild(this.mountPoint);\n  }\n\n  render() {\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\n\n    ReactDOM.render(\n      <KeycloakContext.Provider value={this.keycloak}>\n        <TicketingSystem serviceUrl={serviceUrl} />\n      </KeycloakContext.Provider>,\n      this.mountPoint\n    );\n  }\n}\n\ncustomElements.define('cp-ticketing-system-widget', TicketingSystemElement);\n","import React, {Component} from 'react';\r\nimport {BrowserRouter, Route, Switch, Link} from 'react-router-dom';\r\nimport App from '../components/App';\r\nimport withKeycloak from '../auth/withKeycloak';\r\nimport SubscriptionForm from '../components/Forms/SubscriptionForm';\r\nimport AdminConfiguration from '../components/Admin/Configuration/AdminConfiguration';\r\nimport OpenTicketForm from '../components/Forms/OpenTicketForm';\r\nimport ManageUser from '../components/Admin/ManageUser/ManageUser';\r\nimport ManageSubscriptions from '../components/Admin/ManageSubscriptions/ManageSubscriptions';\r\nimport {authenticationChanged, isAuthenticated, isPortalAdmin} from '../api/helpers';\r\n\r\nclass LocalApp extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: true,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (isAuthenticated(this.props)) {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (authenticationChanged(this.props, prevProps)) {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  logout() {\r\n    window.entando.keycloak.logout();\r\n  }\r\n\r\n  render() {\r\n    if (!this.state.loading) {\r\n      return (\r\n        <div>\r\n          <BrowserRouter forceRefresh={true}>\r\n            {/*Simple Menu for switching to page-based elements*/}\r\n            <div>\r\n              <ul>\r\n                <li>\r\n                  <Link to={'/'}>Home</Link>\r\n                </li>\r\n                {/*TODO: rework the entando-de-app-based paths so the application name and locale are more general*/}\r\n                {isPortalAdmin() && (\r\n                  <li>\r\n                    <Link to={'/entando-de-app/en/admin.page'}>Admin</Link>\r\n                  </li>\r\n                )}\r\n                <li>\r\n                  <a href=\"/\" onClick={this.logout}>\r\n                    Logout\r\n                  </a>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n            <Switch>\r\n              <Route path=\"/entando-de-app/en/admin.page\">\r\n                <AdminConfiguration serviceUrl={this.props.serviceUrl} locale={this.props.locale}/>\r\n              </Route>\r\n              <Route path=\"/entando-de-app/en/manage_subscriptions.page\">\r\n                <ManageSubscriptions serviceUrl={this.props.serviceUrl} locale={this.props.locale}/>\r\n              </Route>\r\n              <Route path=\"/entando-de-app/en/manage_users.page\">\r\n                <ManageUser serviceUrl={this.props.serviceUrl} locale={this.props.locale}/>\r\n              </Route>\r\n              <Route path=\"/entando-de-app/en/new_or_renew_subscription.page\">\r\n                <SubscriptionForm serviceUrl={this.props.serviceUrl} locale={this.props.locale}/>\r\n              </Route>\r\n              <Route path=\"/entando-de-app/en/open_service_ticket.page\">\r\n                <OpenTicketForm serviceUrl={this.props.serviceUrl} locale={this.props.locale}/>\r\n              </Route>\r\n              <Route path=\"/\" exact={true}>\r\n                <App serviceUrl={this.props.serviceUrl} locale={this.props.locale}/>\r\n              </Route>\r\n            </Switch>\r\n          </BrowserRouter>\r\n        </div>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport default withKeycloak(LocalApp);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '../index.scss';\nimport * as Locale from '../i18n';\n\nimport KeycloakContext from '../auth/KeycloakContext';\nimport LocalApp from '../local/LocalApp';\n\nimport {subscribeToWidgetEvent} from '../helpers/widgetEvents';\nimport {KEYCLOAK_EVENT_TYPE} from '../custom-elements/widgetEventTypes';\n\nconst getKeycloakInstance = () =>\n  (window && window.entando && window.entando.keycloak && {...window.entando.keycloak, initialized: true}) || {\n    initialized: false,\n  };\n\nconst ATTRIBUTES = {\n  hidden: 'hidden',\n  locale: 'locale',\n  paginationMode: 'pagination-mode',\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\n  serviceUrl: 'service-url',\n};\n\nclass LocalAppElement extends HTMLElement {\n  container;\n\n  mountPoint;\n\n  unsubscribeFromKeycloakEvent;\n\n  keycloak = getKeycloakInstance();\n\n  connectedCallback() {\n    this.mountPoint = document.createElement('div');\n    this.keycloak = {...getKeycloakInstance(), initialized: true};\n\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\n      this.keycloak = {...getKeycloakInstance(), initialized: true};\n      this.render();\n    });\n\n    this.render();\n\n    //retargetEvents(shadowRoot);\n    this.appendChild(this.mountPoint);\n  }\n\n  render() {\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\n    const locale = this.getAttribute(ATTRIBUTES.locale) || '';\n    Locale.setLocale(locale);\n\n    ReactDOM.render(\n      <KeycloakContext.Provider value={this.keycloak}>\n        <LocalApp serviceUrl={serviceUrl} locale={locale}/>\n      </KeycloakContext.Provider>,\n      this.mountPoint\n    );\n  }\n}\n\ncustomElements.define('local-app-element', LocalAppElement);\n"],"sourceRoot":""}