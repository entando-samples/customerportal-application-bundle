{"version":3,"sources":["i18n.js","auth/KeycloakContext.js","components/__types__/ref.js","auth/withKeycloak.js","api/helpers.js","api/customers.js","components/Admin/AddCustomerModal.js","api/partners.js","api/projects.js","components/Admin/AddPartnerModal.js","components/Admin/AddProjectModal.js","auth/KeycloakViews.js","components/Admin/EditProjectModal.js","components/Customer/customDataTable.js","components/Customer/customerDetails.js","components/Admin/EditCustomerModal.js","components/Customer/CustomerAccordian.js","api/subscriptions.js","api/productVersion.js","components/Forms/SubscriptionForm.js","api/portalusers.js","api/keycloak.js","components/Admin/ManageUser/AssignUser.js","components/Admin/ManageUser/DeleteUser.js","components/Admin/ManageUser/ManageUser.js","components/Admin/AdminDashboard.js","helpers/widgetEvents.js","custom-elements/widgetEventTypes.js","custom-elements/AdminDashboardElement.js","api/tickets.js","api/ticketingsystem.js","components/SubscriptionDetails/TicketList.js","components/Admin/EditSubscriptionModal.js","components/SubscriptionDetails/subscription.js","components/App.js","custom-elements/AdminAddCustomerElement.js","components/Admin/RoleCheck.js","custom-elements/AdminRoleCheckElement.js","custom-elements/CustomDataTableElement.js","custom-elements/CustomerDetailsElement.js","custom-elements/SubscriptionElement.js","components/Forms/openTicket.js","custom-elements/FormsOpenTicketElement.js","components/Navigation/Navigation.js","custom-elements/NavigationElement.js","components/Forms/enhancementRequest.js","custom-elements/FormsEnhancementRequestElement.js","custom-elements/AppElement.js","custom-elements/TicketListElement.js","components/Admin/Configuration/TicketingSystem.js","components/Admin/AddProductVersionModal.js","components/Admin/Configuration/ProductVersion.js","components/Admin/Configuration/AdminConfiguration.js","custom-elements/AdminConfigurationElement.js","custom-elements/OpenTicketElement.js","custom-elements/ManageUserElement.js","custom-elements/AssignUserElement.js","custom-elements/DeleteUserElement.js","custom-elements/TicketingSystemElement.js","custom-elements/ProductVersionElement.js","custom-elements/SubscriptionFormElement.js"],"names":["i18n","defaultLocale","locale","fallbacks","translations","en","it","setLocale","KeycloakContext","PropTypes","oneOfType","func","shape","current","elementType","React","createContext","withKeycloak","WrappedComponent","WithKeycloakComponent","renderWrappedComponent","value","props","forwardedRef","rest","ref","keycloak","Consumer","this","Component","defaultProps","forwardRef","getKeycloakToken","window","entando","authenticated","token","hasKeycloakClientRole","clientRole","resourceAccess","client","item","roles","includes","getDefaultOptions","headers","Headers","Authorization","getDefaultKeycloakOptions","getUrl","url","request","options","a","fetch","response","has","parseInt","get","status","data","json","Promise","reject","Error","statusText","resource","apiCustomersGet","serviceUrl","method","apiCustomerGet","id","apiCustomerPost","customer","body","JSON","stringify","apiCustomerPut","apiGetCustomersProjects","customerId","apiAddProjectToCustomer","projectId","apiAdminCustomersGet","myResource","apiMyCustomersGet","apiGetMyCustomersProjects","handleChanges","e","input","target","name","setState","handleFormSubmit","handleValidation","state","customerNumber","contactName","contactPhone","contactEmail","notes","customerPost","then","result","submitMsg","t","submitColour","updateCustomerList","catch","err","clearValues","document","querySelector","className","baseState","invalid","formIsValid","lastAtPos","lastIndexOf","lastDotPos","indexOf","length","initialized","addEventListener","ModalWrapper","buttonTriggerText","modalHeading","buttonTriggerClassName","handleSubmit","primaryButtonText","secondaryButtonText","modalLabel","style","color","Form","onSubmit","TextInput","labelText","onChange","invalidText","TextArea","apiPartnerPost","partner","apiProjectsGet","apiProjectGet","apiProjectPost","project","apiProjectPut","apiAddTicketToProject","ticketId","apiAddSubscriptionToProject","subscriptionId","apiAddUserToProject","userId","apiAddPartnerToProject","partnerId","apiGetProjectSubscriptions","apiGetProjectIdNames","apiGetMyProjectIdNames","apiAdminProjectsGet","apiMyProjectsGet","partnerNumber","partnerPost","projectList","prevProps","changedAuth","getProjects","projects","Select","defaultValue","SelectItem","text","Object","keys","map","i","description","systemId","alert","projectPost","customerList","getCustomers","getAllProjects","customers","label","AuthenticatedView","children","UnauthenticatedView","projectPut","updateProjectList","modalId","buttonId","buttonClassName","CustomTable","fetchData","headerData","header","key","render","DataTable","rows","rowData","getHeaderProps","getTableProps","TableContainer","title","Table","TableHead","TableRow","TableHeader","TableBody","index","projectSubscriptions","TableCell","partners","tickets","sub","to","entandoVersion","String","Date","startDate","toDateString","setMonth","getMonth","lengthInMonths","projectName","href","partnerName","endDate","openTickets","getCustomer","Tile","updateCustomer","getCustomersProjects","AccordionItem","apiSubscriptionGet","apiProjectSubscriptionPost","projectSubscriptionCreation","apiProjectSubscriptionPut","apiGetMySubscription","apiRenewSubscription","projectSubscriptionRenew","apiProductVersionsGet","apiUpdateProductVersionsStatus","apiProductVersionPost","productVersion","subscriptionLevel","GOLD","PLATINUM","subscriptionStatus","subscriptionTypes","submitSuccess","submitError","event","preventDefault","subscriptionType","newSubscription","res","renewSubscription","loading","subscriptionLength","entandoVersionId","productVersions","selectedProjectId","match","Number","isInteger","subscriptionRequest","projectSubscription","level","projectIdsNames","unshift","subscriptionLevelList","entries","versionList","version","formInputs","formComponents","setupFormComponents","DatePicker","dateFormat","datePickerType","DatePickerInput","placeholder","type","isAdmin","createFormMessage","subMessageKey","successErrorMessage","required","toLowerCase","renderForm","Button","kind","tabIndex","apiUserDelete","apiUsersGet","apiUserPost","user","apiUserGetByUsername","username","apiKeycloakUserGet","client_id","password","grant_type","mapKeycloakUserEmails","keycloakUsers","usernameEmailMap","Map","forEach","keycloakUser","set","email","assignUser","handleFormValidation","assignUserToProject","getPortalUserId","users","portalUserId","portalUserApi","portalUser","message","createPortalUser","authServerUrl","keycloakUrl","userList","size","handleRemoveUser","portalUsers","updatedPortalUsers","delete","handleUserDisplay","displayUsers","filterText","handleMapFormatting","portalUsernames","values","dateAdded","createdTimestamp","toLocaleString","month","getFullYear","userAccess","onClick","fill","row","cells","cell","userFunctionality","content","open","Accordion","toString","handleSearch","newFilteredState","filter","filteredCustomers","currentPage","undefined","forceUpdate","customersProjects","role","test","numberOfPages","Math","ceil","Search","placeHolderText","onKeyPress","indexOfLastItem","firstIndexOfCurrentPage","PaginationNav","loop","Boolean","page","totalItems","itemsShown","cssClass","subscribeToWidgetEvent","eventType","eventHandler","removeEventListener","KEYCLOAK_EVENT_TYPE","getKeycloakInstance","ATTRIBUTES","AdminDashboardElement","mountPoint","createElement","unsubscribeFromKeycloakEvent","appendChild","getAttribute","ReactDOM","Provider","HTMLElement","customElements","define","jiraResource","apiJiraTicketsGet","organization","apiJiraTicketPost","ticket","apiTicketingSystemDelete","apiTicketingSystemsGet","apiTicketingSystemPost","ticketingsystem","apiTicketingSystemPut","TicketList","ticketingSystems","currentTicketingSystem","console","log","priority","createDate","updateDate","creationDate","openTicket","subscription","moment","format","subscriptionPut","updateSubscription","calendar","disabled","subscriptionData","getSubscription","params","license","path","AdminAddCustomerElement","RoleCheck","roleType","AdminRoleCheckElement","CustomDataTableElement","CustomerDetailsElement","SubscriptionElement","parse","fetchProjectSubscription","createTicket","error","types","priorities","ticketingSystem","fetchProjects","getTicketingSystem","FormsOpenTicketElement","Navigation","NavigationElement","EnhancementRequest","ticketNo","customerName","openedBy","enhancementDescription","FormsEnhancementRequestElement","hidden","paginationMode","disableDefaultEventHandler","AppElement","Locale","TicketListCustomerElement","createTicketingSystem","updateTicketingSystem","ticketingSystemType","serviceAccount","serviceAccountSecret","getTicketingSystems","confirm","deleteTicketingSystem","handleDelete","addProductVersion","ProductVersion","getProductVersions","ToggleSmall","handleToggleChange","aria-label","defaultToggled","entVersion","adminConfig","class","AdminConfigurationElement","OpenTicketElement","ManageUserElement","AssignUserElement","DeleteUserElement","TicketingSystemElement","ProductVersionElement","SubsciptionFormElement"],"mappings":"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","file":"static/js/main.d4e86941.chunk.js","sourcesContent":["import i18n from 'i18n-js';\r\n\r\nimport en from './i18n/locales/en.json';\r\nimport it from './i18n/locales/it.json';\r\n\r\ni18n.defaultLocale = 'en';\r\ni18n.locale = 'en';\r\ni18n.fallbacks = true;\r\ni18n.translations = { en, it };\r\n\r\nexport const setLocale = (locale) => {\r\n    i18n.locale = locale;\r\n}\r\n\r\nexport default i18n;","import React from 'react';\r\n\r\nconst KeycloakContext = React.createContext(null);\r\n\r\nexport default KeycloakContext;\r\n","import PropTypes from 'prop-types';\r\n\r\nexport default PropTypes.oneOfType([\r\n  PropTypes.func,\r\n  PropTypes.shape({ current: PropTypes.elementType }),\r\n  PropTypes.shape(null),\r\n]);\r\n","/* eslint-disable react/jsx-props-no-spreading */\r\nimport React, { forwardRef, Component } from 'react';\r\nimport refType from '../components/__types__/ref';\r\nimport KeycloakContext from './KeycloakContext';\r\n\r\nexport default function withKeycloak(WrappedComponent) {\r\n  class WithKeycloakComponent extends Component {\r\n    renderWrappedComponent = value => {\r\n      const { forwardedRef, ...rest } = this.props;\r\n      return <WrappedComponent {...rest} ref={forwardedRef} keycloak={value} />;\r\n    };\r\n\r\n    render() {\r\n      return <KeycloakContext.Consumer>{this.renderWrappedComponent}</KeycloakContext.Consumer>;\r\n    }\r\n  }\r\n\r\n  \r\n  WithKeycloakComponent.propTypes = {\r\n    forwardedRef: refType,\r\n  };\r\n  \r\n\r\n  WithKeycloakComponent.defaultProps = {\r\n    forwardedRef: () => {},\r\n  };\r\n\r\n  return forwardRef((props, ref) => <WithKeycloakComponent {...props} forwardedRef={ref} />);\r\n}\r\n","export const getKeycloakToken = () => {\r\n  if (\r\n    window &&\r\n    window.entando &&\r\n    window.entando.keycloak &&\r\n    window.entando.keycloak.authenticated\r\n  ) {\r\n    return window.entando.keycloak.token;\r\n  }\r\n  return '';\r\n};\r\n\r\nexport const hasKeycloakClientRole = (clientRole) => {\r\n  if (getKeycloakToken()) {\r\n    const { resourceAccess } = window.entando.keycloak;\r\n    if (resourceAccess) {\r\n      for (const client in resourceAccess) {\r\n        const item = resourceAccess[client];\r\n        if (item.roles && item.roles.includes(clientRole)) {\r\n          // console.debug(\"Found role {} with client {} \", clientRole, client);\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return false;\r\n};\r\n\r\nexport const getDefaultOptions = () => ({\r\n  headers: new Headers({\r\n    Authorization: `Bearer ${getKeycloakToken()}`,\r\n    'Content-Type': 'application/json'\r\n  }),\r\n});\r\n\r\nexport const getDefaultKeycloakOptions = () => ({\r\n  headers: new Headers({\r\n    Authorization: `Bearer ${getKeycloakToken()}`,\r\n    'Content-Type': 'application/x-www-form-urlencoded'\r\n  }),\r\n});\r\n\r\nexport const getUrl = (url) => {\r\n  return `${url}`;\r\n};\r\n\r\nexport const request = async (url, options) => {\r\n  const response = await fetch(url, options);\r\n\r\n  const headers = {\r\n    ...(response.headers.has('X-Total-Count')\r\n      ? { 'X-Total-Count': parseInt(response.headers.get('X-Total-Count'), 10) }\r\n      : {}),\r\n  };\r\n\r\n  if (response.status === 204) {\r\n    return { data: '', status: response.status};\r\n  }\r\n\r\n  return response.status >= 200 && response.status < 300\r\n    ? { data: await response.json(), headers, status: response.status }\r\n    : Promise.reject(new Error(response.statusText || response.status));\r\n};\r\n","import { getDefaultOptions, request, getUrl } from './helpers';\r\n\r\nconst resource = 'api/customers';\r\n\r\nexport const apiCustomersDelete = async (serviceUrl, id) => {\r\n  const url = `${serviceUrl}/${resource}/${id}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE'\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiCustomersGet = async serviceUrl => {\r\n  const url = getUrl(`${serviceUrl}/${resource}`);\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET'\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiCustomerGet = async (serviceUrl, id) => {\r\n  const url = getUrl(`${serviceUrl}/${resource}/${id}`);\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET'\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiCustomersGetForAdminDashboard = async serviceUrl => {\r\n  const url = `${serviceUrl}/${resource}/all`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET'\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiCustomerPost = async (serviceUrl, customer) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n    body: customer ? JSON.stringify(customer) : null\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiCustomerPut = async (serviceUrl, customer) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'PUT',\r\n    body: customer ? JSON.stringify(customer) : null\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiGetCustomersProjects = async (serviceUrl, customerId) => {\r\n  const url = `${serviceUrl}/${resource}/${customerId}/projects`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET'\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiAddProjectToCustomer = async (serviceUrl, customerId, projectId) => {\r\n  const url = `${serviceUrl}/${resource}/${customerId}/projects/${projectId}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST'\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\n\r\n// Endpoints for backend security\r\nconst adminResource = 'api/customers/admin';\r\nexport const apiAdminCustomersGet = async (serviceUrl) => {\r\n  const url = getUrl(`${serviceUrl}/${adminResource}`);\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET'\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nconst myResource = 'api/customers/mycustomers';\r\nexport const apiMyCustomersGet = async (serviceUrl) => {\r\n  const url = getUrl(`${serviceUrl}/${myResource}`);\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET'\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiGetMyCustomersProjects = async (serviceUrl, customerId) => {\r\n  const url = `${serviceUrl}/${myResource}/${customerId}/projects`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET'\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n","import React, { Component } from 'react';\r\nimport i18n from '../../i18n';\r\nimport { ModalWrapper, Form, TextInput, TextArea } from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport { apiCustomerPost } from '../../api/customers';\r\n\r\nclass AddCustomerModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            name: '',\r\n            customerNumber: '',\r\n            contactName: '',\r\n            contactPhone: '',\r\n            contactEmail: '',\r\n            notes: '',\r\n            invalid: {},\r\n            submitMsg: '',\r\n            submitColour: 'black'\r\n        };\r\n\r\n        this.baseState = this.state\r\n    }\r\n\r\n    handleValidation() {\r\n        let invalid = {};\r\n        let formIsValid = true;\r\n\r\n        if (this.state.name === '') {\r\n            formIsValid = false;\r\n            invalid['name'] = true;\r\n        }\r\n\r\n        if (this.state.customerNumber === '') {\r\n            formIsValid = false;\r\n            invalid['customerNumber'] = true;\r\n        }\r\n\r\n        if (typeof this.state.contactEmail !== 'undefined') {\r\n            let lastAtPos = this.state.contactEmail.lastIndexOf('@');\r\n            let lastDotPos = this.state.contactEmail.lastIndexOf('.');\r\n\r\n            if (\r\n                !(\r\n                    lastAtPos < lastDotPos &&\r\n                    lastAtPos > 0 &&\r\n                    this.state.contactEmail.indexOf('@@') == -1 &&\r\n                    lastDotPos > 2 &&\r\n                    this.state.contactEmail.length - lastDotPos > 2\r\n                )\r\n            ) {\r\n                formIsValid = false;\r\n                invalid['contactEmail'] = true;\r\n            }\r\n        }\r\n\r\n        this.setState({ invalid: invalid });\r\n        return formIsValid;\r\n    }\r\n\r\n    handleChanges = e => {\r\n        const input = e.target;\r\n        const name = input.name;\r\n        const value = input.value;\r\n        this.setState({ [name]: value });\r\n    };\r\n\r\n    async customerPost(customer) {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n        if (authenticated) {\r\n            return await apiCustomerPost(this.props.serviceUrl, customer);\r\n        }\r\n    }\r\n\r\n\r\n    handleFormSubmit = e => {\r\n        const formIsValid = this.handleValidation();\r\n\r\n        if (formIsValid) {\r\n            const customer = {\r\n                name: this.state.name,\r\n                customerNumber: this.state.customerNumber,\r\n                contactName: this.state.contactName,\r\n                contactPhone: this.state.contactPhone,\r\n                contactEmail: this.state.contactEmail,\r\n                notes: this.state.notes\r\n              };\r\n\r\n            this.customerPost(customer).then(result => {\r\n                this.setState({\r\n                    submitMsg: i18n.t('submitMessages.added'),\r\n                    submitColour: '#24a148'\r\n                })\r\n                this.props.updateCustomerList();\r\n            }).catch(err => {\r\n                this.setState({\r\n                    submitMsg: i18n.t('submitMessages.error'),\r\n                    submitColour: '#da1e28'\r\n                })\r\n            });\r\n        }\r\n        //this.props.testFunction();\r\n        //super.componentDidMount();\r\n    };\r\n\r\n    clearValues = () => {\r\n        const customerModalElement = document.querySelector('#modal-form-customer');\r\n        if(!customerModalElement.className.includes(\"is-visible\")) {\r\n            this.setState(this.baseState);\r\n        }\r\n    }\r\n    \r\n    componentDidMount() {\r\n        const modalOpenButton = document.querySelector('.add-customer-button');\r\n        modalOpenButton.addEventListener(\"click\", this.clearValues, false);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ModalWrapper\r\n                buttonTriggerText={i18n.t('buttons.addCustomer')}\r\n                modalHeading={i18n.t('adminDashboard.addCustomer.title')}\r\n                buttonTriggerClassName=\"add-customer bx--btn bx--btn--tertiary add-customer-button\"\r\n                className=\"modal-form\"\r\n                id=\"modal-form-customer\"\r\n                handleSubmit={this.handleFormSubmit}\r\n                primaryButtonText={i18n.t('modalText.save')}\r\n                secondaryButtonText={i18n.t('modalText.cancel')}\r\n                modalLabel={<p style={{color: this.state.submitColour}}>{this.state.submitMsg}</p>}\r\n            >\r\n                <div className=\"form-container\">\r\n                    <Form onSubmit={this.handleFormSubmit}>\r\n                        <TextInput\r\n                            name=\"name\"\r\n                            labelText={i18n.t('adminDashboard.addCustomer.customerName') + \" *\"}\r\n                            value={this.state.name}\r\n                            onChange={this.handleChanges}\r\n                            invalidText={i18n.t('validation.invalid.required')}\r\n                            invalid={this.state.invalid['name']}\r\n                        />\r\n                        <TextInput\r\n                            name=\"customerNumber\"\r\n                            labelText={i18n.t('adminDashboard.addCustomer.customerNumber') + \" *\"}\r\n                            value={this.state.customerNumber}\r\n                            onChange={this.handleChanges}\r\n                            invalidText={i18n.t('validation.invalid.required')}\r\n                            invalid={this.state.invalid['customerNumber']}\r\n                        />\r\n                        <TextInput\r\n                            name=\"contactName\"\r\n                            labelText={i18n.t('adminDashboard.addCustomer.contactName')}\r\n                            value={this.state.contactName}\r\n                            onChange={this.handleChanges}\r\n                        />\r\n                        <TextInput\r\n                            name=\"contactPhone\"\r\n                            labelText={i18n.t('adminDashboard.addCustomer.contactPhone')}\r\n                            value={this.state.contactPhone}\r\n                            onChange={this.handleChanges}\r\n                        />\r\n                        <TextInput\r\n                            name=\"contactEmail\"\r\n                            labelText={i18n.t('adminDashboard.addCustomer.contactEmail') + \" *\"}\r\n                            value={this.state.contactEmail}\r\n                            onChange={this.handleChanges}\r\n                            invalidText={i18n.t('validation.invalid.email')}\r\n                            invalid={this.state.invalid['contactEmail']}\r\n                        />\r\n                        <TextArea\r\n                            name=\"notes\"\r\n                            labelText={i18n.t('adminDashboard.addCustomer.notes')}\r\n                            value={this.state.notes}\r\n                            onChange={this.handleChanges}\r\n                        />\r\n                    </Form>\r\n                </div>\r\n            </ModalWrapper>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withKeycloak(AddCustomerModal);\r\n","import { getDefaultOptions, request, getUrl } from './helpers';\r\n\r\nconst resource = 'api/partners';\r\n\r\nexport const apiPartnerDelete = async (serviceUrl, id) => {\r\n  const url = `${serviceUrl}/${resource}/${id}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiPartnersGet = async (serviceUrl) => {\r\n  const url = getUrl(\r\n    `${serviceUrl}/${resource}`\r\n  );\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiPartnerPost = async (serviceUrl, partner) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n    body: partner ? JSON.stringify(partner) : null,\r\n  };\r\n  return request(url, options);\r\n};\r\n","import { getDefaultOptions, request, getUrl } from './helpers';\r\n\r\nconst resource = 'api/projects';\r\n\r\nexport const apiProjectsDelete = async (serviceUrl, id) => {\r\n  const url = `${serviceUrl}/${resource}/${id}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiProjectsGet = async (serviceUrl) => {\r\n  const url = getUrl(\r\n    `${serviceUrl}/${resource}`\r\n  );\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiProjectGet = async (serviceUrl, id) => {\r\n  const url = getUrl(\r\n    `${serviceUrl}/${resource}/${id}`\r\n  );\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiProjectsGetForCustomer = async (serviceUrl, customerNumber) => {\r\n  const url = `${serviceUrl}/${resource}/subscriptions/customer/${customerNumber}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiProjectPost = async (serviceUrl, project) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n    body: project ? JSON.stringify(project) : null,\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiProjectPut = async (serviceUrl, project) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'PUT',\r\n    body: project ? JSON.stringify(project) : null,\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiAddTicketToProject = async (serviceUrl, projectId, ticketId) => {\r\n  const url = `${serviceUrl}/${resource}/${projectId}/tickets/${ticketId}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiAddSubscriptionToProject = async (serviceUrl, projectId, subscriptionId) => {\r\n  const url = `${serviceUrl}/${resource}/${projectId}/subscriptions/${subscriptionId}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiAddUserToProject = async (serviceUrl, projectId, userId) => {\r\n  const url = `${serviceUrl}/${resource}/${projectId}/users/${userId}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiAddPartnerToProject = async (serviceUrl, projectId, partnerId) => {\r\n  const url = `${serviceUrl}/${resource}/${projectId}/partners/${partnerId}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiGetProjectsUsers = async (serviceUrl, projectId) => {\r\n  const url = `${serviceUrl}/${resource}/${projectId}/users/`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiGetProjectsTickets = async (serviceUrl, projectId) => {\r\n  const url = `${serviceUrl}/${resource}/${projectId}/tickets/`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiGetProjectSubscriptions = async (serviceUrl, projectId) => {\r\n  const url = `${serviceUrl}/${resource}/${projectId}/subscriptions/`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiGetProjectIdNames = async (serviceUrl) => {\r\n  const url = `${serviceUrl}/${resource}/nameId/`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiGetMyProjectIdNames = async (serviceUrl) => {\r\n  const url = `${serviceUrl}/${resource}/myprojects/nameId/`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\n// Endpoints for backend security\r\nconst adminResource = 'api/projects/admin';\r\nexport const apiAdminProjectsGet = async (serviceUrl) => {\r\n  const url = getUrl(`${serviceUrl}/${adminResource}`);\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET'\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nconst myResource = 'api/projects/myprojects';\r\nexport const apiMyProjectsGet = async (serviceUrl) => {\r\n  const url = getUrl(`${serviceUrl}/${myResource}`);\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET'\r\n  };\r\n\r\n  return request(url, options);\r\n};","import React, { Component } from 'react';\r\nimport i18n from '../../i18n';\r\nimport { ModalWrapper, Form, TextInput, Select, SelectItem, TextArea } from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport { apiPartnerPost } from '../../api/partners';\r\nimport { apiProjectPost, apiProjectsGet, apiAddPartnerToProject } from '../../api/projects';\r\n\r\nclass AddPartnerModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      projectList: {},\r\n      projectId: '',\r\n      name: '',\r\n      partnerNumber: '',\r\n      notes: '',\r\n      invalid: {},\r\n      submitMsg: '',\r\n      submitColour: 'black'\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n    const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n\r\n    if (authenticated && changedAuth) {\r\n      this.getProjects();\r\n    }\r\n  }\r\n\r\n  handleValidation() {\r\n    let invalid = {};\r\n    let formIsValid = true;\r\n\r\n    //project\r\n    if (this.state.projectId === '' || this.state.projectId === 'project-list') {\r\n      formIsValid = false;\r\n      invalid['projectId'] = true;\r\n    }\r\n\r\n    if (this.state.name === '') {\r\n      formIsValid = false;\r\n      invalid['name'] = true;\r\n    }\r\n\r\n    if (this.state.partnerNumber === '') {\r\n      formIsValid = false;\r\n      invalid['partnerNumber'] = true;\r\n    }\r\n\r\n    this.setState({ invalid: invalid });\r\n    return formIsValid;\r\n  }\r\n\r\n  handleChanges = e => {\r\n    const input = e.target;\r\n    const name = input.name;\r\n    const value = input.value;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  async getProjects() {\r\n    const { t, keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n    if (authenticated) {\r\n      const projects = await apiProjectsGet(this.props.serviceUrl);\r\n      this.setState({ projectList: projects });\r\n    }\r\n  }\r\n\r\n  async partnerPost(partner) {\r\n    const { t, keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n    if (authenticated) {\r\n      const result = await apiPartnerPost(this.props.serviceUrl, partner);\r\n      return await apiAddPartnerToProject(this.props.serviceUrl, this.state.projectId, result.data.id);\r\n    }\r\n  }\r\n\r\n  handleFormSubmit = e => {\r\n    const formIsValid = this.handleValidation();\r\n\r\n    if (formIsValid) {\r\n      const partner = {\r\n        name: this.state.name,\r\n        partnerNumber: this.state.partnerNumber,\r\n        notes: this.state.notes\r\n      };\r\n      this.partnerPost(partner).then(result => {\r\n        this.setState({\r\n            submitMsg: i18n.t('submitMessages.added'),\r\n            submitColour: '#24a148'\r\n        })\r\n        this.props.updateCustomerList();\r\n      }).catch(err => {\r\n          this.setState({\r\n              submitMsg: i18n.t('submitMessages.error'),\r\n              submitColour: '#da1e28'\r\n          })\r\n      });\r\n    }\r\n  };\r\n\r\n  clearValues = () => {\r\n    const partnerModalElement = document.querySelector('#modal-form-partner');\r\n    if(!partnerModalElement.className.includes(\"is-visible\")) {\r\n      this.setState({\r\n        projectId: '',\r\n        name: '',\r\n        partnerNumber: '',\r\n        notes: '',\r\n        invalid: {}\r\n      })\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getProjects();\r\n\r\n    const modalOpenButton = document.querySelector('.add-partner-button');\r\n    modalOpenButton.addEventListener(\"click\", this.clearValues, false);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <ModalWrapper\r\n        buttonTriggerText={i18n.t('buttons.addPartner')}\r\n        modalHeading={i18n.t('adminDashboard.addPartner.title')}\r\n        buttonTriggerClassName=\"add-partner bx--btn bx--btn--tertiary add-partner-button\"\r\n        className=\"modal-form\"\r\n        id=\"modal-form-partner\"\r\n        handleSubmit={this.handleFormSubmit}\r\n        primaryButtonText={i18n.t('modalText.save')}\r\n        secondaryButtonText={i18n.t('modalText.cancel')}\r\n        modalLabel={<p style={{color: this.state.submitColour}}>{this.state.submitMsg}</p>}\r\n      >\r\n        <div className=\"form-container\">\r\n          {/*<p> {i18n.t('adminDashboard.addPartner.desc')}</p>*/}\r\n          <Form onSubmit={this.handleFormSubmit}>\r\n            <Select\r\n              defaultValue=\"project-list\"\r\n              name=\"projectId\"\r\n              labelText={i18n.t('adminDashboard.addPartner.projectList') + \" *\"}\r\n              value={this.state.projectId}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.required')}\r\n              invalid={this.state.invalid['projectId']}\r\n            >\r\n              <SelectItem text={i18n.t('adminDashboard.addPartner.selectProject')} value=\"project-list\" />\r\n              {Object.keys(this.state.projectList).length !== 0\r\n                ? this.state.projectList.data.map((projectList, i) => (\r\n                    <SelectItem key={i} text={projectList.name} value={projectList.id}>\r\n                      {projectList.name}\r\n                    </SelectItem>\r\n                  ))\r\n                : null}\r\n            </Select>\r\n\r\n            <TextInput\r\n              name=\"name\"\r\n              labelText={i18n.t('adminDashboard.addPartner.partnerName') + \" *\"}\r\n              value={this.state.name}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.required')}\r\n              invalid={this.state.invalid['name']}\r\n            />\r\n            <TextInput\r\n              name=\"partnerNumber\"\r\n              labelText={i18n.t('adminDashboard.addPartner.partnerNumber') + \" *\"}\r\n              value={this.state.partnerNumber}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.required')}\r\n              invalid={this.state.invalid['partnerNumber']}\r\n            />\r\n            <TextArea\r\n              name=\"notes\"\r\n              labelText={i18n.t('adminDashboard.addPartner.notes')}\r\n              value={this.state.notes}\r\n              onChange={this.handleChanges}\r\n            />\r\n          </Form>\r\n        </div>\r\n      </ModalWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withKeycloak(AddPartnerModal);\r\n","import React, { Component } from 'react';\r\nimport i18n from '../../i18n';\r\nimport { ModalWrapper, Form, TextInput, Select, SelectItem, TextArea } from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport { apiCustomersGet, apiAddProjectToCustomer } from '../../api/customers';\r\nimport { apiProjectPost, apiProjectsGet } from '../../api/projects';\r\n\r\nclass AddProjectModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      projects: {},\r\n      customerList: {},\r\n      customerId: '',\r\n      name: '',\r\n      description: '',\r\n      systemId: '',\r\n      contactName: '',\r\n      contactPhone: '',\r\n      contactEmail: '',\r\n      notes: '',\r\n      invalid: {},\r\n      submitMsg: '',\r\n      submitColour: 'black'\r\n    };\r\n  }\r\n\r\n  handleValidation() {\r\n    let invalid = {};\r\n    let formIsValid = true;\r\n\r\n    //customer\r\n    if (this.state.customerId === '' || this.state.customerId === 'customer-list') {\r\n      formIsValid = false;\r\n      invalid['customerId'] = true;\r\n    }\r\n\r\n    //name\r\n    if (this.state.name === '') {\r\n      formIsValid = false;\r\n      invalid['name'] = true;\r\n    }\r\n\r\n    //description\r\n    if (this.state.description === '') {\r\n      formIsValid = false;\r\n      invalid['description'] = true;\r\n    }\r\n\r\n    //contactEmail\r\n    if (typeof this.state.contactEmail !== 'undefined') {\r\n      let lastAtPos = this.state.contactEmail.lastIndexOf('@');\r\n      let lastDotPos = this.state.contactEmail.lastIndexOf('.');\r\n\r\n      if (\r\n        !(\r\n          lastAtPos < lastDotPos &&\r\n          lastAtPos > 0 &&\r\n          this.state.contactEmail.indexOf('@@') == -1 &&\r\n          lastDotPos > 2 &&\r\n          this.state.contactEmail.length - lastDotPos > 2\r\n        )\r\n      ) {\r\n        formIsValid = false;\r\n        invalid['contactEmail'] = true;\r\n      }\r\n    }\r\n\r\n    this.setState({ invalid: invalid });\r\n    return formIsValid;\r\n  }\r\n\r\n  async getAllProjects() {\r\n    const projects = await apiProjectsGet(this.props.serviceUrl);\r\n    this.setState({\r\n      projects: projects.data\r\n    });\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n    const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n\r\n    if (authenticated && changedAuth) {\r\n      this.getCustomers();\r\n      this.getAllProjects();\r\n    }\r\n  }\r\n\r\n  handleChanges = e => {\r\n    const input = e.target;\r\n    const name = input.name;\r\n    const value = input.value;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  async getCustomers() {\r\n    const { t, keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n    if (authenticated) {\r\n      const customers = await apiCustomersGet(this.props.serviceUrl);\r\n      this.setState({ customerList: customers });\r\n    }\r\n  }\r\n\r\n  async projectPost(project) {\r\n    const { t, keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n    if (authenticated) {\r\n      const result = await apiProjectPost(this.props.serviceUrl, project);\r\n      return await apiAddProjectToCustomer(this.props.serviceUrl, this.state.customerId, result.data.id);\r\n    }\r\n  }\r\n\r\n  handleFormSubmit = e => {\r\n    const formIsValid = this.handleValidation();\r\n\r\n    if (formIsValid) {\r\n      const project = {\r\n        name: this.state.name,\r\n        description: this.state.description,\r\n        systemId: this.state.systemId,\r\n        contactName: this.state.contactName,\r\n        contactPhone: this.state.contactPhone,\r\n        contactEmail: this.state.contactEmail,\r\n        notes: this.state.notes\r\n      };\r\n      for (var i = 0; i < this.state.projects.length; i++) {\r\n        if (project.systemId === this.state.projects[i].systemId) {\r\n          window.alert('That system id is already in use in another project');\r\n          return;\r\n        }\r\n      }\r\n      this.projectPost(project).then(result => {\r\n        this.setState({\r\n            submitMsg: i18n.t('submitMessages.added'),\r\n            submitColour: '#24a148'\r\n        })\r\n        this.props.updateCustomerList();\r\n      }).catch(err => {\r\n          this.setState({\r\n              submitMsg: i18n.t('submitMessages.error'),\r\n              submitColour: '#da1e28'\r\n          })\r\n      });\r\n    }\r\n  };\r\n\r\n  clearValues = () => {\r\n    const projectModalElement = document.querySelector('#modal-form-project');\r\n    if(!projectModalElement.className.includes(\"is-visible\")) {\r\n      this.setState({\r\n        customerId: '',\r\n        name: '',\r\n        description: '',\r\n        systemId: '',\r\n        contactName: '',\r\n        contactPhone: '',\r\n        contactEmail: '',\r\n        notes: '',\r\n        invalid: {}\r\n      })\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getCustomers();\r\n    this.getAllProjects();\r\n\r\n    const modalOpenButton = document.querySelector('.add-project-button');\r\n    modalOpenButton.addEventListener(\"click\", this.clearValues, false);\r\n  }\r\n  \r\n  render() {\r\n    const customerList = ['Customer1', 'Customer2', 'Customer3'];\r\n    return (\r\n      <ModalWrapper\r\n        buttonTriggerText={i18n.t('buttons.addProject')}\r\n        modalHeading={i18n.t('adminDashboard.addProject.title')}\r\n        buttonTriggerClassName=\"add-project bx--btn bx--btn--tertiary add-project-button\"\r\n        className=\"modal-form\"\r\n        id=\"modal-form-project\"\r\n        handleSubmit={this.handleFormSubmit}\r\n        primaryButtonText={i18n.t('modalText.save')}\r\n        secondaryButtonText={i18n.t('modalText.cancel')}\r\n        modalLabel={<p style={{color: this.state.submitColour}}>{this.state.submitMsg}</p>}\r\n      >\r\n        <div className=\"form-container\">\r\n          {/*<p> {i18n.t('adminDashboard.addProject.desc')} </p>*/}\r\n          <Form onSubmit={this.handleFormSubmit}>\r\n            <Select\r\n              defaultValue=\"customer-list\"\r\n              name=\"customerId\"\r\n              labelText={i18n.t('adminDashboard.addProject.customerList') + \" *\"}\r\n              defaultValue={{ label: \"Select Dept\", value: 0 }}\r\n              value={this.state.customerId}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.required')}\r\n              invalid={this.state.invalid['customerId']}\r\n            >\r\n              <SelectItem text={i18n.t('adminDashboard.addProject.selectCustomer')} value=\"customer-list\" />\r\n              {Object.keys(this.state.customerList).length !== 0\r\n                ? this.state.customerList.data.map((customerList, i) => (\r\n                    <SelectItem key={i} text={customerList.name} value={customerList.id}>\r\n                      {customerList.name}\r\n                    </SelectItem>\r\n                  ))\r\n                : null}\r\n            </Select>\r\n\r\n            <TextInput\r\n              name=\"name\"\r\n              labelText={i18n.t('adminDashboard.addProject.projectName') + \" *\"}\r\n              value={this.state.name}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.required')}\r\n              invalid={this.state.invalid['name']}\r\n            />\r\n            <TextInput\r\n              name=\"description\"\r\n              labelText={i18n.t('adminDashboard.addProject.projectDesc') + \" *\"}\r\n              value={this.state.description}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.required')}\r\n              invalid={this.state.invalid['description']}\r\n            />\r\n            <TextInput\r\n              name=\"systemId\"\r\n              labelText={i18n.t('adminDashboard.addProject.systemId')}\r\n              value={this.state.systemId}\r\n              onChange={this.handleChanges}\r\n            />\r\n            <TextInput\r\n              name=\"contactName\"\r\n              labelText={i18n.t('adminDashboard.addProject.contactName')}\r\n              value={this.state.contactName}\r\n              onChange={this.handleChanges}\r\n            />\r\n            <TextInput\r\n              name=\"contactPhone\"\r\n              labelText={i18n.t('adminDashboard.addProject.contactPhone')}\r\n              value={this.state.contactPhone}\r\n              onChange={this.handleChanges}\r\n            />\r\n            <TextInput\r\n              name=\"contactEmail\"\r\n              labelText={i18n.t('adminDashboard.addProject.contactEmail') + \" *\"}\r\n              value={this.state.contactEmail}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.email')}\r\n              invalid={this.state.invalid['contactEmail']}\r\n            />\r\n            <TextArea\r\n              name=\"notes\"\r\n              labelText={i18n.t('adminDashboard.addProject.notes')}\r\n              value={this.state.notes}\r\n              onChange={this.handleChanges}\r\n            />\r\n          </Form>\r\n        </div>\r\n      </ModalWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withKeycloak(AddProjectModal);\r\n","export const AuthenticatedView = ({ children, keycloak }) => {\r\n  const authenticated = keycloak.initialized && keycloak.authenticated;\r\n  return authenticated ? children : null;\r\n};\r\n\r\nexport const UnauthenticatedView = ({ children, keycloak }) => {\r\n  const authenticated = keycloak.initialized && keycloak.authenticated;\r\n  return !authenticated ? children : null;\r\n};\r\n","import React, { Component } from 'react';\r\nimport i18n from '../../i18n';\r\nimport { ModalWrapper, Form, TextInput, Select, SelectItem, TextArea } from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport { apiCustomersGet, apiAddProjectToCustomer } from '../../api/customers';\r\nimport { apiProjectPut, apiProjectsGet } from '../../api/projects';\r\n\r\nclass EditProjectModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        this.state = {\r\n            projects: {},\r\n            customerList: {},\r\n            customerId: '',\r\n            name: '',\r\n            description: '',\r\n            systemId: '',\r\n            contactName: '',\r\n            contactPhone: '',\r\n            contactEmail:'',\r\n            notes:'',\r\n            invalid: {},\r\n            modalId: '',\r\n            buttonId: '',\r\n            submitMsg: '',\r\n            submitColour: 'black'\r\n        };\r\n    }\r\n\r\n    handleValidation() {\r\n        let invalid = {};\r\n        let formIsValid = true;\r\n\r\n        //name\r\n        if(this.state.name === ''){\r\n          formIsValid = false;\r\n          invalid[\"name\"] = true;\r\n        }\r\n\r\n        //description\r\n        if(this.state.description === ''){\r\n            formIsValid = false;\r\n            invalid[\"description\"] = true;\r\n        }\r\n\r\n        //contactEmail\r\n        if(typeof this.state.contactEmail !== \"undefined\"){\r\n          let lastAtPos = this.state.contactEmail.lastIndexOf('@');\r\n          let lastDotPos = this.state.contactEmail.lastIndexOf('.');\r\n    \r\n          if (!(lastAtPos < lastDotPos && lastAtPos > 0 && this.state.contactEmail.indexOf('@@') == -1 && lastDotPos > 2 && (this.state.contactEmail.length - lastDotPos) > 2)) {\r\n            formIsValid = false;\r\n            invalid[\"contactEmail\"] = true;\r\n          }\r\n        }\r\n    \r\n        this.setState({invalid: invalid});\r\n        return formIsValid;\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const { keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n    \r\n        const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n    \r\n        if (authenticated && changedAuth) {\r\n          this.getCustomers();\r\n          this.getAllProjects();\r\n        }\r\n      }\r\n\r\n    handleChanges = e => {\r\n        const input = e.target;\r\n        const name = input.name;\r\n        const value = input.value;\r\n        this.setState({ [name]: value });\r\n    };\r\n\r\n    async getCustomers() {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n        if (authenticated) {\r\n            const customers = await apiCustomersGet(this.props.serviceUrl);\r\n            this.setState({customerList: customers})\r\n        }\r\n    }\r\n\r\n    async getAllProjects() {\r\n        const projects = await apiProjectsGet(this.props.serviceUrl);\r\n        this.setState({\r\n          projects: projects.data\r\n        });\r\n      }\r\n\r\n    async projectPut(project) {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n        if (authenticated) {\r\n            return await apiProjectPut(this.props.serviceUrl, project);\r\n            //await apiAddProjectToCustomer(this.props.serviceUrl, this.state.customerId, result.data.id)\r\n        }\r\n    }\r\n\r\n    handleFormSubmit = (e) => {\r\n        const formIsValid = this.handleValidation();\r\n\r\n        if (formIsValid) {\r\n            const project = {\r\n                id: this.props.project.id,\r\n                customer: this.props.project.customer,\r\n                name: this.state.name,\r\n                description: this.state.description,\r\n                systemId: this.state.systemId,\r\n                contactName: this.state.contactName,\r\n                contactPhone: this.state.contactPhone,\r\n                contactEmail: this.state.contactEmail,\r\n                notes: this.state.notes\r\n            }\r\n            for (var i = 0; i < this.state.projects.length; i++) {\r\n                if((project.systemId === this.state.projects[i].systemId) && (project.id !== this.state.projects[i].id)) {\r\n                    window.alert('That system id is already in use in another project');\r\n                    return;\r\n                }\r\n            }\r\n            this.projectPut(project).then(result => {\r\n                this.setState({\r\n                    submitMsg: i18n.t('submitMessages.updated'),\r\n                    submitColour: '#24a148'\r\n                })\r\n                this.props.updateProjectList();\r\n            }).catch(err => {\r\n                this.setState({\r\n                    submitMsg: i18n.t('submitMessages.error'),\r\n                    submitColour: '#da1e28'\r\n                })\r\n            });\r\n        }\r\n    };\r\n\r\n    clearValues = () => {\r\n        const { keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n        const customerModalElement = document.querySelector('#' + this.state.modalId);\r\n        if(!customerModalElement.className.includes(\"is-visible\") && authenticated) {\r\n            this.setState({\r\n                name: this.props.project.name,\r\n                description: this.props.project.description,\r\n                systemId: this.props.project.systemId,\r\n                contactName: this.props.project.contactName,\r\n                contactPhone: this.props.project.contactPhone,\r\n                contactEmail:this.props.project.contactEmail,\r\n                notes:this.props.project.notes,\r\n                invalid: {}\r\n            })\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n    \r\n        if (authenticated) {\r\n            this.getCustomers();\r\n            this.getAllProjects();\r\n            this.setState({\r\n                name: this.props.project.name,\r\n                description: this.props.project.description,\r\n                systemId: this.props.project.systemId,\r\n                contactName: this.props.project.contactName,\r\n                contactPhone: this.props.project.contactPhone,\r\n                contactEmail:this.props.project.contactEmail,\r\n                notes:this.props.project.notes,\r\n                modalId: \"modal-form-project-edit-\" + this.props.project.id,\r\n                buttonId: \"edit-project-button-\" + this.props.project.id\r\n            })\r\n\r\n            const modalOpenButton = document.querySelector('.edit-project-button-' + this.props.project.id);\r\n            modalOpenButton.addEventListener(\"click\", this.clearValues, false);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const buttonClassName = \"bx--btn bx--btn--ghost edit-project-button-\" + this.props.project.id;\r\n        return (\r\n            <ModalWrapper\r\n                buttonTriggerText={i18n.t('buttons.edit')}\r\n                modalHeading={i18n.t('adminDashboard.addProject.editTitle')}\r\n                buttonTriggerClassName={buttonClassName}\r\n                className=\"modal-form\"\r\n                id={this.state.modalId}\r\n                handleSubmit={this.handleFormSubmit}\r\n                primaryButtonText={i18n.t('modalText.save')}\r\n                secondaryButtonText={i18n.t('modalText.cancel')}\r\n                modalLabel={<p style={{color: this.state.submitColour}}>{this.state.submitMsg}</p>}\r\n            >\r\n                <div className=\"form-container\">\r\n                    {/*<p> {i18n.t('adminDashboard.addProject.desc')} </p>*/}\r\n                    <Form onSubmit={this.handleFormSubmit}>\r\n                        <TextInput \r\n                            name=\"name\" \r\n                            labelText={i18n.t('adminDashboard.addProject.projectName') + \" *\"} \r\n                            defaultValue={this.state.name} \r\n                            onChange={this.handleChanges} \r\n                            invalidText={i18n.t('validation.invalid.required')} \r\n                            invalid={this.state.invalid[\"name\"]} \r\n                        />\r\n                        <TextInput \r\n                            name=\"description\" \r\n                            labelText={i18n.t('adminDashboard.addProject.projectDesc') + \" *\"} \r\n                            defaultValue={this.state.description} \r\n                            onChange={this.handleChanges} \r\n                            invalidText={i18n.t('validation.invalid.required')} \r\n                            invalid={this.state.invalid[\"description\"]} \r\n                        />\r\n                        <TextInput \r\n                            name=\"systemId\" \r\n                            labelText={i18n.t('adminDashboard.addProject.systemId')} \r\n                            defaultValue={this.state.systemId}\r\n                            onChange={this.handleChanges} \r\n                        />\r\n                        <TextInput \r\n                            name=\"contactName\" \r\n                            labelText={i18n.t('adminDashboard.addProject.contactName')} \r\n                            defaultValue={this.state.contactName} \r\n                            onChange={this.handleChanges} \r\n                        />\r\n                        <TextInput \r\n                            name=\"contactPhone\" \r\n                            labelText={i18n.t('adminDashboard.addProject.contactPhone')} \r\n                            defaultValue={this.state.contactPhone} \r\n                            onChange={this.handleChanges} \r\n                        />\r\n                        <TextInput \r\n                            name=\"contactEmail\" \r\n                            labelText={i18n.t('adminDashboard.addProject.contactEmail') + \" *\"} \r\n                            defaultValue={this.state.contactEmail} \r\n                            onChange={this.handleChanges} \r\n                            invalidText={i18n.t('validation.invalid.email')} \r\n                            invalid={this.state.invalid[\"contactEmail\"]} \r\n                        />\r\n                        <TextArea \r\n                            name=\"notes\" \r\n                            labelText={i18n.t('adminDashboard.addProject.notes')} \r\n                            defaultValue={this.state.notes} \r\n                            onChange={this.handleChanges} \r\n                        />\r\n                    </Form>\r\n                </div> \r\n            </ModalWrapper>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default withKeycloak(EditProjectModal)","import React, { Component } from 'react';\r\nimport { DataTable, TableContainer, Table, TableHead, TableRow, TableHeader, TableBody, TableCell } from 'carbon-components-react';\r\nimport '../../index.scss';\r\nimport { apiGetCustomersProjects, apiGetMyCustomersProjects } from '../../api/customers';\r\nimport { AuthenticatedView, UnauthenticatedView } from '../../auth/KeycloakViews';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport { Link } from 'react-router-dom';\r\nimport i18n from '../../i18n';\r\nimport EditProjectModal from '../Admin/EditProjectModal'\r\nimport { hasKeycloakClientRole } from '../../api/helpers';\r\n\r\nclass CustomTable extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n      projects: {}\r\n     }\r\n     this.headerData = [\r\n      {\r\n        header: i18n.t('customerDashboard.projectName'),\r\n        key: 'projectName',\r\n      },\r\n      {\r\n        header: i18n.t('customerDashboard.partners'),\r\n        key: 'partners',\r\n      },\r\n      {\r\n        header: i18n.t('customerDashboard.entandoVersion'),\r\n        key: 'entandoVersion',\r\n      },\r\n      {\r\n        header: i18n.t('customerDashboard.status'),\r\n        key: 'status',\r\n      },\r\n      {\r\n        header: i18n.t('customerDashboard.startDate'),\r\n        key: 'startDate',\r\n      },\r\n      {\r\n          header: i18n.t('customerDashboard.endDate'),\r\n          key: 'endDate',\r\n      },\r\n      {\r\n          header: i18n.t('customerDashboard.openTickets'),\r\n          key: 'openTickets',\r\n      },\r\n      {\r\n          header: i18n.t('customerDashboard.action'),\r\n          key: 'action',\r\n      }\r\n    ];\r\n  }\r\n\r\n  async fetchData() {\r\n    const { t, keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n    \r\n    if (authenticated) {\r\n      var projects;\r\n      if (hasKeycloakClientRole('ROLE_ADMIN') || hasKeycloakClientRole('ROLE_SUPPORT')) {\r\n        projects = await apiGetCustomersProjects(this.props.serviceUrl, this.props.customerNumber);\r\n      }\r\n      else {\r\n        projects = await apiGetMyCustomersProjects(this.props.serviceUrl, this.props.customerNumber);\r\n      }\r\n      \r\n      this.setState({\r\n          projects: projects\r\n      });\r\n    }\r\n    this.render();\r\n}\r\n\r\ncomponentDidMount(){\r\n    this.fetchData();\r\n}\r\n\r\nupdateProjectList = () => {\r\n  this.fetchData();\r\n}\r\n\r\ncomponentDidUpdate(prevProps) {\r\n    const { keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n    const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n\r\n    if (authenticated && changedAuth) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n\r\n  render() { \r\n    return (\r\n      <div>\r\n        <DataTable rows={rowData} headers={this.headerData}>\r\n        {({ rows, headers, getHeaderProps, getTableProps }) => (\r\n          <TableContainer title={i18n.t('customerDashboard.subscriptions')} description={i18n.t('customerDashboard.tableDesc')}>\r\n            <Table {...getTableProps()}>\r\n              <TableHead>\r\n                <TableRow>\r\n                  {headers.map((header) => (\r\n                    <TableHeader {...getHeaderProps({ header })}>\r\n                      {header.header}\r\n                    </TableHeader>\r\n                  ))}\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n              {Object.keys(this.state.projects).length !== 0 ? \r\n                  this.state.projects.data.map((project, index) => {\r\n                    if (project.projectSubscriptions.length === 0) {\r\n                      return(\r\n                        <TableRow key={index} >\r\n                          <TableCell>{project.name}</TableCell>\r\n                          {project.partners.length !== 0 ? \r\n                            <TableCell>\r\n                              {project.partners.map(partner => (\r\n                                <p>{partner.name}</p>\r\n                              ))}\r\n                            </TableCell> \r\n                          : <TableCell>None</TableCell>}\r\n                          <TableCell>None</TableCell>\r\n                          <TableCell>None</TableCell>\r\n                          <TableCell>None</TableCell>\r\n                          <TableCell>None</TableCell>\r\n                          <TableCell>{project.tickets.length}</TableCell>\r\n                          <TableCell>{hasKeycloakClientRole('ROLE_ADMIN') ? <EditProjectModal key={project.id} project={project} serviceUrl={this.props.serviceUrl} updateProjectList={this.updateProjectList}/> : null}</TableCell>\r\n                      </TableRow>\r\n                      )\r\n                    }\r\n                    else {\r\n                      var sub = project.projectSubscriptions[project.projectSubscriptions.length - 1];\r\n                      return(\r\n                          <TableRow key={index} >\r\n                              <TableCell><Link to={`/entando-de-app/${this.props.locale}/subscription-details/${sub.id}`}>{project.name}</Link></TableCell>\r\n                              {project.partners.length !== 0 ? \r\n                                <TableCell>\r\n                                  {project.partners.map(partner => (\r\n                                    <p>{partner.name}</p>\r\n                                  ))}\r\n                                </TableCell> \r\n                                : <TableCell>None</TableCell>}\r\n                              {sub.entandoVersion ? <TableCell>{sub.entandoVersion.name}</TableCell> : <TableCell>None</TableCell>}\r\n                              <TableCell>{sub.status}</TableCell>\r\n                              <TableCell>{String(new Date(sub.startDate).toDateString())}</TableCell>\r\n                              <TableCell>{String(new Date(new Date(sub.startDate).setMonth(new Date(sub.startDate).getMonth() + sub.lengthInMonths)).toDateString())}</TableCell>\r\n                              <TableCell>{project.tickets.length}</TableCell>\r\n                              <TableCell>{hasKeycloakClientRole('ROLE_ADMIN') ? <EditProjectModal key={project.id} project={project} serviceUrl={this.props.serviceUrl} updateProjectList={this.updateProjectList}/> : null}</TableCell>\r\n                          </TableRow>\r\n                        \r\n                      )\r\n                    }\r\n                  }) : null\r\n              }\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        )}\r\n      </DataTable>\r\n    </div>\r\n  )}\r\n}\r\n\r\n\r\nconst rowData = [\r\n  {\r\n       id: 'a',\r\n       projectName: <a href=\"\">Supplier Portal</a>,\r\n       partnerName: 'Leonardo',\r\n       entandoVersion: 5.2,\r\n       startDate: 'October, 2019',\r\n       endDate: 'October, 2022',\r\n       openTickets: '5',\r\n    },\r\n    {\r\n      id: 'b',\r\n      projectName: <a href=\"\">Task Manager</a>,\r\n      partnerName: 'Veriday',\r\n      entandoVersion: 5.2,\r\n      startDate: 'July, 2019',\r\n      endDate: 'July, 2022',\r\n      openTickets: '2',\r\n    },\r\n    {\r\n      id: 'c',\r\n      projectName: <a href=\"\">Sales Coordination App</a>,\r\n      partnerName: 'Accenture',\r\n      entandoVersion: 6.2,\r\n      startDate: 'September, 2019',\r\n      endDate: 'September, 2022',\r\n      openTickets: '2',\r\n    },\r\n    {\r\n      id: 'd',\r\n      projectName: <a href=\"\">Website</a>,\r\n      partnerName: 'Veriday',\r\n      entandoVersion: 5.2,\r\n      startDate: 'October, 2019',\r\n      endDate: 'October, 2022',\r\n      openTickets: '1',\r\n    }  \r\n];\r\n \r\nexport default withKeycloak(CustomTable);","import React from 'react';\r\nimport i18n from '../../i18n';\r\nimport { Tile } from 'carbon-components-react';\r\nimport { apiCustomerGet } from '../../api/customers';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\n\r\nconst customerData = {\r\n  name: 'Ford',\r\n  id: '5564 4563 3345',\r\n  startDate: '01/01/2020'\r\n};\r\n\r\nclass CustomerDetails extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      customer: {}\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    const { keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n    if (authenticated) {\r\n      this.getCustomer(this.props.customerNumber);\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n    const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n\r\n    if (authenticated && changedAuth) {\r\n      this.getCustomer(this.props.customerNumber);\r\n    }\r\n  }\r\n\r\n  async getCustomer() {\r\n    const { keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n    if (authenticated) {\r\n      const customer = await apiCustomerGet(this.props.serviceUrl, this.props.customerNumber);\r\n      this.setState({\r\n        customer: customer.data\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { name, id, startDate } = customerData; //destructuring\r\n    return (\r\n      <div className=\"customer-details\">\r\n        <Tile>\r\n          <p>\r\n            <strong>{i18n.t('customerDashboard.customerName')}</strong> {this.state.customer.name}\r\n          </p>\r\n          <p>\r\n            <strong>{i18n.t('customerDashboard.customerId')}</strong> {this.state.customer.id}\r\n          </p>\r\n        </Tile>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withKeycloak(CustomerDetails);\r\n","import React, { Component } from 'react';\r\nimport i18n from '../../i18n';\r\nimport { ModalWrapper, Form, TextInput, TextArea } from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport { apiCustomerGet, apiCustomerPut } from '../../api/customers';\r\n\r\nclass EditCustomerModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            name: '',\r\n            customerNumber: '',\r\n            contactName: '',\r\n            contactPhone: '',\r\n            contactEmail: '',\r\n            notes: '',\r\n            invalid: {},\r\n            modalId: '',\r\n            buttonId: '',\r\n            submitMsg: '',\r\n            submitColour: 'black'\r\n        };\r\n    }\r\n\r\n    handleValidation() {\r\n        let invalid = {};\r\n        let formIsValid = true;\r\n\r\n        //name\r\n        if (this.state.name === '') {\r\n            formIsValid = false;\r\n            invalid['name'] = true;\r\n        }\r\n\r\n        //customerNumber\r\n        if (this.state.customerNumber === '') {\r\n            formIsValid = false;\r\n            invalid['customerNumber'] = true;\r\n        }\r\n\r\n        //contactEmail\r\n        if (typeof this.state.contactEmail !== 'undefined') {\r\n            let lastAtPos = this.state.contactEmail.lastIndexOf('@');\r\n            let lastDotPos = this.state.contactEmail.lastIndexOf('.');\r\n\r\n            if (\r\n                !(\r\n                    lastAtPos < lastDotPos &&\r\n                    lastAtPos > 0 &&\r\n                    this.state.contactEmail.indexOf('@@') == -1 &&\r\n                    lastDotPos > 2 &&\r\n                    this.state.contactEmail.length - lastDotPos > 2\r\n                )\r\n            ) {\r\n                formIsValid = false;\r\n                invalid['contactEmail'] = true;\r\n            }\r\n        }\r\n\r\n        this.setState({ invalid: invalid });\r\n        return formIsValid;\r\n    }\r\n\r\n    handleChanges = e => {\r\n        const input = e.target;\r\n        const name = input.name;\r\n        const value = input.value;\r\n        this.setState({ [name]: value });\r\n\r\n    };\r\n\r\n    async updateCustomer(customer) {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n        if (authenticated) {\r\n            return await apiCustomerPut(this.props.serviceUrl, customer);\r\n        }\r\n    }\r\n\r\n    async getCustomer(customerId) {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n        if (authenticated) {\r\n            const customer = await apiCustomerGet(this.props.serviceUrl, customerId);\r\n            this.setState({\r\n                name: customer.name,\r\n                customerNumber: customer.customerNumber,\r\n                contactName: customer.contactName,\r\n                contactPhone: customer.contactPhone,\r\n                contactEmail:customer.contactEmail,\r\n                notes:customer.notes,\r\n                modalId: \"modal-form-customer-edit-\" + customer.id,\r\n                buttonId: \"edit-customer-button-\" + customer.id\r\n              })\r\n        }\r\n    }\r\n\r\n    handleFormSubmit = e => {\r\n        const formIsValid = this.handleValidation();\r\n\r\n        if (formIsValid) {\r\n            const customer = {\r\n                id: this.props.customer.id,\r\n                name: this.state.name,\r\n                customerNumber: this.state.customerNumber,\r\n                contactName: this.state.contactName,\r\n                contactPhone: this.state.contactPhone,\r\n                contactEmail:this.state.contactEmail,\r\n                notes:this.state.notes\r\n            }\r\n            this.updateCustomer(customer).then(result => {\r\n                this.setState({\r\n                    submitMsg: i18n.t('submitMessages.updated'),\r\n                    submitColour: '#24a148'\r\n                })\r\n                this.props.updateCustomerList();\r\n            }).catch(err => {\r\n                this.setState({\r\n                    submitMsg: i18n.t('submitMessages.error'),\r\n                    submitColour: '#da1e28'\r\n                })\r\n            });\r\n        }\r\n    };\r\n\r\n    clearValues = () => {\r\n        const { keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n        const customerModalElement = document.querySelector('#' + this.state.modalId);\r\n        if(!customerModalElement.className.includes(\"is-visible\") && authenticated) {\r\n            this.setState({\r\n                name: this.props.customer.name,\r\n                customerNumber: this.props.customer.customerNumber,\r\n                contactName: this.props.customer.contactName,\r\n                contactPhone: this.props.customer.contactPhone,\r\n                contactEmail:this.props.customer.contactEmail,\r\n                notes:this.props.customer.notes,\r\n                invalid: {}\r\n            })\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n    \r\n        if (authenticated) {\r\n          this.setState({\r\n            name: this.props.customer.name,\r\n            customerNumber: this.props.customer.customerNumber,\r\n            contactName: this.props.customer.contactName,\r\n            contactPhone: this.props.customer.contactPhone,\r\n            contactEmail:this.props.customer.contactEmail,\r\n            notes:this.props.customer.notes,\r\n            modalId: \"modal-form-customer-edit-\" + this.props.customer.id,\r\n            buttonId: \"edit-customer-button-\" + this.props.customer.id\r\n          })\r\n\r\n          const modalOpenButton = document.querySelector('.edit-customer-button-' + this.props.customer.id);\r\n          modalOpenButton.addEventListener(\"click\", this.clearValues, false);\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const { keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n    \r\n        const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n    \r\n        if (authenticated && changedAuth) {\r\n            this.setState({\r\n                name: this.props.customer.name,\r\n                customerNumber: this.props.customer.customerNumber,\r\n                contactName: this.props.customer.contactName,\r\n                contactPhone: this.props.customer.contactPhone,\r\n                contactEmail: this.props.customer.contactEmail,\r\n                notes: this.props.customer.notes\r\n              })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const buttonClassName = \"bx--btn bx--btn--ghost edit-customer-button-\" + this.props.customer.id;\r\n        return (\r\n            <ModalWrapper\r\n                buttonTriggerText={i18n.t('buttons.edit')}\r\n                modalHeading={i18n.t('adminDashboard.editCustomer.title')}\r\n                buttonTriggerClassName={buttonClassName}\r\n                className=\"modal-form\"\r\n                id={this.state.modalId}\r\n                handleSubmit={this.handleFormSubmit}\r\n                primaryButtonText={i18n.t('modalText.save')}\r\n                secondaryButtonText={i18n.t('modalText.cancel')}\r\n                modalLabel={<p style={{color: this.state.submitColour}}>{this.state.submitMsg}</p>}\r\n            >\r\n                <div className=\"form-container\">\r\n                    <Form onSubmit={this.handleFormSubmit}>\r\n                        <TextInput\r\n                            name=\"name\"\r\n                            labelText={i18n.t('adminDashboard.addCustomer.customerName') + \" *\"}\r\n                            defaultValue={this.state.name}\r\n                            onChange={this.handleChanges}\r\n                            invalidText={i18n.t('validation.invalid.required')}\r\n                            invalid={this.state.invalid['name']}\r\n                        />\r\n                        <TextInput\r\n                            name=\"customerNumber\"\r\n                            labelText={i18n.t('adminDashboard.addCustomer.customerNumber') + \" *\"}\r\n                            defaultValue={this.state.customerNumber}\r\n                            onChange={this.handleChanges}\r\n                            invalidText={i18n.t('validation.invalid.required')}\r\n                            invalid={this.state.invalid['customerNumber']}\r\n                        />\r\n                        <TextInput\r\n                            name=\"contactName\"\r\n                            labelText={i18n.t('adminDashboard.addCustomer.contactName')}\r\n                            defaultValue={this.state.contactName}\r\n                            onChange={this.handleChanges}\r\n                        />\r\n                        <TextInput\r\n                            name=\"contactPhone\"\r\n                            labelText={i18n.t('adminDashboard.addCustomer.contactPhone')}\r\n                            defaultValue={this.state.contactPhone}\r\n                            onChange={this.handleChanges}\r\n                        />\r\n                        <TextInput\r\n                            name=\"contactEmail\"\r\n                            labelText={i18n.t('adminDashboard.addCustomer.contactEmail') + \" *\"}\r\n                            defaultValue={this.state.contactEmail}\r\n                            onChange={this.handleChanges}\r\n                            invalidText={i18n.t('validation.invalid.email')}\r\n                            invalid={this.state.invalid['contactEmail']}\r\n                        />\r\n                        <TextArea\r\n                            name=\"notes\"\r\n                            labelText={i18n.t('adminDashboard.addCustomer.notes')}\r\n                            defaultValue={this.state.notes}\r\n                            onChange={this.handleChanges}\r\n                        />\r\n                    </Form>\r\n                </div>\r\n            </ModalWrapper>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withKeycloak(EditCustomerModal);\r\n","import React from 'react';\r\nimport { AccordionItem } from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport { apiCustomerGet, apiGetCustomersProjects,  apiGetMyCustomersProjects } from '../../api/customers';\r\nimport { apiGetProjectsUsers } from '../../api/projects';\r\nimport CustomTable from './customDataTable';\r\nimport CustomerDetails from './customerDetails';\r\nimport { hasKeycloakClientRole } from '../../api/helpers';\r\nimport EditCustomerModal from '../Admin/EditCustomerModal';\r\n\r\nclass CustomerAccordian extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            projects: {},\r\n            customer: {},\r\n            authenticated: false\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        const { keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n        if (authenticated) {\r\n            this.getCustomersProjects(this.props.customerNumber);\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const { keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n    \r\n        const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n    \r\n        if (authenticated && changedAuth) {\r\n            this.getCustomersProjects(this.props.customerNumber);\r\n        }\r\n      }\r\n\r\n    async getCustomersProjects(id) {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n        if (authenticated) {\r\n            const customer = await apiCustomerGet(this.props.serviceUrl, id);\r\n\r\n            var projects;\r\n            if (hasKeycloakClientRole('ROLE_ADMIN') || hasKeycloakClientRole('ROLE_SUPPORT')) {\r\n                projects = await apiGetCustomersProjects(this.props.serviceUrl, id);\r\n            }\r\n            else {\r\n                projects = await apiGetMyCustomersProjects(this.props.serviceUrl, id);\r\n            }\r\n\r\n            this.setState({\r\n                projects: projects.data,\r\n                customer: customer.data\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        var { t, keycloak } = this.props;\r\n        var authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n        return(\r\n            <div>\r\n                <div>\r\n                    {hasKeycloakClientRole('ROLE_CUSTOMER') ? \r\n                        <CustomerDetails serviceUrl={this.props.serviceUrl} customerNumber={this.props.customerNumber} /> : null \r\n                    }\r\n                    <AccordionItem title={this.props.title}>\r\n                        {hasKeycloakClientRole('ROLE_ADMIN') ?\r\n                            <EditCustomerModal serviceUrl={this.props.serviceUrl} customer={this.state.customer} key={this.state.customer.id} updateCustomerList={this.props.updateCustomerList}/>  : null\r\n                        }\r\n                        <CustomTable serviceUrl={this.props.serviceUrl} customerNumber={this.props.customerNumber} updateCustomerList={this.props.updateCustomerList} locale={this.props.locale} />\r\n                    </AccordionItem>\r\n                </div> \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withKeycloak(CustomerAccordian);","import { getDefaultOptions, request } from './helpers';\r\n\r\nconst resource = 'api/project-subscriptions'\r\n\r\nexport const apiSubscriptionGet = async (serviceUrl, id) => {\r\n    const url = `${serviceUrl}/${resource}/${id}`;\r\n    const options = {\r\n        ...getDefaultOptions(),\r\n        method: 'GET',\r\n    };\r\n    return request(url, options);\r\n};\r\n\r\nexport const apiSubscriptionGetAll = async (serviceUrl) => {\r\n    const url = `${serviceUrl}/${resource}`;\r\n    const options = {\r\n        ...getDefaultOptions(),\r\n        method: 'GET',\r\n    };\r\n    return request(url, options);\r\n};\r\n\r\n// Project Subscription creation consists of an object containing a projectSubscription, an entandoVersionId, and a\r\n// project id, see SubscriptionCreationRequest.\r\n/**\r\n * Called to create a new project subscription\r\n * \r\n * @param {string} serviceUrl \r\n * @param {ProjectSubscriptionCreation} projectSubscriptionCreation \r\n * @returns \r\n */\r\nexport const apiProjectSubscriptionPost = async (serviceUrl, projectSubscriptionCreation) => {\r\n    const url = `${serviceUrl}/${resource}`;\r\n    const options = {\r\n        ...getDefaultOptions(),\r\n        method: 'POST',\r\n        body: projectSubscriptionCreation ? JSON.stringify(projectSubscriptionCreation) : null,\r\n    };\r\n    return request(url, options);\r\n};\r\n\r\nexport const apiProjectSubscriptionPut = async (serviceUrl, projectSubscriptionCreation) => {\r\n    const url = `${serviceUrl}/${resource}`;\r\n    const options = {\r\n        ...getDefaultOptions(),\r\n        method: 'PUT',\r\n        body: projectSubscriptionCreation ? JSON.stringify(projectSubscriptionCreation) : null,\r\n    };\r\n    return request(url, options);\r\n};\r\n\r\nconst myResource = 'api/project-subscriptions/mysubscription'\r\nexport const apiGetMySubscription = async (serviceUrl, customerId) => {\r\n    const url = `${serviceUrl}/${myResource}/${customerId}`;\r\n    const options = {\r\n      ...getDefaultOptions(),\r\n      method: 'GET'\r\n    };\r\n  \r\n    return request(url, options);\r\n  };\r\n\r\n  // Same format as {projectSubscriptionCreation}\r\nexport const apiRenewSubscription = async (serviceUrl, projectSubscriptionRenew) => {\r\n    const url = `${serviceUrl}/${resource}/renew`;\r\n\r\n    const options = {\r\n        ...getDefaultOptions(),\r\n        method: 'PUT',\r\n        body: projectSubscriptionRenew ? JSON.stringify(projectSubscriptionRenew) : null\r\n    };\r\n\r\n    return request(url, options);\r\n};","import { getDefaultOptions, request, getUrl } from './helpers';\r\n\r\nconst resource = 'api/entando-versions';\r\n\r\nexport const apiProductVersionsGet = async (serviceUrl) => {\r\n    const url = `${serviceUrl}/${resource}`;\r\n    const options = {\r\n        ...getDefaultOptions(),\r\n        method: 'GET',\r\n    };\r\n\r\n    return request(url, options);\r\n};\r\n\r\nexport const apiUpdateProductVersionsStatus = async (serviceUrl, id) => {\r\n    const url = `${serviceUrl}/${resource}/${id}`;\r\n    const options = {\r\n      ...getDefaultOptions(),\r\n      method: 'PUT',\r\n    };\r\n    return request(url, options);\r\n};\r\n\r\nexport const apiProductVersionPost = async (serviceUrl, productVersion) => {\r\n    const url = `${serviceUrl}/${resource}`;\r\n    const options = {\r\n      ...getDefaultOptions(),\r\n      method: 'POST',\r\n      body: productVersion ? JSON.stringify(productVersion) : null,\r\n    };\r\n    return request(url, options);\r\n};","import React, { Component } from 'react';\r\nimport i18n from '../../i18n';\r\nimport { Form, TextInput, Select, SelectItem, Button, DatePicker, DatePickerInput } from 'carbon-components-react';\r\nimport { apiGetProjectIdNames, apiGetMyProjectIdNames } from '../../api/projects';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport { apiProjectSubscriptionPost, apiRenewSubscription } from '../../api/subscriptions';\r\nimport { apiProductVersionsGet } from '../../api/productVersion';\r\nimport { hasKeycloakClientRole } from '../../api/helpers';\r\nimport { apiAddSubscriptionToProject } from '../../api/projects';\r\n\r\nconst subscriptionLevel = {\r\n    GOLD: 'Gold',\r\n    PLATINUM: 'Platinum'\r\n}\r\n\r\nconst subscriptionStatus = {\r\n    requested: 'REQUESTED',\r\n    pending: 'PENDING',\r\n    active: 'ACTIVE',\r\n    expired: 'EXPIRED'\r\n}\r\n\r\nconst subscriptionTypes = ['New', 'Existing'];\r\n\r\nclass SubscriptionForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loading: true,\r\n            subscriptionType: '',\r\n            projectId: '',\r\n            startDate: '',\r\n            subscriptionLevel: '',\r\n            subscriptionLength: '',\r\n            entandoVersionId: '',\r\n            invalid: {},\r\n            projects: {},\r\n            productVersions: [],\r\n            selectedProjectId: '',\r\n            submitSuccess: false,\r\n            submitError: false,\r\n            submitColour: 'black'\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { t, keycloak } = this.props;\r\n\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n        if (authenticated) {\r\n            if (hasKeycloakClientRole('ROLE_ADMIN') || hasKeycloakClientRole('ROLE_SUPPORT') || hasKeycloakClientRole('ROLE_CUSTOMER') || hasKeycloakClientRole('ROLE_PARTNER')) {\r\n                this.fetchData();\r\n            }\r\n            this.setState({\r\n                loading: false\r\n            })\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n        const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n\r\n        if (authenticated && changedAuth) {\r\n            if (hasKeycloakClientRole('ROLE_ADMIN') || hasKeycloakClientRole('ROLE_SUPPORT') || hasKeycloakClientRole('ROLE_CUSTOMER') || hasKeycloakClientRole('ROLE_PARTNER')) {\r\n                this.fetchData();\r\n            }\r\n            this.setState({\r\n                loading: false\r\n            })\r\n        }\r\n    }\r\n\r\n    async fetchData() {\r\n        var projects = ''\r\n        if (hasKeycloakClientRole('ROLE_ADMIN')) {\r\n            projects = (await apiGetProjectIdNames(this.props.serviceUrl)).data;\r\n        }\r\n        else {\r\n            projects = (await apiGetMyProjectIdNames(this.props.serviceUrl)).data;\r\n        }\r\n        const productVersions = (await apiProductVersionsGet(this.props.serviceUrl)).data;\r\n\r\n        this.setState({\r\n            projects,\r\n            productVersions\r\n        });\r\n    }\r\n\r\n    handleValidation() {\r\n        let invalid = {};\r\n        let formIsValid = true;\r\n\r\n        if (this.state.subscriptionType === '') {\r\n            formIsValid = false;\r\n            invalid['subscriptionType'] = true;\r\n        }\r\n\r\n        if (this.state.projectId === '') {\r\n            formIsValid = false;\r\n            invalid['projectId'] = true;\r\n        }\r\n\r\n        if (typeof this.state.startDate !== \"undefined\") {\r\n            if (!this.state.startDate.match(/^(0[1-9]|1[0-2])\\/(0[1-9]|1\\d|2\\d|3[01])\\/(19|20)\\d{2}$/)) {\r\n                formIsValid = false;\r\n                invalid[\"startDate\"] = true;\r\n            }\r\n        }\r\n\r\n        if (this.state.subscriptionLength === '' || !Number.isInteger(Number.parseInt(this.state.subscriptionLength))) {\r\n            formIsValid = false;\r\n            invalid['subscriptionLength'] = true;\r\n        }\r\n\r\n        if (this.state.subscriptionLevel === '') {\r\n            formIsValid = false;\r\n            invalid['level'] = true;\r\n        }\r\n\r\n        if (this.state.entandoVersionId === '') {\r\n            formIsValid = false;\r\n            invalid['entandoVersionId'] = true;\r\n        }\r\n\r\n        this.setState({ invalid: invalid });\r\n        return formIsValid;\r\n    }\r\n\r\n    handleChanges = (e) => {\r\n        const input = e.target;\r\n        const name = input.name;\r\n        const value = input.value;\r\n        this.setState({ [name]: value });\r\n        this.setState({\r\n            submitSuccess: false,\r\n            submitError: false\r\n        });\r\n    }\r\n\r\n    handleFormSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            submitSuccess: false,\r\n            submitError: false\r\n        });\r\n        const formIsValid = this.handleValidation();\r\n\r\n        if (formIsValid) {\r\n            if (this.state.subscriptionType === 'new') {\r\n                this.newSubscription().then(res => {\r\n                    apiAddSubscriptionToProject(this.props.serviceUrl, this.state.projectId, res.data.id)\r\n                    this.setState({\r\n                        submitSuccess: true,\r\n                        submitError: false,\r\n                        submitColour: '#24a148'\r\n                    });\r\n                }).catch(err => {\r\n                    this.setState({\r\n                        submitSuccess: false,\r\n                        submitError: true,\r\n                        submitColour: '#da1e28'\r\n                    });\r\n                });\r\n            } else if (this.state.subscriptionType === 'existing') {\r\n                this.renewSubscription().then(res => {\r\n                    apiAddSubscriptionToProject(this.props.serviceUrl, this.state.projectId, res.data.id)\r\n                    this.setState({\r\n                        submitSuccess: true,\r\n                        submitError: false,\r\n                        submitColour: '#24a148'\r\n                    });\r\n                }).catch(err => {\r\n                    this.setState({\r\n                        submitSuccess: false,\r\n                        submitError: true,\r\n                        submitColour: '#da1e28'\r\n                    });\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    async newSubscription() {\r\n        const subscriptionRequest = {\r\n            entandoVersionId: this.state.entandoVersionId,\r\n            projectId: this.state.projectId,\r\n            projectSubscription: {\r\n                startDate: new Date(this.state.startDate),\r\n                lengthInMonths: this.state.subscriptionLength,\r\n                level: this.state.subscriptionLevel,\r\n                status: this.subscriptionStatus()\r\n            }\r\n        }\r\n\r\n        return await apiProjectSubscriptionPost(this.props.serviceUrl, subscriptionRequest);\r\n    }\r\n\r\n    async renewSubscription() {\r\n        const subscriptionRequest = {\r\n            entandoVersionId: this.state.entandoVersionId,\r\n            projectId: this.state.projectId,\r\n            projectSubscription: {\r\n                startDate: new Date(this.state.startDate),\r\n                lengthInMonths: this.state.subscriptionLength,\r\n                level: this.state.subscriptionLevel,\r\n                status: this.subscriptionStatus()\r\n            }\r\n        }\r\n\r\n        return await apiRenewSubscription(this.props.serviceUrl, subscriptionRequest);\r\n    }\r\n\r\n    subscriptionStatus() {\r\n        return hasKeycloakClientRole('ROLE_ADMIN') ? subscriptionStatus.active : subscriptionStatus.requested;\r\n    }\r\n\r\n    setupFormComponents() {\r\n        const projectIdsNames = this.state.projects;\r\n        let projectList = null;\r\n\r\n        if (projectIdsNames != null && Object.keys(projectIdsNames).length > 0) {\r\n            projectList = Object.keys(projectIdsNames).map((projectId, i) => (\r\n                <SelectItem key={i} text={projectIdsNames[projectId]} value={projectId}>{projectIdsNames[projectId]}</SelectItem>\r\n            ));\r\n            projectList.unshift(<SelectItem key=\"-1\" text={i18n.t('manageUsers.assign.projectList')} value=\"\" />);\r\n        } else {\r\n            projectList = <SelectItem text={i18n.t('manageUsers.assign.noProjects')} value=\"\" />;\r\n        }\r\n\r\n        const subscriptionLevelList = Object.entries(subscriptionLevel).map(([key, value]) => (\r\n            <SelectItem key={key} text={value} value={key}>{value}</SelectItem>\r\n        ));\r\n        subscriptionLevelList.unshift(<SelectItem key=\"-1\" text={i18n.t('subscriptionForm.chooseLevel')} value=\"\" />)\r\n\r\n        const versionList = this.state.productVersions.map(version => (\r\n            <SelectItem key={version.id} text={version.name} value={version.id}>{version.name}</SelectItem>\r\n        ));\r\n        versionList.unshift(<SelectItem key=\"-1\" text={i18n.t('subscriptionForm.chooseVersion')} value=\"\" />)\r\n\r\n        return { projectList, subscriptionLevelList, versionList }\r\n    }\r\n\r\n    renderForm() {\r\n        const formComponents = this.setupFormComponents()\r\n        const { projectList, subscriptionLevelList, versionList } = formComponents;\r\n        let formInputs;\r\n\r\n        if (this.state.subscriptionType === 'new') {\r\n            formInputs = (\r\n                <div>\r\n                    <p><strong>{i18n.t('subscriptionForm.newSubscription')}</strong></p><br />\r\n                    <div className=\"bx--row\">\r\n                        <div className=\"bx--col\">\r\n                            <Select\r\n                                id=\"projectId\"\r\n                                name=\"projectId\"\r\n                                labelText={i18n.t('subscriptionForm.projectName')}\r\n                                value={this.state.projectId}\r\n                                onChange={this.handleChanges}\r\n                                invalidText={i18n.t('validation.invalid.required')}\r\n                                invalid={this.state.invalid['projectId']}\r\n                            >\r\n                                {projectList}\r\n                            </Select>\r\n                            <Select\r\n                                id=\"subscriptionLevel\"\r\n                                name=\"subscriptionLevel\"\r\n                                labelText={i18n.t('subscriptionForm.desiredSubscriptionLevel') + \" *\"}\r\n                                value={this.state.subscriptionLevel} onChange={this.handleChanges}\r\n                                invalidText={i18n.t('validation.invalid.required')}\r\n                                invalid={this.state.invalid['level']}\r\n                            >\r\n                                {subscriptionLevelList}\r\n                            </Select>\r\n                            <Select\r\n                                id=\"entandoVersionId\"\r\n                                name=\"entandoVersionId\"\r\n                                labelText={i18n.t('subscriptionForm.entandoVersion') + \" *\"}\r\n                                value={this.state.entandoVersionId}\r\n                                onChange={this.handleChanges}\r\n                                invalidText={i18n.t('validation.invalid.required')}\r\n                                invalid={this.state.invalid['entandoVersionId']}\r\n                            >\r\n                                {versionList}\r\n                            </Select>\r\n                        </div>\r\n                        <div className=\"bx--col\">\r\n                            <DatePicker dateFormat=\"m/d/Y\" datePickerType=\"simple\">\r\n                                <DatePickerInput\r\n                                    id=\"startDate\"\r\n                                    name=\"startDate\"\r\n                                    placeholder=\"mm/dd/yyyy\"\r\n                                    labelText={i18n.t('subscriptionForm.desiredSubscriptionStartDate')}\r\n                                    value={this.state.startDate}\r\n                                    onChange={this.handleChanges}\r\n                                    type=\"text\"\r\n                                    invalidText={i18n.t('validation.invalid.date')}\r\n                                    invalid={this.state.invalid['startDate']}\r\n                                />\r\n                            </DatePicker>\r\n                            <TextInput\r\n                                id=\"subscriptionLength\"\r\n                                name=\"subscriptionLength\"\r\n                                labelText={i18n.t('subscriptionForm.desiredSubscriptionLength') + \" *\"}\r\n                                value={this.state.subscriptionLength}\r\n                                onChange={this.handleChanges}\r\n                                invalidText={i18n.t('validation.invalid.number')}\r\n                                invalid={this.state.invalid['subscriptionLength']}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        } else if (this.state.subscriptionType === 'existing') {\r\n            formInputs = (\r\n                <div>\r\n                    <p><strong>{i18n.t('subscriptionForm.renewSubscription')}</strong></p><br />\r\n                    <div className=\"bx--row\">\r\n                        <div className=\"bx--col\">\r\n                            <Select\r\n                                id=\"projectId\"\r\n                                name=\"projectId\"\r\n                                labelText={i18n.t('subscriptionForm.projectName')}\r\n                                value={this.state.projectId}\r\n                                onChange={this.handleChanges}\r\n                                invalidText={i18n.t('validation.invalid.required')}\r\n                                invalid={this.state.invalid['projectId']}\r\n                            >\r\n                                {projectList}\r\n                            </Select>\r\n                            <Select\r\n                                id=\"subscriptionLevel\"\r\n                                name=\"subscriptionLevel\"\r\n                                labelText={i18n.t('subscriptionForm.desiredSubscriptionLevel') + \" *\"}\r\n                                value={this.state.subscriptionLevel}\r\n                                onChange={this.handleChanges}\r\n                                invalidText={i18n.t('validation.invalid.required')}\r\n                                invalid={this.state.invalid['level']}\r\n                            >\r\n                                {subscriptionLevelList}\r\n                            </Select>\r\n                            <Select\r\n                                id=\"entandoVersionId\"\r\n                                name=\"entandoVersionId\"\r\n                                labelText={i18n.t('subscriptionForm.entandoVersion') + \" *\"}\r\n                                value={this.state.entandoVersionId}\r\n                                onChange={this.handleChanges}\r\n                                invalidText={i18n.t('validation.invalid.required')}\r\n                                invalid={this.state.invalid['entandoVersionId']}\r\n                            >\r\n                                {versionList}\r\n                            </Select>\r\n                        </div>\r\n                        <div className=\"bx--col\">\r\n                            <DatePicker dateFormat=\"m/d/Y\" datePickerType=\"simple\">\r\n                                <DatePickerInput\r\n                                    id=\"startDate\"\r\n                                    name=\"startDate\"\r\n                                    placeholder=\"mm/dd/yyyy\"\r\n                                    labelText={i18n.t('subscriptionForm.desiredSubscriptionStartDate')}\r\n                                    value={this.state.startDate}\r\n                                    onChange={this.handleChanges}\r\n                                    type=\"text\"\r\n                                    invalidText={i18n.t('validation.invalid.date')}\r\n                                    invalid={this.state.invalid['startDate']}\r\n                                />\r\n                            </DatePicker>\r\n                            <TextInput\r\n                                id=\"subscriptionLength\"\r\n                                name=\"subscriptionLength\"\r\n                                labelText={i18n.t('subscriptionForm.desiredSubscriptionLength') + \" *\"}\r\n                                value={this.state.subscriptionLength}\r\n                                onChange={this.handleChanges}\r\n                                invalidText={i18n.t('validation.invalid.number')}\r\n                                invalid={this.state.invalid['subscriptionLength']}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        return formInputs;\r\n    }\r\n\r\n    successErrorMessage() {\r\n        const isAdmin = hasKeycloakClientRole('ROLE_ADMIN');\r\n        const { subscriptionType, submitSuccess, submitError } = this.state;\r\n\r\n        if (subscriptionType === 'new') {\r\n            if (submitSuccess) {\r\n                return isAdmin ? this.createFormMessage('adminSubmitNewSuccess') : this.createFormMessage('customerSubmitSuccess');\r\n            } else if (submitError) {\r\n                return this.createFormMessage('newSubError');\r\n            }\r\n        } else {\r\n            if (submitSuccess) {\r\n                return isAdmin ? this.createFormMessage('adminRenewNewSuccess') : this.createFormMessage('customerSubmitSuccess');\r\n            } else if (submitError) {\r\n                return this.createFormMessage('renewSubError');\r\n            }\r\n        }\r\n    }\r\n\r\n    createFormMessage(subMessageKey) {\r\n        return <p style={{color: this.state.submitColour}}>{i18n.t(`subscriptionForm.${subMessageKey}`)}</p>\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.loading) {\r\n            if (hasKeycloakClientRole('ROLE_ADMIN') || hasKeycloakClientRole('ROLE_SUPPORT') || hasKeycloakClientRole('ROLE_CUSTOMER') || hasKeycloakClientRole('ROLE_PARTNER')) {\r\n                return (\r\n                    <div>\r\n                        {hasKeycloakClientRole('ROLE_ADMIN') ? \r\n                            <h3 className=\"pageTitle\">{i18n.t('adminDashboard.adminTitle')}</h3> : \r\n                        hasKeycloakClientRole('ROLE_SUPPORT') ? \r\n                            <h3 className=\"pageTitle\">{i18n.t('adminDashboard.supportTitle')}</h3> : \r\n                        hasKeycloakClientRole('ROLE_CUSTOMER') ? \r\n                            <h3 className=\"pageTitle\">{i18n.t('adminDashboard.customerTitle')}</h3> : \r\n                        hasKeycloakClientRole('ROLE_PARTNER') ? \r\n                            <h3 className=\"pageTitle\">{i18n.t('adminDashboard.partnerTitle')}</h3> : \r\n                        null}\r\n                        <div className=\"form-container\">\r\n                            {this.successErrorMessage()}\r\n                            <Form onSubmit={this.handleFormSubmit}>\r\n                                <div className=\"form-desc\">\r\n                                    <h4>{i18n.t('subscriptionForm.formTitle')}</h4>\r\n                                </div>\r\n                                <div className=\"bx--grid\">\r\n                                    <div className=\"bx--row\">\r\n                                        <div className=\"bx--col\">\r\n                                            <Select id=\"subscriptionType\" name=\"subscriptionType\" labelText={i18n.t('subscriptionForm.subscriptionType')} required value={this.state.subscriptionType} onChange={this.handleChanges}>\r\n                                                <SelectItem\r\n                                                    text={i18n.t('subscriptionForm.selectType')}\r\n                                                    value=\"\"\r\n                                                />\r\n                                                {subscriptionTypes.map((subscriptionType, i) => <SelectItem key={i} text={subscriptionType} required value={subscriptionType.toLowerCase()}>{subscriptionType}</SelectItem>)}\r\n                                            </Select>\r\n                                        </div>\r\n                                    </div>\r\n                                    {this.renderForm()}\r\n                                    {this.state.subscriptionType ? <Button kind=\"primary\" tabIndex={0} type=\"submit\" > {i18n.t('buttons.submit')}</Button> : ''}\r\n                                </div>\r\n                            </Form>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            }\r\n            else {\r\n                return(<p>Unauthorized</p>)\r\n            }\r\n        }\r\n        else {\r\n            return(null)\r\n        }\r\n    }\r\n}\r\n\r\nexport default withKeycloak(SubscriptionForm);","import { getDefaultOptions, request, getUrl } from './helpers';\r\n\r\nconst resource = 'api/portal-users';\r\n\r\nexport const apiUserDelete = async (serviceUrl, id) => {\r\n  const url = `${serviceUrl}/${resource}/${id}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE',\r\n  };\r\n  return await request(url, options);\r\n};\r\n\r\nexport const apiUsersPut = async (serviceUrl, user) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'PUT',\r\n    body: user ? JSON.stringify(user) : null,\r\n  };\r\n  return await request(url, options);\r\n};\r\n\r\nexport const apiUsersGet = async (serviceUrl) => {\r\n  const url = getUrl(\r\n    `${serviceUrl}/${resource}`\r\n  );\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return await request(url, options);\r\n};\r\n\r\nexport const apiUserGet = async (serviceUrl, userId) => {\r\n  const url = getUrl(\r\n    `${serviceUrl}/${resource}/${userId}`\r\n  );\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return await request(url, options);\r\n};\r\n\r\nexport const apiUserPost = async (serviceUrl, user) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n    body: user ? JSON.stringify(user) : null,\r\n  };\r\n  return await request(url, options);\r\n};\r\n\r\nexport const apiUserGetByUsername = async (serviceUrl, username) => {\r\n  const url = getUrl(\r\n    `${serviceUrl}/${resource}/username/${username}`\r\n  );\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return await request(url, options);\r\n};","import { getDefaultOptions, getDefaultKeycloakOptions, request, getUrl } from './helpers';\r\n\r\nconst usersResourceProd = 'admin/realms/entando/users'\r\n//const usersResourceDev = 'admin/realms/jhipster/users'\r\nconst tokenResourceProd = 'realms/entando/protocol/openid-connect/token';\r\n//const tokenResourceDev = 'realms/jhipster/protocol/openid-connect/token';\r\n\r\nexport const apiKeycloakUserGet = async (serviceUrl) => {\r\n  const url = `${serviceUrl}/${usersResourceProd}`;\r\n  const keycloakBody = {\r\n    client_id: \"admin_cli\",\r\n    username: \"admin\",\r\n    password: \"admin\",\r\n    grant_type: \"password\"\r\n  }\r\n  const options = {\r\n    ...getDefaultKeycloakOptions(),\r\n    method: 'GET',\r\n  };\r\n  return await request(url, options);\r\n};\r\n\r\nexport const apiKeycloakToken = async (serviceUrl) => {\r\n  const url = getUrl(\r\n    `${serviceUrl}/${tokenResourceProd}`\r\n  );\r\n  const keycloakBody = {\r\n    client_id: \"web_app\",\r\n    username: \"admin\",\r\n    password: \"admin\",\r\n    grant_type: \"password\"\r\n  }\r\n  const options = {\r\n    ...getDefaultKeycloakOptions(),\r\n    method: 'POST',\r\n    body: keycloakBody ? serialize(keycloakBody) : null,\r\n  };\r\n  return await request(url, options);\r\n};\r\n\r\nfunction serialize(obj) {\r\n  var str = [];\r\n  for (var p in obj)\r\n    if (obj.hasOwnProperty(p)) {\r\n      str.push(encodeURIComponent(p) + \"=\" + encodeURIComponent(obj[p]));\r\n    }\r\n  return str.join(\"&\");\r\n}","import React, { Component } from 'react';\r\nimport { Form, TextInput, Select, SelectItem, Button } from 'carbon-components-react';\r\nimport * as portalUserApi from '../../../api/portalusers';\r\nimport { apiAddUserToProject, apiGetProjectIdNames } from '../../../api/projects';\r\nimport withKeycloak from '../../../auth/withKeycloak';\r\nimport { apiKeycloakUserGet } from '../../../api/keycloak';\r\nimport i18n from '../../../i18n';\r\nclass AssignUser extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            projectId: '',\r\n            assignUser: '',\r\n            users: new Map(),\r\n            projects: {},\r\n            invalid: {},\r\n            submitMsg: '',\r\n            submitColour: 'black'\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { t, keycloak } = this.props;\r\n\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n        if (authenticated) {\r\n            this.fetchData(keycloak.authServerUrl);\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n      \r\n        const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n      \r\n        if (authenticated && changedAuth) {\r\n            this.fetchData(keycloak.authServerUrl);\r\n        }\r\n    }\r\n\r\n    async fetchData(keycloakUrl) {\r\n        const users = this.mapKeycloakUserEmails((await apiKeycloakUserGet(keycloakUrl)).data);\r\n        const projects = (await apiGetProjectIdNames(this.props.serviceUrl)).data;\r\n        this.setState({\r\n            users,\r\n            projects\r\n        });\r\n    }\r\n\r\n    mapKeycloakUserEmails = keycloakUsers => {\r\n        const usernameEmailMap = new Map();\r\n        keycloakUsers.forEach(keycloakUser => usernameEmailMap.set(keycloakUser.username, keycloakUser.email));\r\n        return usernameEmailMap;\r\n    };\r\n\r\n    handleChanges = e => {\r\n        const input = e.target;\r\n        const name = input.name;\r\n        const value = input.value;\r\n        this.setState({ [name]: value });\r\n    };\r\n\r\n    handleFormSubmit = event => {\r\n        event.preventDefault();\r\n        const { projectId, assignUser } = this.state;\r\n        const formIsValid = this.handleFormValidation();\r\n\r\n        if (formIsValid) {\r\n            this.assignUserToProject(projectId, assignUser).then(res => {\r\n                if (res.status === 201) {\r\n                    this.setState({\r\n                        submitMsg: i18n.t('submitMessages.updated'),\r\n                        submitColour: '#24a148'\r\n                    })\r\n                } else {\r\n                    this.setState({\r\n                        submitMsg: i18n.t('submitMessages.error'),\r\n                        submitColour: '#da1e28'\r\n                    })\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    handleFormValidation() {\r\n        let invalid = {};\r\n        let formIsValid = true;\r\n        const { projectId, assignUser } = this.state;\r\n\r\n        //name\r\n        if (projectId === '') {\r\n            formIsValid = false;\r\n            invalid['projectId'] = true;\r\n        }\r\n\r\n        //customerNumber\r\n        if (assignUser === '') {\r\n            formIsValid = false;\r\n            invalid['assignUser'] = true;\r\n        }\r\n\r\n        this.setState({ invalid: invalid });\r\n        return formIsValid;\r\n    }\r\n\r\n    assignUserToProject = async (projectId, username) => {\r\n        const portalUserId = await this.getPortalUserId({ username, email: this.state.users.get(username) });\r\n        return await apiAddUserToProject(this.props.serviceUrl, projectId, portalUserId);\r\n    };\r\n\r\n    getPortalUserId = async keycloakUser => {\r\n        let portalUserId = null;\r\n        try {\r\n            const portalUser = await portalUserApi.apiUserGetByUsername(this.props.serviceUrl, keycloakUser.username);\r\n            portalUserId = portalUser.data.id;\r\n        } catch (e) {\r\n            if (e.message.toLowerCase().includes('not found')) {\r\n                const portalUser = await this.createPortalUser(keycloakUser);\r\n                portalUserId = portalUser.data.id;\r\n            }\r\n        }\r\n\r\n        return portalUserId;\r\n    };\r\n\r\n    createPortalUser = async keycloakUser => {\r\n        return await portalUserApi.apiUserPost(this.props.serviceUrl, { username: keycloakUser.username, email: keycloakUser.email });\r\n    };\r\n\r\n    setupFormComponents() {\r\n        const users = this.state.users;\r\n        const projectIdsNames = this.state.projects;\r\n        let userList, projectList = (userList = null);\r\n\r\n        if (users.size > 0) {\r\n            userList = [...users.keys()].map((assignUser, i) => (\r\n                <SelectItem key={i} text={assignUser} value={assignUser}>\r\n                    {assignUser}\r\n                </SelectItem>\r\n            ));\r\n            userList.unshift(<SelectItem key=\"-1\" text={i18n.t('manageUsers.assign.userList')} value=\"\" />);\r\n        } else {\r\n            userList = <SelectItem text={i18n.t('manageUsers.assign.noUsers')} value=\"\" />;\r\n        }\r\n\r\n        if (projectIdsNames != null && Object.keys(projectIdsNames).length > 0) {\r\n            projectList = Object.keys(projectIdsNames).map((projectId, i) => (\r\n                <SelectItem key={i} text={projectIdsNames[projectId]} value={projectId}>\r\n                    test\r\n                </SelectItem>\r\n            ));\r\n            projectList.unshift(<SelectItem key=\"-1\" text={i18n.t('manageUsers.assign.projectList')} value=\"\" />);\r\n        } else {\r\n            projectList = <SelectItem text={i18n.t('manageUsers.assign.noProjects')} value=\"\" />;\r\n        }\r\n\r\n        return { userList, projectList };\r\n    }\r\n\r\n    render() {\r\n        const { userList, projectList } = this.setupFormComponents();\r\n\r\n        return (\r\n            <div>\r\n                <p style={{color: this.state.submitColour}}>{this.state.submitMsg}</p>\r\n                <Form onSubmit={this.handleFormSubmit}>\r\n                    <div className=\"bx--grid\">\r\n                        <div className=\"bx--row\">\r\n                            <div className=\"bx--col\">\r\n                                <Select\r\n                                    name=\"projectId\"\r\n                                    labelText={i18n.t('manageUsers.assign.projectName')}\r\n                                    value={this.state.projectId}\r\n                                    onChange={this.handleChanges}\r\n                                    invalidText={i18n.t('validation.invalid.required')}\r\n                                    invalid={this.state.invalid['projectId']}\r\n                                >\r\n                                    {projectList}\r\n                                </Select>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"bx--row\">\r\n                            <div className=\"bx--col\">\r\n                                <Select\r\n                                    name=\"assignUser\"\r\n                                    labelText={i18n.t('manageUsers.assign.assignUser')}\r\n                                    value={this.state.assignUser}\r\n                                    onChange={this.handleChanges}\r\n                                    invalidText={i18n.t('validation.invalid.required')}\r\n                                    invalid={this.state.invalid['assignUser']}\r\n                                >\r\n                                    {userList}\r\n                                </Select>\r\n                            </div>\r\n                        </div>\r\n                        <Button kind=\"primary\" tabIndex={0} type=\"submit\">\r\n                            {' '}\r\n                            {i18n.t('buttons.submit')}{' '}\r\n                        </Button>\r\n                    </div>\r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withKeycloak(AssignUser);\r\n","import React, { Component } from 'react';\r\nimport { DataTable, TableContainer, Table, TableHead, TableRow, TableHeader, TableBody, TableCell } from 'carbon-components-react';\r\nimport { SubtractAlt16 } from '@carbon/icons-react';\r\nimport { apiUsersGet, apiUserDelete } from '../../../api/portalusers';\r\nimport withKeycloak from '../../../auth/withKeycloak';\r\nimport { apiKeycloakUserGet } from '../../../api/keycloak';\r\nimport i18n from '../../../i18n';\r\n\r\nclass DeleteUser extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            portalUsers: new Map(),\r\n            keycloakUsers: new Map(),\r\n            displayUsers: [],\r\n            filterText: ''\r\n        };\r\n        this.headerData = [\r\n            {\r\n                header: i18n.t('manageUsers.delete.userName'),\r\n                key: 'username',\r\n            },\r\n            {\r\n                header: i18n.t('manageUsers.delete.userEmail'),\r\n                key: 'email',\r\n            },\r\n            {\r\n                header: i18n.t('manageUsers.delete.dateAdded'),\r\n                key: 'dateAdded',\r\n            },\r\n            {\r\n                header: i18n.t('manageUsers.delete.userAccess'),\r\n                key: 'userAccess',\r\n            }\r\n        ];\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n      \r\n        if (authenticated) {\r\n            this.fetchData(keycloak.authServerUrl);\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n      \r\n        const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n      \r\n        if (authenticated && changedAuth) {\r\n            this.fetchData(keycloak.authServerUrl);\r\n        }\r\n    }\r\n\r\n    async fetchData(keycloakUrl) {\r\n        const { keycloak } = this.props;\r\n\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n        if (authenticated) {\r\n            const portalUsers = this.handleMapFormatting((await apiUsersGet(this.props.serviceUrl)).data);\r\n            const keycloakUsers = this.handleMapFormatting((await apiKeycloakUserGet(keycloakUrl)).data);\r\n\r\n            this.setState({\r\n                portalUsers,\r\n                keycloakUsers\r\n            });\r\n\r\n            this.handleUserDisplay();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Turns the list of user objects into a map where the key is the unique username.\r\n     */\r\n    handleMapFormatting(users) {\r\n        return new Map(users.map(user => [user.username, user]));\r\n    }\r\n\r\n    handleUserDisplay() {\r\n        const { portalUsers, keycloakUsers } = this.state;\r\n        const portalUsernames = [...portalUsers.keys()];\r\n        const keycloakUserObjects = [...keycloakUsers.values()];\r\n\r\n        const displayUsers = keycloakUserObjects.map(keycloakUser => (\r\n            {\r\n                id:  keycloakUser.username,\r\n                username: keycloakUser.username,\r\n                email: keycloakUser.email,\r\n                dateAdded: `${new Date(keycloakUser.createdTimestamp).toLocaleString('default', { month: 'long'})} ${new Date(keycloakUser.createdTimestamp).getFullYear()}`,\r\n                userAccess: portalUsernames.includes(keycloakUser.username) ? <a onClick={event => this.handleRemoveUser(keycloakUser.username, event)} href=\"\"><SubtractAlt16 fill=\"red\" />{i18n.t('manageUsers.delete.removeUser')}</a> : ''\r\n            }\r\n        ));\r\n\r\n        this.setState({\r\n            displayUsers\r\n        });\r\n    }\r\n\r\n    handleRemoveUser = (username, event) => {\r\n        event.preventDefault();\r\n        const userId = this.state.portalUsers.get(username).id;\r\n        apiUserDelete(this.props.serviceUrl, userId).then(res => {\r\n            if (res.status === 204) {\r\n                const updatedPortalUsers = this.state.portalUsers;\r\n                updatedPortalUsers.delete(username);\r\n                this.setState({\r\n                    portalUsers: updatedPortalUsers\r\n                });\r\n                this.handleUserDisplay();\r\n            } else {\r\n                // TODO: Error message\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <DataTable rows={this.state.displayUsers} headers={this.headerData}>\r\n                {({ rows, headers, getHeaderProps, getTableProps }) => (\r\n                    <TableContainer>\r\n                        <Table {...getTableProps()}>\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    {headers.map((header) => (\r\n                                        <TableHeader {...getHeaderProps({ header })}>\r\n                                            {header.header}\r\n                                        </TableHeader>\r\n                                    ))}\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {rows.map((row) => (\r\n                                    <TableRow key={row.id}>\r\n                                        {row.cells.map((cell) => (\r\n                                            <TableCell key={cell.id}>{cell.value}</TableCell>\r\n                                        ))}\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                )}\r\n            </DataTable>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withKeycloak(DeleteUser);","import React, { Component } from 'react';\r\nimport i18n from '../../../i18n';\r\nimport { Accordion, AccordionItem } from 'carbon-components-react';\r\nimport AssignUser from './AssignUser';\r\nimport DeleteUser from './DeleteUser';\r\nimport { hasKeycloakClientRole } from '../../../api/helpers';\r\nimport withKeycloak from '../../../auth/withKeycloak';\r\n\r\nclass ManageUser extends Component {\r\n  userFunctionality;\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: true\r\n    }\r\n    this.userFunctionality = [\r\n      {\r\n        label: (\r\n          <div>\r\n            <p className=\"title\">{i18n.t('manageUsers.assign.title')}</p>\r\n            <p className=\"desc\">{i18n.t('manageUsers.assign.desc')}</p>\r\n          </div>\r\n        ),\r\n        content: <AssignUser serviceUrl={this.props.serviceUrl} />,\r\n        open: true\r\n      },\r\n      {\r\n        label: (\r\n          <div>\r\n            <p className=\"title\">{i18n.t('manageUsers.manage.title')}</p>\r\n            <p className=\"desc\">{i18n.t('manageUsers.manage.desc')}</p>\r\n          </div>\r\n        ),\r\n        content: <DeleteUser serviceUrl={this.props.serviceUrl} />,\r\n        open: false\r\n      }\r\n    ];\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n  \r\n    if (authenticated) {\r\n      this.setState({\r\n        loading: false\r\n      })\r\n    }\r\n  }\r\n  \r\n  componentDidUpdate(prevProps) {\r\n    const { keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n  \r\n    const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n  \r\n    if (authenticated && changedAuth) {\r\n      this.setState({\r\n        loading: false\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (!this.state.loading) {\r\n      if (hasKeycloakClientRole('ROLE_ADMIN')) {\r\n        return (\r\n          <div>\r\n            <h3 className=\"pageTitle\">{i18n.t('adminDashboard.adminTitle')}</h3>\r\n            <div className=\"form-container\">\r\n              <Accordion>\r\n                {this.userFunctionality.map((item, index) => (\r\n                  <AccordionItem key={index.toString()} index={index} title={item.label} description={item.description} open={item.open}>\r\n                    <p>{item.content}</p>\r\n                  </AccordionItem>\r\n                ))}\r\n              </Accordion>\r\n            </div>\r\n          </div>\r\n        )\r\n      }\r\n      // Unauthorized\r\n      else {\r\n        return(<p>Unathorized</p>)\r\n      }\r\n    }\r\n    // Loading\r\n    else {\r\n      return(null)\r\n    }\r\n  }\r\n}\r\n\r\nexport default withKeycloak(ManageUser);\r\n","import React from 'react';\r\nimport i18n from '../../i18n';\r\nimport { Accordion, AccordionItem, PaginationNav, Search, Tile, Pagination} from 'carbon-components-react';\r\nimport AddCustomerModal from './AddCustomerModal';\r\nimport AddPartnerModal from './AddPartnerModal';\r\nimport AddProjectModal from './AddProjectModal'\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport { apiAdminCustomersGet, apiCustomersGet, apiMyCustomersGet } from '../../api/customers';\r\nimport CustomerAccordian from '../Customer/CustomerAccordian';\r\nimport { number } from 'prop-types';\r\nimport { hasKeycloakClientRole } from '../../api/helpers';\r\nimport SubscriptionForm from '../Forms/SubscriptionForm';\r\nimport ManageUser from '../Admin/ManageUser/ManageUser';\r\nclass AdminDashboard extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            customers: {},\r\n            customersProjects: {},\r\n            role: '',\r\n            filteredCustomers: {},\r\n            currentPage: 0,\r\n            test: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getCustomers();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n    \r\n        const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n    \r\n        if (authenticated && changedAuth) {\r\n          this.getCustomers();\r\n        }\r\n      }\r\n\r\n\r\n    async getCustomers() {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n        if (authenticated) {\r\n            var customers;\r\n            if (hasKeycloakClientRole('ROLE_ADMIN') || hasKeycloakClientRole('ROLE_SUPPORT')) {\r\n                customers = await apiAdminCustomersGet(this.props.serviceUrl);\r\n            }\r\n            else {\r\n                customers = await apiMyCustomersGet(this.props.serviceUrl);\r\n            }\r\n\r\n            this.setState({\r\n                customers: customers.data,\r\n                filteredCustomers: customers.data\r\n            })\r\n        }\r\n    }\r\n\r\n    handleSearch = (event) => {\r\n        if (event.key === 'Enter') {\r\n            const newFilteredState = this.state.customers.filter(customer => customer.name.toLowerCase().includes(event.target.value.toLowerCase()))\r\n            this.setState({\r\n                filteredCustomers: newFilteredState,\r\n                currentPage: 0\r\n            })\r\n        }\r\n        else {\r\n            if (event.target.value === '' || event.target.value === undefined) {\r\n                this.setState({\r\n                    filteredCustomers: this.state.customers\r\n                })\r\n            }\r\n        }\r\n        this.forceUpdate();\r\n    }\r\n\r\n    updateCustomerList = () => {\r\n        this.getCustomers();\r\n    }\r\n\r\n    render(){\r\n        var numberOfPages = 1;\r\n        if (Object.keys(this.state.filteredCustomers).length !== 0) {\r\n            numberOfPages = Math.ceil(this.state.filteredCustomers.length / 5);\r\n        }\r\n        else {\r\n            numberOfPages = 1;\r\n        }\r\n        \r\n        const props = () => ({\r\n            loop: Boolean(false),\r\n            page: Number(this.state.currentPage),\r\n            totalItems: Number(numberOfPages),\r\n            itemsShown: Number(1),\r\n            onChange: (event) => this.setState({currentPage: event}),\r\n        });\r\n\r\n        return(\r\n            <div className=\"admin-dashboard\">\r\n                {hasKeycloakClientRole('ROLE_ADMIN') ? \r\n                    <h3 className=\"pageTitle\">{i18n.t('adminDashboard.adminTitle')}</h3> : \r\n                hasKeycloakClientRole('ROLE_SUPPORT') ? \r\n                    <h3 className=\"pageTitle\">{i18n.t('adminDashboard.supportTitle')}</h3> : \r\n                hasKeycloakClientRole('ROLE_CUSTOMER') ? \r\n                    <h3 className=\"pageTitle\">{i18n.t('adminDashboard.customerTitle')}</h3> : \r\n                hasKeycloakClientRole('ROLE_PARTNER') ? \r\n                    <h3 className=\"pageTitle\">{i18n.t('adminDashboard.partnerTitle')}</h3> : \r\n                null}\r\n            {hasKeycloakClientRole('ROLE_ADMIN') || hasKeycloakClientRole('ROLE_SUPPORT') || hasKeycloakClientRole('ROLE_PARTNER') ?\r\n                <Tile>\r\n                    <p className=\"title\">{i18n.t('adminDashboard.allCustomers')}</p>\r\n                    <div className=\"bx--row\">\r\n                        <div className=\"bx--col\">\r\n                            <Search onChange={this.handleSearch} id=\"search\" placeHolderText={i18n.t('adminDashboard.searchText')} onKeyPress={this.handleSearch}/>\r\n                        </div>\r\n                        {hasKeycloakClientRole('ROLE_ADMIN') ?\r\n                        <div className=\"bx--col\">\r\n                            \r\n                            <div>\r\n                                <AddPartnerModal serviceUrl={this.props.serviceUrl} updateCustomerList={this.updateCustomerList} />\r\n                                <AddCustomerModal serviceUrl={this.props.serviceUrl} updateCustomerList={this.updateCustomerList} />\r\n                                <AddProjectModal serviceUrl={this.props.serviceUrl} updateCustomerList={this.updateCustomerList} />\r\n                            </div>\r\n                        </div> : null}\r\n                    </div>\r\n                </Tile>  \r\n                : null\r\n            }\r\n                    \r\n                <div className=\"form-container\">\r\n                    <Accordion>\r\n                        {Object.keys(this.state.customers).length !== 0 ? this.state.filteredCustomers.map((customer, index) => {\r\n                            // Pagination for Admin and Support roles (5 items per page)\r\n                            var indexOfLastItem = ((this.state.currentPage + 1) * 5) - 1;\r\n                            var firstIndexOfCurrentPage = this.state.currentPage * 5;\r\n                            \r\n                            if (hasKeycloakClientRole('ROLE_ADMIN') || hasKeycloakClientRole('ROLE_SUPPORT') || hasKeycloakClientRole('ROLE_CUSTOMER') || hasKeycloakClientRole('ROLE_PARTNER')) {\r\n                                if (index >= firstIndexOfCurrentPage && index <= indexOfLastItem) {\r\n                                    return(\r\n                                        <CustomerAccordian key={customer.id} serviceUrl={this.props.serviceUrl} customerNumber={customer.id} title={customer.name} updateCustomerList={this.updateCustomerList} locale={this.props.locale}/>\r\n                                    )\r\n                                }\r\n                                else {\r\n                                    return(null)\r\n                                }\r\n                            }\r\n                            else {\r\n                                return(null)\r\n                            }\r\n                        }) : null}\r\n                    </Accordion>\r\n                    <PaginationNav {...props()} cssClass='pagination-right' />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default withKeycloak(AdminDashboard);","export const publishWidgetEvent = (eventId, payload) => {\r\n  const widgetEvent = new CustomEvent(eventId, {\r\n    detail: {\r\n      payload,\r\n    },\r\n  });\r\n  window.dispatchEvent(widgetEvent);\r\n};\r\n\r\nexport const createWidgetEventPublisher = eventType => payload =>\r\n  publishWidgetEvent(eventType, payload);\r\n\r\nexport const subscribeToWidgetEvent = (eventType, eventHandler) => {\r\n  window.addEventListener(eventType, eventHandler);\r\n\r\n  return () => {\r\n    window.removeEventListener(eventType, eventHandler);\r\n  };\r\n};\r\n\r\nexport const subscribeToWidgetEvents = (widgetEvents, eventHandler) => {\r\n  widgetEvents.forEach(eventType => window.addEventListener(eventType, eventHandler));\r\n\r\n  return () => {\r\n    widgetEvents.forEach(eventType => window.removeEventListener(eventType, eventHandler));\r\n  };\r\n};\r\n\r\nexport const widgetEventToFSA = widgetEvent => {\r\n  // for info about Flux Standard Action (FSA) see https://github.com/redux-utilities/flux-standard-action\r\n  const {\r\n    type,\r\n    detail: { payload, error, meta },\r\n  } = widgetEvent;\r\n  return { type, payload, error, meta };\r\n};\r\n","export const INPUT_EVENT_TYPES = {\r\n    formUpdate: 'customer.form.update',\r\n    formCreate: 'customer.form.create',\r\n    formDelete: 'customer.form.delete',\r\n  };\r\n  \r\n  export const OUTPUT_EVENT_TYPES = {\r\n    select: 'customer.table.select',\r\n    add: 'customer.table.add',\r\n    error: 'customer.table.error',\r\n    delete: 'customer.table.delete',\r\n  };\r\n  \r\n  export const KEYCLOAK_EVENT_TYPE = 'keycloak';\r\n  ","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport AdminDashboard from '../components/Admin/AdminDashboard';\r\nimport '../index.scss'\r\nimport './dashboard.css'\r\n\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\n\r\nimport {\r\n  subscribeToWidgetEvent\r\n} from '../helpers/widgetEvents';\r\nimport {\r\n  KEYCLOAK_EVENT_TYPE,\r\n} from '../custom-elements/widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window &&\r\n    window.entando &&\r\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\nconst ATTRIBUTES = {\r\n  hidden: 'hidden',\r\n  locale: 'locale',\r\n  paginationMode: 'pagination-mode',\r\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n  serviceUrl: 'service-url',\r\n};\r\n\r\nclass AdminDashboardElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    \r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    //retargetEvents(shadowRoot);\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <AdminDashboard serviceUrl={serviceUrl} />\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.define('admin-dashboard-widget', AdminDashboardElement);\r\n","import { getDefaultOptions, request, getUrl } from './helpers';\r\n\r\nconst resource = 'api/tickets';\r\n\r\nexport const apiTicketDelete = async (serviceUrl, id) => {\r\n  const url = `${serviceUrl}/${resource}/${id}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiTicketsGet = async (serviceUrl ) => {\r\n\r\n  const url = getUrl(\r\n    `${serviceUrl}/${resource}`\r\n  );\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiTicketPost = async (serviceUrl, ticket) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n    body: ticket ? JSON.stringify(ticket) : null,\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\n\r\nconst jiraResource = 'api/tickets/ticketingsystem';\r\nexport const apiJiraTicketDelete = async (serviceUrl, id) => {\r\n  const url = `${serviceUrl}/${jiraResource}/${id}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiJiraTicketsGet = async (serviceUrl, projectName, organization) => {\r\n  const url = `${serviceUrl}/${jiraResource}/${projectName}/${organization}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiJiraTicketPost = async (serviceUrl, projectName, organization, ticket) => {\r\n  const url = `${serviceUrl}/${jiraResource}/${projectName}/${organization}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n    body: ticket ? JSON.stringify(ticket) : null,\r\n  };\r\n  return request(url, options);\r\n};","import { getDefaultOptions, request, getUrl } from './helpers';\r\n\r\nconst resource = 'api/ticketing-systems';\r\n\r\nexport const apiTicketingSystemDelete = async (serviceUrl, id) => {\r\n  const url = `${serviceUrl}/${resource}/${id}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiTicketingSystemsGet = async (serviceUrl) => {\r\n  const url = getUrl(\r\n    `${serviceUrl}/${resource}`\r\n  );\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiTicketingSystemPost = async (serviceUrl, ticketingsystem) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n    body: ticketingsystem ? JSON.stringify(ticketingsystem) : null,\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiTicketingSystemPut = async (serviceUrl, ticketingsystem) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'PUT',\r\n    body: ticketingsystem ? JSON.stringify(ticketingsystem) : null,\r\n  };\r\n  return request(url, options);\r\n};","import React, { Component } from 'react';\r\nimport { DataTable, TableContainer, Table, TableHead, TableRow, TableHeader, TableBody, TableCell } from 'carbon-components-react';\r\nimport { apiJiraTicketsGet } from '../../api/tickets';\r\nimport { apiTicketingSystemsGet } from '../../api/ticketingsystem';\r\nimport { AuthenticatedView, UnauthenticatedView } from '../../auth/KeycloakViews';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport { apiProjectGet, apiAddTicketToProject } from '../../api/projects';\r\nimport { hasKeycloakClientRole } from '../../api/helpers';\r\nimport i18n from '../../i18n';\r\n\r\nclass TicketList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n      tickets: {}\r\n     }\r\n     this.headerData = [\r\n      {\r\n        header: i18n.t('ticketDetails.issue'),\r\n        key: 'issue',\r\n      },\r\n      {\r\n        header: i18n.t('ticketDetails.description'),\r\n        key: 'description',\r\n      },\r\n      {\r\n        header: i18n.t('ticketDetails.status'),\r\n        key: 'status',\r\n      },\r\n      {\r\n        header: i18n.t('ticketDetails.type'),\r\n        key: 'type',\r\n      },\r\n      {\r\n        header: i18n.t('ticketDetails.priority'),\r\n        key: 'priority',\r\n      },\r\n      {\r\n        header: i18n.t('ticketDetails.created'),\r\n        key: 'created',\r\n      },\r\n      {\r\n        header: i18n.t('ticketDetails.updated'),\r\n        key: 'updated',\r\n      },\r\n      {\r\n        header: i18n.t('ticketDetails.link'),\r\n        key: 'link',\r\n      }\r\n    ];\r\n  }\r\n\r\n  async fetchData() {\r\n    const { t, keycloak } = this.props;\r\n    var authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n    if (authenticated) {\r\n      try {\r\n          const project = await apiProjectGet(this.props.serviceUrl, this.props.projectId);\r\n          const ticketingSystems = await apiTicketingSystemsGet(this.props.serviceUrl);\r\n          const currentTicketingSystem = ticketingSystems.data[ticketingSystems.data.length-1]\r\n          var tickets = await apiJiraTicketsGet(this.props.serviceUrl, currentTicketingSystem.systemId, project.data.systemId);\r\n          for(var i = 0; i < tickets.data.length; i++) {\r\n            apiAddTicketToProject(this.props.serviceUrl, this.props.projectId, tickets.data[i].id);\r\n          }\r\n\r\n          this.setState({\r\n              tickets: tickets\r\n          });\r\n      }\r\n      catch(err) {\r\n        console.log(err)\r\n      }\r\n    }\r\n}\r\n\r\ncomponentDidMount(){\r\n  const { keycloak } = this.props;\r\n  const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n  if(authenticated) {\r\n    if (hasKeycloakClientRole('ROLE_ADMIN') || hasKeycloakClientRole('ROLE_SUPPORT') || hasKeycloakClientRole('ROLE_CUSTOMER') || hasKeycloakClientRole('ROLE_PARTNER')) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n}\r\n\r\ncomponentDidUpdate(prevProps) {\r\n  const { keycloak } = this.props;\r\n  const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n  const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n\r\n  if (authenticated && changedAuth) {\r\n    if (hasKeycloakClientRole('ROLE_ADMIN') || hasKeycloakClientRole('ROLE_SUPPORT') || hasKeycloakClientRole('ROLE_CUSTOMER') || hasKeycloakClientRole('ROLE_PARTNER')) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n}\r\n\r\n  render() {\r\n    return ( \r\n      <div>\r\n        <DataTable rows={rowData} headers={this.headerData}>\r\n        {({ rows, headers, getHeaderProps, getTableProps }) => (\r\n          <TableContainer title={i18n.t('ticketDetails.listOfTickets')} description={i18n.t('ticketDetails.tickets')}>\r\n            <Table {...getTableProps()}>\r\n              <TableHead>\r\n                <TableRow>\r\n                  {headers.map((header) => (\r\n                    <TableHeader {...getHeaderProps({ header })}>\r\n                      {header.header}\r\n                    </TableHeader>\r\n                  ))}\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {Object.keys(this.state.tickets).length !== 0 ? this.state.tickets.data.map((ticket) => {\r\n                  return (\r\n                    <TableRow key={ticket.id}>\r\n                      <TableCell key={ticket.id}>{ticket.systemId}</TableCell>\r\n                      <TableCell key={ticket.id}>{ticket.description}</TableCell>\r\n                      <TableCell key={ticket.id}>{ticket.status}</TableCell>\r\n                      <TableCell key={ticket.id}>{ticket.type}</TableCell>\r\n                      <TableCell key={ticket.id}>{ticket.priority}</TableCell>\r\n                      <TableCell key={ticket.id}>{new Date(ticket.createDate).toDateString()}</TableCell>\r\n                      <TableCell key={ticket.id}>{new Date(ticket.updateDate).toDateString()}</TableCell>\r\n                      <TableCell key={ticket.id}><a href={\"https://jorden-test-partner-portal.atlassian.net/browse/\" + ticket.systemId} target=\"_blank\">{i18n.t('ticketDetails.viewTicket')}</a></TableCell>\r\n                    </TableRow>\r\n                  )\r\n                }) : <p></p> }\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        )}\r\n      </DataTable>\r\n    </div>\r\n  )}\r\n}\r\n\r\nconst rowData = [\r\n  {\r\n       id: 'a',\r\n       projectName: 'Ticket1',\r\n       project: 'Leonardo',\r\n       entandoVersion: 6.2,\r\n       creationDate: 'October, 2019',\r\n       openTicket: <a href=\"\">Open Ticket</a>,\r\n    },\r\n    {\r\n        id: 'a',\r\n        projectName: 'Ticket1',\r\n        project: 'Leonardo',\r\n        entandoVersion: 6.2,\r\n        creationDate: 'October, 2019',\r\n        openTicket: <a href=\"\">Open Ticket</a>,\r\n    },\r\n    {\r\n        id: 'a',\r\n        projectName: 'Ticket1',\r\n        project: 'Leonardo',\r\n        entandoVersion: 6.2,\r\n        creationDate: 'October, 2019',\r\n        openTicket: <a href=\"\">Open Ticket</a>,\r\n     },\r\n  \r\n];\r\n \r\nexport default withKeycloak(TicketList);","import React, { Component } from 'react';\r\nimport i18n from '../../i18n';\r\nimport { ModalWrapper, Form, TextInput, TextArea, Select, SelectItem, DatePicker, DatePickerInput} from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport { apiProjectSubscriptionPut } from '../../api/subscriptions';\r\nimport moment from 'moment';\r\n\r\nclass EditSubscriptionModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        this.state = {\r\n            level: '',\r\n            status: '',\r\n            lengthInMonths: '',\r\n            startDate: '',\r\n            notes: '',\r\n            invalid: {},\r\n            submitMsg: '',\r\n            submitColour: 'black'\r\n        };\r\n    }\r\n\r\n    handleValidation() {\r\n        let invalid = {};\r\n        let formIsValid = true;\r\n\r\n        if (this.state.level === 'level') {\r\n            formIsValid = false;\r\n            invalid['level'] = true;\r\n        }\r\n\r\n        if (this.state.status === 'status') {\r\n            formIsValid = false;\r\n            invalid['status'] = true;\r\n        }\r\n\r\n        if(typeof this.state.startDate !== \"undefined\"){\r\n            if(!this.state.startDate.match(/^(0[1-9]|1[0-2])\\/(0[1-9]|1\\d|2\\d|3[01])\\/(19|20)\\d{2}$/)){\r\n              formIsValid = false;\r\n              invalid['startDate'] = true;\r\n            }      \t\r\n        }\r\n\r\n        this.setState({ invalid: invalid });\r\n        return formIsValid;\r\n    }\r\n\r\n    handleChanges = e => {\r\n        const input = e.target;\r\n        const name = input.name;\r\n        const value = input.value;\r\n        this.setState({ [name]: value });\r\n    };\r\n\r\n    handleFormSubmit = (e) => {\r\n        const formIsValid = this.handleValidation();\r\n\r\n        if (formIsValid) {\r\n            const subscriptionRequest = {\r\n                projectSubscription : {\r\n                    id: this.props.subscription.id,\r\n                    level: this.state.level,\r\n                    status: this.state.status,\r\n                    lengthInMonths: this.state.lengthInMonths,\r\n                    startDate: moment(this.state.startDate).format(),\r\n                    notes: this.state.notes,\r\n                    project: this.props.project,\r\n                    entandoVersion: this.props.subscription.entandoVersion\r\n                }\r\n            }\r\n            this.subscriptionPut(subscriptionRequest).then(result => {\r\n                this.setState({\r\n                    submitMsg: i18n.t('submitMessages.updated'),\r\n                    submitColour: '#24a148'\r\n                })\r\n                this.props.updateSubscription();\r\n            }).catch(err => {\r\n                this.setState({\r\n                    submitMsg: i18n.t('submitMessages.error'),\r\n                    submitColour: '#da1e28'\r\n                })\r\n            });\r\n        }\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            level: this.props.subscription.level,\r\n            status: this.props.subscription.status,\r\n            lengthInMonths: this.props.subscription.lengthInMonths,\r\n            startDate: moment(this.props.subscription.startDate).calendar(),\r\n            notes: this.props.subscription.notes,\r\n            submitMsg: ''\r\n        })\r\n\r\n        const modalOpenButton = document.querySelector('.edit-sub-button');\r\n        modalOpenButton.addEventListener(\"click\", this.clearValues, false);\r\n    }\r\n\r\n    clearValues = () => {\r\n        const customerModalElement = document.querySelector('#modal-form-sub-edit');\r\n        if(!customerModalElement.className.includes(\"is-visible\")) {\r\n            this.setState({\r\n                level: this.props.subscription.level,\r\n                status: this.props.subscription.status,\r\n                lengthInMonths: this.props.subscription.lengthInMonths,\r\n                startDate: moment(this.props.subscription.startDate).calendar(),\r\n                notes: this.props.subscription.notes,\r\n                invalid: {}\r\n            })\r\n        }\r\n    }\r\n\r\n    async subscriptionPut(subscription) {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n        if (authenticated) {\r\n            return await apiProjectSubscriptionPut(this.props.serviceUrl, subscription);\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        const levelList = ['GOLD', 'PLATINUM'];\r\n        const statusList = ['REQUESTED', 'PENDING', 'ACTIVE', 'EXPIRED'];\r\n        return (\r\n            <ModalWrapper\r\n                buttonTriggerText={i18n.t('buttons.edit')}\r\n                modalHeading={i18n.t('editSubscription.title')}\r\n                buttonTriggerClassName=\"add-project bx--btn bx--btn--tertiary edit-sub-button\"\r\n                className=\"modal-form\"\r\n                id=\"modal-form-sub-edit\"\r\n                handleSubmit={this.handleFormSubmit}\r\n                primaryButtonText={i18n.t('modalText.save')}\r\n                secondaryButtonText={i18n.t('modalText.cancel')}\r\n                modalLabel={<p style={{color: this.state.submitColour}}>{this.state.submitMsg}</p>}\r\n            >\r\n                {/*<p> Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse cursus fermentum risus, sit amet fringilla nunc pellentesque quis. </p>*/}\r\n                <div className=\"form-container\">\r\n                    <Form onSubmit={this.handleFormSubmit}>\r\n                        <Select\r\n                            name=\"level\"\r\n                            labelText={i18n.t('subscriptionDetails.level') + \" *\"}\r\n                            value={this.state.level}\r\n                            onChange={this.handleChanges}\r\n                            invalidText={i18n.t('validation.invalid.required')}\r\n                            invalid={this.state.invalid['level']} \r\n                            >\r\n                            <SelectItem disabled text=\"Select Level\" value=\"level\" />\r\n                            {levelList.map((level, i) => (\r\n                                    <SelectItem key={i} text={level} value={level}>\r\n                                        {level}\r\n                                    </SelectItem>\r\n                            ))}\r\n                        </Select>\r\n                        <Select\r\n                            name=\"status\"\r\n                            labelText={i18n.t('subscriptionDetails.status') + \" *\"}\r\n                            value={this.state.status}\r\n                            onChange={this.handleChanges}\r\n                            invalidText={i18n.t('validation.invalid.required')}\r\n                            invalid={this.state.invalid['status']} \r\n                            >\r\n                            <SelectItem disabled text=\"Select Status\" value=\"status\" />\r\n                            {statusList.map((status, i) => (\r\n                                <SelectItem key={i} text={status} value={status}>\r\n                                    {status}\r\n                                </SelectItem>\r\n                            ))}\r\n                        </Select>\r\n                        <DatePicker dateFormat=\"m/d/Y\" datePickerType=\"simple\">\r\n                            <DatePickerInput\r\n                                name=\"startDate\"\r\n                                placeholder=\"mm/dd/yyyy\"\r\n                                labelText={i18n.t('subscriptionDetails.startDate') + \" *\"}\r\n                                defaultValue={this.state.startDate}\r\n                                onChange={ this.handleChanges}\r\n                                type=\"text\"\r\n                                invalidText={i18n.t('validation.invalid.date')} \r\n                                invalid={this.state.invalid['startDate']} \r\n                            />\r\n                        </DatePicker>\r\n                        <TextInput name=\"lengthInMonths\" labelText={i18n.t('subscriptionDetails.lengthInMonths') + \" *\"} defaultValue={this.state.lengthInMonths} onChange={this.handleChanges} />\r\n                        <TextArea \r\n                            name=\"notes\" \r\n                            labelText={i18n.t('adminDashboard.addProject.notes')} \r\n                            defaultValue={this.state.notes} \r\n                            onChange={this.handleChanges} \r\n                        />\r\n                    </Form>\r\n                </div> \r\n            </ModalWrapper>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withKeycloak(EditSubscriptionModal)\r\n\r\n\r\n","import React from 'react';\r\nimport TicketList from './TicketList';\r\nimport { Tile } from 'carbon-components-react';\r\nimport { apiSubscriptionGet, apiGetMySubscription } from '../../api/subscriptions'\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport { apiUsersGet } from '../../api/portalusers';\r\nimport { apiProjectGet } from '../../api/projects'; \r\nimport { hasKeycloakClientRole } from '../../api/helpers';\r\nimport EditSubscriptionModal from '../Admin/EditSubscriptionModal';\r\nimport i18n from '../../i18n';\r\n\r\nconst subscriptionData = {\r\n    description: 'Entando Product Support Subscription Suplier Portal',\r\n    commitment: 'Leonardo',\r\n    type: 'Product Support Subscription Entando Platform',\r\n    quantityRequest: '1(8 Core)',\r\n    components: '',\r\n    level: 'Gold',\r\n    startDate: 'May 2019',\r\n    endDate: 'May 2020',\r\n    license: 'Free Commercial Open Source',\r\n};\r\n\r\nclass Subscription extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            subscription: {},\r\n            users: {},\r\n            project: {}\r\n        }\r\n    }\r\n\r\n    async getSubscription() {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n        if (authenticated) {\r\n            try {\r\n                var subscription;\r\n                if (hasKeycloakClientRole('ROLE_ADMIN') || hasKeycloakClientRole('ROLE_SUPPORT')) {\r\n                    subscription = await apiSubscriptionGet(this.props.serviceUrl, this.props.match.params.id);\r\n                    var project = '';\r\n                    if (subscription.data.project) {\r\n                        project = await apiProjectGet(this.props.serviceUrl, subscription.data.project.id)\r\n                    }\r\n                }\r\n                else if (hasKeycloakClientRole('ROLE_CUSTOMER') || hasKeycloakClientRole('ROLE_PARTNER')) {\r\n                    subscription = await apiGetMySubscription(this.props.serviceUrl, this.props.match.params.id);\r\n                    var project = '';\r\n                    if (subscription.data.project) {\r\n                        project = await apiProjectGet(this.props.serviceUrl, subscription.data.project.id)\r\n                    }\r\n                }\r\n                this.setState({\r\n                    subscription: subscription,\r\n                    project: project\r\n                })\r\n            }\r\n            catch(err) {\r\n                console.log(err)\r\n            }\r\n        }\r\n    }\r\n\r\n    updateSubscription = () => {\r\n        this.getSubscription();\r\n    }\r\n\r\n    componentDidMount(){\r\n        const { keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n        if (authenticated) {\r\n            if (hasKeycloakClientRole('ROLE_ADMIN') || hasKeycloakClientRole('ROLE_SUPPORT') || hasKeycloakClientRole('ROLE_CUSTOMER') || hasKeycloakClientRole('ROLE_PARTNER')) {\r\n                this.getSubscription();\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const { keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n    \r\n        const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n    \r\n        if (authenticated && changedAuth) {\r\n            if (hasKeycloakClientRole('ROLE_ADMIN') || hasKeycloakClientRole('ROLE_SUPPORT') || hasKeycloakClientRole('ROLE_CUSTOMER') || hasKeycloakClientRole('ROLE_PARTNER')) {\r\n                this.getSubscription();\r\n            }\r\n        }\r\n      }\r\n\r\n    render() {\r\n        const { description, commitment, type, quantityRequest, components, level, startDate, endDate, license } = subscriptionData\r\n        var { t, keycloak } = this.props;\r\n        var authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n        if (Object.keys(this.state.subscription).length !== 0 && Object.keys(this.state.project).length !== 0) {\r\n            return (\r\n                <div className=\"subscription-details\">\r\n                    <div>\r\n                    <Tile>\r\n                        <div className=\"bx--grid\">\r\n                            <div className=\"bx--row\">\r\n                                <div className=\"bx--col\">\r\n                                    <p><strong>{i18n.t('subscriptionDetails.description')}:</strong> {this.state.subscription.data.project.description}</p>\r\n                                    <p><strong>{i18n.t('subscriptionDetails.partners')}:</strong>\r\n                                    {this.state.project.data !== '' && Object.keys(this.state.project.data.partners).length !== 0 ? \r\n                                        <>\r\n                                            {this.state.project.data.partners.map(partner => (\r\n                                                <> {partner.name} </>\r\n                                            ))}\r\n                                        </>\r\n                                        : <> None </>\r\n                                    }\r\n                                    </p>\r\n                                    <p><strong>{i18n.t('subscriptionDetails.type')}:</strong> {type}</p>\r\n                                    <p><strong>{i18n.t('subscriptionDetails.status')}:</strong> {this.state.subscription.data.status}</p>\r\n                                </div>\r\n                                <div className=\"bx--col\">\r\n                                    <p><strong>{i18n.t('subscriptionDetails.level')}:</strong> {this.state.subscription.data.level}</p>\r\n                                    <p><strong>{i18n.t('subscriptionDetails.startDate')}:</strong> {String(new Date(this.state.subscription.data.startDate).toDateString())}</p>\r\n                                    <p><strong>{i18n.t('subscriptionDetails.endDate')}:</strong> {String(new Date(new Date(this.state.subscription.data.startDate).setMonth(new Date(this.state.subscription.data.startDate).getMonth() + this.state.subscription.data.lengthInMonths)).toDateString())}</p>\r\n                                    <p><strong>{i18n.t('subscriptionDetails.license')}:</strong> {license}</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        {hasKeycloakClientRole('ROLE_ADMIN') ? \r\n                            <EditSubscriptionModal project={this.state.project.data} subscription={this.state.subscription.data} serviceUrl={this.props.serviceUrl} updateSubscription={this.updateSubscription}/>\r\n                        : null}\r\n                    </Tile>\r\n                    <br/>\r\n                    <TicketList projectId={this.state.project.data.id} serviceUrl={this.props.serviceUrl} />\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        else {\r\n            return(<p>No Data</p>)\r\n        }\r\n    }\r\n}\r\n\r\nexport default withKeycloak(Subscription);","import React, { Component } from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport AdminDashboard from './Admin/AdminDashboard';\r\nimport Subscription from './SubscriptionDetails/subscription';\r\nimport withKeycloak from '../auth/withKeycloak';\r\nimport { AuthenticatedView, UnauthenticatedView } from '../auth/KeycloakViews';\r\nimport { apiKeycloakToken, apiKeycloakUserGet } from '../api/keycloak';\r\nimport { hasKeycloakClientRole } from '../api/helpers';\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loading: true\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n        if (authenticated) {\r\n            this.setState({\r\n                loading: false\r\n            })\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n      \r\n        const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n\r\n        if (authenticated && changedAuth) {\r\n            this.setState({\r\n                loading: false\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        var { t, keycloak } = this.props;\r\n        var authenticated = keycloak.initialized && keycloak.authenticated;\r\n        \r\n        if (!this.state.loading) {\r\n            if (hasKeycloakClientRole('ROLE_ADMIN') || hasKeycloakClientRole('ROLE_SUPPORT') || hasKeycloakClientRole('ROLE_PARTNER') || hasKeycloakClientRole(\"ROLE_CUSTOMER\")) {\r\n                return (\r\n                    <div id=\"entando-customer-portal\">\r\n                        <AuthenticatedView keycloak={keycloak}>\r\n                            <BrowserRouter>\r\n                                <Switch>\r\n                                    <Route path={\"**/subscription-details/:id\"} render={(props) => (\r\n                                        <Subscription {...props} serviceUrl={this.props.serviceUrl} locale={this.props.locale} />\r\n                                    )}/>\r\n                                    <Route path=\"**/\" render={(props) => (\r\n                                        <AdminDashboard {...props} serviceUrl={this.props.serviceUrl} locale={this.props.locale} />\r\n                                    )}/>\r\n                                </Switch>\r\n                            </BrowserRouter>\r\n                        </AuthenticatedView>\r\n                        <UnauthenticatedView keycloak={keycloak}>\r\n                            <p>Unauthenticated</p>\r\n                        </UnauthenticatedView>\r\n                    </div>\r\n                )\r\n            }\r\n            else {\r\n                return (<p>Unathorized</p>)\r\n            }\r\n        }\r\n        else {\r\n            return(null)\r\n        }\r\n     }\r\n  }\r\n  \r\nexport default withKeycloak(App);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport AddCustomerModal from '../components/Admin/AddCustomerModal';\r\nimport '../index.scss'\r\nimport './dashboard.css'\r\n\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\nimport App from '../components/App';\r\n\r\nimport {\r\n  subscribeToWidgetEvent\r\n} from '../helpers/widgetEvents';\r\nimport {\r\n  KEYCLOAK_EVENT_TYPE,\r\n} from '../custom-elements/widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window &&\r\n    window.entando &&\r\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\nconst ATTRIBUTES = {\r\n  hidden: 'hidden',\r\n  locale: 'locale',\r\n  paginationMode: 'pagination-mode',\r\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n  serviceUrl: 'service-url',\r\n};\r\n\r\nclass AdminAddCustomerElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    \r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    //retargetEvents(shadowRoot);\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <AddCustomerModal serviceUrl={serviceUrl}/>\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.define('admin-add-customer-widget', AdminAddCustomerElement);\r\n\r\n","import React, {Component} from 'react';\r\nimport { Select, SelectItem} from 'carbon-components-react';\r\nimport CustomerDetails from '../Customer/customerDetails';\r\nimport CustomTable from '../Customer/customDataTable';\r\nimport AdminDashboard from './AdminDashboard';\r\nimport '../../index.scss';\r\n\r\nexport default class RoleCheck extends Component {\r\n    state = {\r\n        roleType: 'customer'\r\n    };\r\n\r\n    handleChanges = (e) => {\r\n        const input = e.target;\r\n        const name = input.name;\r\n        const value = input.value;\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    render() {\r\n        const roleType = ['Admin', 'Customer'];\r\n        return (\r\n            \r\n                <div className='role-check'>  \r\n                <Select defaultValue=\"role-type\" name=\"roleType\" labelText=\"Select Role(Testing)\" value={this.state.roleType} onChange={this.handleChanges}>\r\n                        <SelectItem\r\n                                text=\"Select Role\"\r\n                                value=\"role-type\"\r\n                        />\r\n                        {roleType.map((roleType, i) => <SelectItem key={i} text={roleType} value={roleType.toLowerCase()}>{roleType}</SelectItem>)}\r\n                        </Select>\r\n                    { this.renderForm()}\r\n                </div>\r\n            \r\n            );\r\n    }\r\n\r\n    // Render Dashboard based on role\r\n    renderForm() {\r\n        if (this.state.roleType === 'customer') return (\r\n            <div>\r\n                 <h3 className=\"pageTitle\">Welcome to Entando Customer Portal</h3>\r\n                <CustomerDetails />\r\n                <CustomTable />\r\n            </div>\r\n        )\r\n        if (this.state.roleType === 'admin') return (\r\n            <div>\r\n                 <h3 className=\"pageTitle\">Welcome to Entando Admin View</h3>\r\n                <AdminDashboard />\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport RoleCheck from '../components/Admin/RoleCheck';\r\nimport '../index.scss'\r\nimport './dashboard.css'\r\n\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\n\r\nimport {\r\n  subscribeToWidgetEvent\r\n} from '../helpers/widgetEvents';\r\nimport {\r\n  KEYCLOAK_EVENT_TYPE,\r\n} from '../custom-elements/widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window &&\r\n    window.entando &&\r\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\n  const ATTRIBUTES = {\r\n    hidden: 'hidden',\r\n    locale: 'locale',\r\n    paginationMode: 'pagination-mode',\r\n    disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n    serviceUrl: 'service-url',\r\n  };\r\n\r\nclass AdminRoleCheckElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    \r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    //retargetEvents(shadowRoot);\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <RoleCheck serviceUrl={serviceUrl}/>\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.define('admin-rolecheck-widget', AdminRoleCheckElement);\r\n\r\n//export default AdminRoleCheckElement;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport CustomDataTable from '../components/Customer/customDataTable';\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\nimport '../index.scss'\r\nimport './dashboard.css'\r\n\r\nimport {\r\n  subscribeToWidgetEvent\r\n} from '../helpers/widgetEvents';\r\nimport {\r\n  KEYCLOAK_EVENT_TYPE,\r\n} from '../custom-elements/widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window &&\r\n    window.entando &&\r\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\n  const ATTRIBUTES = {\r\n    hidden: 'hidden',\r\n    locale: 'locale',\r\n    paginationMode: 'pagination-mode',\r\n    disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n    serviceUrl: 'service-url',\r\n  };\r\n\r\nclass CustomDataTableElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    \r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <CustomDataTable serviceUrl={serviceUrl}/>\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.define('custom-datatable-widget', CustomDataTableElement);\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport CustomerDetails from '../components/Customer/customerDetails';\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\nimport './dashboard.css'\r\n\r\nimport {\r\n  subscribeToWidgetEvent\r\n} from '../helpers/widgetEvents';\r\nimport {\r\n  KEYCLOAK_EVENT_TYPE,\r\n} from '../custom-elements/widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window &&\r\n    window.entando &&\r\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\n  const ATTRIBUTES = {\r\n    hidden: 'hidden',\r\n    locale: 'locale',\r\n    paginationMode: 'pagination-mode',\r\n    disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n    serviceUrl: 'service-url',\r\n  };\r\n\r\nclass CustomerDetailsElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    \r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <CustomerDetails serviceUrl={serviceUrl}/>\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\ncustomElements.define('customer-details-widget', CustomerDetailsElement);\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Subscription from '../components/SubscriptionDetails/subscription';\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\nimport './dashboard.css'\r\n\r\nimport {\r\n  subscribeToWidgetEvent\r\n} from '../helpers/widgetEvents';\r\nimport {\r\n  KEYCLOAK_EVENT_TYPE,\r\n} from '../custom-elements/widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window &&\r\n    window.entando &&\r\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\nconst ATTRIBUTES = {\r\n  hidden: 'hidden',\r\n  locale: 'locale',\r\n  paginationMode: 'pagination-mode',\r\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n  serviceUrl: 'service-url',\r\n};\r\n\r\n\r\nclass SubscriptionElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    \r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    //retargetEvents(shadowRoot);\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <Subscription serviceUrl={serviceUrl}/>\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.define('subscription-widget', SubscriptionElement);\r\n\r\n","import React, { Component } from 'react';\r\nimport i18n from '../../i18n';\r\nimport { Form, Select, SelectItem, Button, TextArea } from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport { apiAdminProjectsGet, apiMyProjectsGet, apiGetProjectSubscriptions } from '../../api/projects';\r\nimport { apiJiraTicketPost } from '../../api/tickets';\r\nimport { apiTicketingSystemsGet } from '../../api/ticketingsystem';\r\nimport { hasKeycloakClientRole } from '../../api/helpers';\r\n\r\nclass OpenTicket extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            loading: true,\r\n            project: {},\r\n            projects: [],\r\n            systemId: '',\r\n            type: '',\r\n            description: '',\r\n            priority: 'Medium',\r\n            status: 'To Do',\r\n            createDate: '',\r\n            updateDate: '',\r\n            role: '',\r\n            invalid: {},\r\n            submitMsg: '',\r\n            submitColour: 'black'\r\n        };\r\n        this.types = [\"Bug\", \"Task\"];\r\n        this.priorities = ['Highest', 'High', 'Medium', 'Low', 'Lowest'];\r\n    }\r\n\r\n    handleValidation() {\r\n        let invalid = {};\r\n        let formIsValid = true;\r\n\r\n        if(this.state.project.systemId === undefined || this.state.project.systemId === 'Select'){\r\n          formIsValid = false;\r\n          invalid['project'] = true;\r\n        }\r\n\r\n        if(this.state.type === '' || this.state.type === 'Select'){\r\n            formIsValid = false;\r\n            invalid['type'] = true;\r\n        }\r\n\r\n        if(this.state.description === '' || this.state.description === 'Select'){\r\n            formIsValid = false;\r\n            invalid['description'] = true;\r\n        }\r\n\r\n        if(this.state.priority === '' || this.state.priority === 'Select'){\r\n            formIsValid = false;\r\n            invalid['priority'] = true;\r\n        }\r\n\r\n        this.setState({invalid: invalid});\r\n        return formIsValid;\r\n    }\r\n\r\n    handleChanges = (e) => {\r\n        const input = e.target;\r\n        const name = input.name;\r\n        const value = input.value;\r\n\r\n        if (name === \"project\" && value != '') {\r\n            this.setState({\r\n                project: JSON.parse(value),\r\n            })\r\n        }\r\n        else {\r\n            this.setState({ [name]: value });\r\n        }\r\n    }\r\n\r\n    handleFormSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        const formIsValid = this.handleValidation();\r\n\r\n        if (formIsValid) {\r\n            // check if project has subscription \r\n            this.fetchProjectSubscription(this.state.project.id).then(result => {\r\n                // if project has subscription, create ticket\r\n                if(result.data.length > 0) {\r\n                    this.createTicket().then(res => {\r\n                        this.setState({\r\n                            submitMsg: i18n.t('submitMessages.created'),\r\n                            submitColour: '#24a148'\r\n                        })\r\n                    }).catch(err => {\r\n                        this.setState({\r\n                            submitMsg: i18n.t('submitMessages.error'),\r\n                            submitColour: '#da1e28'\r\n                        })\r\n                    });\r\n                }\r\n                // if no subscriptions, don't create ticket\r\n                else {\r\n                    this.setState({\r\n                        submitMsg: i18n.t('submitMessages.subscriptionRequired'),\r\n                        submitColour: '#da1e28'\r\n                    })\r\n                }\r\n            }).catch(error => {\r\n                this.setState({\r\n                    submitMsg: i18n.t('submitMessages.error'),\r\n                    submitColour: '#da1e28'\r\n                })\r\n            });\r\n        }\r\n    };\r\n\r\n    async fetchProjectSubscription(projectId) {\r\n        return await apiGetProjectSubscriptions(this.props.serviceUrl, projectId);\r\n    }\r\n\r\n    async fetchProjects() {\r\n        const { t, keycloak } = this.props;\r\n        var authenticated = keycloak.initialized && keycloak.authenticated;\r\n    \r\n        if (authenticated) {\r\n            if (hasKeycloakClientRole('ROLE_ADMIN') || hasKeycloakClientRole('ROLE_SUPPORT')) {\r\n                var projects = await apiAdminProjectsGet(this.props.serviceUrl)\r\n                this.setState({\r\n                    projects: projects.data\r\n                })\r\n            }\r\n            else if (hasKeycloakClientRole('ROLE_CUSTOMER') || hasKeycloakClientRole('ROLE_PARTNER')) {\r\n                var projects = await apiMyProjectsGet(this.props.serviceUrl)\r\n                this.setState({\r\n                    projects: projects.data\r\n                })\r\n            }\r\n        }\r\n\r\n        this.render();\r\n    }\r\n\r\n    async createTicket() {\r\n        const { t, keycloak } = this.props;\r\n        var authenticated = keycloak.initialized && keycloak.authenticated;\r\n    \r\n        if (authenticated) {\r\n            const ticket = {\r\n                systemId: this.state.project.systemId,\r\n                type: this.state.type,\r\n                description: this.state.description,\r\n                priority: this.state.priority,\r\n                status: 'To Do',\r\n                // these dates are just placeholder to validate the POST request (date will be updated in the backend)\r\n                createDate: '2021-02-22T14:14:09-05:00',\r\n                updateDate: '2021-02-22T14:14:09-05:00'\r\n            }\r\n            return await apiJiraTicketPost(this.props.serviceUrl, this.state.ticketingSystem.systemId, this.state.project.systemId, ticket);\r\n            //const addedTicket = await apiAddTicketToProject(this.props.serviceUrl, this.state.project.id, result.data.id);\r\n        }\r\n    }\r\n\r\n    async getTicketingSystem() {\r\n        if (hasKeycloakClientRole('ROLE_ADMIN') || hasKeycloakClientRole('ROLE_SUPPORT') || hasKeycloakClientRole('ROLE_CUSTOMER') || hasKeycloakClientRole('ROLE_PARTNER')) {\r\n            const ticketingSystems = await apiTicketingSystemsGet(this.props.serviceUrl);\r\n            const currentTicketingSystem = ticketingSystems.data[ticketingSystems.data.length-1]\r\n            this.setState({\r\n                ticketingSystem: currentTicketingSystem\r\n            })\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n        if (authenticated) {\r\n            this.fetchProjects();\r\n            this.getTicketingSystem();\r\n            this.setState({\r\n                loading: false\r\n            });\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n      \r\n        const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n      \r\n        if (authenticated && changedAuth) {\r\n            this.fetchProjects();\r\n            this.getTicketingSystem();\r\n            this.setState({\r\n                loading: false\r\n              });\r\n        }\r\n    }\r\n        \r\n    render() {\r\n        if (!this.state.loading) {\r\n            if (hasKeycloakClientRole('ROLE_ADMIN') || hasKeycloakClientRole('ROLE_SUPPORT') || hasKeycloakClientRole('ROLE_CUSTOMER') || hasKeycloakClientRole('ROLE_PARTNER')) {\r\n                return (\r\n                    <div>\r\n                        {hasKeycloakClientRole('ROLE_ADMIN') ? \r\n                            <h3 className=\"pageTitle\">{i18n.t('adminDashboard.adminTitle')}</h3> : \r\n                        hasKeycloakClientRole('ROLE_SUPPORT') ? \r\n                            <h3 className=\"pageTitle\">{i18n.t('adminDashboard.supportTitle')}</h3> : \r\n                        hasKeycloakClientRole('ROLE_CUSTOMER') ? \r\n                            <h3 className=\"pageTitle\">{i18n.t('adminDashboard.customerTitle')}</h3> : \r\n                        hasKeycloakClientRole('ROLE_PARTNER') ? \r\n                            <h3 className=\"pageTitle\">{i18n.t('adminDashboard.partnerTitle')}</h3> : \r\n                        null}\r\n                        <div className=\"form-container\">\r\n                            <p style={{color: this.state.submitColour}}>{this.state.submitMsg}</p>\r\n                            <Form onSubmit={this.handleFormSubmit}>\r\n                                <div className=\"form-desc\">\r\n                                    <h4>{i18n.t('supportTicketForm.formTitle')}</h4>\r\n                                    <p>{i18n.t('supportTicketForm.desc')}</p>\r\n                                </div>\r\n                                <div className=\"bx--grid\">\r\n                                    <div className=\"bx--row\">\r\n                                        <div className=\"bx--col\">\r\n                                            <Select \r\n                                                name=\"project\" \r\n                                                labelText={i18n.t('supportTicketForm.selectProject') + \" *\"} \r\n                                                value={JSON.stringify(this.state.project)} \r\n                                                onChange={this.handleChanges}\r\n                                                invalidText={i18n.t('validation.invalid.required')}\r\n                                                invalid={this.state.invalid['project']} \r\n                                            >\r\n                                                <SelectItem\r\n                                                    text={i18n.t('supportTicketForm.select')}\r\n                                                    value=\"\"\r\n                                                />\r\n                                                {Object.keys(this.state.projects).length !== 0 ? this.state.projects.map((project, i) => {\r\n                                                        return (\r\n                                                            <SelectItem key={i} text={project.name} value={JSON.stringify(project)}>{project.name}</SelectItem>\r\n                                                        )\r\n                                                }) : null}\r\n                                            </Select>\r\n                                            <Select \r\n                                                name=\"type\" \r\n                                                labelText={i18n.t('supportTicketForm.type') + \" *\"} \r\n                                                value={this.state.type} \r\n                                                onChange={this.handleChanges}\r\n                                                invalidText={i18n.t('validation.invalid.required')}\r\n                                                invalid={this.state.invalid['type']} \r\n                                            >\r\n                                                <SelectItem\r\n                                                    text={i18n.t('supportTicketForm.select')}\r\n                                                    value=\"\"\r\n                                                />\r\n                                                {this.types.map((type, i) => (\r\n                                                    <SelectItem key={i} text={type} value={type}>{type}</SelectItem>\r\n                                                ))}\r\n                                            </Select>\r\n                                            <Select \r\n                                                name=\"priority\" \r\n                                                labelText={i18n.t('supportTicketForm.priority') + \" *\"} \r\n                                                value={this.state.priority}\r\n                                                onChange={this.handleChanges}\r\n                                                invalidText={i18n.t('validation.invalid.required')}\r\n                                                invalid={this.state.invalid['priority']} \r\n                                            >\r\n                                                <SelectItem\r\n                                                    text={i18n.t('supportTicketForm.select')}\r\n                                                    value=\"\"\r\n                                                />\r\n                                                {this.priorities.map((priority, i) => (\r\n                                                    <SelectItem key={i} text={priority} value={priority}>{priority}</SelectItem>\r\n                                                ))}\r\n                                            </Select>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"bx--row\">\r\n                                        <div className=\"bx--col\">\r\n                                            <TextArea \r\n                                                labelText={i18n.t('supportTicketForm.ticketDescription') + \" *\"} \r\n                                                placeholder={i18n.t('supportTicketForm.addticketDescription')} \r\n                                                name=\"description\" \r\n                                                value={this.state.description} \r\n                                                onChange={this.handleChanges}  \r\n                                                invalidText={i18n.t('validation.invalid.required')}\r\n                                                invalid={this.state.invalid['description']} \r\n                                            />\r\n                                            <Button kind=\"primary\" tabIndex={0} type=\"submit\" > {i18n.t('buttons.submit')}  </Button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </Form>\r\n                        </div>\r\n                    </div>    \r\n                );\r\n            }\r\n            else {\r\n                return(<p>Unathorized</p>)\r\n            }\r\n        }\r\n        else {\r\n            return(null)\r\n        }\r\n    }\r\n}\r\n\r\nexport default withKeycloak(OpenTicket);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport OpenTicket from '../components/Forms/openTicket';\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\nimport './dashboard.css'\r\n\r\nimport {\r\n  subscribeToWidgetEvent\r\n} from '../helpers/widgetEvents';\r\nimport {\r\n  KEYCLOAK_EVENT_TYPE,\r\n} from '../custom-elements/widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window &&\r\n    window.entando &&\r\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\nconst ATTRIBUTES = {\r\n  hidden: 'hidden',\r\n  locale: 'locale',\r\n  paginationMode: 'pagination-mode',\r\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n  serviceUrl: 'service-url',\r\n};\r\n\r\n\r\nclass FormsOpenTicketElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    \r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    //retargetEvents(shadowRoot);\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <OpenTicket serviceUrl={serviceUrl}/>\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.define('forms-openticket-widget', FormsOpenTicketElement);\r\n\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n \r\nconst Navigation = () => {\r\n    return (\r\n       <ul id='navigation'>\r\n          <li><NavLink to=\"/\">Home</NavLink></li>\r\n          <li><NavLink to=\"/subscription-details\">Subscription Details</NavLink></li>\r\n          <li><NavLink to=\"/subscription\">New or Renew Subscription</NavLink></li>\r\n          <li><NavLink to=\"/service-ticket\">Open Service Ticket</NavLink></li>\r\n          <li><NavLink to=\"/enhancement\">Request for Enhancement Process</NavLink></li>\r\n          <li><NavLink to=\"/manage-users\">Manage Users</NavLink></li>\r\n          <li><NavLink to=\"/configuration-settings\">Configuration Settings</NavLink></li>\r\n      </ul>\r\n    );\r\n}\r\n \r\nexport default Navigation;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Navigation from '../components/Navigation/Navigation';\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\nimport './dashboard.css'\r\n\r\nimport {\r\n  subscribeToWidgetEvent\r\n} from '../helpers/widgetEvents';\r\nimport {\r\n  KEYCLOAK_EVENT_TYPE,\r\n} from '../custom-elements/widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window &&\r\n    window.entando &&\r\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\nconst ATTRIBUTES = {\r\n  hidden: 'hidden',\r\n  locale: 'locale',\r\n  paginationMode: 'pagination-mode',\r\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n  serviceUrl: 'service-url',\r\n};\r\n\r\n\r\nclass NavigationElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    \r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    //retargetEvents(shadowRoot);\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <Navigation serviceUrl={serviceUrl}/>\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.define('navigation-widget', NavigationElement);\r\n","import React, {Component} from 'react';\r\nimport { Form, TextInput, TextArea, Button } from 'carbon-components-react';\r\nimport i18n from '../../i18n';\r\n\r\nexport default class EnhancementRequest extends Component {\r\n    state = {\r\n        ticketNo: '',\r\n        customerName: '',\r\n        projectName: '',\r\n        openedBy: '',\r\n        priority: '',\r\n        partnerName: '',\r\n        enhancementDescription: '',\r\n        invalid: {}\r\n    };\r\n\r\n    handleValidation() {\r\n        let invalid = {};\r\n        let formIsValid = true;\r\n\r\n        if(this.state.ticketNo === ''){\r\n          formIsValid = false;\r\n          invalid['ticketNo'] = true;\r\n        }\r\n\r\n        if(this.state.customerName === ''){\r\n            formIsValid = false;\r\n            invalid['customerName'] = true;\r\n        }\r\n\r\n        if(this.state.projectName === ''){\r\n            formIsValid = false;\r\n            invalid['projectName'] = true;\r\n        }\r\n\r\n        if(this.state.openedBy === ''){\r\n            formIsValid = false;\r\n            invalid['openedBy'] = true;\r\n        }\r\n\r\n        if(this.state.partnerName === ''){\r\n            formIsValid = false;\r\n            invalid['partnerName'] = true;\r\n        }\r\n\r\n        if(this.state.enhancementDescription === ''){\r\n            formIsValid = false;\r\n            invalid['enhancementDescription'] = true;\r\n        }\r\n\r\n        this.setState({invalid: invalid});\r\n        return formIsValid;\r\n    }\r\n\r\n    handleChanges = (e) => {\r\n        const input = e.target;\r\n        const name = input.name;\r\n        const value = input.value;\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    handleFormSubmit = (event) => {\r\n        console.log(this.state.ticketNo)\r\n        event.preventDefault();\r\n\r\n        const formIsValid = this.handleValidation();\r\n\r\n        if (formIsValid) {\r\n            // placeholder\r\n        }\r\n    };\r\n      \r\n    render() {\r\n        return (\r\n            <div>\r\n                <h3 className=\"pageTitle\">{i18n.t('enhancementForm.title')}</h3>\r\n                <div className=\"form-container\">\r\n                    <Form onSubmit={this.handleFormSubmit}>\r\n                        <div className=\"form-desc\">\r\n                            <h4>{i18n.t('enhancementForm.formTitle')}</h4>\r\n                            <p>{i18n.t('enhancementForm.desc')}</p>\r\n                        </div>\r\n                        <div className=\"bx--grid\">\r\n                            <div className=\"bx--row\">\r\n                                <div className=\"bx--col\">\r\n                                    <TextInput \r\n                                        name=\"ticketNo\" \r\n                                        labelText={i18n.t('enhancementForm.ticketNumber')} \r\n                                        value={this.state.ticketNo} \r\n                                        onChange={this.handleChanges}\r\n                                        invalidText={i18n.t('validation.invalid.required')}\r\n                                        invalid={this.state.invalid['ticketNo']} \r\n                                    />\r\n                                    <TextInput \r\n                                        name=\"projectName\" \r\n                                        labelText={i18n.t('enhancementForm.projectName')} \r\n                                        value={this.state.projectName} \r\n                                        onChange={this.handleChanges}\r\n                                        invalidText={i18n.t('validation.invalid.required')}\r\n                                        invalid={this.state.invalid['projectName']} \r\n                                    />\r\n                                    <TextInput \r\n                                        name=\"priority\" \r\n                                        labelText={i18n.t('enhancementForm.priority')} \r\n                                        value={this.state.priority} \r\n                                        onChange={this.handleChanges}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"bx--col\">\r\n                                    <TextInput \r\n                                        name=\"customerName\" \r\n                                        labelText={i18n.t('enhancementForm.customerName')} \r\n                                        value={this.state.customerName} \r\n                                        onChange={this.handleChanges}\r\n                                        invalidText={i18n.t('validation.invalid.required')}\r\n                                        invalid={this.state.invalid['customerName']} \r\n                                    />\r\n                                    <TextInput \r\n                                        name=\"openedBy\" \r\n                                        labelText={i18n.t('enhancementForm.ticketOpenedBy')} \r\n                                        value={this.state.openedBy} \r\n                                        onChange={this.handleChanges}\r\n                                        invalidText={i18n.t('validation.invalid.required')}\r\n                                        invalid={this.state.invalid['openedBy']} \r\n                                    />\r\n                                    <TextInput \r\n                                        name=\"partnerName\" \r\n                                        labelText={i18n.t('enhancementForm.partnerName')} \r\n                                        value={this.state.partnerName} \r\n                                        onChange={this.handleChanges}\r\n                                        invalidText={i18n.t('validation.invalid.required')}\r\n                                        invalid={this.state.invalid['partnerName']} \r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"bx--row\">\r\n                                <div className=\"bx--col\">\r\n                                    <TextArea \r\n                                        labelText={i18n.t('enhancementForm.enhancementDescription')} \r\n                                        placeholder={i18n.t('enhancementForm.addenhancementDescription')} \r\n                                        name=\"enhancementDescription\"  \r\n                                        value={this.state.enhancementDescription} \r\n                                        onChange={this.handleChanges}  \r\n                                        invalidText={i18n.t('validation.invalid.required')}\r\n                                        invalid={this.state.invalid['enhancementDescription']} \r\n                                    />\r\n                                    <Button kind=\"primary\" tabIndex={0} type=\"submit\"> {i18n.t('buttons.submit')}  </Button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Form>\r\n                </div>\r\n            </div>    \r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport EnhancementRequest from '../components/Forms/enhancementRequest';\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\nimport './dashboard.css'\r\n\r\nimport {\r\n  subscribeToWidgetEvent\r\n} from '../helpers/widgetEvents';\r\nimport {\r\n  KEYCLOAK_EVENT_TYPE,\r\n} from '../custom-elements/widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window &&\r\n    window.entando &&\r\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\nconst ATTRIBUTES = {\r\n  hidden: 'hidden',\r\n  locale: 'locale',\r\n  paginationMode: 'pagination-mode',\r\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n  serviceUrl: 'service-url',\r\n};\r\n\r\n\r\nclass FormsEnhancementRequestElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    \r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    //retargetEvents(shadowRoot);\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <EnhancementRequest serviceUrl={serviceUrl}/>\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.define('forms-enhancement-request-widget', FormsEnhancementRequestElement);\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport retargetEvents from 'react-shadow-dom-retarget-events';\r\nimport '../index.scss'\r\nimport './dashboard.css'\r\nimport * as Locale from '../i18n';\r\n\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\nimport App from '../components/App';\r\n\r\nimport {\r\n  subscribeToWidgetEvent\r\n} from '../helpers/widgetEvents';\r\nimport {\r\n  KEYCLOAK_EVENT_TYPE,\r\n} from '../custom-elements/widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window &&\r\n    window.entando &&\r\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\nconst ATTRIBUTES = {\r\n  hidden: 'hidden',\r\n  locale: 'locale',\r\n  paginationMode: 'pagination-mode',\r\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n  serviceUrl: 'service-url',\r\n  locale: 'locale'\r\n};\r\n\r\n\r\nclass AppElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    \r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    //retargetEvents(shadowRoot);\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n    const locale = this.getAttribute(ATTRIBUTES.locale) || '';\r\n    Locale.setLocale(locale);\r\n\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <App serviceUrl={serviceUrl} locale={locale} />\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.define('app-element', AppElement);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport TicketList from '../components/SubscriptionDetails/TicketList';\r\nimport '../index.scss'\r\n//import './dashboard.css'\r\n\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\n\r\nimport {\r\n  subscribeToWidgetEvent\r\n} from '../helpers/widgetEvents';\r\nimport {\r\n  KEYCLOAK_EVENT_TYPE,\r\n} from '../custom-elements/widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window &&\r\n    window.entando &&\r\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\nconst ATTRIBUTES = {\r\n  hidden: 'hidden',\r\n  locale: 'locale',\r\n  paginationMode: 'pagination-mode',\r\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n  serviceUrl: 'service-url',\r\n};\r\n\r\nclass TicketListCustomerElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    \r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    //retargetEvents(shadowRoot);\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <TicketList serviceUrl={serviceUrl}/>\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.define('ticket-list-widget', TicketListCustomerElement);\r\n\r\n","import React, { Component } from 'react';\r\nimport i18n from '../../../i18n';\r\nimport { Form, TextInput, Select, SelectItem, Button} from 'carbon-components-react';\r\nimport { apiTicketingSystemPost, apiTicketingSystemsGet, apiTicketingSystemPut, apiTicketingSystemDelete } from '../../../api/ticketingsystem';\r\nimport { hasKeycloakClientRole } from '../../../api/helpers';\r\nimport withKeycloak from '../../../auth/withKeycloak';\r\n\r\nclass TicketingSystem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            ticketingSystem: '',\r\n            ticketingSystemType:'',\r\n            url: '',\r\n            serviceAccount: '',\r\n            serviceAccount: '',\r\n            systemId: '',\r\n            submitMsg: '',\r\n            submitColour: 'black'\r\n        }\r\n    }\r\n    \r\n    handleChanges = (e) => {\r\n        const input = e.target;\r\n        const name = input.name;\r\n        const value = input.value;\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    async createTicketingSystem() {\r\n        const ticketingSystem = {\r\n            url: this.state.url,\r\n            serviceAccount: this.state.serviceAccount,\r\n            serviceAccountSecret: this.state.serviceAccountSecret,\r\n            systemId: this.state.systemId\r\n        }\r\n        return await apiTicketingSystemPost(this.props.serviceUrl, ticketingSystem);\r\n    }\r\n\r\n    async updateTicketingSystem() {\r\n        const ticketingSystem = {\r\n            id: this.state.ticketingSystem.id,\r\n            url: this.state.url,\r\n            serviceAccount: this.state.serviceAccount,\r\n            serviceAccountSecret: this.state.serviceAccountSecret,\r\n            systemId: this.state.systemId\r\n        }\r\n        return await apiTicketingSystemPut(this.props.serviceUrl, ticketingSystem);\r\n    }\r\n\r\n    async getTicketingSystems() {\r\n        const ticketingSystems = await apiTicketingSystemsGet(this.props.serviceUrl)\r\n        if (ticketingSystems.data.length > 0) {\r\n            const currentTicketingSystem = ticketingSystems.data[ticketingSystems.data.length-1]\r\n            \r\n            this.setState({\r\n                ticketingSystem: currentTicketingSystem,\r\n                url: currentTicketingSystem.url,\r\n                serviceAccount: currentTicketingSystem.serviceAccount,\r\n                serviceAccountSecret: currentTicketingSystem.serviceAccountSecret,\r\n                systemId: currentTicketingSystem.systemId\r\n            })\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n        if (authenticated) {\r\n            this.getTicketingSystems();\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n      \r\n        const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n      \r\n        if (authenticated && changedAuth) {\r\n            this.getTicketingSystems();\r\n        }\r\n    }\r\n\r\n    async deleteTicketingSystem() {\r\n        return await apiTicketingSystemDelete(this.props.serviceUrl, this.state.ticketingSystem.id);\r\n    }\r\n\r\n    handleDelete(e) {\r\n        if (window.confirm(\"Are you sure you want to delete this ticketing system?\")) {\r\n            this.deleteTicketingSystem().then(result => {\r\n                this.setState({\r\n                    submitMsg: i18n.t('submitMessages.deleted'),\r\n                    submitColour: '#24a148'\r\n                })\r\n            }).catch(err => {\r\n                this.setState({\r\n                    submitMsg: i18n.t('submitMessages.error'),\r\n                    submitColour: '#da1e28'\r\n                })\r\n            });\r\n        }\r\n    }\r\n\r\n    handleFormSubmit = (event) => {\r\n        event.preventDefault();\r\n        if (this.state.ticketingSystem === '') {\r\n            this.createTicketingSystem().then(result => {\r\n                this.setState({\r\n                    submitMsg: i18n.t('submitMessages.created'),\r\n                    submitColour: '#24a148'\r\n                })\r\n            }).catch(err => {\r\n                this.setState({\r\n                    submitMsg: i18n.t('submitMessages.error'),\r\n                    submitColour: '#da1e28'\r\n                })\r\n            });\r\n        }\r\n        else {\r\n            this.updateTicketingSystem().then(result => {\r\n                this.setState({\r\n                    submitMsg: i18n.t('submitMessages.updated'),\r\n                    submitColour: '#24a148'\r\n                })\r\n            }).catch(err => {\r\n                this.setState({\r\n                    submitMsg: i18n.t('submitMessages.error'),\r\n                    submitColour: '#da1e28'\r\n                })\r\n            });\r\n        }\r\n    };\r\n\r\n    render() { \r\n        const ticketingSystem = ['Jira', 'Other'];\r\n        if (hasKeycloakClientRole('ROLE_ADMIN')) {\r\n            return (\r\n                <div className=\"cp-form\">\r\n                    <p style={{color: this.state.submitColour}}>{this.state.submitMsg}</p>\r\n                    <Form onSubmit={this.handleFormSubmit}>\r\n                        <div className=\"bx--grid\">\r\n                            <div className=\"bx--row\">\r\n                                <div className=\"bx--col\">\r\n                                    <Select defaultValue=\"ticketing-system\" name=\"ticketingSystemType\" labelText={i18n.t('adminConfig.integrationTicketingSystem.selectBackendTicketingSystem')} value={this.state.ticketingSystemType} onChange={this.handleChanges}>\r\n                                        <SelectItem\r\n                                            text={i18n.t('adminConfig.integrationTicketingSystem.select')}\r\n                                            value=\"ticketing-system\"\r\n                                        />\r\n                                        {ticketingSystem.map((ticketingSystem, i) => <SelectItem key={i} text={ticketingSystem} value={ticketingSystem.toLowerCase()}>{ticketingSystem}</SelectItem>)}\r\n                                    </Select>\r\n                                    <TextInput name=\"serviceAccount\" labelText={i18n.t('adminConfig.integrationTicketingSystem.userName')} value={this.state.serviceAccount} onChange={this.handleChanges}/>\r\n                                    <TextInput name=\"systemId\" labelText={i18n.t('adminConfig.integrationTicketingSystem.projectName')} value={this.state.systemId} onChange={this.handleChanges}/>\r\n                                </div>\r\n                                <div className=\"bx--col\">\r\n                                    <TextInput name=\"url\" labelText={i18n.t('adminConfig.integrationTicketingSystem.url')} value={this.state.url} onChange={this.handleChanges}/>\r\n                                    <TextInput name=\"serviceAccountSecret\" type=\"password\" labelText={i18n.t('adminConfig.integrationTicketingSystem.password')} value={this.state.serviceAccountSecret} onChange={this.handleChanges}/>\r\n                                </div>\r\n                            </div>\r\n                            <Button kind=\"primary\" tabIndex={0} type=\"submit\"> {i18n.t('buttons.submit')}  </Button>\r\n                            {this.state.ticketingSystem ?\r\n                                <Button kind=\"danger\" onClick={() => this.handleDelete()}> Delete </Button> : null\r\n                            }\r\n                        </div>\r\n                    </Form>\r\n                </div>\r\n            );\r\n        }\r\n        // Unauthorized\r\n        else {\r\n            return(null)\r\n        }\r\n    }\r\n}\r\n \r\nexport default withKeycloak(TicketingSystem);","import React, { Component } from 'react';\r\nimport i18n from '../../i18n';\r\nimport { ModalWrapper, Form, TextInput, DatePicker, DatePickerInput } from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport { apiProductVersionPost } from '../../api/productVersion';\r\n\r\nclass AddProductVersionModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      name: '',\r\n      startDate: '',\r\n      endDate: '',\r\n      invalid: {},\r\n      submitMsg: '',\r\n      submitColour: 'black'\r\n    };\r\n\r\n    this.baseState = this.state\r\n  }\r\n\r\n  handleValidation() {\r\n    let invalid = {};\r\n    let formIsValid = true;\r\n\r\n    //name\r\n    if (this.state.name === '') {\r\n      formIsValid = false;\r\n      invalid['name'] = true;\r\n    }\r\n\r\n    if (typeof this.state.startDate !== 'undefined') {\r\n      if (!this.state.startDate.match(/^(0[1-9]|1[0-2])\\/(0[1-9]|1\\d|2\\d|3[01])\\/(19|20)\\d{2}$/)) {\r\n        formIsValid = false;\r\n        invalid['startDate'] = true;\r\n      }\r\n    }\r\n\r\n    if (typeof this.state.endDate !== 'undefined') {\r\n      if (!this.state.endDate.match(/^(0[1-9]|1[0-2])\\/(0[1-9]|1\\d|2\\d|3[01])\\/(19|20)\\d{2}$/)) {\r\n        formIsValid = false;\r\n        invalid['endDate'] = true;\r\n      }\r\n    }\r\n\r\n    this.setState({ invalid: invalid });\r\n    return formIsValid;\r\n  }\r\n\r\n  handleChanges = e => {\r\n    const input = e.target;\r\n    const name = input.name;\r\n    const value = input.value;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  async addProductVersion() {\r\n    const { t, keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n    if (authenticated) {\r\n      return await apiProductVersionPost(this.props.serviceUrl, this.state);\r\n    }\r\n  }\r\n\r\n  handleFormSubmit = e => {\r\n    const formIsValid = this.handleValidation();\r\n\r\n    if (formIsValid) {\r\n      this.addProductVersion().then(result => {\r\n        this.setState({\r\n            submitMsg: i18n.t('submitMessages.added'),\r\n            submitColour: '#24a148'\r\n        })\r\n      }).catch(err => {\r\n          this.setState({\r\n              submitMsg: i18n.t('submitMessages.error'),\r\n              submitColour: '#da1e28'\r\n          })\r\n      });\r\n    }\r\n  };\r\n\r\n  clearValues = () => {\r\n    const customerModalElement = document.querySelector('#modal-form-product-version');\r\n    if(!customerModalElement.className.includes(\"is-visible\")) {\r\n      this.setState(this.baseState);\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const modalOpenButton = document.querySelector('.add-product-version-button');\r\n    modalOpenButton.addEventListener(\"click\", this.clearValues, false);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <ModalWrapper\r\n        buttonTriggerText={i18n.t('buttons.addProductVersion')}\r\n        modalHeading={i18n.t('adminDashboard.addProductVersion.title')}\r\n        buttonTriggerClassName=\"add-product-version bx--btn bx--btn--tertiary add-product-version-button\"\r\n        className=\"modal-form\"\r\n        id=\"modal-form-product-version\"\r\n        handleSubmit={this.handleFormSubmit}\r\n        modalLabel={<p style={{color: this.state.submitColour}}>{this.state.submitMsg}</p>}\r\n      >\r\n        <div className=\"form-container\">\r\n          <p> {i18n.t('adminDashboard.addProductVersion.desc')} </p>\r\n          <Form onSubmit={this.handleFormSubmit}>\r\n            <TextInput\r\n              name=\"name\"\r\n              labelText={i18n.t('adminDashboard.addProductVersion.productVersion')}\r\n              value={this.state.name}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.required')}\r\n              invalid={this.state.invalid['name']}\r\n            />\r\n            <DatePicker dateFormat=\"m/d/Y\" datePickerType=\"simple\">\r\n              <DatePickerInput\r\n                name=\"startDate\"\r\n                placeholder=\"mm/dd/yyyy\"\r\n                labelText={i18n.t('adminDashboard.addProductVersion.productVersionStartDate')}\r\n                value={this.state.startDate}\r\n                onChange={this.handleChanges}\r\n                type=\"text\"\r\n                invalidText={i18n.t('validation.invalid.date')}\r\n                invalid={this.state.invalid['startDate']}\r\n              />\r\n            </DatePicker>\r\n            <DatePicker dateFormat=\"m/d/Y\" datePickerType=\"simple\">\r\n              <DatePickerInput\r\n                name=\"endDate\"\r\n                placeholder=\"mm/dd/yyyy\"\r\n                labelText={i18n.t('adminDashboard.addProductVersion.productVersionEndDate')}\r\n                value={this.state.endDate}\r\n                onChange={this.handleChanges}\r\n                type=\"text\"\r\n                invalidText={i18n.t('validation.invalid.date')}\r\n                invalid={this.state.invalid['endDate']}\r\n              />\r\n            </DatePicker>\r\n          </Form>\r\n        </div>\r\n      </ModalWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withKeycloak(AddProductVersionModal);\r\n","import React, { Component } from 'react';\r\nimport i18n from '../../../i18n';\r\nimport {\r\n  DataTable,\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableHeader,\r\n  TableBody,\r\n  TableCell,\r\n  ToggleSmall,\r\n  Button\r\n} from 'carbon-components-react';\r\nimport { SubtractAlt16 } from '@carbon/icons-react';\r\nimport { apiProductVersionsGet, apiUpdateProductVersionsStatus } from '../../../api/productVersion';\r\nimport withKeycloak from '../../../auth/withKeycloak';\r\nimport AddProductVersionModal from '../AddProductVersionModal';\r\nimport { hasKeycloakClientRole } from '../../../api/helpers';\r\n\r\nclass ProductVersion extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      data: ''\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (hasKeycloakClientRole('ROLE_ADMIN') || hasKeycloakClientRole('ROLE_SUPPORT')) {\r\n      this.getProductVersions();\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n    const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n\r\n    if (authenticated && changedAuth) {\r\n      if (hasKeycloakClientRole('ROLE_ADMIN') || hasKeycloakClientRole('ROLE_SUPPORT')) {\r\n        this.getProductVersions();\r\n      }\r\n    }\r\n  }\r\n\r\n  async getProductVersions() {\r\n    const { t, keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n    if (authenticated) {\r\n      const productVersions = await apiProductVersionsGet(this.props.serviceUrl);\r\n\r\n      this.setState({\r\n        data: productVersions\r\n      });\r\n    }\r\n  }\r\n\r\n  async handleToggleChange(id) {\r\n    await apiUpdateProductVersionsStatus(this.props.serviceUrl, id);\r\n  }\r\n\r\n  render() {\r\n    if (hasKeycloakClientRole('ROLE_ADMIN') || hasKeycloakClientRole('ROLE_SUPPORT')) {\r\n      return (\r\n        <div>\r\n          <DataTable rows={rowData} headers={headerData}>\r\n            {({ rows, headers, getHeaderProps, getTableProps }) => (\r\n              <TableContainer>\r\n                <Table {...getTableProps()}>\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      {headers.map(header => (\r\n                        <TableHeader {...getHeaderProps({ header })}>{header.header}</TableHeader>\r\n                      ))}\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {Object.keys(this.state.data).length !== 0\r\n                      ? this.state.data.data.map((productVersion, index) => (\r\n                          <TableRow key={index}>\r\n                            <TableCell>{productVersion.name}</TableCell>\r\n                            <TableCell>\r\n                              <ToggleSmall\r\n                                onClick={() => this.handleToggleChange(productVersion.id)}\r\n                                aria-label=\"toggle button\"\r\n                                id={productVersion.id}\r\n                                defaultToggled={productVersion.status ? true : false}\r\n                              />\r\n                            </TableCell>\r\n                            <TableCell>{productVersion.startDate}</TableCell>\r\n                            <TableCell>{productVersion.endDate}</TableCell>\r\n                          </TableRow>\r\n                        ))\r\n                      : null}\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            )}\r\n          </DataTable>\r\n          <br />\r\n          <AddProductVersionModal serviceUrl={this.props.serviceUrl} />\r\n        </div>\r\n      );\r\n    }\r\n    else {\r\n      return(<p>You are not authorized to view this</p>)\r\n    }\r\n  }\r\n}\r\n\r\nconst headerData = [\r\n  {\r\n    header: i18n.t('adminConfig.manageProductVersion.entandoVersion'),\r\n    key: 'entVersion'\r\n  },\r\n  {\r\n    header: i18n.t('adminConfig.manageProductVersion.status'),\r\n    key: 'status'\r\n  },\r\n  {\r\n    header: i18n.t('adminConfig.manageProductVersion.startDate'),\r\n    key: 'startDate'\r\n  },\r\n  {\r\n    header: i18n.t('adminConfig.manageProductVersion.supportEndDate'),\r\n    key: 'endDate'\r\n  }\r\n];\r\n\r\nconst rowData = [\r\n  {\r\n    id: 'a',\r\n    entVersion: '5.2',\r\n    status: <ToggleSmall aria-label=\"toggle button\" defaultToggled id=\"status-1\" />,\r\n    startDate: 'April, 2018',\r\n    endDate: 'April, 2022'\r\n  },\r\n  {\r\n    id: 'b',\r\n    entVersion: '6.3',\r\n    status: <ToggleSmall aria-label=\"toggle button\" id=\"status-2\" />,\r\n    startDate: 'Jile, 2019',\r\n    endDate: 'April, 2023'\r\n  },\r\n  {\r\n    id: 'c',\r\n    entVersion: '6.2',\r\n    status: <ToggleSmall aria-label=\"toggle button\" defaultToggled id=\"status-3\" />,\r\n    startDate: 'September, 2020',\r\n    endDate: 'April, 2024'\r\n  }\r\n];\r\n\r\nexport default withKeycloak(ProductVersion);\r\n","import React from 'react';\r\nimport i18n from '../../../i18n';\r\nimport { Accordion, AccordionItem, Tile } from 'carbon-components-react';\r\nimport TicketingSystem from './TicketingSystem';\r\nimport ProductVersion from './ProductVersion';\r\nimport { hasKeycloakClientRole } from '../../../api/helpers';\r\nimport withKeycloak from '../../../auth/withKeycloak';\r\n\r\nclass AdminConfiguration extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: true\r\n    }\r\n    this.adminConfig = [\r\n      {\r\n        label: (\r\n          <div>\r\n            <p className=\"title\">{i18n.t('adminConfig.integrationTicketingSystem.title')}</p>\r\n            <p className=\"desc\">{i18n.t('adminConfig.integrationTicketingSystem.desc')}</p>\r\n          </div>\r\n        ),\r\n        content: <TicketingSystem serviceUrl={this.props.serviceUrl} />\r\n      },\r\n      {\r\n        label: (\r\n          <div>\r\n            <p className=\"title\">{i18n.t('adminConfig.manageProductVersion.title')}</p>\r\n            <p className=\"desc\">{i18n.t('adminConfig.manageProductVersion.desc')}</p>\r\n          </div>\r\n        ),\r\n        content: <ProductVersion serviceUrl={this.props.serviceUrl} />\r\n      }\r\n    ];\r\n  }\r\n\r\ncomponentDidMount() {\r\n  const { keycloak } = this.props;\r\n  const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n  if (authenticated) {\r\n    this.setState({\r\n      loading: false\r\n    })\r\n  }\r\n}\r\n\r\ncomponentDidUpdate(prevProps) {\r\n  const { keycloak } = this.props;\r\n  const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n  const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n\r\n  if (authenticated && changedAuth) {\r\n    this.setState({\r\n      loading: false\r\n    });\r\n  }\r\n}\r\n\r\nrender() {\r\n  if (!this.state.loading) {\r\n    // Authorized\r\n    if (hasKeycloakClientRole('ROLE_ADMIN')) {\r\n      return(\r\n        <div>\r\n          <h3 className=\"pageTitle\">{i18n.t('adminDashboard.adminTitle')}</h3>\r\n          <div className=\"form-container\">\r\n            <Tile>\r\n              <p className=\"title\">{i18n.t('adminConfig.title')}</p>\r\n              <p class=\"desc\">{i18n.t('adminConfig.desc')}</p>\r\n            </Tile>\r\n            <Accordion>\r\n              {this.adminConfig.map((item, index) => (\r\n                <AccordionItem key={index.toString()} index={index} title={item.label} description={item.description}>\r\n                  <p>{item.content}</p>\r\n                </AccordionItem>\r\n              ))}\r\n            </Accordion>\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n    // Unauthorized\r\n    else {\r\n      return(<p>Unathorized</p>)\r\n    }\r\n  }\r\n  // Loading\r\n  else {\r\n    return(null)\r\n  }\r\n}\r\n\r\n}\r\nexport default withKeycloak(AdminConfiguration);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport AdminConfiguration from '../components/Admin/Configuration/AdminConfiguration';\r\nimport '../index.scss'\r\nimport './dashboard.css'\r\nimport * as Locale from '../i18n';\r\n\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\n\r\nimport {\r\n  subscribeToWidgetEvent\r\n} from '../helpers/widgetEvents';\r\nimport {\r\n  KEYCLOAK_EVENT_TYPE,\r\n} from './widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window &&\r\n    window.entando &&\r\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\nconst ATTRIBUTES = {\r\n  hidden: 'hidden',\r\n  locale: 'locale',\r\n  paginationMode: 'pagination-mode',\r\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n  serviceUrl: 'service-url',\r\n  locale: 'locale'\r\n};\r\n\r\nclass AdminConfigurationElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    \r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    //retargetEvents(shadowRoot);\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n    const locale = this.getAttribute(ATTRIBUTES.locale) || '';\r\n    Locale.setLocale(locale);\r\n\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <AdminConfiguration serviceUrl={serviceUrl}/>\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.define('admin-configuration-widget', AdminConfigurationElement);\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport OpenTicket from '../components/Forms/openTicket';\r\nimport '../index.scss'\r\nimport './dashboard.css'\r\nimport * as Locale from '../i18n';\r\n\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\n\r\nimport {\r\n  subscribeToWidgetEvent\r\n} from '../helpers/widgetEvents';\r\nimport {\r\n  KEYCLOAK_EVENT_TYPE,\r\n} from '../custom-elements/widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window &&\r\n    window.entando &&\r\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\nconst ATTRIBUTES = {\r\n  hidden: 'hidden',\r\n  locale: 'locale',\r\n  paginationMode: 'pagination-mode',\r\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n  serviceUrl: 'service-url',\r\n  locale: 'locale'\r\n};\r\n\r\nclass OpenTicketElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    \r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    //retargetEvents(shadowRoot);\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n    const locale = this.getAttribute(ATTRIBUTES.locale) || '';\r\n    Locale.setLocale(locale);\r\n\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <OpenTicket serviceUrl={serviceUrl}/>\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.define('open-ticket-widget', OpenTicketElement);\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport ManageUser from '../components/Admin/ManageUser/ManageUser';\r\nimport '../index.scss'\r\nimport './dashboard.css'\r\nimport * as Locale from '../i18n';\r\n\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\n\r\nimport {\r\n  subscribeToWidgetEvent\r\n} from '../helpers/widgetEvents';\r\nimport {\r\n  KEYCLOAK_EVENT_TYPE,\r\n} from '../custom-elements/widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window &&\r\n    window.entando &&\r\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\nconst ATTRIBUTES = {\r\n  hidden: 'hidden',\r\n  locale: 'locale',\r\n  paginationMode: 'pagination-mode',\r\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n  serviceUrl: 'service-url',\r\n  locale: 'locale'\r\n};\r\n\r\nclass ManageUserElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    \r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    //retargetEvents(shadowRoot);\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n    const locale = this.getAttribute(ATTRIBUTES.locale) || '';\r\n    Locale.setLocale(locale);\r\n\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <ManageUser serviceUrl={serviceUrl}/>\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.define('manage-user-widget', ManageUserElement);\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport AssignUser from '../components/Admin/ManageUser/AssignUser';\r\nimport '../index.scss'\r\nimport './dashboard.css'\r\n\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\n\r\nimport {\r\n  subscribeToWidgetEvent\r\n} from '../helpers/widgetEvents';\r\nimport {\r\n  KEYCLOAK_EVENT_TYPE,\r\n} from '../custom-elements/widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window &&\r\n    window.entando &&\r\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\nconst ATTRIBUTES = {\r\n  hidden: 'hidden',\r\n  locale: 'locale',\r\n  paginationMode: 'pagination-mode',\r\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n  serviceUrl: 'service-url'\r\n};\r\n\r\nclass AssignUserElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    \r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    //retargetEvents(shadowRoot);\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n    \r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <AssignUser serviceUrl={serviceUrl} />\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.define('assign-user-widget', AssignUserElement);\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport DeleteUser from '../components/Admin/ManageUser/DeleteUser';\r\nimport '../index.scss'\r\nimport './dashboard.css'\r\n\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\n\r\nimport {\r\n  subscribeToWidgetEvent\r\n} from '../helpers/widgetEvents';\r\nimport {\r\n  KEYCLOAK_EVENT_TYPE,\r\n} from '../custom-elements/widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window &&\r\n    window.entando &&\r\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\nconst ATTRIBUTES = {\r\n  hidden: 'hidden',\r\n  locale: 'locale',\r\n  paginationMode: 'pagination-mode',\r\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n  serviceUrl: 'service-url',\r\n};\r\n\r\nclass DeleteUserElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    \r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    //retargetEvents(shadowRoot);\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n    \r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <DeleteUser serviceUrl={serviceUrl} />\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.define('delete-user-widget', DeleteUserElement);\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport TicketingSystem from '../components/Admin/Configuration/TicketingSystem';\r\nimport '../index.scss'\r\nimport './dashboard.css'\r\n\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\n\r\nimport {\r\n  subscribeToWidgetEvent\r\n} from '../helpers/widgetEvents';\r\nimport {\r\n  KEYCLOAK_EVENT_TYPE,\r\n} from './widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window &&\r\n    window.entando &&\r\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\nconst ATTRIBUTES = {\r\n  hidden: 'hidden',\r\n  locale: 'locale',\r\n  paginationMode: 'pagination-mode',\r\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n  serviceUrl: 'service-url',\r\n};\r\n\r\nclass TicketingSystemElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    \r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    //retargetEvents(shadowRoot);\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <TicketingSystem serviceUrl={serviceUrl}/>\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.define('ticketing-system-widget', TicketingSystemElement);\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport ProductVersion from '../components/Admin/Configuration/ProductVersion';\r\nimport '../index.scss'\r\nimport './dashboard.css'\r\n\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\n\r\nimport {\r\n  subscribeToWidgetEvent\r\n} from '../helpers/widgetEvents';\r\nimport {\r\n  KEYCLOAK_EVENT_TYPE,\r\n} from './widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window &&\r\n    window.entando &&\r\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\nconst ATTRIBUTES = {\r\n  hidden: 'hidden',\r\n  locale: 'locale',\r\n  paginationMode: 'pagination-mode',\r\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n  serviceUrl: 'service-url',\r\n};\r\n\r\nclass ProductVersionElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    \r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    //retargetEvents(shadowRoot);\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <ProductVersion serviceUrl={serviceUrl}/>\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.define('product-version-widget', ProductVersionElement);\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport SubsciptionForm from '../components/Forms/SubscriptionForm';\r\nimport '../index.scss'\r\nimport './dashboard.css'\r\nimport * as Locale from '../i18n';\r\n\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\n\r\nimport {\r\n  subscribeToWidgetEvent\r\n} from '../helpers/widgetEvents';\r\nimport {\r\n  KEYCLOAK_EVENT_TYPE,\r\n} from '../custom-elements/widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window &&\r\n    window.entando &&\r\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\nconst ATTRIBUTES = {\r\n  hidden: 'hidden',\r\n  locale: 'locale',\r\n  paginationMode: 'pagination-mode',\r\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n  serviceUrl: 'service-url',\r\n  locale: 'locale'\r\n};\r\n\r\nclass SubsciptionFormElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    \r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    //retargetEvents(shadowRoot);\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n    const locale = this.getAttribute(ATTRIBUTES.locale) || '';\r\n    Locale.setLocale(locale);\r\n\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <SubsciptionForm serviceUrl={serviceUrl}/>\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.define('subscription-form-widget', SubsciptionFormElement);\r\n\r\n"],"sourceRoot":""}