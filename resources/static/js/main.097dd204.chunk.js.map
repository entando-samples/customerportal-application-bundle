{"version":3,"sources":["i18n.js","auth/KeycloakContext.js","components/__types__/ref.js","auth/withKeycloak.js","api/helpers.js","api/customers.js","components/Admin/AddCustomerModal.js","api/partners.js","api/projects.js","components/Admin/AddPartnerModal.js","components/Admin/AddProjectModal.js","api/ticketingsystem.js","components/Admin/EditProjectModal.js","components/Admin/ManagePartnersModal.js","components/Admin/ProjectActionItems.js","api/subscriptions.js","components/Customer/CustomerDataTable.js","components/Customer/CustomerDetails.js","components/Admin/EditCustomerModal.js","components/Customer/CustomerAccordian.js","components/Admin/AdminDashboard.js","api/tickets.js","components/SubscriptionDetails/TicketList.js","components/Admin/EditSubscriptionModal.js","components/SubscriptionDetails/Subscription.js","auth/KeycloakViews.js","components/Customer/CustomerProjectList.js","components/App.js","api/productVersion.js","components/Forms/SubscriptionForm.js","components/Admin/Configuration/TicketingSystem.js","components/Admin/AddProductVersionModal.js","components/Admin/EditVersionModal.js","components/Admin/Configuration/ProductVersion.js","components/Admin/Configuration/AdminConfiguration.js","components/Forms/openTicket.js","api/portalusers.js","api/keycloak.js","components/Admin/ManageUser/AssignUser.js","components/Admin/ManageUser/DeleteUser.js","components/Admin/ManageUser/ManageUser.js","components/Admin/ManageSubscriptions/ManageSubscriptions.js","local/LocalApp.js","local/LocalAppElement.js","helpers/widgetEvents.js","custom-elements/widgetEventTypes.js"],"names":["i18n","defaultLocale","locale","fallbacks","translations","en","it","KeycloakContext","React","createContext","PropTypes","oneOfType","func","shape","current","elementType","withKeycloak","WrappedComponent","WithKeycloakComponent","renderWrappedComponent","value","props","forwardedRef","rest","ref","keycloak","Consumer","this","Component","defaultProps","forwardRef","getKeycloakToken","window","entando","authenticated","token","isAuthenticated","initialized","authenticationChanged","prevProps","changedAuth","isPortalAdmin","hasKeycloakClientRole","isPortalSupport","isPortalPartner","isPortalCustomer","isPortalAdminOrSupport","isPortalCustomerOrPartner","isPortalUser","clientRole","resourceAccess","client","item","roles","includes","getDefaultOptions","headers","Headers","Authorization","getDefaultKeycloakOptions","getUrl","url","request","options","a","fetch","response","has","parseInt","get","status","data","json","Promise","reject","Error","statusText","resource","apiCustomerDelete","serviceUrl","id","method","apiCustomersGet","apiCustomerGet","apiCustomerPost","customer","body","JSON","stringify","apiCustomerPut","apiGetCustomersProjects","customerId","apiAddProjectToCustomer","projectId","apiDeleteProjectFromCustomer","adminResource","apiAdminCustomersGet","apiAdminCustomerGet","myResource","apiMyCustomersGet","apiGetMyCustomersProjects","handleChanges","e","input","target","name","setState","handleFormSubmit","handleValidation","state","customerNumber","contactName","contactPhone","contactEmail","notes","customerPost","then","submitMsg","t","submitColour","updateCustomerList","catch","clearValues","document","querySelector","className","baseState","invalid","formIsValid","lastAtPos","lastIndexOf","lastDotPos","indexOf","length","addEventListener","modalConfirmation","style","color","modalId","ModalWrapper","buttonTriggerText","modalHeading","buttonTriggerClassName","handleSubmit","primaryButtonText","secondaryButtonText","Form","onSubmit","TextInput","labelText","onChange","invalidText","TextArea","apiPartnerPost","partner","apiProjectsGet","apiProjectGet","apiProjectPost","project","apiProjectPut","apiAddTicketToProject","ticketId","apiAddSubscriptionToProject","subscriptionId","apiAddUserToProject","userId","apiDeletePartnerFromProject","partnerId","apiDeleteSubscriptionFromProject","apiDeleteUserFromProject","apiAddPartnerToProject","apiGetProjectUsers","apiGetProjectSubscriptions","apiGetMyProject","apiAdminProjectsGet","apiMyProjectsGet","partnerNumber","partnerPost","projectList","getProjects","projects","result","Select","SelectItem","text","Object","keys","allProjects","map","i","description","systemId","trim","alert","projectPost","getAllProjects","customerList","getCustomers","customers","allCustomers","apiTicketingSystemDelete","apiCurrentTicketingSystemGet","apiTicketingSystemsGet","ticketingSystems","apiTicketingSystemPost","ticketingsystem","apiTicketingSystemPut","projectPut","updateProjectList","buttonId","getProjectDetails","buttonClassName","suffix","ManagePartnersModal","handleRemovePartner","preventDefault","confirm","removePartner","err","console","log","headerData","header","key","hasForm","DataTable","rows","rowData","getHeaderProps","getTableProps","TableContainer","Table","TableHead","TableRow","TableHeader","TableBody","partners","index","TableCell","Button","kind","onClick","display","width","margin","border","borderTop","handleClick","showMenu","removeEventListener","handleOutsideClick","prevState","node","contains","isAdmin","actionDivider","topButton","padding","editProjectSubscription","subscriptionParam","subscription","newOrRenewSubscription","href","textDecoration","manageUsers","deleteProject","handleDeleteProject","hasSubscription","zIndex","position","backgroundColor","to","ticketingSystem","substr","rel","formatStartDate","startDate","String","Date","toDateString","formatEndDate","lengthInMonths","endDate","setMonth","getMonth","apiSubscriptionGet","apiProjectSubscriptionPost","projectSubscriptionCreation","apiProjectSubscriptionPut","apiRenewSubscription","projectSubscriptionRenew","CustomerDataTable","fetchData","closeMenu","action","render","projectSubscriptions","tickets","sub","entandoVersion","getCustomer","Tile","getCustomerDetails","updateCustomer","getCustomersProjects","deleteCustomer","AccordionItem","title","open","accordionOpened","handleDelete","getTime","handleSearch","event","newFilteredState","filter","toLowerCase","filteredCustomers","currentPage","undefined","forceUpdate","customersProjects","role","test","numberOfPages","Math","ceil","Search","placeholder","onKeyPress","Accordion","indexOfLastItem","firstIndexOfCurrentPage","PaginationNav","loop","Boolean","page","Number","totalItems","itemsShown","jiraResource","apiJiraTicketsGet","projectName","organization","apiJiraTicketPost","ticket","TicketList","currentTicketingSystem","ticketSystemUrl","ticketingSystemBaseUrl","ticketUrl","summary","type","priority","createDate","updateDate","creationDate","openTicket","subscriptionRequest","projectSubscription","level","moment","format","subscriptionPut","updateSubscription","handleStartDateChange","date","toISOString","isNumeric","match","str","isNaN","parseFloat","getSubscriptionDetails","disabled","DatePicker","dateFormat","datePickerType","DatePickerInput","subscriptionData","loading","users","params","license","user","username","AuthenticatedView","children","UnauthenticatedView","path","apiProductVersionsGet","apiProductVersionGet","versionId","apiUpdateProductVersionsStatus","apiProductVersionPost","productVersion","apiProductVersionPut","apiProductVersionDelete","subscriptionLevel","GOLD","PLATINUM","subscriptionStatus","requested","pending","active","expired","submitSuccess","submitError","formatted","formType","stateToSubscription","updateStateForSuccess","newSubscription","res","renewSubscription","entandoVersionId","productVersions","search","location","URLSearchParams","success","toUpperCase","subscriptionLevelList","entries","unshift","versionList","version","statusList","setupFormComponents","subscriptionType","createFormMessage","subMessageKey","titleKey","formLabelKey","successErrorMessage","renderForm","tabIndex","createTicketingSystem","updateTicketingSystem","ticketingSystemType","serviceAccount","serviceAccountSecret","getTicketingSystems","deleteTicketingSystem","addProductVersion","updateProductVersions","handleEndDateChange","versionPut","getVersionDetails","ProductVersion","handleDeleteVersion","deleteVersion","getProductVersions","Toggle","size","handleToggleChange","aria-label","defaultToggled","entVersion","adminConfig","label","content","toString","parse","fetchProjectSubscription","createTicket","types","priorities","projectParam","forEach","foundProject","fetchProjects","getTicketingSystem","apiUserPost","apiUserGetByUsername","apiKeycloakUserGet","realm","usersResource","mapKeycloakUserEmails","keycloakUsers","usernameEmailMap","Map","keycloakUser","set","email","assignUser","handleFormValidation","assignUserToProject","dispatchEvent","CustomEvent","getPortalUserId","portalUserId","portalUserApi","portalUser","message","createPortalUser","authServerUrl","keycloakUrl","userList","handleRemoveUser","warn","displayUsers","handleUserDisplay","userAccess","row","cells","cell","userFunctionality","handleDeleteSubscription","deleteSubscription","subscriptions","forceRefresh","exact","getKeycloakInstance","ATTRIBUTES","LocalAppElement","eventType","eventHandler","mountPoint","createElement","unsubscribeFromKeycloakEvent","appendChild","getAttribute","Locale","ReactDOM","Provider","HTMLElement","customElements","define"],"mappings":"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","file":"static/js/main.097dd204.chunk.js","sourcesContent":["import i18n from 'i18n-js';\r\n\r\nimport en from './i18n/locales/en.json';\r\nimport it from './i18n/locales/it.json';\r\n\r\ni18n.defaultLocale = 'en';\r\ni18n.locale = 'en';\r\ni18n.fallbacks = true;\r\ni18n.translations = { en, it };\r\n\r\nexport const setLocale = locale => {\r\n  i18n.locale = locale;\r\n};\r\n\r\nexport default i18n;\r\n","import React from 'react';\n\nconst KeycloakContext = React.createContext(null);\n\nexport default KeycloakContext;\n","import PropTypes from 'prop-types';\r\n\r\nexport default PropTypes.oneOfType([PropTypes.func, PropTypes.shape({ current: PropTypes.elementType }), PropTypes.shape(null)]);\r\n","/* eslint-disable react/jsx-props-no-spreading */\r\nimport React, { forwardRef, Component } from 'react';\r\nimport refType from '../components/__types__/ref';\r\nimport KeycloakContext from './KeycloakContext';\r\n\r\nexport default function withKeycloak(WrappedComponent) {\r\n  class WithKeycloakComponent extends Component {\r\n    renderWrappedComponent = value => {\r\n      const { forwardedRef, ...rest } = this.props;\r\n      return <WrappedComponent {...rest} ref={forwardedRef} keycloak={value} />;\r\n    };\r\n\r\n    render() {\r\n      return <KeycloakContext.Consumer>{this.renderWrappedComponent}</KeycloakContext.Consumer>;\r\n    }\r\n  }\r\n\r\n  WithKeycloakComponent.propTypes = {\r\n    forwardedRef: refType,\r\n  };\r\n\r\n  WithKeycloakComponent.defaultProps = {\r\n    forwardedRef: () => {},\r\n  };\r\n\r\n  return forwardRef((props, ref) => <WithKeycloakComponent {...props} forwardedRef={ref} />);\r\n}\r\n","export const getKeycloakToken = () => {\n  if (window && window.entando && window.entando.keycloak && window.entando.keycloak.authenticated) {\n    return window.entando.keycloak.token;\n  }\n  return '';\n};\n\nconst ADMIN = 'cp-admin';\nconst SUPPORT = 'cp-support';\nconst PARTNER = 'cp-partner';\nconst CUSTOMER = 'cp-customer';\n\nexport const isAuthenticated = (props) => {\n  const {keycloak} = props;\n  return keycloak.initialized && keycloak.authenticated;\n}\n\nexport const authenticationChanged = (props, prevProps) => {\n  const authenticated = isAuthenticated(props);\n  const changedAuth = prevProps.keycloak.authenticated !== authenticated;\n  return (authenticated && changedAuth);\n}\n\nexport const isPortalAdmin = () => {\n  return hasKeycloakClientRole(ADMIN);\n};\n\nexport const isPortalSupport = () => {\n  return hasKeycloakClientRole(SUPPORT);\n};\n\nexport const isPortalPartner = () => {\n  return hasKeycloakClientRole(PARTNER);\n};\n\nexport const isPortalCustomer = () => {\n  return hasKeycloakClientRole(CUSTOMER);\n};\n\nexport const isPortalAdminOrSupport = () => {\n  return isPortalAdmin() || isPortalSupport();\n};\n\nexport const isPortalCustomerOrPartner = () => {\n  return isPortalCustomer() || isPortalPartner();\n};\n\nexport const isPortalUser = () => {\n  return isPortalAdminOrSupport() || isPortalCustomerOrPartner();\n};\n\nexport const hasKeycloakClientRole = clientRole => {\n  if (getKeycloakToken()) {\n    const { resourceAccess } = window.entando.keycloak;\n    if (resourceAccess) {\n      for (const client in resourceAccess) {\n        const item = resourceAccess[client];\n        if (item.roles && item.roles.includes(clientRole)) {\n          // console.debug(\"Found role {} with client {} \", clientRole, client);\n          return true;\n        }\n      }\n    }\n  }\n  return false;\n};\n\nexport const getDefaultOptions = () => ({\n  headers: new Headers({\n    Authorization: `Bearer ${getKeycloakToken()}`,\n    'Content-Type': 'application/json',\n  }),\n});\n\nexport const getDefaultKeycloakOptions = () => ({\n  headers: new Headers({\n    Authorization: `Bearer ${getKeycloakToken()}`,\n    'Content-Type': 'application/x-www-form-urlencoded',\n  }),\n});\n\nexport const getUrl = url => {\n  return `${url}`;\n};\n\nexport const request = async (url, options) => {\n  const response = await fetch(url, options);\n\n  const headers = {\n    ...(response.headers.has('X-Total-Count') ? { 'X-Total-Count': parseInt(response.headers.get('X-Total-Count'), 10) } : {}),\n  };\n\n  if (response.status === 204) {\n    return { data: '', status: response.status };\n  }\n\n  return response.status >= 200 && response.status < 300\n    ? { data: await response.json(), headers, status: response.status }\n    : Promise.reject(new Error(response.statusText || response.status));\n};\n","import { getDefaultOptions, request, getUrl } from './helpers';\r\n\r\nconst resource = 'api/customers';\r\n\r\nexport const apiCustomerDelete = async (serviceUrl, id) => {\r\n  const url = `${serviceUrl}/${resource}/${id}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiCustomersGet = async serviceUrl => {\r\n  const url = getUrl(`${serviceUrl}/${resource}`);\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiCustomerGet = async (serviceUrl, id) => {\r\n  const url = getUrl(`${serviceUrl}/${resource}/${id}`);\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiCustomersGetForAdminDashboard = async serviceUrl => {\r\n  const url = `${serviceUrl}/${resource}/all`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiCustomerPost = async (serviceUrl, customer) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n    body: customer ? JSON.stringify(customer) : null,\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiCustomerPut = async (serviceUrl, customer) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'PUT',\r\n    body: customer ? JSON.stringify(customer) : null,\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiGetCustomersProjects = async (serviceUrl, customerId) => {\r\n  const url = `${serviceUrl}/${resource}/${customerId}/projects`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiAddProjectToCustomer = async (serviceUrl, customerId, projectId) => {\r\n  const url = `${serviceUrl}/${resource}/${customerId}/projects/${projectId}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiDeleteProjectFromCustomer = async (serviceUrl, customerId, projectId) => {\r\n  const url = `${serviceUrl}/${resource}/${customerId}/projects/${projectId}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\n// Endpoints for backend security\r\nconst adminResource = 'api/customers/admin';\r\nexport const apiAdminCustomersGet = async serviceUrl => {\r\n  const url = getUrl(`${serviceUrl}/${adminResource}`);\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiAdminCustomerGet = async (serviceUrl, customerId) => {\r\n  const url = getUrl(`${serviceUrl}/${adminResource}/${customerId}`);\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nconst myResource = 'api/customers/mycustomers';\r\nexport const apiMyCustomersGet = async serviceUrl => {\r\n  const url = getUrl(`${serviceUrl}/${myResource}`);\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiGetMyCustomersProjects = async (serviceUrl, customerId) => {\r\n  const url = `${serviceUrl}/${myResource}/${customerId}/projects`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n","import React, { Component } from 'react';\r\nimport i18n from '../../i18n';\r\nimport { ModalWrapper, Form, TextInput, TextArea } from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport { apiCustomerPost } from '../../api/customers';\r\n\r\nclass AddCustomerModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      name: '',\r\n      customerNumber: '',\r\n      contactName: '',\r\n      contactPhone: '',\r\n      contactEmail: '',\r\n      notes: '',\r\n      invalid: {},\r\n      submitMsg: '',\r\n      submitColour: 'black',\r\n    };\r\n\r\n    this.baseState = this.state;\r\n  }\r\n\r\n  handleValidation() {\r\n    let invalid = {};\r\n    let formIsValid = true;\r\n\r\n    if (this.state.name === '') {\r\n      formIsValid = false;\r\n      invalid['name'] = true;\r\n    }\r\n\r\n    if (this.state.customerNumber === '') {\r\n      formIsValid = false;\r\n      invalid['customerNumber'] = true;\r\n    }\r\n\r\n    if (typeof this.state.contactEmail !== 'undefined') {\r\n      let lastAtPos = this.state.contactEmail.lastIndexOf('@');\r\n      let lastDotPos = this.state.contactEmail.lastIndexOf('.');\r\n\r\n      if (\r\n        !(\r\n          lastAtPos < lastDotPos &&\r\n          lastAtPos > 0 &&\r\n          this.state.contactEmail.indexOf('@@') === -1 &&\r\n          lastDotPos > 2 &&\r\n          this.state.contactEmail.length - lastDotPos > 2\r\n        )\r\n      ) {\r\n        formIsValid = false;\r\n        invalid['contactEmail'] = true;\r\n      }\r\n    }\r\n\r\n    this.setState({ invalid: invalid });\r\n    return formIsValid;\r\n  }\r\n\r\n  handleChanges = e => {\r\n    const input = e.target;\r\n    const name = input.name;\r\n    const value = input.value;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  async customerPost(customer) {\r\n    const { keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n    if (authenticated) {\r\n      return await apiCustomerPost(this.props.serviceUrl, customer);\r\n    }\r\n  }\r\n\r\n  handleFormSubmit = () => {\r\n    const formIsValid = this.handleValidation();\r\n\r\n    if (formIsValid) {\r\n      const customer = {\r\n        name: this.state.name,\r\n        customerNumber: this.state.customerNumber,\r\n        contactName: this.state.contactName,\r\n        contactPhone: this.state.contactPhone,\r\n        contactEmail: this.state.contactEmail,\r\n        notes: this.state.notes,\r\n      };\r\n\r\n      this.customerPost(customer)\r\n        .then(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.added'),\r\n            submitColour: '#24a148',\r\n          });\r\n          this.props.updateCustomerList();\r\n        })\r\n        .catch(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.error'),\r\n            submitColour: '#da1e28',\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  clearValues = () => {\r\n    const customerModalElement = document.querySelector('#modal-form-customer');\r\n    if (!customerModalElement.className.includes('is-visible')) {\r\n      this.setState(this.baseState);\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    const modalOpenButton = document.querySelector('.add-customer-button');\r\n    modalOpenButton.addEventListener('click', this.clearValues, false);\r\n  }\r\n\r\n  render() {\r\n    const modalConfirmation = (\r\n      <div className=\"bx--modal-header\">\r\n        <p style={{ color: this.state.submitColour }}>{this.state.submitMsg}</p>\r\n      </div>\r\n    )\r\n    const modalId = \"modal-form-customer\"\r\n    return (\r\n      <ModalWrapper\r\n        buttonTriggerText={i18n.t('buttons.addCustomer')}\r\n        modalHeading={i18n.t('adminDashboard.addCustomer.title')}\r\n        buttonTriggerClassName=\"add-customer bx--btn bx--btn--tertiary add-customer-button\"\r\n        className=\"modal-form\"\r\n        id={modalId}\r\n        handleSubmit={this.handleFormSubmit}\r\n        primaryButtonText={i18n.t('modalText.save')}\r\n        secondaryButtonText={i18n.t('modalText.cancel')}\r\n      >\r\n        {modalConfirmation}\r\n        <div className=\"form-container\">\r\n          <Form onSubmit={this.handleFormSubmit}>\r\n            <TextInput\r\n              id={\"name\" + modalId}\r\n              name=\"name\"\r\n              labelText={i18n.t('adminDashboard.addCustomer.customerName') + ' *'}\r\n              value={this.state.name}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.required')}\r\n              invalid={this.state.invalid['name']}\r\n            />\r\n            <TextInput\r\n              id={\"customerNumber\" + modalId}\r\n              name=\"customerNumber\"\r\n              labelText={i18n.t('adminDashboard.addCustomer.customerNumber') + ' *'}\r\n              value={this.state.customerNumber}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.required')}\r\n              invalid={this.state.invalid['customerNumber']}\r\n            />\r\n            <TextInput\r\n              id={\"contactName\" + modalId}\r\n              name=\"contactName\"\r\n              labelText={i18n.t('adminDashboard.addCustomer.contactName')}\r\n              value={this.state.contactName}\r\n              onChange={this.handleChanges}\r\n            />\r\n            <TextInput\r\n              id={\"contactPhone\" + modalId}\r\n              name=\"contactPhone\"\r\n              labelText={i18n.t('adminDashboard.addCustomer.contactPhone')}\r\n              value={this.state.contactPhone}\r\n              onChange={this.handleChanges}\r\n            />\r\n            <TextInput\r\n              id={\"contactEmail\" + modalId}\r\n              name=\"contactEmail\"\r\n              labelText={i18n.t('adminDashboard.addCustomer.contactEmail') + ' *'}\r\n              value={this.state.contactEmail}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.email')}\r\n              invalid={this.state.invalid['contactEmail']}\r\n            />\r\n            <TextArea\r\n              id={\"notes\" + modalId}\r\n              name=\"notes\"\r\n              labelText={i18n.t('adminDashboard.addCustomer.notes')}\r\n              value={this.state.notes}\r\n              onChange={this.handleChanges}\r\n            />\r\n          </Form>\r\n        </div>\r\n        {modalConfirmation}\r\n      </ModalWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withKeycloak(AddCustomerModal);\r\n","import { getDefaultOptions, request, getUrl } from './helpers';\r\n\r\nconst resource = 'api/partners';\r\n\r\nexport const apiPartnerDelete = async (serviceUrl, id) => {\r\n  const url = `${serviceUrl}/${resource}/${id}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiPartnersGet = async serviceUrl => {\r\n  const url = getUrl(`${serviceUrl}/${resource}`);\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiPartnerPost = async (serviceUrl, partner) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n    body: partner ? JSON.stringify(partner) : null,\r\n  };\r\n  return request(url, options);\r\n};\r\n","import { getDefaultOptions, request, getUrl } from './helpers';\n\nconst resource = 'api/projects';\n\nexport const apiProjectsDelete = async (serviceUrl, id) => {\n  const url = `${serviceUrl}/${resource}/${id}`;\n  const options = {\n    ...getDefaultOptions(),\n    method: 'DELETE',\n  };\n  return request(url, options);\n};\n\nexport const apiProjectsGet = async serviceUrl => {\n  const url = getUrl(`${serviceUrl}/${resource}`);\n  const options = {\n    ...getDefaultOptions(),\n    method: 'GET',\n  };\n\n  return request(url, options);\n};\n\nexport const apiProjectGet = async (serviceUrl, id) => {\n  const url = getUrl(`${serviceUrl}/${resource}/${id}`);\n  const options = {\n    ...getDefaultOptions(),\n    method: 'GET',\n  };\n\n  return request(url, options);\n};\n\nexport const apiProjectPost = async (serviceUrl, project) => {\n  const url = `${serviceUrl}/${resource}`;\n  const options = {\n    ...getDefaultOptions(),\n    method: 'POST',\n    body: project ? JSON.stringify(project) : null,\n  };\n  return request(url, options);\n};\n\nexport const apiProjectPut = async (serviceUrl, project) => {\n  const url = `${serviceUrl}/${resource}`;\n  const options = {\n    ...getDefaultOptions(),\n    method: 'PUT',\n    body: project ? JSON.stringify(project) : null,\n  };\n  return request(url, options);\n};\n\nexport const apiAddTicketToProject = async (serviceUrl, projectId, ticketId) => {\n  const url = `${serviceUrl}/${resource}/${projectId}/tickets/${ticketId}`;\n  const options = {\n    ...getDefaultOptions(),\n    method: 'POST',\n  };\n  return request(url, options);\n};\n\nexport const apiAddSubscriptionToProject = async (serviceUrl, projectId, subscriptionId) => {\n  const url = `${serviceUrl}/${resource}/${projectId}/subscriptions/${subscriptionId}`;\n  const options = {\n    ...getDefaultOptions(),\n    method: 'POST',\n  };\n  return request(url, options);\n};\n\nexport const apiAddUserToProject = async (serviceUrl, projectId, userId) => {\n  const url = `${serviceUrl}/${resource}/${projectId}/users/${userId}`;\n  const options = {\n    ...getDefaultOptions(),\n    method: 'POST',\n  };\n  return request(url, options);\n};\n\nexport const apiDeletePartnerFromProject = async (serviceUrl, projectId, partnerId) => {\n  const url = `${serviceUrl}/${resource}/${projectId}/partners/${partnerId}`;\n  const options = {\n    ...getDefaultOptions(),\n    method: 'DELETE',\n  };\n  return request(url, options);\n};\n\nexport const apiDeleteSubscriptionFromProject = async (serviceUrl, projectId, subscriptionId) => {\n  const url = `${serviceUrl}/${resource}/${projectId}/subscriptions/${subscriptionId}`;\n  const options = {\n    ...getDefaultOptions(),\n    method: 'DELETE',\n  };\n  return request(url, options);\n};\n\n\nexport const apiDeleteUserFromProject = async (serviceUrl, projectId, userId) => {\n  const url = `${serviceUrl}/${resource}/${projectId}/users/${userId}`;\n  const options = {\n    ...getDefaultOptions(),\n    method: 'DELETE',\n  };\n  return request(url, options);\n};\n\nexport const apiAddPartnerToProject = async (serviceUrl, projectId, partnerId) => {\n  const url = `${serviceUrl}/${resource}/${projectId}/partners/${partnerId}`;\n  const options = {\n    ...getDefaultOptions(),\n    method: 'POST',\n  };\n  return request(url, options);\n};\n\nexport const apiGetProjectUsers = async (serviceUrl, projectId) => {\n  const url = `${serviceUrl}/${resource}/${projectId}/users/`;\n  const options = {\n    ...getDefaultOptions(),\n    method: 'GET',\n  };\n  return request(url, options);\n};\n\nexport const apiGetProjectsTickets = async (serviceUrl, projectId) => {\n  const url = `${serviceUrl}/${resource}/${projectId}/tickets/`;\n  const options = {\n    ...getDefaultOptions(),\n    method: 'GET',\n  };\n  return request(url, options);\n};\n\nexport const apiGetProjectSubscriptions = async (serviceUrl, projectId) => {\n  const url = `${serviceUrl}/${resource}/${projectId}/subscriptions/`;\n  const options = {\n    ...getDefaultOptions(),\n    method: 'GET',\n  };\n  return request(url, options);\n};\n\nexport const apiGetProjectIdsAndNames = async serviceUrl => {\n  const url = `${serviceUrl}/${resource}/nameId/`;\n  const options = {\n    ...getDefaultOptions(),\n    method: 'GET',\n  };\n  return request(url, options);\n};\n\nexport const apiGetMyProject = async (serviceUrl, projectId) => {\n  const url = `${serviceUrl}/${resource}/myproject/${projectId}/`;\n  const options = {\n    ...getDefaultOptions(),\n    method: 'GET',\n  };\n  return request(url, options);\n};\n\nexport const apiGetMyProjectIdNames = async serviceUrl => {\n  const url = `${serviceUrl}/${resource}/myprojects/nameId/`;\n  const options = {\n    ...getDefaultOptions(),\n    method: 'GET',\n  };\n  return request(url, options);\n};\n\nexport const apiGetMyProjectUsers = async (serviceUrl, projectId) => {\n  const url = `${serviceUrl}/${resource}/myproject/${projectId}/users`;\n  const options = {\n    ...getDefaultOptions(),\n    method: 'GET',\n  };\n  return request(url, options);\n};\n\n// Endpoints for backend security\nconst adminResource = 'api/projects/admin';\nexport const apiAdminProjectsGet = async serviceUrl => {\n  const url = getUrl(`${serviceUrl}/${adminResource}`);\n  const options = {\n    ...getDefaultOptions(),\n    method: 'GET',\n  };\n\n  return request(url, options);\n};\n\nconst myResource = 'api/projects/myprojects';\nexport const apiMyProjectsGet = async serviceUrl => {\n  const url = getUrl(`${serviceUrl}/${myResource}`);\n  const options = {\n    ...getDefaultOptions(),\n    method: 'GET',\n  };\n\n  return request(url, options);\n};\n","import React, { Component } from 'react';\r\nimport i18n from '../../i18n';\r\nimport { ModalWrapper, Form, TextInput, Select, SelectItem, TextArea } from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport { apiPartnerPost } from '../../api/partners';\r\nimport { apiProjectsGet, apiAddPartnerToProject } from '../../api/projects';\r\n\r\nclass AddPartnerModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      projectList: {},\r\n      projectId: '',\r\n      name: '',\r\n      partnerNumber: '',\r\n      notes: '',\r\n      invalid: {},\r\n      submitMsg: '',\r\n      submitColour: 'black',\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n    const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n\r\n    if (authenticated && changedAuth) {\r\n      this.getProjects();\r\n    }\r\n  }\r\n\r\n  handleValidation() {\r\n    let invalid = {};\r\n    let formIsValid = true;\r\n\r\n    //project\r\n    if (this.state.projectId === '' || this.state.projectId === 'project-list') {\r\n      formIsValid = false;\r\n      invalid['projectId'] = true;\r\n    }\r\n\r\n    if (this.state.name === '') {\r\n      formIsValid = false;\r\n      invalid['name'] = true;\r\n    }\r\n\r\n    if (this.state.partnerNumber === '') {\r\n      formIsValid = false;\r\n      invalid['partnerNumber'] = true;\r\n    }\r\n\r\n    this.setState({ invalid: invalid });\r\n    return formIsValid;\r\n  }\r\n\r\n  handleChanges = e => {\r\n    const input = e.target;\r\n    const name = input.name;\r\n    const value = input.value;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  async getProjects() {\r\n    const { keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n    if (authenticated) {\r\n      const projects = await apiProjectsGet(this.props.serviceUrl);\r\n      this.setState({ projectList: projects });\r\n    }\r\n  }\r\n\r\n  async partnerPost(partner) {\r\n    const { keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n    if (authenticated) {\r\n      const result = await apiPartnerPost(this.props.serviceUrl, partner);\r\n      return await apiAddPartnerToProject(this.props.serviceUrl, this.state.projectId, result.data.id);\r\n    }\r\n  }\r\n\r\n  handleFormSubmit = () => {\r\n    const formIsValid = this.handleValidation();\r\n\r\n    if (formIsValid) {\r\n      const partner = {\r\n        name: this.state.name,\r\n        partnerNumber: this.state.partnerNumber,\r\n        notes: this.state.notes,\r\n      };\r\n      this.partnerPost(partner)\r\n        .then(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.added'),\r\n            submitColour: '#24a148',\r\n          });\r\n          this.props.updateCustomerList();\r\n        })\r\n        .catch(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.error'),\r\n            submitColour: '#da1e28',\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  clearValues = () => {\r\n    const partnerModalElement = document.querySelector('#modal-form-partner');\r\n    if (!partnerModalElement.className.includes('is-visible')) {\r\n      this.setState({\r\n        projectId: '',\r\n        name: '',\r\n        partnerNumber: '',\r\n        notes: '',\r\n        invalid: {},\r\n        submitMsg: '',\r\n        submitColour: 'black',\r\n      });\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getProjects();\r\n\r\n    const modalOpenButton = document.querySelector('.add-partner-button');\r\n    modalOpenButton.addEventListener('click', this.clearValues, false);\r\n  }\r\n\r\n  render() {\r\n    const modalConfirmation = (\r\n      <div className=\"bx--modal-header\">\r\n        <p style={{ color: this.state.submitColour }}>{this.state.submitMsg}</p>\r\n      </div>\r\n    )\r\n    const modalId = \"modal-form-partner\";\r\n    return (\r\n      <ModalWrapper\r\n        buttonTriggerText={i18n.t('buttons.addPartner')}\r\n        modalHeading={i18n.t('adminDashboard.addPartner.title')}\r\n        buttonTriggerClassName=\"add-partner bx--btn bx--btn--tertiary add-partner-button\"\r\n        className=\"modal-form\"\r\n        id={modalId}\r\n        handleSubmit={this.handleFormSubmit}\r\n        primaryButtonText={i18n.t('modalText.save')}\r\n        secondaryButtonText={i18n.t('modalText.cancel')}\r\n      >\r\n        {modalConfirmation}\r\n        <div className=\"form-container\">\r\n          <Form onSubmit={this.handleFormSubmit}>\r\n            <Select\r\n              id={\"projectId\" + modalId}\r\n              name=\"projectId\"\r\n              labelText={i18n.t('adminDashboard.addPartner.projectList') + ' *'}\r\n              value={this.state.projectId}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.required')}\r\n              invalid={this.state.invalid['projectId']}\r\n            >\r\n              <SelectItem text={i18n.t('adminDashboard.addPartner.selectProject')} value=\"project-list\" />\r\n              {Object.keys(this.props.allProjects).length !== 0\r\n                ? this.props.allProjects.map((projectList, i) => (\r\n                    <SelectItem key={i} text={projectList.name} value={projectList.id}>\r\n                      {projectList.name}\r\n                    </SelectItem>\r\n                  ))\r\n                : null}\r\n            </Select>\r\n\r\n            <TextInput\r\n              id={\"name\" + modalId}\r\n              name=\"name\"\r\n              labelText={i18n.t('adminDashboard.addPartner.partnerName') + ' *'}\r\n              value={this.state.name}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.required')}\r\n              invalid={this.state.invalid['name']}\r\n            />\r\n            <TextInput\r\n              id={\"partnerNumber\" + modalId}\r\n              name=\"partnerNumber\"\r\n              labelText={i18n.t('adminDashboard.addPartner.partnerNumber') + ' *'}\r\n              value={this.state.partnerNumber}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.required')}\r\n              invalid={this.state.invalid['partnerNumber']}\r\n            />\r\n            <TextArea\r\n              name=\"notes\"\r\n              labelText={i18n.t('adminDashboard.addPartner.notes')}\r\n              value={this.state.notes}\r\n              onChange={this.handleChanges}\r\n            />\r\n          </Form>\r\n        </div>\r\n        {modalConfirmation}\r\n      </ModalWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withKeycloak(AddPartnerModal);\r\n","import React, { Component } from 'react';\r\nimport i18n from '../../i18n';\r\nimport { ModalWrapper, Form, TextInput, Select, SelectItem, TextArea } from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport { apiCustomersGet, apiAddProjectToCustomer } from '../../api/customers';\r\nimport { apiProjectPost, apiProjectsGet } from '../../api/projects';\r\n\r\nclass AddProjectModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      projects: {},\r\n      customerList: {},\r\n      customerId: '',\r\n      name: '',\r\n      description: '',\r\n      systemId: '',\r\n      contactName: '',\r\n      contactPhone: '',\r\n      contactEmail: '',\r\n      notes: '',\r\n      invalid: {},\r\n      submitMsg: '',\r\n      submitColour: 'black',\r\n    };\r\n  }\r\n\r\n  handleValidation() {\r\n    let invalid = {};\r\n    let formIsValid = true;\r\n\r\n    //customer\r\n    if (this.state.customerId === '' || this.state.customerId === 'customer-list') {\r\n      formIsValid = false;\r\n      invalid['customerId'] = true;\r\n    }\r\n\r\n    //name\r\n    if (this.state.name === '') {\r\n      formIsValid = false;\r\n      invalid['name'] = true;\r\n    }\r\n\r\n    //description\r\n    if (this.state.description === '') {\r\n      formIsValid = false;\r\n      invalid['description'] = true;\r\n    }\r\n\r\n    //contactEmail\r\n    if (typeof this.state.contactEmail !== 'undefined') {\r\n      let lastAtPos = this.state.contactEmail.lastIndexOf('@');\r\n      let lastDotPos = this.state.contactEmail.lastIndexOf('.');\r\n\r\n      if (\r\n        !(\r\n          lastAtPos < lastDotPos &&\r\n          lastAtPos > 0 &&\r\n          this.state.contactEmail.indexOf('@@') === -1 &&\r\n          lastDotPos > 2 &&\r\n          this.state.contactEmail.length - lastDotPos > 2\r\n        )\r\n      ) {\r\n        formIsValid = false;\r\n        invalid['contactEmail'] = true;\r\n      }\r\n    }\r\n\r\n    this.setState({ invalid: invalid });\r\n    return formIsValid;\r\n  }\r\n\r\n  async getAllProjects() {\r\n    const projects = await apiProjectsGet(this.props.serviceUrl);\r\n    this.setState({\r\n      projects: projects.data,\r\n    });\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n    const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n\r\n    if (authenticated && changedAuth) {\r\n      this.getCustomers();\r\n      this.getAllProjects();\r\n    }\r\n  }\r\n\r\n  handleChanges = e => {\r\n    const input = e.target;\r\n    const name = input.name;\r\n    const value = input.value;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  async getCustomers() {\r\n    const { keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n    if (authenticated) {\r\n      const customers = await apiCustomersGet(this.props.serviceUrl);\r\n      this.setState({ customerList: customers });\r\n    }\r\n  }\r\n\r\n  async projectPost(project) {\r\n    const { keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n    if (authenticated) {\r\n      const result = await apiProjectPost(this.props.serviceUrl, project);\r\n      return await apiAddProjectToCustomer(this.props.serviceUrl, this.state.customerId, result.data.id);\r\n    }\r\n  }\r\n\r\n  handleFormSubmit = () => {\r\n    const formIsValid = this.handleValidation();\r\n\r\n    if (formIsValid) {\r\n      const project = {\r\n        name: this.state.name,\r\n        description: this.state.description,\r\n        systemId: this.state.systemId,\r\n        contactName: this.state.contactName,\r\n        contactPhone: this.state.contactPhone,\r\n        contactEmail: this.state.contactEmail,\r\n        notes: this.state.notes,\r\n      };\r\n      for (var i = 0; i < this.state.projects.length; i++) {\r\n        if (project.systemId === this.state.projects[i].systemId && project.systemId.trim() !== '') {\r\n          window.alert('That system id is already in use in another project');\r\n          return;\r\n        }\r\n      }\r\n      this.projectPost(project)\r\n        .then(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.added'),\r\n            submitColour: '#24a148',\r\n          });\r\n          this.props.updateCustomerList();\r\n          this.getAllProjects();\r\n        })\r\n        .catch(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.error'),\r\n            submitColour: '#da1e28',\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  clearValues = () => {\r\n    const projectModalElement = document.querySelector('#modal-form-project');\r\n    if (!projectModalElement.className.includes('is-visible')) {\r\n      this.setState({\r\n        customerId: '',\r\n        name: '',\r\n        description: '',\r\n        systemId: '',\r\n        contactName: '',\r\n        contactPhone: '',\r\n        contactEmail: '',\r\n        notes: '',\r\n        invalid: {},\r\n      });\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getCustomers();\r\n    this.getAllProjects();\r\n\r\n    const modalOpenButton = document.querySelector('.add-project-button');\r\n    modalOpenButton.addEventListener('click', this.clearValues, false);\r\n  }\r\n\r\n  render() {\r\n    const modalConfirmation = (\r\n      <div className=\"bx--modal-header\">\r\n        <p style={{ color: this.state.submitColour }}>{this.state.submitMsg}</p>\r\n      </div>\r\n    )\r\n    const modalId = \"modal-form-project\"\r\n    return (\r\n      <ModalWrapper\r\n        buttonTriggerText={i18n.t('buttons.addProject')}\r\n        modalHeading={i18n.t('adminDashboard.addProject.title')}\r\n        buttonTriggerClassName=\"add-project bx--btn bx--btn--tertiary add-project-button\"\r\n        className=\"modal-form\"\r\n        id={modalId}\r\n        handleSubmit={this.handleFormSubmit}\r\n        primaryButtonText={i18n.t('modalText.save')}\r\n        secondaryButtonText={i18n.t('modalText.cancel')}\r\n      >\r\n        {modalConfirmation}\r\n        <div className=\"form-container\">\r\n          <Form onSubmit={this.handleFormSubmit}>\r\n            <Select\r\n              id={\"customerId\" + modalId}\r\n              name=\"customerId\"\r\n              labelText={i18n.t('adminDashboard.addProject.customerList') + ' *'}\r\n              value={this.state.customerId}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.required')}\r\n              invalid={this.state.invalid['customerId']}\r\n            >\r\n              <SelectItem text={i18n.t('adminDashboard.addProject.selectCustomer')} value=\"customer-list\" />\r\n              {Object.keys(this.props.allCustomers).length !== 0\r\n                ? this.props.allCustomers.map((customerList, i) => (\r\n                    <SelectItem key={i} text={customerList.name} value={customerList.id}>\r\n                      {customerList.name}\r\n                    </SelectItem>\r\n                  ))\r\n                : null}\r\n            </Select>\r\n\r\n            <TextInput\r\n              id={\"name\" + modalId}\r\n              name=\"name\"\r\n              labelText={i18n.t('adminDashboard.addProject.projectName') + ' *'}\r\n              value={this.state.name}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.required')}\r\n              invalid={this.state.invalid['name']}\r\n            />\r\n            <TextInput\r\n              id={\"description\" + modalId}\r\n              name=\"description\"\r\n              labelText={i18n.t('adminDashboard.addProject.projectDesc') + ' *'}\r\n              value={this.state.description}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.required')}\r\n              invalid={this.state.invalid['description']}\r\n            />\r\n            <TextInput\r\n              id={\"systemId\" + modalId}\r\n              name=\"systemId\"\r\n              labelText={i18n.t('adminDashboard.addProject.systemId')}\r\n              value={this.state.systemId}\r\n              onChange={this.handleChanges}\r\n            />\r\n            <TextInput\r\n              id={\"contactName\" + modalId}\r\n              name=\"contactName\"\r\n              labelText={i18n.t('adminDashboard.addProject.contactName')}\r\n              value={this.state.contactName}\r\n              onChange={this.handleChanges}\r\n            />\r\n            <TextInput\r\n              id={\"contactPhone\" + modalId}\r\n              name=\"contactPhone\"\r\n              labelText={i18n.t('adminDashboard.addProject.contactPhone')}\r\n              value={this.state.contactPhone}\r\n              onChange={this.handleChanges}\r\n            />\r\n            <TextInput\r\n              id={\"contactEmail\" + modalId}\r\n              name=\"contactEmail\"\r\n              labelText={i18n.t('adminDashboard.addProject.contactEmail') + ' *'}\r\n              value={this.state.contactEmail}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.email')}\r\n              invalid={this.state.invalid['contactEmail']}\r\n            />\r\n            <TextArea\r\n              id={\"notes\" + modalId}\r\n              name=\"notes\"\r\n              labelText={i18n.t('adminDashboard.addProject.notes')}\r\n              value={this.state.notes}\r\n              onChange={this.handleChanges}\r\n            />\r\n          </Form>\r\n        </div>\r\n        {modalConfirmation}\r\n      </ModalWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withKeycloak(AddProjectModal);\r\n","import { getDefaultOptions, request, getUrl } from './helpers';\r\n\r\nconst resource = 'api/ticketing-systems';\r\n\r\nexport const apiTicketingSystemDelete = async (serviceUrl, id) => {\r\n  const url = `${serviceUrl}/${resource}/${id}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiCurrentTicketingSystemGet = async serviceUrl => {\r\n  const ticketingSystems = await apiTicketingSystemsGet(serviceUrl);\r\n  //Simplifying assumption to take the latest ticketing system as the current config\r\n  return ticketingSystems.data[ticketingSystems.data.length - 1];\r\n}\r\n\r\nexport const apiTicketingSystemsGet = async serviceUrl => {\r\n  const url = getUrl(`${serviceUrl}/${resource}`);\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiTicketingSystemPost = async (serviceUrl, ticketingsystem) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n    body: ticketingsystem ? JSON.stringify(ticketingsystem) : null,\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiTicketingSystemPut = async (serviceUrl, ticketingsystem) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'PUT',\r\n    body: ticketingsystem ? JSON.stringify(ticketingsystem) : null,\r\n  };\r\n  return request(url, options);\r\n};\r\n","import React, { Component } from 'react';\r\nimport i18n from '../../i18n';\r\nimport { ModalWrapper, Form, TextInput, TextArea } from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport { apiCustomersGet } from '../../api/customers';\r\nimport { apiProjectGet, apiProjectPut, apiProjectsGet } from '../../api/projects';\r\n\r\nclass EditProjectModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      projects: {},\r\n      customerList: {},\r\n      customerId: '',\r\n      name: '',\r\n      description: '',\r\n      systemId: '',\r\n      contactName: '',\r\n      contactPhone: '',\r\n      contactEmail: '',\r\n      notes: '',\r\n      invalid: {},\r\n      modalId: '',\r\n      buttonId: '',\r\n      submitMsg: '',\r\n      submitColour: 'black',\r\n    };\r\n  }\r\n\r\n  handleValidation() {\r\n    let invalid = {};\r\n    let formIsValid = true;\r\n\r\n    //name\r\n    if (this.state.name === '') {\r\n      formIsValid = false;\r\n      invalid['name'] = true;\r\n    }\r\n\r\n    //description\r\n    if (this.state.description === '') {\r\n      formIsValid = false;\r\n      invalid['description'] = true;\r\n    }\r\n\r\n    //contactEmail\r\n    if (typeof this.state.contactEmail !== 'undefined') {\r\n      let lastAtPos = this.state.contactEmail.lastIndexOf('@');\r\n      let lastDotPos = this.state.contactEmail.lastIndexOf('.');\r\n\r\n      if (\r\n        !(\r\n          lastAtPos < lastDotPos &&\r\n          lastAtPos > 0 &&\r\n          this.state.contactEmail.indexOf('@@') === -1 &&\r\n          lastDotPos > 2 &&\r\n          this.state.contactEmail.length - lastDotPos > 2\r\n        )\r\n      ) {\r\n        formIsValid = false;\r\n        invalid['contactEmail'] = true;\r\n      }\r\n    }\r\n\r\n    this.setState({ invalid: invalid });\r\n    return formIsValid;\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n    const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n\r\n    if (authenticated && changedAuth) {\r\n      this.getCustomers();\r\n      this.getAllProjects();\r\n      this.getProjectDetails();\r\n    }\r\n  }\r\n\r\n  handleChanges = e => {\r\n    const input = e.target;\r\n    const name = input.name;\r\n    const value = input.value;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  async getCustomers() {\r\n    const { keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n    if (authenticated) {\r\n      const customers = await apiCustomersGet(this.props.serviceUrl);\r\n      this.setState({ customerList: customers });\r\n    }\r\n  }\r\n\r\n  async getProjectDetails() {\r\n    const { keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n    if (authenticated) {\r\n      const project = await apiProjectGet(this.props.serviceUrl, this.props.project.id);\r\n      this.setState({\r\n        name: project.data.name,\r\n        description: project.data.description,\r\n        systemId: project.data.systemId,\r\n        contactName: project.data.contactName,\r\n        contactPhone: project.data.contactPhone,\r\n        contactEmail: project.data.contactEmail,\r\n        notes: project.data.notes,\r\n        modalId: 'modal-form-project-edit-' + project.data.id,\r\n        buttonId: 'edit-project-button-' + project.data.id,\r\n      });\r\n    }\r\n  }\r\n\r\n  async getAllProjects() {\r\n    const projects = await apiProjectsGet(this.props.serviceUrl);\r\n    this.setState({\r\n      projects: projects.data,\r\n    });\r\n  }\r\n\r\n  async projectPut(project) {\r\n    const { keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n    if (authenticated) {\r\n      return await apiProjectPut(this.props.serviceUrl, project);\r\n    }\r\n  }\r\n\r\n  handleFormSubmit = () => {\r\n    const formIsValid = this.handleValidation();\r\n\r\n    if (formIsValid) {\r\n      const project = {\r\n        id: this.props.project.id,\r\n        customer: this.props.project.customer,\r\n        name: this.state.name,\r\n        description: this.state.description,\r\n        systemId: this.state.systemId,\r\n        contactName: this.state.contactName,\r\n        contactPhone: this.state.contactPhone,\r\n        contactEmail: this.state.contactEmail,\r\n        notes: this.state.notes,\r\n      };\r\n      for (var i = 0; i < this.props.allProjects.length; i++) {\r\n        if (\r\n          project.systemId === this.props.allProjects[i].systemId &&\r\n          project.id !== this.props.allProjects[i].id &&\r\n          project.systemId.trim() !== ''\r\n        ) {\r\n          window.alert('That system id is already in use in another project');\r\n          return;\r\n        }\r\n      }\r\n      this.projectPut(project)\r\n        .then(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.updated'),\r\n            submitColour: '#24a148',\r\n          });\r\n          this.props.updateProjectList();\r\n        })\r\n        .catch(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.error'),\r\n            submitColour: '#da1e28',\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  clearValues = () => {\r\n    const { keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n    const customerModalElement = document.querySelector('#' + this.state.modalId);\r\n    if (!customerModalElement.className.includes('is-visible') && authenticated) {\r\n      this.setState({\r\n        name: this.props.project.name,\r\n        description: this.props.project.description,\r\n        systemId: this.props.project.systemId,\r\n        contactName: this.props.project.contactName,\r\n        contactPhone: this.props.project.contactPhone,\r\n        contactEmail: this.props.project.contactEmail,\r\n        notes: this.props.project.notes,\r\n        invalid: {},\r\n      });\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n    if (authenticated) {\r\n      this.getCustomers();\r\n      this.getAllProjects();\r\n      this.getProjectDetails();\r\n\r\n      const modalOpenButton = document.querySelector('.edit-project-button-' + this.props.project.id);\r\n      modalOpenButton.addEventListener('click', this.clearValues, false);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const modalConfirmation = (\r\n      <div className=\"bx--modal-header\">\r\n        <p style={{ color: this.state.submitColour }}>{this.state.submitMsg}</p>\r\n      </div>\r\n    )\r\n    const buttonClassName = 'dropdown-button-button bx--btn bx--btn--ghost edit-project-button-' + this.props.project.id;\r\n    const suffix = this.state.modalId;\r\n    return (\r\n    <ModalWrapper\r\n        buttonTriggerText={i18n.t('buttons.edit')}\r\n        modalHeading={i18n.t('adminDashboard.addProject.editTitle')}\r\n        buttonTriggerClassName={buttonClassName}\r\n        className=\"modal-form\"\r\n        id={this.state.modalId}\r\n        handleSubmit={this.handleFormSubmit}\r\n        primaryButtonText={i18n.t('modalText.save')}\r\n        secondaryButtonText={i18n.t('modalText.cancel')}\r\n      >\r\n        {modalConfirmation}\r\n        <div className=\"form-container\">\r\n          <Form onSubmit={this.handleFormSubmit}>\r\n            <TextInput\r\n              id={\"name\" + suffix}\r\n              name=\"name\"\r\n              labelText={i18n.t('adminDashboard.addProject.projectName') + ' *'}\r\n              value={this.state.name}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.required')}\r\n              invalid={this.state.invalid['name']}\r\n            />\r\n            <TextInput\r\n              id={\"description\" + suffix}\r\n              name=\"description\"\r\n              labelText={i18n.t('adminDashboard.addProject.projectDesc') + ' *'}\r\n              value={this.state.description}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.required')}\r\n              invalid={this.state.invalid['description']}\r\n            />\r\n            <TextInput\r\n              id={\"systemId\" + suffix}\r\n              name=\"systemId\"\r\n              labelText={i18n.t('adminDashboard.addProject.systemId')}\r\n              value={this.state.systemId}\r\n              onChange={this.handleChanges}\r\n            />\r\n            <TextInput\r\n              id={\"contactName\" + suffix}\r\n              name=\"contactName\"\r\n              labelText={i18n.t('adminDashboard.addProject.contactName')}\r\n              value={this.state.contactName}\r\n              onChange={this.handleChanges}\r\n            />\r\n            <TextInput\r\n              id=\"contactPhone\"\r\n              name=\"contactPhone\"\r\n              labelText={i18n.t('adminDashboard.addProject.contactPhone')}\r\n              value={this.state.contactPhone}\r\n              onChange={this.handleChanges}\r\n            />\r\n            <TextInput\r\n              id={\"contactEmail\" + suffix}\r\n              name=\"contactEmail\"\r\n              labelText={i18n.t('adminDashboard.addProject.contactEmail') + ' *'}\r\n              value={this.state.contactEmail}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.email')}\r\n              invalid={this.state.invalid['contactEmail']}\r\n            />\r\n            <TextArea\r\n              name=\"notes\"\r\n              labelText={i18n.t('adminDashboard.addProject.notes')}\r\n              value={this.state.notes}\r\n              onChange={this.handleChanges}\r\n            />\r\n          </Form>\r\n        </div>\r\n      {modalConfirmation}\r\n    </ModalWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withKeycloak(EditProjectModal);\r\n","import React, {Component} from 'react';\r\nimport i18n from '../../i18n';\r\nimport {\r\n  Button,\r\n  DataTable,\r\n  ModalWrapper,\r\n  Table, TableBody,\r\n  TableCell, TableContainer, TableHead, TableHeader,\r\n  TableRow,\r\n} from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport {isPortalAdminOrSupport} from \"../../api/helpers\";\r\nimport {apiDeletePartnerFromProject} from \"../../api/projects\";\r\n\r\nclass ManagePartnersModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      projectId: this.props.project.id,\r\n      project: this.props.project,\r\n    }\r\n\r\n    this.headerData = [\r\n      {\r\n        header: i18n.t('adminDashboard.addPartner.partnerName'),\r\n        key: 'partner',\r\n      },\r\n      {\r\n        header: i18n.t('adminDashboard.addPartner.partnerNumber'),\r\n        key: 'partnerNumber',\r\n      },\r\n      {\r\n        header: i18n.t('adminDashboard.addPartner.notes'),\r\n        key: 'notes',\r\n      },\r\n      {\r\n        header: i18n.t('customerDashboard.action'),\r\n        key: 'action',\r\n      },\r\n    ];\r\n  }\r\n\r\n  async removePartner(projectId, partnerId) {\r\n    if (isPortalAdminOrSupport()) {\r\n      return await apiDeletePartnerFromProject(this.props.serviceUrl, projectId, partnerId);\r\n    }\r\n  }\r\n\r\n  handleRemovePartner = (e, projectId, partnerId) => {\r\n    e.preventDefault();\r\n    if (window.confirm('Are you sure you want to remove this partner from the project?')) {\r\n      this.removePartner(projectId, partnerId)\r\n        .then((result) => {\r\n          this.setState({\r\n            project: result.data,\r\n            submitMsg: i18n.t('submitMessages.deleted'),\r\n            submitColour: '#24a148',\r\n          });\r\n          this.props.updateProjectList();\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.error'),\r\n            submitColour: '#da1e28',\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const modalConfirmation = (\r\n      <div className=\"bx--modal-header\">\r\n        <p style={{color: this.state.submitColour}}>{this.state.submitMsg}</p>\r\n      </div>\r\n    )\r\n    const modalId = \"modal-form-manage-partners\";\r\n    return (\r\n      <ModalWrapper\r\n        buttonTriggerText={i18n.t('buttons.managePartners')}\r\n        modalHeading={i18n.t('adminDashboard.managePartners.title')}\r\n        buttonTriggerClassName=\"add-partner bx--btn bx--btn--tertiary add-partner-button\"\r\n        className=\"modal-form\"\r\n        id={modalId}\r\n        hasForm={false}\r\n        primaryButtonText={i18n.t('modalText.done')}\r\n        secondaryButtonText={null}\r\n      >\r\n        {modalConfirmation}\r\n        <div>\r\n          <DataTable rows={rowData} headers={this.headerData}>\r\n            {({rows, headers, getHeaderProps, getTableProps}) => (\r\n              <TableContainer description={i18n.t('customerDashboard.tableDesc')}>\r\n                <Table {...getTableProps()}>\r\n                  <TableHead>\r\n                    <TableRow key=\"headerRow\">\r\n                      {headers.map(header => {\r\n                        return <TableHeader {...getHeaderProps({header})}>\r\n                          {header.header}\r\n                        </TableHeader>\r\n                      })}\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {this.state.project.partners.map((partner, index) => {\r\n                      return (\r\n                        <TableRow key={\"partner\" + index}>\r\n                          <TableCell>\r\n                            {partner.name}\r\n                          </TableCell>\r\n                          <TableCell>\r\n                            {partner.partnerNumber}\r\n                          </TableCell>\r\n                          <TableCell>\r\n                            {partner.notes}\r\n                          </TableCell>\r\n                          <TableCell>\r\n                            <div>\r\n                              <Button\r\n                                kind=\"ghost\"\r\n                                onClick={e => this.handleRemovePartner(e, this.state.projectId, partner.id)}\r\n                                style={{display: 'block', width: '100%', color: 'red'}}\r\n                              >\r\n                                {i18n.t('buttons.delete')}\r\n                              </Button>\r\n                              <hr style={{margin: '0', border: 'none', borderTop: '1px solid lightgrey'}}/>\r\n                            </div>\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      )\r\n                    })\r\n                    }\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            )}\r\n          </DataTable>\r\n        </div>\r\n        {modalConfirmation}\r\n      </ModalWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nconst rowData = [\r\n  {\r\n    id: 'a',\r\n    name: 'Partner 1',\r\n    partnerNumber: '123',\r\n  },\r\n  {\r\n    id: 'b',\r\n    name: 'Partner 2',\r\n    partnerNumber: '456',\r\n  },\r\n];\r\n\r\nexport default withKeycloak(ManagePartnersModal);\r\n","import React from 'react';\nimport i18n from '../../i18n';\nimport withKeycloak from '../../auth/withKeycloak';\nimport { Button } from 'carbon-components-react';\nimport EditProjectModal from '../Admin/EditProjectModal';\nimport ManagePartnersModal from '../Admin/ManagePartnersModal';\nimport {isPortalAdmin} from '../../api/helpers';\nimport { Link } from 'react-router-dom';\n\nclass ProjectActionItems extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      showMenu: false,\n    };\n  }\n\n  handleClick = () => {\n    if (!this.state.showMenu) {\n      document.addEventListener('mousedown', this.handleOutsideClick, false);\n    } else {\n      document.removeEventListener('mousedown', this.handleOutsideClick, false);\n    }\n\n    this.setState(prevState => ({\n      showMenu: !prevState.showMenu,\n    }));\n  };\n\n  handleOutsideClick = e => {\n    if (this.node && !this.node.contains(e.target)) {\n      this.handleClick();\n    }\n  };\n\n  render() {\n    const isAdmin = isPortalAdmin();\n    const actionDivider = (\n      <hr style={{margin: '0', border: 'none', borderTop: '1px solid lightgrey'}}/>\n    );\n    const topButton = (\n      <Button onClick={this.handleClick} style={{padding: '10px 20px'}} kind=\"tertiary\">\n        +\n      </Button>\n    );\n    const editProjectSubscription = (\n      <div>\n        <EditProjectModal\n          key={this.props.project.id}\n          allProjects={this.props.allProjects}\n          project={this.props.project}\n          serviceUrl={this.props.serviceUrl}\n          updateProjectList={this.props.updateProjectList}\n        />\n        {actionDivider}\n      </div>\n    )\n    const subscriptionParam = this.props.subscription ? '&subscription=' + this.props.subscription.id : '';\n    const newOrRenewSubscription = (\n      <div>\n        <a\n          href={`/entando-de-app/${this.props.locale}/new_or_renew_subscription.page?project=${this.props.project.id}${subscriptionParam}`}\n          style={{textDecoration: 'none'}}\n        >\n          <Button kind=\"ghost\" style={{display: 'block', width: '100%'}} value=\"Subscription Request\">\n            {i18n.t('buttons.subscriptionRequest')}\n          </Button>\n        </a>\n        {actionDivider}\n      </div>\n    );\n    const manageUsers = (\n      <div>\n        <a\n          href={`/entando-de-app/${this.props.locale}/manage_users.page?project=${this.props.project.id}`}\n          style={{textDecoration: 'none'}}\n        >\n          <Button kind=\"ghost\" style={{display: 'block', width: '100%'}} value=\"Manage Users\">\n            {i18n.t('buttons.manageUsers')}\n          </Button>\n        </a>\n        {actionDivider}\n      </div>\n    );\n    const deleteProject = (\n      <div>\n        <Button\n          kind=\"ghost\"\n          onClick={e => this.props.handleDeleteProject(e, this.props.project.id)}\n          style={{display: 'block', width: '100%', color: 'red'}}\n        >\n          {i18n.t('buttons.delete')}\n        </Button>\n        {actionDivider}\n      </div>\n    );\n    if (!this.props.hasSubscription) {\n      return (\n        <div>\n          {topButton}\n          {this.state.showMenu && (\n            <div\n              className=\"menu\"\n              style={{zIndex: '100', position: 'absolute', backgroundColor: 'white'}}\n              ref={node => {\n                this.node = node;\n              }}\n            >\n              {actionDivider}\n              {isAdmin && editProjectSubscription}\n              {newOrRenewSubscription}\n              {isAdmin && manageUsers}\n              {isAdmin && deleteProject}\n            </div>\n          )}\n        </div>\n      );\n    } else {\n      return (\n        <div>\n          {topButton}\n          {this.state.showMenu && (\n            <div\n              className=\"menu\"\n              style={{zIndex: '100', position: 'absolute', backgroundColor: 'white'}}\n              ref={node => {\n                this.node = node;\n              }}\n            >\n              {actionDivider}\n              {/*View Project Subscription*/}\n              <Link to={`/subscription-details/${this.props.subscription.id}`} style={{textDecoration: 'none'}}>\n                <Button kind=\"ghost\" style={{display: 'block', width: '100%'}} value=\"View\">\n                  {i18n.t('buttons.view')}\n                </Button>\n              </Link>\n              {actionDivider}\n              {isAdmin && editProjectSubscription}\n              {/*Open Ticket*/}\n              <a\n                href={`/entando-de-app/${this.props.locale}/open_service_ticket.page?project=${this.props.project.id}`}\n                style={{textDecoration: 'none'}}\n              >\n                <Button kind=\"ghost\" style={{display: 'block', width: '100%'}} value=\"Open Ticket\">\n                  {i18n.t('buttons.openTicket')}\n                </Button>\n              </a>\n              {actionDivider}\n              {/*View All Tickets*/}\n              <a\n                href={\n                  this.props.ticketingSystem.url.substr(0, this.props.ticketingSystem.url.indexOf('/rest')) +\n                  '/issues/?jql=Organizations=' + this.props.project.systemId}\n                style={{textDecoration: 'none'}}\n                target=\"_blank\" rel=\"noreferrer\"\n              >\n                <Button kind=\"ghost\" style={{display: 'block', width: '100%'}} value=\"View All Tickets\">\n                  {i18n.t('buttons.viewAllTickets')}\n                </Button>\n              </a>\n              {actionDivider}\n              {newOrRenewSubscription}\n              {isAdmin && (\n                <div>\n                  {/*Manage Partners*/}\n                  <ManagePartnersModal\n                    key={this.props.project.id}\n                    project={this.props.project}\n                    serviceUrl={this.props.serviceUrl}\n                    updateProjectList={this.props.updateProjectList}\n                  />\n                  {actionDivider}\n                  {/*Manage Subscriptions*/}\n                  <a\n                    href={`/entando-de-app/${this.props.locale}/manage_subscriptions.page?project=${this.props.project.id}`}\n                    style={{textDecoration: 'none'}}\n                  >\n                    <Button kind=\"ghost\" style={{display: 'block', width: '100%'}} value=\"Manage Subscriptions\">\n                      {i18n.t('buttons.manageSubscriptions')}\n                    </Button>\n                  </a>\n                  {actionDivider}\n                  {manageUsers}\n                  {/*Delete Project*/}\n                  <Button\n                    kind=\"ghost\"\n                    onClick={e => this.props.handleDeleteProject(e, this.props.project.id)}\n                    className=\"button-warning\"\n                  >\n                    {i18n.t('buttons.delete')}\n                  </Button>\n                  {actionDivider}\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n      );\n    }\n  }\n}\n\nexport default withKeycloak(ProjectActionItems);\n","import {getDefaultOptions, request} from './helpers';\nimport moment from \"moment\";\n\nconst resource = 'api/project-subscriptions';\n\nexport const formatStartDate = (startDate) => {\n  return String(new Date(startDate).toDateString());\n}\n\nexport const formatEndDate = (startDate, lengthInMonths) => {\n  const endDate = new Date(startDate).setMonth(new Date(startDate).getMonth() + lengthInMonths);\n  return String(new Date(endDate).toDateString());\n}\n\nexport const stripTime = (date) => {\n  return moment(date).format('MM/DD/YYYY');\n}\n\nexport const apiSubscriptionGet = async (serviceUrl, id) => {\n  const url = `${serviceUrl}/${resource}/${id}`;\n  const options = {\n    ...getDefaultOptions(),\n    method: 'GET',\n  };\n  return request(url, options);\n};\n\n// Project Subscription creation consists of an object containing a projectSubscription, an entandoVersionId, and a\n// project id, see SubscriptionCreationRequest.\n/**\n * Called to create a new project subscription\n *\n * @param {string} serviceUrl\n * @param {ProjectSubscriptionCreation} projectSubscriptionCreation\n * @returns\n */\nexport const apiProjectSubscriptionPost = async (serviceUrl, projectSubscriptionCreation) => {\n  const url = `${serviceUrl}/${resource}`;\n  const options = {\n    ...getDefaultOptions(),\n    method: 'POST',\n    body: projectSubscriptionCreation ? JSON.stringify(projectSubscriptionCreation) : null,\n  };\n  return request(url, options);\n};\n\nexport const apiProjectSubscriptionPut = async (serviceUrl, projectSubscriptionCreation) => {\n  const url = `${serviceUrl}/${resource}`;\n  const options = {\n    ...getDefaultOptions(),\n    method: 'PUT',\n    body: projectSubscriptionCreation ? JSON.stringify(projectSubscriptionCreation) : null,\n  };\n  return request(url, options);\n};\n\n// Same format as {projectSubscriptionCreation}\nexport const apiRenewSubscription = async (serviceUrl, projectSubscriptionRenew) => {\n  const url = `${serviceUrl}/${resource}/renew`;\n\n  const options = {\n    ...getDefaultOptions(),\n    method: 'PUT',\n    body: projectSubscriptionRenew ? JSON.stringify(projectSubscriptionRenew) : null,\n  };\n\n  return request(url, options);\n};\n","import React, { Component } from 'react';\nimport { DataTable, TableContainer, Table, TableHead, TableRow, TableHeader, TableBody, TableCell } from 'carbon-components-react';\nimport '../../index.scss';\nimport { apiGetCustomersProjects, apiGetMyCustomersProjects, apiDeleteProjectFromCustomer } from '../../api/customers';\nimport withKeycloak from '../../auth/withKeycloak';\nimport { Link } from 'react-router-dom';\nimport i18n from '../../i18n';\nimport {authenticationChanged, isAuthenticated, isPortalAdminOrSupport} from '../../api/helpers';\nimport {apiCurrentTicketingSystemGet} from \"../../api/ticketingsystem\";\nimport ProjectActionItems from '../Admin/ProjectActionItems';\nimport {formatEndDate, formatStartDate} from \"../../api/subscriptions\";\n\nclass CustomerDataTable extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      projects: {},\n      ticketingSystem: {},\n      action: 'Edit',\n      showMenu: {},\n    };\n    this.headerData = [\n      {\n        header: i18n.t('customerDashboard.projectName'),\n        key: 'projectName',\n      },\n      {\n        header: i18n.t('customerDashboard.partners'),\n        key: 'partners',\n      },\n      {\n        header: i18n.t('customerDashboard.entandoVersion'),\n        key: 'entandoVersion',\n      },\n      {\n        header: i18n.t('customerDashboard.status'),\n        key: 'status',\n      },\n      {\n        header: i18n.t('customerDashboard.startDate'),\n        key: 'startDate',\n      },\n      {\n        header: i18n.t('customerDashboard.endDate'),\n        key: 'endDate',\n      },\n      {\n        header: i18n.t('customerDashboard.openTickets'),\n        key: 'openTickets',\n      },\n      {\n        header: i18n.t('customerDetails.notes'),\n        key: 'notes',\n      },\n      {\n        header: i18n.t('customerDashboard.action'),\n        key: 'action',\n      },\n    ];\n  }\n\n  async fetchData() {\n    if (isAuthenticated(this.props)) {\n      try {\n        var projects;\n        if (isPortalAdminOrSupport()) {\n          projects = await apiGetCustomersProjects(this.props.serviceUrl, this.props.customerNumber);\n        } else {\n          projects = await apiGetMyCustomersProjects(this.props.serviceUrl, this.props.customerNumber);\n        }\n\n        const ticketingSystem = await apiCurrentTicketingSystemGet(this.props.serviceUrl);\n\n        this.setState({\n          projects: projects,\n          ticketingSystem: ticketingSystem,\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    this.render();\n  }\n\n  componentDidMount() {\n    if (isAuthenticated(this.props)) {\n      this.fetchData();\n    }\n  }\n\n  updateProjectList = () => {\n    this.fetchData();\n  };\n\n  showMenu = (e, id) => {\n    var showMenu = {};\n    showMenu[String(id)] = !this.state.showMenu[String(id)];\n    this.setState({\n      showMenu: showMenu,\n    });\n  };\n\n  closeMenu = () => {\n    this.setState({ showMenu: false }, () => {\n      document.removeEventListener('click', this.closeMenu);\n    });\n  };\n\n  async deleteProject(id) {\n    const { keycloak } = this.props;\n    const authenticated = keycloak.initialized && keycloak.authenticated;\n    if (authenticated) {\n      return await apiDeleteProjectFromCustomer(this.props.serviceUrl, this.props.customerNumber, id);\n    }\n  }\n\n  handleDeleteProject = (e, id) => {\n    e.preventDefault();\n    if (window.confirm('Are you sure you want to delete this project?')) {\n      this.deleteProject(id)\n        .then(() => {\n          this.setState({\n            submitMsg: i18n.t('submitMessages.deleted'),\n            submitColour: '#24a148',\n          });\n          this.props.updateCustomerList();\n        })\n        .catch(() => {\n          this.setState({\n            submitMsg: i18n.t('submitMessages.error'),\n            submitColour: '#da1e28',\n          });\n        });\n    }\n  };\n\n  componentDidUpdate(prevProps) {\n    if (authenticationChanged(this.props, prevProps)) {\n      this.fetchData();\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <DataTable rows={rowData} headers={this.headerData}>\n          {({ rows, headers, getHeaderProps, getTableProps }) => (\n            <TableContainer description={i18n.t('customerDashboard.tableDesc')}>\n              <Table {...getTableProps()}>\n                <TableHead>\n                  <TableRow key=\"headerRow\">\n                    {headers.map(header => {\n                      let result;\n                      if (header.header === i18n.t('customerDetails.notes')) {\n                        if (isPortalAdminOrSupport()) {\n                          result = <TableHeader {...getHeaderProps({ header })}>{header.header}</TableHeader>;\n                        }\n                      } else {\n                        result = <TableHeader {...getHeaderProps({ header })}>{header.header}</TableHeader>;\n                      }\n                      return result;\n                    })}\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {Object.keys(this.state.projects).length !== 0\n                    ? this.state.projects.data.map((project, index) => {\n                        if (project.projectSubscriptions.length === 0) {\n                          return (\n                            <TableRow key={index}>\n                              <TableCell>{project.name}</TableCell>\n                              {project.partners.length !== 0 ? (\n                                <TableCell>\n                                  {project.partners.map(partner => (\n                                    <p>{partner.name}</p>\n                                  ))}\n                                </TableCell>\n                              ) : (\n                                <TableCell>{i18n.t('userMessages.none')}</TableCell>\n                              )}\n                              <TableCell>{i18n.t('userMessages.none')}</TableCell>\n                              <TableCell>{i18n.t('userMessages.none')}</TableCell>\n                              <TableCell>{i18n.t('userMessages.none')}</TableCell>\n                              <TableCell>{i18n.t('userMessages.none')}</TableCell>\n                              <TableCell>{project.tickets.length}</TableCell>\n                              {isPortalAdminOrSupport() ? <TableCell style={{ width: '250px' }}>{project.notes}</TableCell> : null}\n                              <TableCell>\n                                <ProjectActionItems\n                                  serviceUrl={this.props.serviceUrl}\n                                  ticketingSystem={this.state.ticketingSystem}\n                                  locale={this.props.locale}\n                                  hasSubscription={false}\n                                  project={project}\n                                  allProjects={this.state.projects.data}\n                                  handleDeleteProject={this.handleDeleteProject}\n                                  updateProjectList={this.updateProjectList}\n                                />\n                              </TableCell>\n                            </TableRow>\n                          );\n                        } else {\n                          //TODO: CP-67 this uses the last subscription which isn't necessarily the current active one\n                          var sub = project.projectSubscriptions[project.projectSubscriptions.length - 1];\n                          return (\n                            <TableRow key={index}>\n                              <TableCell>\n                                <Link to={`/subscription-details/${sub.id}`}>{project.name}</Link>\n                              </TableCell>\n                              {project.partners.length !== 0 ? (\n                                <TableCell>\n                                  {project.partners.map(partner => (\n                                    <p>{partner.name}</p>\n                                  ))}\n                                </TableCell>\n                              ) : (\n                                <TableCell>{i18n.t('userMessages.none')}</TableCell>\n                              )}\n                              {sub.entandoVersion ? (\n                                <TableCell>{sub.entandoVersion.name}</TableCell>\n                              ) : (\n                                <TableCell>{i18n.t('userMessages.none')}</TableCell>\n                              )}\n                              <TableCell>{sub.status}</TableCell>\n                              <TableCell>{formatStartDate(sub.startDate)}</TableCell>\n                              <TableCell>{formatEndDate(sub.startDate, sub.lengthInMonths)}</TableCell>\n                              <TableCell>{project.tickets.length}</TableCell>\n                              {isPortalAdminOrSupport() ?\n                                <TableCell style={{width: '250px'}}>{project.notes}</TableCell> : null\n                              }\n                              <TableCell>\n                                <ProjectActionItems\n                                  serviceUrl={this.props.serviceUrl}\n                                  ticketingSystem={this.state.ticketingSystem}\n                                  locale={this.props.locale}\n                                  subscription={sub}\n                                  hasSubscription={true}\n                                  project={project}\n                                  allProjects={this.state.projects.data}\n                                  handleDeleteProject={this.handleDeleteProject}\n                                  updateProjectList={this.updateProjectList}\n                                />\n                              </TableCell>\n                            </TableRow>\n                          );\n                        }\n                      })\n                    : null}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          )}\n        </DataTable>\n      </div>\n    );\n  }\n}\n\nconst rowData = [{id: 'a'}];\n\nexport default withKeycloak(CustomerDataTable);\n","import React from 'react';\r\nimport i18n from '../../i18n';\r\nimport { Tile } from 'carbon-components-react';\r\nimport { apiCustomerGet } from '../../api/customers';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\n\r\nclass CustomerDetails extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      customer: {},\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    const { keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n    if (authenticated) {\r\n      this.getCustomer(this.props.customerNumber);\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n    const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n\r\n    if (authenticated && changedAuth) {\r\n      this.getCustomer(this.props.customerNumber);\r\n    }\r\n  }\r\n\r\n  async getCustomer() {\r\n    const { keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n    if (authenticated) {\r\n      const customer = await apiCustomerGet(this.props.serviceUrl, this.props.customerNumber);\r\n      this.setState({\r\n        customer: customer.data,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"customer-details\">\r\n        <Tile>\r\n          <p>\r\n            <strong>{i18n.t('customerDashboard.customerName')}</strong> {this.state.customer.name}\r\n          </p>\r\n          <p>\r\n            <strong>{i18n.t('customerDashboard.customerId')}</strong> {this.state.customer.id}\r\n          </p>\r\n        </Tile>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withKeycloak(CustomerDetails);\r\n","import React, { Component } from 'react';\r\nimport i18n from '../../i18n';\r\nimport { ModalWrapper, Form, TextInput, TextArea } from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport { apiCustomerGet, apiCustomerPut } from '../../api/customers';\r\n\r\nclass EditCustomerModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      name: '',\r\n      customerNumber: '',\r\n      contactName: '',\r\n      contactPhone: '',\r\n      contactEmail: '',\r\n      notes: '',\r\n      invalid: {},\r\n      modalId: '',\r\n      buttonId: '',\r\n      submitMsg: '',\r\n      submitColour: 'black',\r\n    };\r\n  }\r\n\r\n  handleValidation() {\r\n    let invalid = {};\r\n    let formIsValid = true;\r\n\r\n    //name\r\n    if (this.state.name === '') {\r\n      formIsValid = false;\r\n      invalid['name'] = true;\r\n    }\r\n\r\n    //customerNumber\r\n    if (this.state.customerNumber === '') {\r\n      formIsValid = false;\r\n      invalid['customerNumber'] = true;\r\n    }\r\n\r\n    //contactEmail\r\n    if (typeof this.state.contactEmail !== 'undefined') {\r\n      let lastAtPos = this.state.contactEmail.lastIndexOf('@');\r\n      let lastDotPos = this.state.contactEmail.lastIndexOf('.');\r\n\r\n      if (\r\n        !(\r\n          lastAtPos < lastDotPos &&\r\n          lastAtPos > 0 &&\r\n          this.state.contactEmail.indexOf('@@') === -1 &&\r\n          lastDotPos > 2 &&\r\n          this.state.contactEmail.length - lastDotPos > 2\r\n        )\r\n      ) {\r\n        formIsValid = false;\r\n        invalid['contactEmail'] = true;\r\n      }\r\n    }\r\n\r\n    this.setState({ invalid: invalid });\r\n    return formIsValid;\r\n  }\r\n\r\n  handleChanges = e => {\r\n    const input = e.target;\r\n    const name = input.name;\r\n    const value = input.value;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  async updateCustomer(customer) {\r\n    const { keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n    if (authenticated) {\r\n      return await apiCustomerPut(this.props.serviceUrl, customer);\r\n    }\r\n  }\r\n\r\n  getCustomerDetails = customerId => {\r\n    this.getCustomer(customerId);\r\n  };\r\n\r\n  async getCustomer(customerId) {\r\n    const { keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n    if (authenticated) {\r\n      const customer = await apiCustomerGet(this.props.serviceUrl, customerId);\r\n      this.setState({\r\n        name: customer.data.name,\r\n        customerNumber: customer.data.customerNumber,\r\n        contactName: customer.data.contactName,\r\n        contactPhone: customer.data.contactPhone,\r\n        contactEmail: customer.data.contactEmail,\r\n        notes: customer.data.notes,\r\n        modalId: 'modal-form-customer-edit-' + customer.data.id,\r\n        buttonId: 'edit-customer-button-' + customer.data.id,\r\n      });\r\n    }\r\n  }\r\n\r\n  handleFormSubmit = () => {\r\n    const formIsValid = this.handleValidation();\r\n\r\n    if (formIsValid) {\r\n      const customer = {\r\n        id: this.props.customer.id,\r\n        name: this.state.name,\r\n        customerNumber: this.state.customerNumber,\r\n        contactName: this.state.contactName,\r\n        contactPhone: this.state.contactPhone,\r\n        contactEmail: this.state.contactEmail,\r\n        notes: this.state.notes,\r\n      };\r\n      this.updateCustomer(customer)\r\n        .then(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.updated'),\r\n            submitColour: '#24a148',\r\n          });\r\n          this.props.updateCustomerList();\r\n          this.getCustomerDetails(this.props.customer.id);\r\n        })\r\n        .catch(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.error'),\r\n            submitColour: '#da1e28',\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  clearValues = () => {\r\n    const { keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n    const customerModalElement = document.querySelector('#' + this.state.modalId);\r\n    if (!customerModalElement.className.includes('is-visible') && authenticated) {\r\n      this.setState({\r\n        name: this.props.customer.name,\r\n        customerNumber: this.props.customer.customerNumber,\r\n        contactName: this.props.customer.contactName,\r\n        contactPhone: this.props.customer.contactPhone,\r\n        contactEmail: this.props.customer.contactEmail,\r\n        notes: this.props.customer.notes,\r\n        invalid: {},\r\n      });\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n    if (authenticated) {\r\n      if (this.props.customerId) {\r\n        this.getCustomerDetails(this.props.customerId);\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n    const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n\r\n    if (authenticated && changedAuth) {\r\n      this.getCustomerDetails(this.props.customerId);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const modalConfirmation = (\r\n      <div className=\"bx--modal-header\">\r\n        <p style={{ color: this.state.submitColour }}>{this.state.submitMsg}</p>\r\n      </div>\r\n    )\r\n    const modalId = this.state.modalId\r\n    const buttonClassName = 'bx--btn bx--btn--ghost edit-customer-button-' + this.props.customer.id;\r\n    return (\r\n      <ModalWrapper\r\n        buttonTriggerText={i18n.t('buttons.edit')}\r\n        modalHeading={i18n.t('adminDashboard.editCustomer.title')}\r\n        buttonTriggerClassName={buttonClassName}\r\n        className=\"modal-form\"\r\n        id={modalId}\r\n        handleSubmit={this.handleFormSubmit}\r\n        primaryButtonText={i18n.t('modalText.save')}\r\n        secondaryButtonText={i18n.t('modalText.cancel')}\r\n      >\r\n        {modalConfirmation}\r\n        <div className=\"form-container\">\r\n          <Form onSubmit={this.handleFormSubmit}>\r\n            <TextInput\r\n              id={\"name\"+modalId}\r\n              name=\"name\"\r\n              labelText={i18n.t('adminDashboard.addCustomer.customerName') + ' *'}\r\n              value={this.state.name}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.required')}\r\n              invalid={this.state.invalid['name']}\r\n            />\r\n            <TextInput\r\n              id={\"customerNumber\"+modalId}\r\n              name=\"customerNumber\"\r\n              labelText={i18n.t('adminDashboard.addCustomer.customerNumber') + ' *'}\r\n              value={this.state.customerNumber}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.required')}\r\n              invalid={this.state.invalid['customerNumber']}\r\n            />\r\n            <TextInput\r\n              id={\"contactName\"+modalId}\r\n              name=\"contactName\"\r\n              labelText={i18n.t('adminDashboard.addCustomer.contactName')}\r\n              value={this.state.contactName}\r\n              onChange={this.handleChanges}\r\n            />\r\n            <TextInput\r\n              id={\"contactPhone\"+modalId}\r\n              name=\"contactPhone\"\r\n              labelText={i18n.t('adminDashboard.addCustomer.contactPhone')}\r\n              value={this.state.contactPhone}\r\n              onChange={this.handleChanges}\r\n            />\r\n            <TextInput\r\n              id={\"contactEmail\"+modalId}\r\n              name=\"contactEmail\"\r\n              labelText={i18n.t('adminDashboard.addCustomer.contactEmail') + ' *'}\r\n              value={this.state.contactEmail}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.email')}\r\n              invalid={this.state.invalid['contactEmail']}\r\n            />\r\n            <TextArea\r\n              name=\"notes\"\r\n              labelText={i18n.t('adminDashboard.addCustomer.notes')}\r\n              value={this.state.notes}\r\n              onChange={this.handleChanges}\r\n            />\r\n          </Form>\r\n        </div>\r\n        {modalConfirmation}\r\n      </ModalWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withKeycloak(EditCustomerModal);\r\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport {AccordionItem, Button} from 'carbon-components-react';\nimport withKeycloak from '../../auth/withKeycloak';\nimport {\n  apiCustomerGet,\n  apiCustomerDelete,\n  apiGetCustomersProjects,\n  apiGetMyCustomersProjects\n} from '../../api/customers';\nimport CustomerDataTable from './CustomerDataTable';\nimport CustomerDetails from './CustomerDetails';\nimport {isPortalAdminOrSupport, isPortalAdmin, isPortalCustomer} from '../../api/helpers';\nimport EditCustomerModal from '../Admin/EditCustomerModal';\nimport i18n from '../../i18n';\n\nclass CustomerAccordian extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      projects: {},\n      customer: {},\n      authenticated: false,\n    };\n  }\n\n  componentDidMount() {\n    const { keycloak } = this.props;\n    const authenticated = keycloak.initialized && keycloak.authenticated;\n\n    if (authenticated) {\n      this.getCustomersProjects(this.props.customerNumber);\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { keycloak } = this.props;\n    const authenticated = keycloak.initialized && keycloak.authenticated;\n\n    const changedAuth = prevProps.keycloak.authenticated !== authenticated;\n\n    if (authenticated && changedAuth) {\n      this.getCustomersProjects(this.props.customerNumber);\n    }\n  }\n\n  async getCustomersProjects(id) {\n    const { keycloak } = this.props;\n    const authenticated = keycloak.initialized && keycloak.authenticated;\n    if (authenticated) {\n      const customer = await apiCustomerGet(this.props.serviceUrl, id);\n\n      var projects;\n      try {\n        if (isPortalAdminOrSupport()) {\n          projects = await apiGetCustomersProjects(this.props.serviceUrl, id);\n        } else {\n          projects = await apiGetMyCustomersProjects(this.props.serviceUrl, id);\n        }\n\n        this.setState({\n          projects: projects.data,\n          customer: customer.data,\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }\n\n  async deleteCustomer() {\n    return await apiCustomerDelete(this.props.serviceUrl, this.state.customer.id);\n  }\n\n  handleDelete() {\n    if (window.confirm('Are you sure you want to delete this customer?')) {\n      this.deleteCustomer().then(() => {\n        this.props.updateCustomerList();\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <div>\n          {isPortalCustomer() ? <CustomerDetails serviceUrl={this.props.serviceUrl} customerNumber={this.props.customerNumber} /> : null}\n          <AccordionItem title={this.props.title} open={this.props.accordionOpened}>\n            <div style={{ display: 'flex' }}>\n              {isPortalAdminOrSupport() ? (\n                <Link style={{ textDecoration: 'none' }} to={`/customer-details/${this.state.customer.id}`}>\n                  <Button kind=\"ghost\">{i18n.t('buttons.viewDetails')}</Button>\n                </Link>\n              ) : null}\n              {isPortalAdmin() ? (\n                <div style={{ display: 'flex' }}>\n                  <EditCustomerModal\n                    serviceUrl={this.props.serviceUrl}\n                    customer={this.state.customer}\n                    key={this.state.customer.id}\n                    updateCustomerList={this.props.updateCustomerList}\n                    customerId={this.state.customer.id}\n                  />\n                  <Button kind=\"ghost\" style={{ color: 'red' }} onClick={() => this.handleDelete()}>\n                    {i18n.t('buttons.delete')}\n                  </Button>\n                </div>\n              ) : null}\n            </div>\n            <CustomerDataTable\n              key={new Date().getTime()}\n              serviceUrl={this.props.serviceUrl}\n              customerNumber={this.props.customerNumber}\n              locale={this.props.locale}\n              updateCustomerList={this.props.updateCustomerList}\n            />\n          </AccordionItem>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withKeycloak(CustomerAccordian);\n","import React from 'react';\r\nimport i18n from '../../i18n';\r\nimport { Accordion, PaginationNav, Search, Tile } from 'carbon-components-react';\r\nimport AddCustomerModal from './AddCustomerModal';\r\nimport AddPartnerModal from './AddPartnerModal';\r\nimport AddProjectModal from './AddProjectModal';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport { apiAdminCustomersGet, apiMyCustomersGet } from '../../api/customers';\r\nimport CustomerAccordian from '../Customer/CustomerAccordian';\r\nimport { isPortalAdmin, isPortalSupport, isPortalPartner, isPortalCustomer, isPortalAdminOrSupport, isPortalUser } from '../../api/helpers';\r\nimport { apiProjectsGet, apiMyProjectsGet } from '../../api/projects';\r\n\r\nclass AdminDashboard extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      customers: {},\r\n      projects: {},\r\n      customersProjects: {},\r\n      role: '',\r\n      filteredCustomers: {},\r\n      currentPage: 0,\r\n      test: '',\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getCustomers();\r\n    this.getProjects();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n    const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n\r\n    if (authenticated && changedAuth) {\r\n      this.getCustomers();\r\n      this.getProjects();\r\n    }\r\n  }\r\n\r\n  async getProjects() {\r\n    const { keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n    if (authenticated) {\r\n      var projects = '';\r\n      if (isPortalAdminOrSupport()) {\r\n        projects = await apiProjectsGet(this.props.serviceUrl);\r\n      } else {\r\n        projects = await apiMyProjectsGet(this.props.serviceUrl);\r\n      }\r\n      this.setState({\r\n        projects: projects.data,\r\n      });\r\n    }\r\n  }\r\n\r\n  async getCustomers() {\r\n    const { keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n    if (authenticated) {\r\n      var customers;\r\n      if (isPortalAdminOrSupport()) {\r\n        customers = await apiAdminCustomersGet(this.props.serviceUrl);\r\n      } else {\r\n        customers = await apiMyCustomersGet(this.props.serviceUrl);\r\n      }\r\n\r\n      this.setState({\r\n        customers: customers.data,\r\n        filteredCustomers: customers.data,\r\n      });\r\n    }\r\n  }\r\n\r\n  handleSearch = event => {\r\n    if (event.key === 'Enter') {\r\n      const newFilteredState = this.state.customers.filter(customer =>\r\n        customer.name.toLowerCase().includes(event.target.value.toLowerCase())\r\n      );\r\n      this.setState({\r\n        filteredCustomers: newFilteredState,\r\n        currentPage: 0,\r\n      });\r\n    } else {\r\n      if (event.target.value === '' || event.target.value === undefined) {\r\n        this.setState({\r\n          filteredCustomers: this.state.customers,\r\n        });\r\n      }\r\n    }\r\n    this.forceUpdate();\r\n  };\r\n\r\n  updateCustomerList = () => {\r\n    this.getCustomers();\r\n    this.getProjects();\r\n  };\r\n\r\n  render() {\r\n    var numberOfPages = 1;\r\n    if (Object.keys(this.state.filteredCustomers).length !== 0) {\r\n      numberOfPages = Math.ceil(this.state.filteredCustomers.length / 5);\r\n    } else {\r\n      numberOfPages = 1;\r\n    }\r\n\r\n    const props = () => ({\r\n      loop: Boolean(false),\r\n      page: Number(this.state.currentPage),\r\n      totalItems: Number(numberOfPages),\r\n      itemsShown: Number(1),\r\n      onChange: event => this.setState({ currentPage: event }),\r\n    });\r\n\r\n    return (\r\n      <div className=\"admin-dashboard\">\r\n        {isPortalAdmin() ? (\r\n          <h3 className=\"pageTitle\">{i18n.t('adminDashboard.adminTitle')}</h3>\r\n        ) : isPortalSupport() ? (\r\n          <h3 className=\"pageTitle\">{i18n.t('adminDashboard.supportTitle')}</h3>\r\n        ) : isPortalCustomer() ? (\r\n          <h3 className=\"pageTitle\">{i18n.t('adminDashboard.customerTitle')}</h3>\r\n        ) : isPortalPartner() ? (\r\n          <h3 className=\"pageTitle\">{i18n.t('adminDashboard.partnerTitle')}</h3>\r\n        ) : null}\r\n        {isPortalAdmin() || isPortalSupport() || isPortalPartner() ? (\r\n          <Tile>\r\n            <p className=\"title\">{i18n.t('adminDashboard.allCustomers')}</p>\r\n            <div className=\"bx--row\">\r\n              <div className=\"bx--col\">\r\n                <Search\r\n                  onChange={this.handleSearch}\r\n                  id=\"search\"\r\n                  placeholder={i18n.t('adminDashboard.searchText')}\r\n                  labelText={i18n.t('adminDashboard.searchLabel')}\r\n                  onKeyPress={this.handleSearch}\r\n                />\r\n              </div>\r\n              {isPortalAdmin() ? (\r\n                <div className=\"bx--col\">\r\n                  <div>\r\n                    <AddPartnerModal\r\n                      serviceUrl={this.props.serviceUrl}\r\n                      updateCustomerList={this.updateCustomerList}\r\n                      allProjects={this.state.projects}\r\n                    />\r\n                    <AddCustomerModal serviceUrl={this.props.serviceUrl} updateCustomerList={this.updateCustomerList} />\r\n                    <AddProjectModal\r\n                      serviceUrl={this.props.serviceUrl}\r\n                      updateCustomerList={this.updateCustomerList}\r\n                      allCustomers={this.state.customers}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n          </Tile>\r\n        ) : null}\r\n\r\n        <div className=\"form-container\">\r\n          <Accordion>\r\n            {Object.keys(this.state.customers).length !== 0\r\n              ? this.state.filteredCustomers.map((customer, index) => {\r\n                  // Pagination for Admin and Support roles (5 items per page)\r\n                  var indexOfLastItem = (this.state.currentPage + 1) * 5 - 1;\r\n                  var firstIndexOfCurrentPage = this.state.currentPage * 5;\r\n                  var accordionOpened = this.state.customers.length === 1;\r\n\r\n                  if (isPortalUser()) {\r\n                    if (index >= firstIndexOfCurrentPage && index <= indexOfLastItem) {\r\n                      return (\r\n                        <CustomerAccordian\r\n                          key={customer.id}\r\n                          serviceUrl={this.props.serviceUrl}\r\n                          customerNumber={customer.id}\r\n                          title={customer.name}\r\n                          updateCustomerList={this.updateCustomerList}\r\n                          locale={this.props.locale}\r\n                          accordionOpened={accordionOpened}\r\n                        />\r\n                      );\r\n                    } else {\r\n                      return null;\r\n                    }\r\n                  } else {\r\n                    return null;\r\n                  }\r\n                })\r\n              : null}\r\n          </Accordion>\r\n          <PaginationNav {...props()} className=\"pagination-right\" />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withKeycloak(AdminDashboard);\r\n","import { getDefaultOptions, request, getUrl } from './helpers';\r\n\r\nconst resource = 'api/tickets';\r\n\r\nexport const apiTicketDelete = async (serviceUrl, id) => {\r\n  const url = `${serviceUrl}/${resource}/${id}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiTicketsGet = async serviceUrl => {\r\n  const url = getUrl(`${serviceUrl}/${resource}`);\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiTicketPost = async (serviceUrl, ticket) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n    body: ticket ? JSON.stringify(ticket) : null,\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nconst jiraResource = 'api/tickets/ticketingsystem';\r\nexport const apiJiraTicketDelete = async (serviceUrl, id) => {\r\n  const url = `${serviceUrl}/${jiraResource}/${id}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiJiraTicketsGet = async (serviceUrl, projectName, organization) => {\r\n  const url = `${serviceUrl}/${jiraResource}/${projectName}/${organization}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiJiraTicketPost = async (serviceUrl, projectName, organization, ticket) => {\r\n  const url = `${serviceUrl}/${jiraResource}/${projectName}/${organization}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n    body: ticket ? JSON.stringify(ticket) : null,\r\n  };\r\n  return request(url, options);\r\n};\r\n","import React, { Component } from 'react';\r\nimport {\r\n  DataTable,\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableHeader,\r\n  TableBody,\r\n  TableCell,\r\n  PaginationNav,\r\n} from 'carbon-components-react';\r\nimport {apiJiraTicketsGet} from '../../api/tickets';\r\nimport {apiCurrentTicketingSystemGet} from '../../api/ticketingsystem';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport {apiProjectGet, apiAddTicketToProject, apiGetMyProject} from '../../api/projects';\r\nimport {isPortalAdminOrSupport, isPortalUser} from '../../api/helpers';\r\nimport i18n from '../../i18n';\r\n\r\nclass TicketList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      tickets: {},\r\n      project: {},\r\n      currentTicketingSystem: {},\r\n      currentPage: 0,\r\n    };\r\n    this.headerData = [\r\n      {\r\n        header: i18n.t('ticketDetails.issue'),\r\n        key: 'issue',\r\n      },\r\n      {\r\n        header: i18n.t('ticketDetails.summary'),\r\n        key: 'summary',\r\n      },\r\n      {\r\n        header: i18n.t('ticketDetails.status'),\r\n        key: 'status',\r\n      },\r\n      {\r\n        header: i18n.t('ticketDetails.type'),\r\n        key: 'type',\r\n      },\r\n      {\r\n        header: i18n.t('ticketDetails.priority'),\r\n        key: 'priority',\r\n      },\r\n      {\r\n        header: i18n.t('ticketDetails.created'),\r\n        key: 'created',\r\n      },\r\n      {\r\n        header: i18n.t('ticketDetails.updated'),\r\n        key: 'updated',\r\n      },\r\n      {\r\n        header: i18n.t('ticketDetails.link'),\r\n        key: 'link',\r\n      },\r\n    ];\r\n  }\r\n\r\n  async fetchData() {\r\n    const { keycloak } = this.props;\r\n    var authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n    if (authenticated) {\r\n      try {\r\n        let project;\r\n        if (isPortalAdminOrSupport()) {\r\n          project = await apiProjectGet(this.props.serviceUrl, this.props.projectId);\r\n        } else {\r\n          project = await apiGetMyProject(this.props.serviceUrl, this.props.projectId);\r\n        }\r\n        const currentTicketingSystem = await apiCurrentTicketingSystemGet(this.props.serviceUrl);\r\n        var tickets = await apiJiraTicketsGet(this.props.serviceUrl, currentTicketingSystem.systemId, project.data.systemId);\r\n        for (var i = 0; i < tickets.data.length; i++) {\r\n          apiAddTicketToProject(this.props.serviceUrl, this.props.projectId, tickets.data[i].id);\r\n        }\r\n\r\n        this.setState({\r\n          tickets: tickets,\r\n          project: project,\r\n          currentTicketingSystem: currentTicketingSystem,\r\n        });\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (isPortalUser()) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n    const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n\r\n    if (authenticated && changedAuth && isPortalUser()) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var numberOfPages = 1;\r\n    if (Object.keys(this.state.tickets).length !== 0) {\r\n      numberOfPages = Math.ceil(this.state.tickets.data.length / 10);\r\n    }\r\n\r\n    const paginationProps = () => ({\r\n      loop: Boolean(false),\r\n      page: Number(this.state.currentPage),\r\n      totalItems: Number(numberOfPages),\r\n      itemsShown: Number(1),\r\n      onChange: event => this.setState({currentPage: event}),\r\n    });\r\n    const ticketSystemUrl = this.state.currentTicketingSystem.url;\r\n    const ticketingSystemBaseUrl = (ticketSystemUrl != null) ?\r\n      ticketSystemUrl.substr(0, ticketSystemUrl.indexOf('/rest'))\r\n      : null;\r\n\r\n    return (\r\n      <div>\r\n        <DataTable rows={rowData} headers={this.headerData}>\r\n          {({rows, headers, getHeaderProps, getTableProps}) => (\r\n            <TableContainer\r\n              title={i18n.t('ticketDetails.listOfTickets')}\r\n              description={\r\n                this.state.project.data != null ? (\r\n                  <a\r\n                    href={ticketingSystemBaseUrl + '/issues/' +\r\n                    '?jql=Organizations=' +\r\n                    this.state.project.data.systemId\r\n                    }\r\n                    style={{textDecoration: 'none'}}\r\n                    target=\"_blank\" rel=\"noreferrer\"\r\n                  >\r\n                    {i18n.t('buttons.viewAllTickets')}\r\n                  </a>\r\n                ) : (\r\n                  <div>{i18n.t('ticketDetails.tickets')}</div>\r\n                )\r\n              }\r\n            >\r\n              <Table {...getTableProps()}>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    {headers.map(header => (\r\n                      <TableHeader {...getHeaderProps({ header })}>{header.header}</TableHeader>\r\n                    ))}\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {Object.keys(this.state.tickets).length !== 0 ? (\r\n                    this.state.tickets.data.map((ticket, index) => {\r\n                      const indexOfLastItem = (this.state.currentPage + 1) * 10 - 1;\r\n                      const firstIndexOfCurrentPage = this.state.currentPage * 10;\r\n                      const ticketUrl = ticketingSystemBaseUrl +\r\n                        '/browse/' + ticket.systemId;\r\n\r\n                      if (index >= firstIndexOfCurrentPage && index <= indexOfLastItem) {\r\n                        return (\r\n                          <TableRow key={ticket.id}>\r\n                            <TableCell>\r\n                              <a href={ticketUrl} target=\"_blank\" rel=\"noreferrer\">\r\n                                {ticket.systemId}\r\n                              </a>\r\n                            </TableCell>\r\n                            <TableCell>{ticket.summary}</TableCell>\r\n                            <TableCell>{ticket.status}</TableCell>\r\n                            <TableCell>{ticket.type}</TableCell>\r\n                            <TableCell>{ticket.priority}</TableCell>\r\n                            <TableCell>{new Date(ticket.createDate).toDateString()}</TableCell>\r\n                            <TableCell>{new Date(ticket.updateDate).toDateString()}</TableCell>\r\n                            <TableCell>\r\n                              <a href={ticketUrl} target=\"_blank\" rel=\"noreferrer\">\r\n                                {i18n.t('ticketDetails.viewTicket')}\r\n                              </a>\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        );\r\n                      } else {\r\n                        return null;\r\n                      }\r\n                    })\r\n                  ) : (\r\n                    <TableRow/>\r\n                  )}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          )}\r\n        </DataTable>\r\n        <PaginationNav {...paginationProps()} className=\"pagination-right\"/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst rowData = [\r\n  {\r\n    id: 'a',\r\n    projectName: 'Ticket1',\r\n    project: 'Leonardo',\r\n    entandoVersion: 6.2,\r\n    creationDate: 'October, 2019',\r\n    openTicket: 'Open Ticket',\r\n  },\r\n  {\r\n    id: 'a',\r\n    projectName: 'Ticket1',\r\n    project: 'Leonardo',\r\n    entandoVersion: 6.2,\r\n    creationDate: 'October, 2019',\r\n    openTicket: 'Open Ticket',\r\n  },\r\n  {\r\n    id: 'a',\r\n    projectName: 'Ticket1',\r\n    project: 'Leonardo',\r\n    entandoVersion: 6.2,\r\n    creationDate: 'October, 2019',\r\n    openTicket: 'Open Ticket',\r\n  },\r\n];\r\n\r\nexport default withKeycloak(TicketList);\r\n","import React, { Component } from 'react';\r\nimport i18n from '../../i18n';\r\nimport { ModalWrapper, Form, TextInput, TextArea, Select, SelectItem, DatePicker, DatePickerInput } from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport { apiProjectSubscriptionPut, apiSubscriptionGet } from '../../api/subscriptions';\r\nimport moment from 'moment';\r\n\r\nclass EditSubscriptionModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      level: '',\r\n      status: '',\r\n      lengthInMonths: '',\r\n      startDate: '',\r\n      notes: '',\r\n      invalid: {},\r\n      submitMsg: '',\r\n      submitColour: 'black',\r\n    };\r\n  }\r\n\r\n  handleValidation() {\r\n    let invalid = {};\r\n    let formIsValid = true;\r\n\r\n    if (this.state.level === 'level') {\r\n      formIsValid = false;\r\n      invalid['level'] = true;\r\n    }\r\n\r\n    if (this.state.status === 'status') {\r\n      formIsValid = false;\r\n      invalid['status'] = true;\r\n    }\r\n\r\n    if (this.state.lengthInMonths === '' || !this.isNumeric(String(this.state.lengthInMonths))) {\r\n      formIsValid = false;\r\n      invalid['lengthInMonths'] = true;\r\n    }\r\n\r\n    if (typeof this.state.startDate !== 'undefined') {\r\n      if (!this.state.startDate.match(/^(0[1-9]|1[0-2])\\/(0[1-9]|1\\d|2\\d|3[01])\\/(19|20)\\d{2}$/)) {\r\n        formIsValid = false;\r\n        invalid['startDate'] = true;\r\n      }\r\n    }\r\n\r\n    this.setState({ invalid: invalid });\r\n    return formIsValid;\r\n  }\r\n\r\n  isNumeric(str) {\r\n    if (typeof str != 'string') return false;\r\n    return !isNaN(str) && !isNaN(parseFloat(str));\r\n  }\r\n\r\n  handleChanges = e => {\r\n    const input = e.target;\r\n    const name = input.name;\r\n    const value = input.value;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleFormSubmit = e => {\r\n    const formIsValid = this.handleValidation();\r\n\r\n    if (formIsValid) {\r\n      const subscriptionRequest = {\r\n        projectSubscription: {\r\n          id: this.props.subscription.id,\r\n          level: this.state.level,\r\n          status: this.state.status,\r\n          lengthInMonths: this.state.lengthInMonths,\r\n          startDate: moment(this.state.startDate).format(),\r\n          notes: this.state.notes,\r\n          project: this.props.project,\r\n          entandoVersion: this.props.subscription.entandoVersion,\r\n        },\r\n      };\r\n      this.subscriptionPut(subscriptionRequest)\r\n        .then(result => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.updated'),\r\n            submitColour: '#24a148',\r\n          });\r\n          this.props.updateSubscription();\r\n        })\r\n        .catch(err => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.error'),\r\n            submitColour: '#da1e28',\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n    if (authenticated) {\r\n      this.getSubscriptionDetails();\r\n    }\r\n  }\r\n\r\n  handleStartDateChange = date => {\r\n    this.setState({\r\n      startDate: moment(date[0].toISOString()).format('MM/DD/YYYY'),\r\n    });\r\n  };\r\n\r\n  async getSubscriptionDetails() {\r\n    const { keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n    if (authenticated) {\r\n      const subscription = await apiSubscriptionGet(this.props.serviceUrl, this.props.subscription.id);\r\n      this.setState({\r\n        level: subscription.data.level,\r\n        status: subscription.data.status,\r\n        lengthInMonths: subscription.data.lengthInMonths,\r\n        startDate: moment(subscription.data.startDate).format('MM/DD/YYYY'),\r\n        notes: subscription.data.notes,\r\n        submitMsg: '',\r\n      });\r\n    }\r\n  }\r\n\r\n  async subscriptionPut(subscription) {\r\n    const { keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n    if (authenticated) {\r\n      return await apiProjectSubscriptionPut(this.props.serviceUrl, subscription);\r\n    }\r\n  }\r\n  render() {\r\n    const levelList = ['GOLD', 'PLATINUM'];\r\n    const statusList = ['REQUESTED', 'PENDING', 'ACTIVE', 'EXPIRED'];\r\n    const modalId = \"modal-form-sub-edit\"\r\n    const modalConfirmation = (\r\n      <div className=\"bx--modal-header\">\r\n        <p style={{ color: this.state.submitColour }}>{this.state.submitMsg}</p>\r\n      </div>\r\n    )\r\n    return (\r\n      <ModalWrapper\r\n        buttonTriggerText={i18n.t('buttons.edit')}\r\n        modalHeading={i18n.t('editSubscription.title')}\r\n        buttonTriggerClassName=\"add-project bx--btn bx--btn--tertiary edit-sub-button\"\r\n        className=\"modal-form\"\r\n        id= {modalId}\r\n        handleSubmit={this.handleFormSubmit}\r\n        primaryButtonText={i18n.t('modalText.save')}\r\n        secondaryButtonText={i18n.t('modalText.cancel')}\r\n      >\r\n        {modalConfirmation}\r\n        <div className=\"form-container\">\r\n          <Form onSubmit={this.handleFormSubmit}>\r\n            <Select\r\n              id={\"level\"+modalId}\r\n              name=\"level\"\r\n              labelText={i18n.t('subscriptionDetails.level') + ' *'}\r\n              value={this.state.level}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.required')}\r\n              invalid={this.state.invalid['level']}\r\n            >\r\n              <SelectItem disabled text=\"Select Level\" value=\"level\" />\r\n              {levelList.map((level, i) => (\r\n                <SelectItem key={i} text={level} value={level}>\r\n                  {level}\r\n                </SelectItem>\r\n              ))}\r\n            </Select>\r\n            <Select\r\n              id={\"status\"+modalId}\r\n              name=\"status\"\r\n              labelText={i18n.t('subscriptionDetails.status') + ' *'}\r\n              value={this.state.status}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.required')}\r\n              invalid={this.state.invalid['status']}\r\n            >\r\n              <SelectItem disabled text=\"Select Status\" value=\"status\" />\r\n              {statusList.map((status, i) => (\r\n                <SelectItem key={i} text={status} value={status}>\r\n                  {status}\r\n                </SelectItem>\r\n              ))}\r\n            </Select>\r\n            <DatePicker dateFormat=\"m/d/Y\" datePickerType=\"single\" onChange={this.handleStartDateChange} value={this.state.startDate}>\r\n              <DatePickerInput\r\n                id={\"startDate\"+modalId}\r\n                name=\"startDate\"\r\n                placeholder=\"mm/dd/yyyy\"\r\n                labelText={i18n.t('subscriptionDetails.startDate') + ' *'}\r\n                //onChange={this.handleChanges}\r\n                type=\"text\"\r\n                invalidText={i18n.t('validation.invalid.date')}\r\n                invalid={this.state.invalid['startDate']}\r\n              />\r\n            </DatePicker>\r\n            <TextInput\r\n              id={\"lengthInMonths\"+modalId}\r\n              name=\"lengthInMonths\"\r\n              labelText={i18n.t('subscriptionDetails.lengthInMonths') + ' *'}\r\n              value={this.state.lengthInMonths}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.number')}\r\n              invalid={this.state.invalid['lengthInMonths']}\r\n            />\r\n            <TextArea\r\n              id={\"notes\"+modalId}\r\n              name=\"notes\"\r\n              labelText={i18n.t('adminDashboard.addProject.notes')}\r\n              value={this.state.notes}\r\n              onChange={this.handleChanges}\r\n            />\r\n          </Form>\r\n        </div>\r\n        {modalConfirmation}\r\n      </ModalWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withKeycloak(EditSubscriptionModal);\r\n","import React from 'react';\nimport TicketList from './TicketList';\nimport {Tile} from 'carbon-components-react';\nimport {apiSubscriptionGet, formatStartDate, formatEndDate} from '../../api/subscriptions';\nimport withKeycloak from '../../auth/withKeycloak';\nimport {apiGetProjectUsers, apiProjectGet} from '../../api/projects';\nimport {\n  isPortalAdminOrSupport,\n  isPortalUser,\n  isPortalAdmin,\n  authenticationChanged,\n} from '../../api/helpers';\nimport EditSubscriptionModal from '../Admin/EditSubscriptionModal';\nimport i18n from '../../i18n';\n\nconst subscriptionData = {\n  type: 'Product Support Subscription Entando Platform',\n  license: 'Free Commercial Open Source',\n};\n\nclass Subscription extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      subscription: {},\n      users: {},\n      project: {},\n      customer: {},\n    };\n  }\n\n  async fetchData() {\n    if (isPortalUser()) {\n      try {\n        let users = {};\n        let project = {};\n        const subscription = await apiSubscriptionGet(this.props.serviceUrl, this.props.match.params.id);\n        if (subscription.data.project) {\n          project = await apiProjectGet(this.props.serviceUrl, subscription.data.project.id);\n          users = await apiGetProjectUsers(this.props.serviceUrl, project.data.id);\n        }\n        this.setState({\n          subscription: subscription,\n          project: project,\n          customer: project.customer,\n          users: users,\n          loading: false,\n        });\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  }\n\n  updateSubscription = () => {\n    this.fetchData();\n  };\n\n  componentDidMount() {\n    if (isPortalUser()) {\n      this.fetchData();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (authenticationChanged(this.props, prevProps) && isPortalUser()) {\n      this.fetchData();\n    }\n  }\n\n  render() {\n    const { type, license } = subscriptionData;\n\n    if (!this.state.loading) {\n      if (isPortalUser()) {\n        if (Object.keys(this.state.subscription).length !== 0 && Object.keys(this.state.project).length !== 0) {\n          return (\n            <div className=\"subscription-details\">\n              <div>\n                <Tile>\n                  <div className=\"bx--grid\">\n                    <div className=\"bx--row\">\n                      <div className=\"bx--col\">\n                        <p>\n                          <strong>{i18n.t('customerDashboard.customerName')}:</strong> {this.state.project.data.customer.name}\n                        </p>\n                        <p>\n                          <strong>{i18n.t('customerDashboard.projectName')}:</strong> {this.state.project.data.name}\n                        </p>\n                        <p>\n                          <strong>{i18n.t('subscriptionDetails.description')}:</strong> {this.state.subscription.data.project.description}\n                        </p>\n                        <p>\n                          <strong>{i18n.t('subscriptionDetails.partners')}:</strong>\n                          {this.state.project.data !== '' && Object.keys(this.state.project.data.partners).length !== 0 ? (\n                            <>\n                              {this.state.project.data.partners.map((partner, index) => (\n                                <> {index === this.state.project.data.partners.length - 1 ? partner.name : partner.name + ', '} </>\n                              ))}\n                            </>\n                          ) : (\n                            <> {i18n.t('userMessages.none')} </>\n                          )}\n                        </p>\n                        <p>\n                          <strong>{i18n.t('subscriptionDetails.type')}:</strong> {type}\n                        </p>\n                        {isPortalAdminOrSupport() ? (\n                          <p>\n                            <strong>{i18n.t('subscriptionDetails.notes')}:</strong> {this.state.subscription.data.notes}\n                          </p>\n                        ) : null}\n                      </div>\n                      <div className=\"bx--col\">\n                        <p>\n                          <strong>{i18n.t('subscriptionDetails.status')}:</strong> {this.state.subscription.data.status}\n                        </p>\n                        <p>\n                          <strong>{i18n.t('subscriptionDetails.level')}:</strong> {this.state.subscription.data.level}\n                        </p>\n                        <p>\n                          <strong>{i18n.t('subscriptionDetails.startDate')}:</strong>{' '}\n                          {formatStartDate(this.state.subscription.data.startDate)}\n                        </p>\n                        <p>\n                          <strong>{i18n.t('subscriptionDetails.endDate')}:</strong>{' '}\n                          {formatEndDate(this.state.subscription.data.startDate, this.state.subscription.data.lengthInMonths)}\n                        </p>\n                        <p>\n                          <strong>{i18n.t('subscriptionDetails.license')}:</strong> {license}\n                        </p>\n                        <p>\n                          <strong>{i18n.t('subscriptionDetails.assignedUsers')}:</strong>\n                          {this.state.project.data !== '' && Object.keys(this.state.users.data).length !== 0 ? (\n                            <>\n                              {this.state.users.data.map((user, index) => (\n                                <> {index === this.state.users.data.length - 1 ? user.username : user.username + ', '} </>\n                              ))}\n                            </>\n                          ) : (\n                            <> {i18n.t('userMessages.none')} </>\n                          )}\n                        </p>\n                      </div>\n                    </div>\n                  </div>\n                  {isPortalAdmin() ? (\n                    <EditSubscriptionModal\n                      project={this.state.project.data}\n                      subscription={this.state.subscription.data}\n                      serviceUrl={this.props.serviceUrl}\n                      updateSubscription={this.updateSubscription}\n                    />\n                  ) : null}\n                </Tile>\n                <br />\n                <TicketList projectId={this.state.project.data.id} serviceUrl={this.props.serviceUrl} />\n              </div>\n            </div>\n          );\n        } else {\n          return <p>{i18n.t('userMessages.unauthorized')}</p>;\n        }\n      } else {\n        return <p>{i18n.t('userMessages.unauthorized')}</p>;\n      }\n    } else {\n      return null;\n    }\n  }\n}\n\nexport default withKeycloak(Subscription);\n","export const AuthenticatedView = ({ children, keycloak }) => {\r\n  const authenticated = keycloak.initialized && keycloak.authenticated;\r\n  return authenticated ? children : null;\r\n};\r\n\r\nexport const UnauthenticatedView = ({ children, keycloak }) => {\r\n  const authenticated = keycloak.initialized && keycloak.authenticated;\r\n  return !authenticated ? children : null;\r\n};\r\n","import React from 'react';\nimport { Tile } from 'carbon-components-react';\nimport withKeycloak from '../../auth/withKeycloak';\nimport { apiAdminCustomerGet, apiGetCustomersProjects } from '../../api/customers';\nimport { isPortalAdminOrSupport } from '../../api/helpers';\nimport i18n from '../../i18n';\nimport CustomerDataTable from \"./CustomerDataTable\";\n\nclass CustomerProjectList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      projects: {},\n      customer: {},\n    };\n  }\n\n  async getCustomer() {\n    const { keycloak } = this.props;\n    const authenticated = keycloak.initialized && keycloak.authenticated;\n    if (authenticated) {\n      try {\n        const customer = await apiAdminCustomerGet(this.props.serviceUrl, this.props.match.params.id);\n        const projects = await apiGetCustomersProjects(this.props.serviceUrl, customer.data.id);\n        this.setState({\n          customer: customer.data,\n          projects: projects.data,\n          loading: false,\n        });\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  }\n\n  updateCustomer = () => {\n    this.getCustomer();\n  };\n\n  componentDidMount() {\n    if (isPortalAdminOrSupport()) {\n      this.getCustomer();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { keycloak } = this.props;\n    const authenticated = keycloak.initialized && keycloak.authenticated;\n\n    const changedAuth = prevProps.keycloak.authenticated !== authenticated;\n\n    if (authenticated && changedAuth) {\n      if (isPortalAdminOrSupport()) {\n        this.getCustomer();\n      }\n    }\n  }\n\n  render() {\n    if (!this.state.loading) {\n      if (isPortalAdminOrSupport()) {\n        if (Object.keys(this.state.customer).length !== 0) {\n          return (\n            <div>\n              <Tile>\n                <div className=\"bx--grid\">\n                  <div className=\"bx--row\">\n                    <div className=\"bx--col\">\n                      <p>\n                        <strong>{i18n.t('customerDetails.id')}: </strong> {this.state.customer.id}\n                      </p>\n                      <p>\n                        <strong>{i18n.t('customerDetails.name')}: </strong> {this.state.customer.name}\n                      </p>\n                      <p>\n                        <strong>{i18n.t('customerDetails.notes')}: </strong> {this.state.customer.notes}\n                      </p>\n                    </div>\n                    <div className=\"bx--col\">\n                      <p>\n                        <strong>{i18n.t('customerDetails.contactName')}: </strong> {this.state.customer.contactName}\n                      </p>\n                      <p>\n                        <strong>{i18n.t('customerDetails.contactPhone')}: </strong> {this.state.customer.contactPhone}\n                      </p>\n                      <p>\n                        <strong>{i18n.t('customerDetails.contactEmail')}: </strong> {this.state.customer.contactEmail}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n              </Tile>\n              <CustomerDataTable serviceUrl={this.props.serviceUrl} customerNumber={this.state.customer.id} locale={this.props.locale} />\n            </div>\n          );\n        } else {\n          return <p>{i18n.t('userMessages.loading')}...</p>;\n        }\n      } else {\n        return <p>{i18n.t('userMessages.unauthorized')}</p>;\n      }\n    } else {\n      return null;\n    }\n  }\n}\n\nexport default withKeycloak(CustomerProjectList);\n","import React, { Component } from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport AdminDashboard from './Admin/AdminDashboard';\nimport Subscription from './SubscriptionDetails/Subscription';\nimport withKeycloak from '../auth/withKeycloak';\nimport { AuthenticatedView, UnauthenticatedView } from '../auth/KeycloakViews';\nimport { isPortalUser } from '../api/helpers';\nimport CustomerProjectList from './Customer/CustomerProjectList';\nimport i18n from '../i18n';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n    };\n  }\n\n  componentDidMount() {\n    const { keycloak } = this.props;\n    const authenticated = keycloak.initialized && keycloak.authenticated;\n\n    if (authenticated) {\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { keycloak } = this.props;\n    const authenticated = keycloak.initialized && keycloak.authenticated;\n\n    const changedAuth = prevProps.keycloak.authenticated !== authenticated;\n\n    if (authenticated && changedAuth) {\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n\n  render() {\n    var { keycloak } = this.props;\n\n    if (!this.state.loading) {\n      if (isPortalUser()) {\n        return (\n          <div id=\"entando-customer-portal\">\n            <AuthenticatedView keycloak={keycloak}>\n              <HashRouter>\n                <Switch>\n                  <Route\n                    path={'**/customer-details/:id'}\n                    render={props => <CustomerProjectList {...props} serviceUrl={this.props.serviceUrl} locale={this.props.locale} />}\n                  />\n                  <Route\n                    path={'**/subscription-details/:id'}\n                    render={props => <Subscription {...props} serviceUrl={this.props.serviceUrl} locale={this.props.locale} />}\n                  />\n                  <Route\n                    path=\"**/\"\n                    render={props => <AdminDashboard {...props} serviceUrl={this.props.serviceUrl} locale={this.props.locale} />}\n                  />\n                </Switch>\n              </HashRouter>\n            </AuthenticatedView>\n            <UnauthenticatedView keycloak={keycloak}>\n              <p>{i18n.t('userMessages.unauthorized')}</p>\n            </UnauthenticatedView>\n          </div>\n        );\n      } else {\n        return <p>{i18n.t('userMessages.unauthorized')}</p>;\n      }\n    } else {\n      return null;\n    }\n  }\n}\n\nexport default withKeycloak(App);\n","import { getDefaultOptions, request } from './helpers';\r\n\r\nconst resource = 'api/entando-versions';\r\n\r\nexport const apiProductVersionsGet = async serviceUrl => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiProductVersionGet = async (serviceUrl, versionId) => {\r\n  const url = `${serviceUrl}/${resource}/${versionId}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiUpdateProductVersionsStatus = async (serviceUrl, id) => {\r\n  const url = `${serviceUrl}/${resource}/${id}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'PUT',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiProductVersionPost = async (serviceUrl, productVersion) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n    body: productVersion ? JSON.stringify(productVersion) : null,\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiProductVersionPut = async (serviceUrl, productVersion) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'PUT',\r\n    body: productVersion ? JSON.stringify(productVersion) : null,\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiProductVersionDelete = async (serviceUrl, id) => {\r\n  const url = `${serviceUrl}/${resource}/${id}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE',\r\n  };\r\n  return request(url, options);\r\n};\r\n","import React, {Component} from 'react';\nimport i18n from '../../i18n';\nimport {Form, TextInput, Select, SelectItem, Button, DatePicker, DatePickerInput} from 'carbon-components-react';\nimport withKeycloak from '../../auth/withKeycloak';\nimport {apiProjectGet} from '../../api/projects';\nimport {\n  apiProjectSubscriptionPost,\n  apiProjectSubscriptionPut,\n  apiRenewSubscription,\n  apiSubscriptionGet,\n  stripTime\n} from '../../api/subscriptions';\nimport {apiProductVersionsGet} from '../../api/productVersion';\nimport {\n  authenticationChanged,\n  isAuthenticated,\n  isPortalAdmin,\n  isPortalUser\n} from '../../api/helpers';\nimport {apiAddSubscriptionToProject} from '../../api/projects';\nimport moment from \"moment\";\n\nconst subscriptionLevel = {\n  GOLD: 'GOLD',\n  PLATINUM: 'PLATINUM',\n};\n\nconst subscriptionStatus = {\n  requested: 'REQUESTED',\n  pending: 'PENDING',\n  active: 'ACTIVE',\n  expired: 'EXPIRED',\n};\n\nclass SubscriptionForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      project: {},\n      projectId: '',\n      subscription: {},\n      startDate: '',\n      level: 'PLATINUM',\n      lengthInMonths: '',\n      entandoVersionId: '',\n      status: '',\n      formType: 'new',\n      invalid: {},\n      productVersions: [],\n      submitSuccess: false,\n      submitError: false,\n      submitColour: 'black',\n    };\n  }\n\n  componentDidMount() {\n    if (isAuthenticated(this.props)) {\n      this.fetchData();\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (authenticationChanged(this.props, prevProps)) {\n      this.fetchData();\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n\n  async fetchData() {\n    if (!isPortalUser()) {\n      return;\n    }\n\n    const serviceUrl = this.props.serviceUrl;\n\n    const search = window.location.search;\n    const params = new URLSearchParams(search);\n\n    const subscriptionId = params.get('subscription');\n    let projectId = params.get('project');\n\n    let subscription = {};\n    let project = {};\n    let formType = 'new';\n    let status = '';\n    const isAdmin = isPortalAdmin();\n\n    if (subscriptionId !== null) {\n      subscription = (await apiSubscriptionGet(serviceUrl, subscriptionId)).data;\n      status = subscription.status;\n      formType = isAdmin ? 'edit' : 'renewal';\n      project = subscription.project;\n    } else if (projectId !== null) {\n      project = (await apiProjectGet(serviceUrl, projectId)).data;\n      status = isAdmin ? subscriptionStatus.pending : subscriptionStatus.requested;\n    } else {\n      console.log(\"Unable to load project and/or subscription\");\n      return;\n    }\n\n    const productVersions = (await apiProductVersionsGet(serviceUrl)).data;\n\n    this.setState({\n      subscription: subscription,\n      level: subscription.level,\n      entandoVersionId: (subscription.entandoVersion) ? subscription.entandoVersion.id : '',\n      startDate: stripTime(subscription.startDate),\n      lengthInMonths: subscription.lengthInMonths,\n      status: status,\n      formType: formType,\n      project: project,\n      projectId: projectId,\n      productVersions: productVersions\n    });\n  }\n\n  isNumeric(str) {\n    return !isNaN(str) && !isNaN(parseInt(str));\n  }\n\n  handleValidation() {\n    let invalid = {};\n\n    if (!this.state.startDate || !this.state.startDate.match(/^(0[1-9]|1[0-2])\\/(0[1-9]|1\\d|2\\d|3[01])\\/(19|20)\\d{2}$/)) {\n      invalid['startDate'] = true;\n    }\n\n    if (!this.state.lengthInMonths || !this.isNumeric(this.state.lengthInMonths)) {\n      invalid['lengthInMonths'] = true;\n    }\n\n    if (!this.state.level) {\n      invalid['level'] = true;\n    }\n\n    if (this.state.entandoVersionId === '') {\n      invalid['entandoVersionId'] = true;\n    }\n\n    this.setState({ invalid: invalid });\n    return (Object.keys(invalid).length === 0);\n  }\n\n  handleChanges = e => {\n    const input = e.target;\n    const name = input.name;\n    const value = input.value;\n    this.setState({ [name]: value });\n    this.setState({\n      submitSuccess: false,\n      submitError: false,\n    });\n  };\n\n  handleStartDateChange = date => {\n    let formatted = '';\n    if (date && date[0]) {\n      formatted = moment(date[0].toISOString()).format('MM/DD/YYYY');\n    }\n    this.setState({\n      startDate: formatted\n    });\n  };\n\n  updateStateForSuccess(success) {\n    if (success) {\n      this.setState({\n        submitSuccess: true,\n        submitError: false,\n        submitColour: '#24a148',\n      })\n    } else {\n      this.setState({\n        submitSuccess: false,\n        submitError: true,\n        submitColour: '#da1e28',\n      });\n    }\n  }\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    this.setState({\n      submitSuccess: false,\n      submitError: false,\n    });\n    const formIsValid = this.handleValidation();\n\n    if (formIsValid) {\n      const formType = this.state.formType;\n      const serviceUrl = this.props.serviceUrl;\n      const subscriptionRequest = this.stateToSubscription();\n\n      if (formType === 'edit') {\n        apiProjectSubscriptionPut(serviceUrl, subscriptionRequest)\n          .then(() => {\n            this.updateStateForSuccess(true);\n          })\n          .catch(() => {\n            this.updateStateForSuccess(false);\n          });\n      } else if (formType === 'new') {\n        this.newSubscription(subscriptionRequest)\n          .then(res => {\n            apiAddSubscriptionToProject(serviceUrl, this.state.projectId, res.data.id);\n            this.updateStateForSuccess(true);\n          })\n          .catch(() => {\n            this.updateStateForSuccess(false);\n          });\n      } else if (formType === 'renewal') {\n        this.renewSubscription(subscriptionRequest)\n          .then(res => {\n            apiAddSubscriptionToProject(serviceUrl, this.state.projectId, res.data.id);\n            this.updateStateForSuccess(true);\n          })\n          .catch(() => {\n            this.updateStateForSuccess(false);\n          });\n      } else {\n        console.log(\"Illegal operation\");\n      }\n    }\n  };\n\n  stateToSubscription() {\n    return {\n      entandoVersionId: this.state.entandoVersionId,\n      projectId: this.state.projectId,\n      projectSubscription: {\n        id: this.state.subscription.id,\n        startDate: new Date(this.state.startDate),\n        lengthInMonths: this.state.lengthInMonths,\n        level: this.state.level,\n        status: this.state.status.toUpperCase(),\n      },\n    };\n  };\n\n  async newSubscription(request) {\n    return await apiProjectSubscriptionPost(this.props.serviceUrl, request);\n  }\n\n  async renewSubscription(request) {\n    return await apiRenewSubscription(this.props.serviceUrl, request);\n  }\n\n  setupFormComponents() {\n    const subscriptionLevelList = Object.entries(subscriptionLevel).map(([key, value]) => (\n      <SelectItem key={key} text={value} value={key}>\n        {value}\n      </SelectItem>\n    ));\n    subscriptionLevelList.unshift(<SelectItem key=\"-1\" text={i18n.t('subscriptionForm.chooseLevel')} value=\"\"/>);\n\n    const versionList = this.state.productVersions.map(version => {\n      // only allow the user to choose from active entando versions\n      if (version.status) {\n        return (\n          <SelectItem key={version.id} text={version.name} value={version.id}>\n            {version.name}\n          </SelectItem>\n        );\n      } else {\n        return null;\n      }\n    });\n    versionList.unshift(<SelectItem key=\"-1\" text={i18n.t('subscriptionForm.chooseVersion')} value=\"\"/>);\n\n    const statusList = Object.entries(subscriptionStatus).map(([key, value]) => (\n      <SelectItem key={key} text={value} value={value}>\n        {value}\n      </SelectItem>\n    ));\n\n    return {subscriptionLevelList, versionList, statusList};\n  }\n\n  renderForm() {\n    const {subscriptionLevelList, versionList, statusList} = this.setupFormComponents();\n    return (\n      <div>\n        <div className=\"bx--row\">\n          <div className=\"bx--col\">\n            <div>\n              <span>{i18n.t('subscriptionForm.projectName')}:</span> {this.state.project.name}\n            </div>\n            <Select\n              id=\"status\"\n              name=\"status\"\n              labelText={i18n.t('subscriptionForm.subscriptionStatus')}\n              value={this.state.status}\n              onChange={this.handleChanges}\n              invalidText={i18n.t('validation.invalid.required')}\n              invalid={this.state.invalid['status']}\n              disabled={!isPortalAdmin()}\n            >\n              {statusList}\n            </Select>\n            <Select\n              id=\"level\"\n              name=\"level\"\n              labelText={i18n.t('subscriptionForm.subscriptionLevel') + ' *'}\n              value={this.state.level || ''}\n              onChange={this.handleChanges}\n              invalidText={i18n.t('validation.invalid.required')}\n              invalid={this.state.invalid['level']}\n            >\n              {subscriptionLevelList}\n            </Select>\n            <Select\n              id=\"entandoVersionId\"\n              name=\"entandoVersionId\"\n              labelText={i18n.t('subscriptionForm.entandoVersion') + ' *'}\n              value={this.state.entandoVersionId}\n              onChange={this.handleChanges}\n              invalidText={i18n.t('validation.invalid.required')}\n              invalid={this.state.invalid['entandoVersionId']}\n            >\n              {versionList}\n            </Select>\n          </div>\n          <div className=\"bx--col\">\n            <DatePicker dateFormat=\"m/d/Y\" datePickerType=\"single\" value={this.state.startDate}\n                        onChange={this.handleStartDateChange}>\n              <DatePickerInput\n                id=\"startDate\"\n                name=\"startDate\"\n                placeholder=\"mm/dd/yyyy\"\n                labelText={i18n.t('subscriptionForm.subscriptionStartDate')}\n                type=\"text\"\n                invalidText={i18n.t('validation.invalid.date')}\n                invalid={this.state.invalid['startDate']}\n              />\n            </DatePicker>\n            <TextInput\n              id=\"lengthInMonths\"\n              name=\"lengthInMonths\"\n              labelText={i18n.t('subscriptionForm.subscriptionLength') + ' *'}\n              value={this.state.lengthInMonths}\n              onChange={this.handleChanges}\n              invalidText={i18n.t('validation.invalid.number')}\n              invalid={this.state.invalid['lengthInMonths']}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  successErrorMessage() {\n    const isAdmin = isPortalAdmin();\n    const { subscriptionType, submitSuccess, submitError } = this.state;\n\n    //TODO: rework messages?\n    if (subscriptionType === 'new') {\n      if (submitSuccess) {\n        return isAdmin ? this.createFormMessage('adminSubmitNewSuccess') : this.createFormMessage('customerSubmitSuccess');\n      } else if (submitError) {\n        return this.createFormMessage('newSubError');\n      }\n    } else {\n      if (submitSuccess) {\n        return isAdmin ? this.createFormMessage('adminRenewNewSuccess') : this.createFormMessage('customerSubmitSuccess');\n      } else if (submitError) {\n        return this.createFormMessage('renewSubError');\n      }\n    }\n  }\n\n  createFormMessage(subMessageKey) {\n    return <p style={{ color: this.state.submitColour }}>{i18n.t(`subscriptionForm.${subMessageKey}`)}</p>;\n  }\n\n  render() {\n    const titleKey = isPortalAdmin() ? \"subscriptionForm.adminTitle\" : \"subscriptionForm.formTitle\";\n    const formType = this.state.formType;\n    let formLabelKey = \"subscriptionForm.newSubscription\";\n    if (formType !== 'new') {\n      formLabelKey = isPortalAdmin() ? \"subscriptionForm.editSubscription\" : \"subscriptionForm.renewSubscription\";\n    }\n\n    if (!this.state.loading && isPortalUser()) {\n      return (\n        <div>\n          <h3 className=\"pageTitle\">{i18n.t(titleKey)}</h3>\n          <div className=\"form-container\">\n            {this.successErrorMessage()}\n            <Form onSubmit={this.handleFormSubmit}>\n              <div className=\"bx--grid\">\n                <div className=\"bx--row\">\n                  <div className=\"bx--col\">\n                    <strong>{i18n.t(formLabelKey)}</strong>\n                  </div>\n                </div>\n                {this.renderForm()}\n                <Button kind=\"primary\" tabIndex={0} type=\"submit\">\n                  {' '}\n                  {i18n.t('buttons.submit')}\n                </Button>\n              </div>\n            </Form>\n          </div>\n        </div>\n      );\n    } else {\n      return <p>{i18n.t('userMessages.unauthorized')}</p>;\n    }\n  }\n}\n\nexport default withKeycloak(SubscriptionForm);\n","import React, { Component } from 'react';\r\nimport i18n from '../../../i18n';\r\nimport { Form, TextInput, Select, SelectItem, Button } from 'carbon-components-react';\r\nimport {\r\n  apiTicketingSystemPost,\r\n  apiTicketingSystemsGet,\r\n  apiTicketingSystemPut,\r\n  apiTicketingSystemDelete,\r\n} from '../../../api/ticketingsystem';\r\nimport { isPortalAdmin } from '../../../api/helpers';\r\nimport withKeycloak from '../../../auth/withKeycloak';\r\n\r\nclass TicketingSystem extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      ticketingSystem: '',\r\n      ticketingSystemType: 'Jira',\r\n      url: '',\r\n      serviceAccount: '',\r\n      serviceAccountSecret: '',\r\n      systemId: '',\r\n      submitMsg: '',\r\n      submitColour: 'black',\r\n    };\r\n  }\r\n\r\n  handleChanges = e => {\r\n    const input = e.target;\r\n    const name = input.name;\r\n    const value = input.value;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  async createTicketingSystem() {\r\n    const ticketingSystem = {\r\n      url: this.state.url,\r\n      serviceAccount: this.state.serviceAccount,\r\n      serviceAccountSecret: this.state.serviceAccountSecret,\r\n      systemId: this.state.systemId,\r\n    };\r\n    return await apiTicketingSystemPost(this.props.serviceUrl, ticketingSystem);\r\n  }\r\n\r\n  async updateTicketingSystem() {\r\n    const ticketingSystem = {\r\n      id: this.state.ticketingSystem.id,\r\n      url: this.state.url,\r\n      serviceAccount: this.state.serviceAccount,\r\n      serviceAccountSecret: this.state.serviceAccountSecret,\r\n      systemId: this.state.systemId,\r\n    };\r\n    return await apiTicketingSystemPut(this.props.serviceUrl, ticketingSystem);\r\n  }\r\n\r\n  async getTicketingSystems() {\r\n    const ticketingSystems = await apiTicketingSystemsGet(this.props.serviceUrl);\r\n    if (ticketingSystems.data.length > 0) {\r\n      const currentTicketingSystem = ticketingSystems.data[ticketingSystems.data.length - 1];\r\n\r\n      this.setState({\r\n        ticketingSystem: currentTicketingSystem,\r\n        url: currentTicketingSystem.url,\r\n        serviceAccount: currentTicketingSystem.serviceAccount,\r\n        serviceAccountSecret: currentTicketingSystem.serviceAccountSecret,\r\n        systemId: currentTicketingSystem.systemId,\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n    if (authenticated) {\r\n      this.getTicketingSystems();\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n    const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n\r\n    if (authenticated && changedAuth) {\r\n      this.getTicketingSystems();\r\n    }\r\n  }\r\n\r\n  async deleteTicketingSystem() {\r\n    return await apiTicketingSystemDelete(this.props.serviceUrl, this.state.ticketingSystem.id);\r\n  }\r\n\r\n  handleDelete() {\r\n    if (window.confirm('Are you sure you want to delete this ticketing system?')) {\r\n      this.deleteTicketingSystem()\r\n        .then(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.deleted'),\r\n            submitColour: '#24a148',\r\n          });\r\n        })\r\n        .catch(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.error'),\r\n            submitColour: '#da1e28',\r\n          });\r\n        });\r\n    }\r\n  }\r\n\r\n  handleFormSubmit = event => {\r\n    event.preventDefault();\r\n    if (this.state.ticketingSystem === '') {\r\n      this.createTicketingSystem()\r\n        .then(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.created'),\r\n            submitColour: '#24a148',\r\n          });\r\n        })\r\n        .catch(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.error'),\r\n            submitColour: '#da1e28',\r\n          });\r\n        });\r\n    } else {\r\n      this.updateTicketingSystem()\r\n        .then(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.updated'),\r\n            submitColour: '#24a148',\r\n          });\r\n        })\r\n        .catch(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.error'),\r\n            submitColour: '#da1e28',\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const ticketingSystem = ['Jira'];\r\n    if (isPortalAdmin()) {\r\n      return (\r\n        <div className=\"cp-form\">\r\n          <p style={{ color: this.state.submitColour }}>{this.state.submitMsg}</p>\r\n          <Form onSubmit={this.handleFormSubmit}>\r\n            <div className=\"bx--grid\">\r\n              <div className=\"bx--row\">\r\n                <div className=\"bx--col\">\r\n                  <Select\r\n                    id=\"ticketingSystemType\"\r\n                    name=\"ticketingSystemType\"\r\n                    labelText={i18n.t('adminConfig.integrationTicketingSystem.selectBackendTicketingSystem')}\r\n                    value={this.state.ticketingSystemType}\r\n                    onChange={this.handleChanges}\r\n                  >\r\n                    <SelectItem text={i18n.t('adminConfig.integrationTicketingSystem.select')} value=\"ticketing-system\" />\r\n                    {ticketingSystem.map((ticketingSystem, i) => (\r\n                      <SelectItem key={i} text={ticketingSystem} value={ticketingSystem}>\r\n                        {ticketingSystem}\r\n                      </SelectItem>\r\n                    ))}\r\n                  </Select>\r\n                  <TextInput\r\n                    id=\"serviceAccount\"\r\n                    name=\"serviceAccount\"\r\n                    labelText={i18n.t('adminConfig.integrationTicketingSystem.userName')}\r\n                    value={this.state.serviceAccount}\r\n                    onChange={this.handleChanges}\r\n                  />\r\n                  <TextInput\r\n                    id=\"systemId\"\r\n                    name=\"systemId\"\r\n                    labelText={i18n.t('adminConfig.integrationTicketingSystem.projectName')}\r\n                    value={this.state.systemId}\r\n                    onChange={this.handleChanges}\r\n                  />\r\n                </div>\r\n                <div className=\"bx--col\">\r\n                  <TextInput\r\n                    id=\"url\"\r\n                    name=\"url\"\r\n                    labelText={i18n.t('adminConfig.integrationTicketingSystem.url')}\r\n                    value={this.state.url}\r\n                    onChange={this.handleChanges}\r\n                  />\r\n                  <TextInput\r\n                    id=\"serviceAccountSecret\"\r\n                    name=\"serviceAccountSecret\"\r\n                    type=\"password\"\r\n                    labelText={i18n.t('adminConfig.integrationTicketingSystem.password')}\r\n                    value={this.state.serviceAccountSecret}\r\n                    onChange={this.handleChanges}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <Button kind=\"primary\" tabIndex={0} type=\"submit\">\r\n                {' '}\r\n                {i18n.t('buttons.submit')}{' '}\r\n              </Button>\r\n              {this.state.ticketingSystem ? (\r\n                <Button kind=\"danger\" onClick={() => this.handleDelete()}>\r\n                  {' '}\r\n                  Delete{' '}\r\n                </Button>\r\n              ) : null}\r\n            </div>\r\n          </Form>\r\n        </div>\r\n      );\r\n    }\r\n    // Unauthorized\r\n    else {\r\n      return <p>{i18n.t('userMessages.unauthorized')}</p>;\r\n    }\r\n  }\r\n}\r\n\r\nexport default withKeycloak(TicketingSystem);\r\n","import React, { Component } from 'react';\r\nimport i18n from '../../i18n';\r\nimport { ModalWrapper, Form, TextInput, DatePicker, DatePickerInput } from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport { apiProductVersionPost } from '../../api/productVersion';\r\nimport moment from 'moment';\r\n\r\nclass AddProductVersionModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      name: '',\r\n      startDate: '',\r\n      endDate: '',\r\n      invalid: {},\r\n      submitMsg: '',\r\n      submitColour: 'black',\r\n    };\r\n\r\n    this.baseState = this.state;\r\n  }\r\n\r\n  handleValidation() {\r\n    let invalid = {};\r\n    let formIsValid = true;\r\n\r\n    //name\r\n    if (this.state.name === '') {\r\n      formIsValid = false;\r\n      invalid['name'] = true;\r\n    }\r\n\r\n    if (typeof this.state.startDate !== 'undefined') {\r\n      if (!this.state.startDate.match(/^(0[1-9]|1[0-2])\\/(0[1-9]|1\\d|2\\d|3[01])\\/(19|20)\\d{2}$/)) {\r\n        formIsValid = false;\r\n        invalid['startDate'] = true;\r\n      }\r\n    }\r\n\r\n    if (typeof this.state.endDate !== 'undefined') {\r\n      if (!this.state.endDate.match(/^(0[1-9]|1[0-2])\\/(0[1-9]|1\\d|2\\d|3[01])\\/(19|20)\\d{2}$/)) {\r\n        formIsValid = false;\r\n        invalid['endDate'] = true;\r\n      }\r\n    }\r\n\r\n    this.setState({ invalid: invalid });\r\n    return formIsValid;\r\n  }\r\n\r\n  handleChanges = e => {\r\n    const input = e.target;\r\n    const name = input.name;\r\n    const value = input.value;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  async addProductVersion() {\r\n    const { keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n    if (authenticated) {\r\n      return await apiProductVersionPost(this.props.serviceUrl, this.state);\r\n    }\r\n  }\r\n\r\n  handleFormSubmit = () => {\r\n    const formIsValid = this.handleValidation();\r\n\r\n    if (formIsValid) {\r\n      this.addProductVersion()\r\n        .then(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.added'),\r\n            submitColour: '#24a148',\r\n          });\r\n          this.props.updateProductVersions();\r\n        })\r\n        .catch(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.error'),\r\n            submitColour: '#da1e28',\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  clearValues = () => {\r\n    const customerModalElement = document.querySelector('#modal-form-product-version');\r\n    if (!customerModalElement.className.includes('is-visible')) {\r\n      this.setState(this.baseState);\r\n    }\r\n  };\r\n\r\n  handleStartDateChange = date => {\r\n    this.setState({\r\n      startDate: moment(date[0].toISOString()).format('MM/DD/YYYY'),\r\n    });\r\n  };\r\n\r\n  handleEndDateChange = date => {\r\n    this.setState({\r\n      endDate: moment(date[0].toISOString()).format('MM/DD/YYYY'),\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    const modalOpenButton = document.querySelector('.add-product-version-button');\r\n    modalOpenButton.addEventListener('click', this.clearValues, false);\r\n  }\r\n\r\n  render() {\r\n    const modalConfirmation = (\r\n      <div className=\"bx--modal-header\">\r\n        <p style={{ color: this.state.submitColour }}>{this.state.submitMsg}</p>\r\n      </div>\r\n    )\r\n    const modalId = \"modal-form-product-version\"\r\n    return (\r\n      <ModalWrapper\r\n        buttonTriggerText={i18n.t('buttons.addProductVersion')}\r\n        modalHeading={i18n.t('adminDashboard.addProductVersion.title')}\r\n        buttonTriggerClassName=\"add-product-version bx--btn bx--btn--tertiary add-product-version-button\"\r\n        className=\"modal-form\"\r\n        id={modalId}\r\n        handleSubmit={this.handleFormSubmit}\r\n      >\r\n        {modalConfirmation}\r\n        <div className=\"form-container\">\r\n          <Form onSubmit={this.handleFormSubmit}>\r\n            <TextInput\r\n              id={\"name\" + modalId}\r\n              name=\"name\"\r\n              labelText={i18n.t('adminDashboard.addProductVersion.productVersion')}\r\n              value={this.state.name}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.required')}\r\n              invalid={this.state.invalid['name']}\r\n            />\r\n            <DatePicker dateFormat=\"m/d/Y\" datePickerType=\"single\" onChange={this.handleStartDateChange}>\r\n              <DatePickerInput\r\n                id={\"startDate\" + modalId}\r\n                name=\"startDate\"\r\n                placeholder=\"mm/dd/yyyy\"\r\n                labelText={i18n.t('adminDashboard.addProductVersion.productVersionStartDate')}\r\n                value={this.state.startDate}\r\n                //onChange={this.handleChanges}\r\n                type=\"text\"\r\n                invalidText={i18n.t('validation.invalid.date')}\r\n                invalid={this.state.invalid['startDate']}\r\n              />\r\n            </DatePicker>\r\n            <DatePicker dateFormat=\"m/d/Y\" datePickerType=\"single\" onChange={this.handleEndDateChange}>\r\n              <DatePickerInput\r\n                id={\"endDate\" + modalId}\r\n                name=\"endDate\"\r\n                placeholder=\"mm/dd/yyyy\"\r\n                labelText={i18n.t('adminDashboard.addProductVersion.productVersionEndDate')}\r\n                value={this.state.endDate}\r\n                type=\"text\"\r\n                invalidText={i18n.t('validation.invalid.date')}\r\n                invalid={this.state.invalid['endDate']}\r\n              />\r\n            </DatePicker>\r\n          </Form>\r\n        </div>\r\n        {modalConfirmation}\r\n      </ModalWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withKeycloak(AddProductVersionModal);\r\n","import React, { Component } from 'react';\r\nimport i18n from '../../i18n';\r\nimport { ModalWrapper, Form, TextInput, DatePicker, DatePickerInput } from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport { apiProductVersionGet, apiProductVersionPut } from '../../api/productVersion';\r\nimport moment from 'moment';\r\n\r\nclass EditVersionModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      name: '',\r\n      startDate: '',\r\n      endDate: '',\r\n      invalid: {},\r\n      modalId: '',\r\n      buttonId: '',\r\n      submitMsg: '',\r\n      submitColour: 'black',\r\n    };\r\n  }\r\n\r\n  handleValidation() {\r\n    let invalid = {};\r\n    let formIsValid = true;\r\n\r\n    //name\r\n    if (this.state.name === '') {\r\n      formIsValid = false;\r\n      invalid['name'] = true;\r\n    }\r\n\r\n    if (typeof this.state.startDate !== 'undefined') {\r\n      if (!this.state.startDate.match(/^(0[1-9]|1[0-2])\\/(0[1-9]|1\\d|2\\d|3[01])\\/(19|20)\\d{2}$/)) {\r\n        formIsValid = false;\r\n        invalid['startDate'] = true;\r\n      }\r\n    }\r\n\r\n    if (typeof this.state.endDate !== 'undefined') {\r\n      if (!this.state.endDate.match(/^(0[1-9]|1[0-2])\\/(0[1-9]|1\\d|2\\d|3[01])\\/(19|20)\\d{2}$/)) {\r\n        formIsValid = false;\r\n        invalid['endDate'] = true;\r\n      }\r\n    }\r\n\r\n    this.setState({ invalid: invalid });\r\n    return formIsValid;\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n    const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n\r\n    if (authenticated && changedAuth) {\r\n      this.getVersionDetails();\r\n    }\r\n  }\r\n\r\n  handleChanges = e => {\r\n    const input = e.target;\r\n    const name = input.name;\r\n    const value = input.value;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleStartDateChange = date => {\r\n    this.setState({\r\n      startDate: moment(date[0].toISOString()).format('MM/DD/YYYY'),\r\n    });\r\n  };\r\n\r\n  handleEndDateChange = date => {\r\n    this.setState({\r\n      endDate: moment(date[0].toISOString()).format('MM/DD/YYYY'),\r\n    });\r\n  };\r\n\r\n  async getVersionDetails() {\r\n    const { keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n    if (authenticated) {\r\n      const version = await apiProductVersionGet(this.props.serviceUrl, this.props.version.id);\r\n      this.setState({\r\n        name: version.data.name,\r\n        startDate: moment(version.data.startDate).format('MM/DD/YYYY'),\r\n        endDate: moment(version.data.endDate).format('MM/DD/YYYY'),\r\n        modalId: 'modal-form-version-edit-' + version.data.id,\r\n        buttonId: 'edit-version-button-' + version.data.id,\r\n      });\r\n    }\r\n  }\r\n\r\n  async versionPut(version) {\r\n    const { keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n    if (authenticated) {\r\n      return await apiProductVersionPut(this.props.serviceUrl, version);\r\n    }\r\n  }\r\n\r\n  handleFormSubmit = () => {\r\n    const formIsValid = this.handleValidation();\r\n\r\n    if (formIsValid) {\r\n      const version = {\r\n        id: this.props.version.id,\r\n        name: this.state.name,\r\n        startDate: moment(this.state.startDate).format(),\r\n        endDate: moment(this.state.endDate).format(),\r\n      };\r\n      this.versionPut(version)\r\n        .then(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.updated'),\r\n            submitColour: '#24a148',\r\n          });\r\n          this.props.updateProductVersions();\r\n        })\r\n        .catch(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.error'),\r\n            submitColour: '#da1e28',\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n    if (authenticated) {\r\n      this.getVersionDetails();\r\n      const modalOpenButton = document.querySelector('.edit-version-button-' + this.props.version.id);\r\n      modalOpenButton.addEventListener('click', this.clearValues, false);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const modalConfirmation = (\r\n      <div className=\"bx--modal-header\">\r\n        <p style={{ color: this.state.submitColour }}>{this.state.submitMsg}</p>\r\n      </div>\r\n    )\r\n    const buttonClassName = 'bx--btn bx--btn--ghost edit-version-button-' + this.props.version.id;\r\n    const modalId = this.state.modalId\r\n    return (\r\n      <ModalWrapper\r\n        buttonTriggerText={i18n.t('buttons.edit')}\r\n        modalHeading={i18n.t('adminDashboard.addProject.editTitle')}\r\n        buttonTriggerClassName={buttonClassName}\r\n        className=\"modal-form\"\r\n        id={this.state.modalId}\r\n        handleSubmit={this.handleFormSubmit}\r\n        primaryButtonText={i18n.t('modalText.save')}\r\n        secondaryButtonText={i18n.t('modalText.cancel')}\r\n      >\r\n        {modalConfirmation}\r\n        <div className=\"form-container\">\r\n          <Form onSubmit={this.handleFormSubmit}>\r\n            <TextInput\r\n              id={\"name\" + modalId}\r\n              name=\"name\"\r\n              labelText={i18n.t('adminDashboard.addProject.projectName') + ' *'}\r\n              value={this.state.name}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.required')}\r\n              invalid={this.state.invalid['name']}\r\n            />\r\n            <DatePicker dateFormat=\"m/d/Y\" datePickerType=\"single\" onChange={this.handleStartDateChange} value={this.state.startDate}>\r\n              <DatePickerInput\r\n                id={\"startDate\" + modalId}\r\n                name=\"startDate\"\r\n                placeholder=\"mm/dd/yyyy\"\r\n                labelText={i18n.t('subscriptionDetails.startDate') + ' *'}\r\n                onChange={this.handleChanges}\r\n                type=\"text\"\r\n                invalidText={i18n.t('validation.invalid.date')}\r\n                invalid={this.state.invalid['startDate']}\r\n              />\r\n            </DatePicker>\r\n            <DatePicker\r\n              dateFormat=\"m/d/Y\"\r\n              datePickerType=\"single\"\r\n              onChange={this.handleEndDateChange}\r\n              id={\"endDate\"+modalId}\r\n              name=\"endDate\"\r\n              value={this.state.endDate}\r\n            >\r\n              <DatePickerInput\r\n                id={\"endDate\"+modalId}\r\n                name=\"endDate\"\r\n                placeholder=\"mm/dd/yyyy\"\r\n                labelText={i18n.t('subscriptionDetails.endDate') + ' *'}\r\n                onChange={this.handleChanges}\r\n                type=\"text\"\r\n                invalidText={i18n.t('validation.invalid.date')}\r\n                invalid={this.state.invalid['endDate']}\r\n              />\r\n            </DatePicker>\r\n          </Form>\r\n        </div>\r\n        {modalConfirmation}\r\n      </ModalWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withKeycloak(EditVersionModal);\r\n","import React, { Component } from 'react';\r\nimport i18n from '../../../i18n';\r\nimport {\r\n  DataTable,\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableHeader,\r\n  TableBody,\r\n  TableCell,\r\n  Toggle,\r\n  Button,\r\n} from 'carbon-components-react';\r\nimport { apiProductVersionDelete, apiProductVersionsGet, apiUpdateProductVersionsStatus } from '../../../api/productVersion';\r\nimport withKeycloak from '../../../auth/withKeycloak';\r\nimport AddProductVersionModal from '../AddProductVersionModal';\r\nimport { isPortalAdminOrSupport } from '../../../api/helpers';\r\nimport EditVersionModal from '../EditVersionModal';\r\n\r\nclass ProductVersion extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      data: '',\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (isPortalAdminOrSupport()) {\r\n      this.getProductVersions();\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n    const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n\r\n    if (authenticated && changedAuth) {\r\n      if (isPortalAdminOrSupport()) {\r\n        this.getProductVersions();\r\n      }\r\n    }\r\n  }\r\n\r\n  async getProductVersions() {\r\n    const { keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n    if (authenticated) {\r\n      const productVersions = await apiProductVersionsGet(this.props.serviceUrl);\r\n\r\n      this.setState({\r\n        data: productVersions,\r\n      });\r\n    }\r\n  }\r\n\r\n  async deleteVersion(id) {\r\n    const { keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n    if (authenticated) {\r\n      return await apiProductVersionDelete(this.props.serviceUrl, id);\r\n    }\r\n  }\r\n\r\n  handleDeleteVersion = (e, id) => {\r\n    e.preventDefault();\r\n    if (window.confirm('Are you sure you want to delete this Entando version?')) {\r\n      this.deleteVersion(id)\r\n        .then(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.deleted'),\r\n            submitColour: '#24a148',\r\n          });\r\n          this.updateProductVersions();\r\n        })\r\n        .catch(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.error'),\r\n            submitColour: '#da1e28',\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  updateProductVersions = () => {\r\n    this.getProductVersions();\r\n  };\r\n\r\n  async handleToggleChange(id) {\r\n    await apiUpdateProductVersionsStatus(this.props.serviceUrl, id);\r\n  }\r\n\r\n  render() {\r\n    if (isPortalAdminOrSupport()) {\r\n      return (\r\n        <div>\r\n          <DataTable rows={rowData} headers={headerData}>\r\n            {({ rows, headers, getHeaderProps, getTableProps }) => (\r\n              <TableContainer>\r\n                <Table {...getTableProps()}>\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      {headers.map(header => (\r\n                        <TableHeader {...getHeaderProps({ header })}>{header.header}</TableHeader>\r\n                      ))}\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {Object.keys(this.state.data).length !== 0\r\n                      ? this.state.data.data.map((productVersion, index) => (\r\n                          <TableRow key={index}>\r\n                            <TableCell>{productVersion.name}</TableCell>\r\n                            <TableCell>\r\n                              <Toggle size=\"sm\"\r\n                                onClick={() => this.handleToggleChange(productVersion.id)}\r\n                                aria-label=\"toggle button\"\r\n                                id=\"toggle{productVersion.id}\"\r\n                                defaultToggled={productVersion.status}\r\n                              />\r\n                            </TableCell>\r\n                            <TableCell>{productVersion.startDate}</TableCell>\r\n                            <TableCell>{productVersion.endDate}</TableCell>\r\n                            <TableCell>\r\n                              <div style={{ display: 'flex' }}>\r\n                                <EditVersionModal\r\n                                  key={productVersion.id}\r\n                                  version={productVersion}\r\n                                  serviceUrl={this.props.serviceUrl}\r\n                                  updateProductVersions={this.updateProductVersions}\r\n                                />\r\n                                <Button\r\n                                  kind=\"ghost\"\r\n                                  onClick={e => this.handleDeleteVersion(e, productVersion.id)}\r\n                                  style={{ display: 'flex', width: '100%', color: 'red' }}\r\n                                >\r\n                                  {i18n.t('buttons.delete')}\r\n                                </Button>\r\n                              </div>\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        ))\r\n                      : null}\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            )}\r\n          </DataTable>\r\n          <br />\r\n          <AddProductVersionModal serviceUrl={this.props.serviceUrl} updateProductVersions={this.updateProductVersions} />\r\n        </div>\r\n      );\r\n    } else {\r\n      return <p>{i18n.t('userMessages.unauthorized')}</p>;\r\n    }\r\n  }\r\n}\r\n\r\nconst headerData = [\r\n  {\r\n    header: i18n.t('adminConfig.manageProductVersion.entandoVersion'),\r\n    key: 'entVersion',\r\n  },\r\n  {\r\n    header: i18n.t('adminConfig.manageProductVersion.status'),\r\n    key: 'status',\r\n  },\r\n  {\r\n    header: i18n.t('adminConfig.manageProductVersion.startDate'),\r\n    key: 'startDate',\r\n  },\r\n  {\r\n    header: i18n.t('adminConfig.manageProductVersion.supportEndDate'),\r\n    key: 'endDate',\r\n  },\r\n  {\r\n    header: i18n.t('customerDashboard.action'),\r\n    key: 'action',\r\n  },\r\n];\r\n\r\nconst rowData = [\r\n  {\r\n    id: 'a',\r\n    entVersion: '5.2',\r\n    status: <Toggle size=\"sm\" aria-label=\"toggle button\" defaultToggled id=\"status-1\" />,\r\n    startDate: 'April, 2018',\r\n    endDate: 'April, 2022',\r\n  },\r\n  {\r\n    id: 'b',\r\n    entVersion: '6.3',\r\n    status: <Toggle size=\"sm\"  aria-label=\"toggle button\" id=\"status-2\" />,\r\n    startDate: 'Jile, 2019',\r\n    endDate: 'April, 2023',\r\n  },\r\n  {\r\n    id: 'c',\r\n    entVersion: '6.2',\r\n    status: <Toggle size=\"sm\"  aria-label=\"toggle button\" defaultToggled id=\"status-3\" />,\r\n    startDate: 'September, 2020',\r\n    endDate: 'April, 2024',\r\n  },\r\n];\r\n\r\nexport default withKeycloak(ProductVersion);\r\n","import React from 'react';\r\nimport i18n from '../../../i18n';\r\nimport { Accordion, AccordionItem, Tile } from 'carbon-components-react';\r\nimport TicketingSystem from './TicketingSystem';\r\nimport ProductVersion from './ProductVersion';\r\nimport { isPortalAdmin } from '../../../api/helpers';\r\nimport withKeycloak from '../../../auth/withKeycloak';\r\n\r\nclass AdminConfiguration extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: true,\r\n    };\r\n    this.adminConfig = [\r\n      {\r\n        label: (\r\n          <div>\r\n            <p className=\"title\">{i18n.t('adminConfig.integrationTicketingSystem.title')}</p>\r\n            <p className=\"desc\">{i18n.t('adminConfig.integrationTicketingSystem.desc')}</p>\r\n          </div>\r\n        ),\r\n        content: <TicketingSystem serviceUrl={this.props.serviceUrl} />,\r\n      },\r\n      {\r\n        label: (\r\n          <div>\r\n            <p className=\"title\">{i18n.t('adminConfig.manageProductVersion.title')}</p>\r\n            <p className=\"desc\">{i18n.t('adminConfig.manageProductVersion.desc')}</p>\r\n          </div>\r\n        ),\r\n        content: <ProductVersion serviceUrl={this.props.serviceUrl} />,\r\n      },\r\n    ];\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n    if (authenticated) {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n    const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n\r\n    if (authenticated && changedAuth) {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (!this.state.loading) {\r\n      // Authorized\r\n      if (isPortalAdmin()) {\r\n        return (\r\n          <div>\r\n            <h3 className=\"pageTitle\">{i18n.t('adminDashboard.adminTitle')}</h3>\r\n            <div className=\"form-container\">\r\n              <Tile>\r\n                <p className=\"title\">{i18n.t('adminConfig.title')}</p>\r\n                <p className=\"desc\">{i18n.t('adminConfig.desc')}</p>\r\n              </Tile>\r\n              <Accordion>\r\n                {this.adminConfig.map((item, index) => (\r\n                  <AccordionItem key={index.toString()} index={index} title={item.label} description={item.description}>\r\n                    <div>{item.content}</div>\r\n                  </AccordionItem>\r\n                ))}\r\n              </Accordion>\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n      // Unauthorized\r\n      else {\r\n        return <p>{i18n.t('userMessages.unauthorized')}</p>;\r\n      }\r\n    }\r\n    // Loading\r\n    else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\nexport default withKeycloak(AdminConfiguration);\r\n","import React, { Component } from 'react';\r\nimport i18n from '../../i18n';\r\nimport { Form, Select, SelectItem, Button, TextArea, TextInput } from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport { apiAdminProjectsGet, apiMyProjectsGet, apiGetProjectSubscriptions } from '../../api/projects';\r\nimport { apiJiraTicketPost } from '../../api/tickets';\r\nimport { apiTicketingSystemsGet } from '../../api/ticketingsystem';\r\nimport {\r\n  isPortalAdmin,\r\n  isPortalAdminOrSupport,\r\n  isPortalCustomer,\r\n  isPortalCustomerOrPartner,\r\n  isPortalPartner,\r\n  isPortalSupport,\r\n  isPortalUser,\r\n} from '../../api/helpers';\r\n\r\nclass OpenTicket extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      loading: true,\r\n      project: {},\r\n      projects: [],\r\n      systemId: '',\r\n      type: 'Support',\r\n      description: '',\r\n      priority: 'Medium',\r\n      status: 'To Do',\r\n      createDate: '',\r\n      updateDate: '',\r\n      role: '',\r\n      invalid: {},\r\n      submitMsg: '',\r\n      submitColour: 'black',\r\n    };\r\n    this.types = ['Support', 'Feature Request'];\r\n    this.priorities = ['Critical', 'High', 'Medium', 'Low'];\r\n  }\r\n\r\n  handleValidation() {\r\n    let invalid = {};\r\n    let formIsValid = true;\r\n\r\n    if (this.state.project.systemId === undefined || this.state.project.systemId === 'project-list') {\r\n      formIsValid = false;\r\n      invalid['project'] = true;\r\n    }\r\n\r\n    if (this.state.type === '' || this.state.type === 'Select') {\r\n      formIsValid = false;\r\n      invalid['type'] = true;\r\n    }\r\n\r\n    if (this.state.description === '' || this.state.description === 'Select') {\r\n      formIsValid = false;\r\n      invalid['description'] = true;\r\n    }\r\n\r\n    if (this.state.priority === '' || this.state.priority === 'Select') {\r\n      formIsValid = false;\r\n      invalid['priority'] = true;\r\n    }\r\n\r\n    this.setState({ invalid: invalid });\r\n    return formIsValid;\r\n  }\r\n\r\n  handleChanges = e => {\r\n    const input = e.target;\r\n    const name = input.name;\r\n    const value = input.value;\r\n\r\n    if (name === 'project' && value !== '' && value !== 'project-list') {\r\n      this.setState({\r\n        project: JSON.parse(value),\r\n      });\r\n    } else {\r\n      this.setState({ [name]: value });\r\n    }\r\n  };\r\n\r\n  handleFormSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    const formIsValid = this.handleValidation();\r\n\r\n    if (formIsValid) {\r\n      // check if project has subscription\r\n      this.fetchProjectSubscription(this.state.project.id)\r\n        .then(result => {\r\n          // if project has subscription, create ticket\r\n          if (result.data.length > 0) {\r\n            this.createTicket()\r\n              .then(() => {\r\n                this.setState({\r\n                  submitMsg: i18n.t('submitMessages.created'),\r\n                  submitColour: '#24a148',\r\n                });\r\n              })\r\n              .catch(() => {\r\n                this.setState({\r\n                  submitMsg: i18n.t('submitMessages.ticketError'),\r\n                  submitColour: '#da1e28',\r\n                });\r\n              });\r\n          }\r\n          // if no subscriptions, don't create ticket\r\n          else {\r\n            this.setState({\r\n              submitMsg: i18n.t('submitMessages.subscriptionRequired'),\r\n              submitColour: '#da1e28',\r\n            });\r\n          }\r\n        })\r\n        .catch(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.error'),\r\n            submitColour: '#da1e28',\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  async fetchProjectSubscription(projectId) {\r\n    return await apiGetProjectSubscriptions(this.props.serviceUrl, projectId);\r\n  }\r\n\r\n  async fetchProjects() {\r\n    const { keycloak } = this.props;\r\n    var authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n    if (authenticated) {\r\n      if (isPortalAdminOrSupport()) {\r\n        let projects = await apiAdminProjectsGet(this.props.serviceUrl);\r\n        let search = window.location.search;\r\n        let params = new URLSearchParams(search);\r\n        let projectParam = params.get('project');\r\n        if (projectParam) {\r\n          projects.data.forEach(project => {\r\n            if (String(project.id) === projectParam) {\r\n              projects = project;\r\n              this.setState({\r\n                projects: [projects],\r\n                project: projects,\r\n              });\r\n            }\r\n          });\r\n        } else {\r\n          this.setState({\r\n            projects: projects.data,\r\n          });\r\n        }\r\n      } else if (isPortalCustomerOrPartner()) {\r\n        var projects = await apiMyProjectsGet(this.props.serviceUrl);\r\n        let search = window.location.search;\r\n        let params = new URLSearchParams(search);\r\n        let projectParam = params.get('project');\r\n        if (projectParam) {\r\n          projects.data.forEach(project => {\r\n            if (String(project.id) === projectParam) {\r\n              var foundProject = project;\r\n              this.setState({\r\n                projects: [foundProject],\r\n                project: foundProject,\r\n              });\r\n            }\r\n          });\r\n        } else {\r\n          this.setState({\r\n            projects: projects.data,\r\n          });\r\n        }\r\n      }\r\n    }\r\n\r\n    this.render();\r\n  }\r\n\r\n  async createTicket() {\r\n    const { keycloak } = this.props;\r\n    var authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n    if (authenticated) {\r\n      const ticket = {\r\n        systemId: this.state.project.systemId,\r\n        type: this.state.type,\r\n        summary: this.state.summary,\r\n        description: this.state.description,\r\n        priority: this.state.priority,\r\n        status: 'To Do',\r\n        // these dates are just placeholder to validate the POST request (date will be updated in the backend)\r\n        createDate: '2021-02-22T14:14:09-05:00',\r\n        updateDate: '2021-02-22T14:14:09-05:00',\r\n      };\r\n      return await apiJiraTicketPost(this.props.serviceUrl, this.state.ticketingSystem.systemId, this.state.project.systemId, ticket);\r\n      //const addedTicket = await apiAddTicketToProject(this.props.serviceUrl, this.state.project.id, result.data.id);\r\n    }\r\n  }\r\n\r\n  async getTicketingSystem() {\r\n    if (isPortalUser()) {\r\n      const ticketingSystems = await apiTicketingSystemsGet(this.props.serviceUrl);\r\n      const currentTicketingSystem = ticketingSystems.data[ticketingSystems.data.length - 1];\r\n      this.setState({\r\n        ticketingSystem: currentTicketingSystem,\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n    if (authenticated) {\r\n      this.fetchProjects();\r\n      this.getTicketingSystem();\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n    const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n\r\n    if (authenticated && changedAuth) {\r\n      this.fetchProjects();\r\n      this.getTicketingSystem();\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (!this.state.loading && this.state.projects.length !== 0) {\r\n      if (isPortalUser()) {\r\n        return (\r\n          <div>\r\n            {isPortalAdmin() ? (\r\n              <h3 className=\"pageTitle\">{i18n.t('adminDashboard.adminTitle')}</h3>\r\n            ) : isPortalSupport() ? (\r\n              <h3 className=\"pageTitle\">{i18n.t('adminDashboard.supportTitle')}</h3>\r\n            ) : isPortalCustomer() ? (\r\n              <h3 className=\"pageTitle\">{i18n.t('adminDashboard.customerTitle')}</h3>\r\n            ) : isPortalPartner() ? (\r\n              <h3 className=\"pageTitle\">{i18n.t('adminDashboard.partnerTitle')}</h3>\r\n            ) : null}\r\n            <div className=\"form-container\">\r\n              <p style={{ color: this.state.submitColour }}>{this.state.submitMsg}</p>\r\n              <Form onSubmit={this.handleFormSubmit}>\r\n                <div className=\"form-desc\">\r\n                  <h4>{i18n.t('supportTicketForm.formTitle')}</h4>\r\n                  <p>{i18n.t('supportTicketForm.desc')}</p>\r\n                </div>\r\n                <div className=\"bx--grid\">\r\n                  <div className=\"bx--row\">\r\n                    <div className=\"bx--col\">\r\n                      <Select\r\n                        id=\"project\"\r\n                        name=\"project\"\r\n                        labelText={i18n.t('supportTicketForm.selectProject') + ' *'}\r\n                        value={JSON.stringify(this.state.project)}\r\n                        onChange={this.handleChanges}\r\n                        invalidText={i18n.t('validation.invalid.required')}\r\n                        invalid={this.state.invalid['project']}\r\n                      >\r\n                        {this.state.projects.length > 1 ? (\r\n                          <SelectItem text={i18n.t('adminDashboard.addPartner.selectProject')} value=\"project-list\" />\r\n                        ) : null}\r\n                        {Object.keys(this.state.projects).length !== 0\r\n                          ? this.state.projects.map((project, i) => {\r\n                              return (\r\n                                <SelectItem key={i} text={project.name} value={JSON.stringify(project)}>\r\n                                  {project.name}\r\n                                </SelectItem>\r\n                              );\r\n                            })\r\n                          : null}\r\n                      </Select>\r\n                      <Select\r\n                        id=\"type\"\r\n                        name=\"type\"\r\n                        labelText={i18n.t('supportTicketForm.type') + ' *'}\r\n                        value={this.state.type}\r\n                        onChange={this.handleChanges}\r\n                        invalidText={i18n.t('validation.invalid.required')}\r\n                        invalid={this.state.invalid['type']}\r\n                      >\r\n                        {this.types.map((type, i) => (\r\n                          <SelectItem key={i} text={type} value={type}>\r\n                            {type}\r\n                          </SelectItem>\r\n                        ))}\r\n                      </Select>\r\n                      <Select\r\n                        id=\"priority\"\r\n                        name=\"priority\"\r\n                        labelText={i18n.t('supportTicketForm.priority') + ' *'}\r\n                        value={this.state.priority}\r\n                        onChange={this.handleChanges}\r\n                        invalidText={i18n.t('validation.invalid.required')}\r\n                        invalid={this.state.invalid['priority']}\r\n                      >\r\n                        {this.priorities.map((priority, i) => (\r\n                          <SelectItem key={i} text={priority} value={priority}>\r\n                            {priority}\r\n                          </SelectItem>\r\n                        ))}\r\n                      </Select>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"bx--row\">\r\n                    <div className=\"bx--col\">\r\n                      <TextInput\r\n                        labelText={i18n.t('supportTicketForm.ticketSummary') + ' *'}\r\n                        placeholder={i18n.t('supportTicketForm.addticketSummary')}\r\n                        id=\"summary\"\r\n                        name=\"summary\"\r\n                        value={this.state.summary}\r\n                        onChange={this.handleChanges}\r\n                        invalidText={i18n.t('validation.invalid.required')}\r\n                        invalid={this.state.invalid['summary']}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"bx--row\">\r\n                    <div className=\"bx--col\">\r\n                      <TextArea\r\n                        labelText={i18n.t('supportTicketForm.ticketDescription') + ' *'}\r\n                        placeholder={i18n.t('supportTicketForm.addticketDescription')}\r\n                        name=\"description\"\r\n                        value={this.state.description}\r\n                        onChange={this.handleChanges}\r\n                        invalidText={i18n.t('validation.invalid.required')}\r\n                        invalid={this.state.invalid['description']}\r\n                      />\r\n                      <Button kind=\"primary\" tabIndex={0} type=\"submit\">\r\n                        {' '}\r\n                        {i18n.t('buttons.submit')}{' '}\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </Form>\r\n            </div>\r\n          </div>\r\n        );\r\n      } else {\r\n        return <p>{i18n.t('userMessages.unauthorized')}</p>;\r\n      }\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport default withKeycloak(OpenTicket);\r\n","import { getDefaultOptions, request, getUrl } from './helpers';\r\n\r\nconst resource = 'api/portal-users';\r\n\r\nexport const apiUserDelete = async (serviceUrl, id) => {\r\n  const url = `${serviceUrl}/${resource}/${id}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE',\r\n  };\r\n  return await request(url, options);\r\n};\r\n\r\nexport const apiUsersPut = async (serviceUrl, user) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'PUT',\r\n    body: user ? JSON.stringify(user) : null,\r\n  };\r\n  return await request(url, options);\r\n};\r\n\r\nexport const apiUsersGet = async serviceUrl => {\r\n  const url = getUrl(`${serviceUrl}/${resource}`);\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return await request(url, options);\r\n};\r\n\r\nexport const apiUserGet = async (serviceUrl, userId) => {\r\n  const url = getUrl(`${serviceUrl}/${resource}/${userId}`);\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return await request(url, options);\r\n};\r\n\r\nexport const apiUserPost = async (serviceUrl, user) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n    body: user ? JSON.stringify(user) : null,\r\n  };\r\n  return await request(url, options);\r\n};\r\n\r\nexport const apiUserGetByUsername = async (serviceUrl, username) => {\r\n  const url = getUrl(`${serviceUrl}/${resource}/username/${username}`);\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return await request(url, options);\r\n};\r\n","import { getDefaultKeycloakOptions, request, getUrl } from './helpers';\r\n\r\nexport const apiKeycloakUserGet = async (serviceUrl, realm) => {\r\n  const usersResource = `admin/realms/${realm}/users`;\r\n  const url = `${serviceUrl}/${usersResource}`;\r\n  const options = {\r\n    ...getDefaultKeycloakOptions(),\r\n    method: 'GET',\r\n  };\r\n  return await request(url, options);\r\n};\r\n\r\nexport const apiKeycloakToken = async (serviceUrl, realm) => {\r\n  const tokenResource = `realms/${realm}/protocol/openid-connect/token`;\r\n  const url = getUrl(`${serviceUrl}/${tokenResource}`);\r\n  const keycloakBody = {\r\n    client_id: 'web_app',\r\n    username: 'admin',\r\n    password: 'admin',\r\n    grant_type: 'password',\r\n  };\r\n  const options = {\r\n    ...getDefaultKeycloakOptions(),\r\n    method: 'POST',\r\n    body: keycloakBody ? serialize(keycloakBody) : null,\r\n  };\r\n  return await request(url, options);\r\n};\r\n\r\nfunction serialize(obj) {\r\n  var str = [];\r\n  for (var p in obj)\r\n    if (obj.hasOwnProperty(p)) {\r\n      str.push(encodeURIComponent(p) + '=' + encodeURIComponent(obj[p]));\r\n    }\r\n  return str.join('&');\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Form, Select, SelectItem, Button } from 'carbon-components-react';\r\nimport * as portalUserApi from '../../../api/portalusers';\r\nimport {apiAddUserToProject, apiProjectGet} from '../../../api/projects';\r\nimport withKeycloak from '../../../auth/withKeycloak';\r\nimport { apiKeycloakUserGet } from '../../../api/keycloak';\r\nimport i18n from '../../../i18n';\r\nclass AssignUser extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      project: null,\r\n      projectId: '',\r\n      assignUser: '',\r\n      users: new Map(),\r\n      invalid: {},\r\n      submitMsg: '',\r\n      submitColour: 'black',\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { keycloak } = this.props;\r\n\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n    if (authenticated) {\r\n      this.fetchData(keycloak.authServerUrl);\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n    const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n\r\n    if (authenticated && changedAuth) {\r\n      this.fetchData(keycloak.authServerUrl);\r\n    }\r\n  }\r\n\r\n  async fetchData(keycloakUrl) {\r\n    const {keycloak} = this.props;\r\n    const users = this.mapKeycloakUserEmails((await apiKeycloakUserGet(keycloakUrl, keycloak.realm)).data);\r\n    const search = window.location.search;\r\n    const params = new URLSearchParams(search);\r\n    let projectId = params.get('project');\r\n    let project = null;\r\n    if (projectId != null) {\r\n      project = (await apiProjectGet(this.props.serviceUrl, projectId)).data;\r\n    } else {\r\n      projectId = '';\r\n    }\r\n\r\n    this.setState({\r\n      projectId: projectId,\r\n      project: project,\r\n      users: users\r\n    });\r\n  }\r\n\r\n  mapKeycloakUserEmails = keycloakUsers => {\r\n    const usernameEmailMap = new Map();\r\n    keycloakUsers.forEach(keycloakUser => usernameEmailMap.set(keycloakUser.username, keycloakUser.email));\r\n    return usernameEmailMap;\r\n  };\r\n\r\n  handleChanges = e => {\r\n    const input = e.target;\r\n    const name = input.name;\r\n    const value = input.value;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleFormSubmit = event => {\r\n    event.preventDefault();\r\n    const { projectId, assignUser } = this.state;\r\n    const formIsValid = this.handleFormValidation();\r\n\r\n    if (formIsValid) {\r\n      this.assignUserToProject(projectId, assignUser).then(res => {\r\n        if (res.status === 201) {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.updated'),\r\n            submitColour: '#24a148',\r\n          });\r\n          window.dispatchEvent(new CustomEvent(\"cp-user-assigned\"));\r\n        } else {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.error'),\r\n            submitColour: '#da1e28',\r\n          });\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  handleFormValidation() {\r\n    let invalid = {};\r\n    let formIsValid = true;\r\n    const { projectId, assignUser } = this.state;\r\n\r\n    //name\r\n    if (projectId === '') {\r\n      formIsValid = false;\r\n      invalid['projectId'] = true;\r\n    }\r\n\r\n    //customerNumber\r\n    if (assignUser === '') {\r\n      formIsValid = false;\r\n      invalid['assignUser'] = true;\r\n    }\r\n\r\n    this.setState({ invalid: invalid });\r\n    return formIsValid;\r\n  }\r\n\r\n  assignUserToProject = async (projectId, username) => {\r\n    const portalUserId = await this.getPortalUserId({ username, email: this.state.users.get(username) });\r\n    return await apiAddUserToProject(this.props.serviceUrl, projectId, portalUserId);\r\n  };\r\n\r\n  getPortalUserId = async keycloakUser => {\r\n    let portalUserId = null;\r\n    try {\r\n      const portalUser = await portalUserApi.apiUserGetByUsername(this.props.serviceUrl, keycloakUser.username);\r\n      portalUserId = portalUser.data.id;\r\n    } catch (e) {\r\n      if (e.message.toLowerCase().includes('not found')) {\r\n        const portalUser = await this.createPortalUser(keycloakUser);\r\n        portalUserId = portalUser.data.id;\r\n      }\r\n    }\r\n\r\n    return portalUserId;\r\n  };\r\n\r\n  createPortalUser = async keycloakUser => {\r\n    return await portalUserApi.apiUserPost(this.props.serviceUrl, { username: keycloakUser.username, email: keycloakUser.email });\r\n  };\r\n\r\n  setupFormComponents() {\r\n    const users = this.state.users;\r\n    const project = this.state.project;\r\n    let userList = null;\r\n    let projectList = null;\r\n\r\n    if (users.size > 0) {\r\n      userList = [...users.keys()].map((assignUser, i) => (\r\n        <SelectItem key={i} text={assignUser} value={assignUser}>\r\n          {assignUser}\r\n        </SelectItem>\r\n      ));\r\n      userList.unshift(<SelectItem key=\"-1\" text={i18n.t('manageUsers.assign.userList')} value=\"\"/>);\r\n    } else {\r\n      userList = <SelectItem text={i18n.t('manageUsers.assign.noUsers')} value=\"\"/>;\r\n    }\r\n\r\n    if (project != null) {\r\n      projectList = <SelectItem key={project.id} text={project.name} value={project.id}/>;\r\n    } else {\r\n      projectList = <SelectItem text={i18n.t('manageUsers.assign.noProjects')} value=\"\"/>;\r\n    }\r\n\r\n    return {userList, projectList};\r\n  }\r\n\r\n  render() {\r\n    const { userList, projectList } = this.setupFormComponents();\r\n\r\n    return (\r\n      <div>\r\n        <p style={{ color: this.state.submitColour }}>{this.state.submitMsg}</p>\r\n        <Form onSubmit={this.handleFormSubmit}>\r\n          <div className=\"bx--grid\">\r\n            <div className=\"bx--row\">\r\n              <div className=\"bx--col\">\r\n                <Select\r\n                  id=\"projectId\"\r\n                  name=\"projectId\"\r\n                  labelText={i18n.t('manageUsers.assign.projectName')}\r\n                  value={this.state.projectId}\r\n                  onChange={this.handleChanges}\r\n                  invalidText={i18n.t('validation.invalid.required')}\r\n                  invalid={this.state.invalid['projectId']}\r\n                >\r\n                  {projectList}\r\n                </Select>\r\n              </div>\r\n            </div>\r\n            <div className=\"bx--row\">\r\n              <div className=\"bx--col\">\r\n                <Select\r\n                  id=\"assignUser\"\r\n                  name=\"assignUser\"\r\n                  labelText={i18n.t('manageUsers.assign.assignUser')}\r\n                  value={this.state.assignUser}\r\n                  onChange={this.handleChanges}\r\n                  invalidText={i18n.t('validation.invalid.required')}\r\n                  invalid={this.state.invalid['assignUser']}\r\n                >\r\n                  {userList}\r\n                </Select>\r\n              </div>\r\n            </div>\r\n            <Button kind=\"primary\" tabIndex={0} type=\"submit\">\r\n              {' '}\r\n              {i18n.t('buttons.submit')}{' '}\r\n            </Button>\r\n          </div>\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withKeycloak(AssignUser);\r\n","import React, { Component } from 'react';\nimport {\n  DataTable,\n  TableContainer,\n  Table,\n  TableHead,\n  TableRow,\n  TableHeader,\n  TableBody,\n  TableCell,\n  Button\n} from 'carbon-components-react';\nimport withKeycloak from '../../../auth/withKeycloak';\nimport i18n from '../../../i18n';\nimport {apiGetProjectUsers, apiDeleteUserFromProject} from \"../../../api/projects\";\n\nclass DeleteUser extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      users: [],\n      displayUsers: [],\n      projectId: '',\n    };\n    this.headerData = [\n      {\n        header: i18n.t('manageUsers.delete.userName'),\n        key: 'username',\n      },\n      {\n        header: i18n.t('manageUsers.delete.userEmail'),\n        key: 'email',\n      },\n      {\n        header: i18n.t('manageUsers.delete.userAccess'),\n        key: 'userAccess',\n      },\n    ];\n    window.addEventListener(\"cp-user-assigned\", (event) => {\n      this.fetchData();\n    });\n  }\n\n  componentDidMount() {\n    const { keycloak } = this.props;\n    const authenticated = keycloak.initialized && keycloak.authenticated;\n\n    if (authenticated) {\n      this.fetchData();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { keycloak } = this.props;\n    const authenticated = keycloak.initialized && keycloak.authenticated;\n\n    const changedAuth = prevProps.keycloak.authenticated !== authenticated;\n\n    if (authenticated && changedAuth) {\n      this.fetchData();\n    }\n  }\n\n  async fetchData() {\n    const {keycloak} = this.props;\n\n    const authenticated = keycloak.initialized && keycloak.authenticated;\n    if (authenticated) {\n      let search = window.location.search;\n      const params = new URLSearchParams(search);\n      const projectId = params.get('project');\n      let users = [];\n      if (projectId != null) {\n        users = ((await apiGetProjectUsers(this.props.serviceUrl, projectId)).data);\n      }\n\n      this.setState({\n        users,\n        projectId\n      });\n\n      this.handleUserDisplay();\n    }\n  }\n\n  handleUserDisplay() {\n    const users = this.state.users;\n    const projectId = this.state.projectId;\n\n    const displayUsers = users.map(user => ({\n      id: user.username,\n      username: user.username,\n      email: user.email,\n      userAccess: (\n        <Button\n          kind=\"ghost\"\n          onClick={event => this.handleRemoveUser(user.id, projectId, event)}\n          className=\"button-warning\"\n        >\n          {i18n.t('manageUsers.delete.removeUser')}\n        </Button>\n      ),\n    }));\n\n    this.setState({\n      displayUsers,\n    });\n  }\n\n  handleRemoveUser = (userId, projectId, event) => {\n    event.preventDefault();\n\n    apiDeleteUserFromProject(this.props.serviceUrl, projectId, userId).then(res => {\n      if (res.status === 201) {\n        this.fetchData();\n      } else {\n        console.warn(\"Failed to delete user\", res);\n      }\n    });\n  };\n\n  render() {\n    return (\n      <DataTable rows={this.state.displayUsers} headers={this.headerData}>\n        {({ rows, headers, getHeaderProps, getTableProps }) => (\n          <TableContainer>\n            <Table {...getTableProps()}>\n              <TableHead>\n                <TableRow>\n                  {headers.map(header => (\n                    <TableHeader {...getHeaderProps({ header })}>{header.header}</TableHeader>\n                  ))}\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {rows.map(row => (\n                  <TableRow key={row.id}>\n                    {row.cells.map(cell => (\n                      <TableCell key={cell.id}>{cell.value}</TableCell>\n                    ))}\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        )}\n      </DataTable>\n    );\n  }\n}\n\nexport default withKeycloak(DeleteUser);\n","import React, { Component } from 'react';\r\nimport i18n from '../../../i18n';\r\nimport { Accordion, AccordionItem } from 'carbon-components-react';\r\nimport AssignUser from './AssignUser';\r\nimport DeleteUser from './DeleteUser';\r\nimport { isPortalAdmin } from '../../../api/helpers';\r\nimport withKeycloak from '../../../auth/withKeycloak';\r\n\r\nclass ManageUser extends Component {\r\n  userFunctionality;\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: true,\r\n    };\r\n    this.userFunctionality = [\r\n      {\r\n        label: (\r\n          <div>\r\n            <p className=\"title\">{i18n.t('manageUsers.manage.title')}</p>\r\n            <p className=\"desc\">{i18n.t('manageUsers.manage.desc')}</p>\r\n          </div>\r\n        ),\r\n        content: <DeleteUser serviceUrl={this.props.serviceUrl}/>,\r\n        open: true,\r\n      },\r\n      {\r\n        label: (\r\n          <div>\r\n            <p className=\"title\">{i18n.t('manageUsers.assign.title')}</p>\r\n            <p className=\"desc\">{i18n.t('manageUsers.assign.desc')}</p>\r\n          </div>\r\n        ),\r\n        content: <AssignUser serviceUrl={this.props.serviceUrl}/>,\r\n        open: true,\r\n      }\r\n    ];\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n    if (authenticated) {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n    const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n\r\n    if (authenticated && changedAuth) {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (!this.state.loading) {\r\n      if (isPortalAdmin()) {\r\n        return (\r\n          <div>\r\n            <h3 className=\"pageTitle\">{i18n.t('adminDashboard.adminTitle')}</h3>\r\n            <div className=\"form-container\">\r\n              <Accordion>\r\n                {this.userFunctionality.map((item, index) => (\r\n                  <AccordionItem key={index.toString()} index={index} title={item.label} description={item.description} open={item.open}>\r\n                    {item.content}\r\n                  </AccordionItem>\r\n                ))}\r\n              </Accordion>\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n      // Unauthorized\r\n      else {\r\n        return <p>{i18n.t('userMessages.unauthorized')}</p>;\r\n      }\r\n    }\r\n    // Loading\r\n    else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport default withKeycloak(ManageUser);\r\n","import React, {Component} from 'react';\nimport {\n  DataTable,\n  TableContainer,\n  Table,\n  TableHead,\n  TableRow,\n  TableHeader,\n  TableBody,\n  TableCell,\n  Button\n} from 'carbon-components-react';\nimport '../../../index.scss';\nimport withKeycloak from '../../../auth/withKeycloak';\nimport i18n from '../../../i18n';\nimport {isAuthenticated, authenticationChanged} from \"../../../api/helpers\";\nimport {apiDeleteSubscriptionFromProject, apiGetProjectSubscriptions, apiProjectGet} from \"../../../api/projects\";\nimport {formatEndDate, formatStartDate} from \"../../../api/subscriptions\";\nimport {Link} from \"react-router-dom\";\n\nclass ManageSubscriptions extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      projectId: '',\n      project: {},\n      subscriptions: []\n    }\n    ;\n    this.headerData = [\n      {\n        header: i18n.t('projectDetails.id'),\n        key: 'id',\n      },\n      {\n        header: i18n.t('projectDetails.status'),\n        key: 'status',\n      },\n      {\n        header: i18n.t('projectDetails.entandoVersion'),\n        key: 'entandoVersion',\n      },\n      {\n        header: i18n.t('projectDetails.level'),\n        key: 'level',\n      },\n      {\n        header: i18n.t('projectDetails.startDate'),\n        key: 'startDate',\n      },\n      {\n        header: i18n.t('projectDetails.endDate'),\n        key: 'endDate',\n      },\n      {\n        header: i18n.t('projectDetails.lengthInMonths'),\n        key: 'lengthInMonths',\n      },\n      {\n        header: i18n.t('customerDashboard.action'),\n        key: 'action',\n      },\n    ];\n  }\n\n  componentDidMount() {\n    if (isAuthenticated(this.props)) {\n      this.fetchData();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (authenticationChanged(this.props, prevProps)) {\n      this.fetchData();\n    }\n  }\n\n  async fetchData() {\n    if (isAuthenticated(this.props)) {\n      let search = window.location.search;\n      const params = new URLSearchParams(search);\n      const projectId = params.get('project');\n\n      let project = {};\n      let subscriptions = {};\n      if (projectId != null) {\n        project = ((await apiProjectGet(this.props.serviceUrl, projectId)).data);\n        subscriptions = ((await apiGetProjectSubscriptions(this.props.serviceUrl, projectId)).data);\n      }\n\n      this.setState({\n        projectId: projectId,\n        project: project,\n        subscriptions: subscriptions\n      });\n    }\n  }\n\n  async deleteSubscription(subscriptionId) {\n    if (isAuthenticated(this.props)) {\n      return await apiDeleteSubscriptionFromProject(this.props.serviceUrl, this.state.projectId, subscriptionId);\n    }\n  }\n\n  handleDeleteSubscription = (e, id) => {\n    e.preventDefault();\n    if (window.confirm(i18n.t('submitMessages.confirmDelete'))) {\n      console.log(\"confirmed to delete\", id);\n      this.deleteSubscription(id)\n        .then(() => {\n          this.setState({\n            submitMsg: i18n.t('submitMessages.deleted'),\n            submitColour: '#24a148',\n          });\n          this.fetchData();\n        })\n        .catch(() => {\n          this.setState({\n            submitMsg: i18n.t('submitMessages.error'),\n            submitColour: '#da1e28',\n          });\n        });\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <h5>{(this.state.project !== null) && this.state.project.name}</h5>\n        <DataTable rows={[{id: \"1\"}]} headers={this.headerData}>\n          {({headers, getHeaderProps, getTableProps}) => (\n            <TableContainer>\n              <Table {...getTableProps()}>\n                <TableHead>\n                  <TableRow>\n                    {headers.map(header => (\n                      <TableHeader {...getHeaderProps({header})}>{header.header}</TableHeader>\n                    ))}\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {(Object.keys(this.state.subscriptions).length !== 0) &&\n                  this.state.subscriptions.map((subscription, index) => (\n                    <TableRow key={index}>\n                      <TableCell>{subscription.id}</TableCell>\n                      <TableCell>{subscription.status}</TableCell>\n                      <TableCell>{subscription.entandoVersion.name}</TableCell>\n                      <TableCell>{subscription.level}</TableCell>\n                      <TableCell>{formatStartDate(subscription.startDate)}</TableCell>\n                      <TableCell>{formatEndDate(subscription.startDate, subscription.lengthInMonths)}</TableCell>\n                      <TableCell>{subscription.lengthInMonths}</TableCell>\n                      <TableCell>\n                        <Link\n                          to={`/entando-de-app/${this.props.locale}/new_or_renew_subscription.page?project=${this.state.projectId}&subscription=${subscription.id}`}\n                          style={{textDecoration: 'none'}}>\n                          <Button kind=\"ghost\" style={{display: 'block', width: '100%'}} value=\"Edit\">\n                            {i18n.t('buttons.edit')}\n                          </Button>\n                        </Link>\n                        <Button\n                          kind=\"ghost\"\n                          onClick={(event) => this.handleDeleteSubscription(event, subscription.id)}\n                          className=\"button-warning\">\n                          {i18n.t('buttons.delete')}\n                        </Button>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          )}\n        </DataTable>\n      </div>\n    );\n  }\n}\n\nexport default withKeycloak(ManageSubscriptions);\n","import React, {Component} from 'react';\nimport {BrowserRouter, Route, Switch, Link} from 'react-router-dom';\nimport App from '../components/App';\nimport withKeycloak from '../auth/withKeycloak';\nimport SubscriptionForm from \"../components/Forms/SubscriptionForm\";\nimport AdminConfiguration from \"../components/Admin/Configuration/AdminConfiguration\";\nimport OpenTicket from \"../components/Forms/openTicket\";\nimport ManageUser from \"../components/Admin/ManageUser/ManageUser\";\nimport ManageSubscriptions from \"../components/Admin/ManageSubscriptions/ManageSubscriptions\";\nimport {isPortalAdminOrSupport} from \"../api/helpers\";\n\nclass LocalApp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n    };\n  }\n\n  componentDidMount() {\n    const {keycloak} = this.props;\n    const authenticated = keycloak.initialized && keycloak.authenticated;\n\n    if (authenticated) {\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const {keycloak} = this.props;\n    const authenticated = keycloak.initialized && keycloak.authenticated;\n\n    const changedAuth = prevProps.keycloak.authenticated !== authenticated;\n\n    if (authenticated && changedAuth) {\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n\n  render() {\n    if (!this.state.loading) {\n      return (\n        <div>\n          <BrowserRouter forceRefresh={true}>\n            {/*Simple Menu for switching to page-based elements*/}\n            <div>\n              <ul>\n                <li><Link to={'/'}>Home</Link></li>\n                {/*TODO: rework the entando-de-app-based paths so the application name and locale are more general*/}\n                {isPortalAdminOrSupport() &&\n                <li><Link to={'/entando-de-app/en/admin.page'}>Admin</Link></li>\n                }\n              </ul>\n            </div>\n            <Switch>\n              <Route path=\"/entando-de-app/en/admin.page\">\n                <AdminConfiguration serviceUrl={this.props.serviceUrl} locale={this.props.locale}/>\n              </Route>\n              <Route path=\"/entando-de-app/en/manage_subscriptions.page\">\n                <ManageSubscriptions serviceUrl={this.props.serviceUrl} locale={this.props.locale}/>\n              </Route>\n              <Route path=\"/entando-de-app/en/manage_users.page\">\n                <ManageUser serviceUrl={this.props.serviceUrl} locale={this.props.locale}/>\n              </Route>\n              <Route path=\"/entando-de-app/en/new_or_renew_subscription.page\">\n                <SubscriptionForm serviceUrl={this.props.serviceUrl} locale={this.props.locale}/>\n              </Route>\n              <Route path=\"/entando-de-app/en/open_service_ticket.page\">\n                <OpenTicket serviceUrl={this.props.serviceUrl} locale={this.props.locale}/>\n              </Route>\n              <Route path=\"/\" exact={true}>\n                <App serviceUrl={this.props.serviceUrl} locale={this.props.locale}/>\n              </Route>\n            </Switch>\n          </BrowserRouter>\n        </div>\n      );\n    } else {\n      return null;\n    }\n  }\n}\n\nexport default withKeycloak(LocalApp);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '../index.scss';\nimport * as Locale from '../i18n';\n\nimport KeycloakContext from '../auth/KeycloakContext';\nimport LocalApp from '../local/LocalApp';\n\nimport {subscribeToWidgetEvent} from '../helpers/widgetEvents';\nimport {KEYCLOAK_EVENT_TYPE} from '../custom-elements/widgetEventTypes';\n\nconst getKeycloakInstance = () =>\n  (window && window.entando && window.entando.keycloak && {...window.entando.keycloak, initialized: true}) || {\n    initialized: false,\n  };\n\nconst ATTRIBUTES = {\n  hidden: 'hidden',\n  locale: 'locale',\n  paginationMode: 'pagination-mode',\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\n  serviceUrl: 'service-url',\n};\n\nclass LocalAppElement extends HTMLElement {\n  container;\n\n  mountPoint;\n\n  unsubscribeFromKeycloakEvent;\n\n  keycloak = getKeycloakInstance();\n\n  connectedCallback() {\n    this.mountPoint = document.createElement('div');\n    this.keycloak = {...getKeycloakInstance(), initialized: true};\n\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\n      this.keycloak = {...getKeycloakInstance(), initialized: true};\n      this.render();\n    });\n\n    this.render();\n\n    //retargetEvents(shadowRoot);\n    this.appendChild(this.mountPoint);\n  }\n\n  render() {\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\n    const locale = this.getAttribute(ATTRIBUTES.locale) || '';\n    Locale.setLocale(locale);\n\n    ReactDOM.render(\n      <KeycloakContext.Provider value={this.keycloak}>\n        <LocalApp serviceUrl={serviceUrl} locale={locale}/>\n      </KeycloakContext.Provider>,\n      this.mountPoint\n    );\n  }\n}\n\ncustomElements.define('local-app-element', LocalAppElement);\n","export const publishWidgetEvent = (eventId, payload) => {\r\n  const widgetEvent = new CustomEvent(eventId, {\r\n    detail: {\r\n      payload,\r\n    },\r\n  });\r\n  window.dispatchEvent(widgetEvent);\r\n};\r\n\r\nexport const createWidgetEventPublisher = eventType => payload => publishWidgetEvent(eventType, payload);\r\n\r\nexport const subscribeToWidgetEvent = (eventType, eventHandler) => {\r\n  window.addEventListener(eventType, eventHandler);\r\n\r\n  return () => {\r\n    window.removeEventListener(eventType, eventHandler);\r\n  };\r\n};\r\n\r\nexport const subscribeToWidgetEvents = (widgetEvents, eventHandler) => {\r\n  widgetEvents.forEach(eventType => window.addEventListener(eventType, eventHandler));\r\n\r\n  return () => {\r\n    widgetEvents.forEach(eventType => window.removeEventListener(eventType, eventHandler));\r\n  };\r\n};\r\n\r\nexport const widgetEventToFSA = widgetEvent => {\r\n  // for info about Flux Standard Action (FSA) see https://github.com/redux-utilities/flux-standard-action\r\n  const {\r\n    type,\r\n    detail: { payload, error, meta },\r\n  } = widgetEvent;\r\n  return { type, payload, error, meta };\r\n};\r\n","export const INPUT_EVENT_TYPES = {\r\n  formUpdate: 'customer.form.update',\r\n  formCreate: 'customer.form.create',\r\n  formDelete: 'customer.form.delete',\r\n};\r\n\r\nexport const OUTPUT_EVENT_TYPES = {\r\n  select: 'customer.table.select',\r\n  add: 'customer.table.add',\r\n  error: 'customer.table.error',\r\n  delete: 'customer.table.delete',\r\n};\r\n\r\nexport const KEYCLOAK_EVENT_TYPE = 'keycloak';\r\n"],"sourceRoot":""}