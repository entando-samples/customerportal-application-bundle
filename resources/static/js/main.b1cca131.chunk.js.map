{"version":3,"sources":["i18n.js","auth/KeycloakContext.js","components/__types__/ref.js","auth/withKeycloak.js","api/helpers.js","api/customers.js","components/Admin/AddCustomerModal.js","helpers/widgetEvents.js","custom-elements/widgetEventTypes.js","custom-elements/AdminAddCustomerElement.js","api/ticketingsystem.js","components/Admin/Configuration/TicketingSystem.js","api/productVersion.js","components/Admin/AddProductVersionModal.js","components/Admin/EditVersionModal.js","components/Admin/Configuration/ProductVersion.js","components/Admin/Configuration/AdminConfiguration.js","custom-elements/AdminConfigurationElement.js","api/partners.js","api/projects.js","auth/KeycloakViews.js","components/Admin/AddPartnerModal.js","components/Admin/AddProjectModal.js","components/Admin/EditProjectModal.js","components/Admin/ManagePartnersModal.js","components/Admin/ProjectActionItems.js","api/subscriptions.js","components/Customer/CustomerDataTable.js","components/Customer/CustomerDetails.js","components/Admin/EditCustomerModal.js","components/Customer/CustomerAccordian.js","components/Admin/AdminDashboard.js","custom-elements/AdminDashboardElement.js","components/Admin/RoleCheck.js","custom-elements/AdminRoleCheckElement.js","api/tickets.js","components/SubscriptionDetails/TicketList.js","components/Admin/EditSubscriptionModal.js","components/SubscriptionDetails/Subscription.js","components/Customer/CustomerProjectList.js","components/App.js","custom-elements/AppElement.js","api/portalusers.js","api/keycloak.js","components/Admin/ManageUser/AssignUser.js","custom-elements/AssignUserElement.js","custom-elements/CustomerDataTableElement.js","custom-elements/CustomerDetailsElement.js","components/Admin/ManageUser/DeleteUser.js","custom-elements/DeleteUserElement.js","components/Forms/enhancementRequest.js","custom-elements/FormsEnhancementRequestElement.js","components/Forms/openTicket.js","custom-elements/FormsOpenTicketElement.js","components/Admin/ManageSubscriptions/ManageSubscriptions.js","custom-elements/ManageSubscriptionsElement.js","components/Admin/ManageUser/ManageUser.js","custom-elements/ManageUserElement.js","components/Navigation/Navigation.js","custom-elements/NavigationElement.js","custom-elements/OpenTicketElement.js","custom-elements/ProductVersionElement.js","custom-elements/SubscriptionElement.js","components/Forms/SubscriptionForm.js","custom-elements/SubscriptionFormElement.js","custom-elements/TicketListElement.js","custom-elements/TicketingSystemElement.js","local/LocalApp.js","local/LocalAppElement.js"],"names":["i18n","defaultLocale","locale","fallbacks","translations","en","it","setLocale","KeycloakContext","PropTypes","oneOfType","func","shape","current","elementType","React","createContext","withKeycloak","WrappedComponent","WithKeycloakComponent","renderWrappedComponent","value","props","forwardedRef","rest","ref","keycloak","Consumer","this","Component","defaultProps","forwardRef","getKeycloakToken","window","entando","authenticated","token","isAuthenticated","initialized","authenticationChanged","prevProps","changedAuth","isPortalAdmin","hasKeycloakClientRole","isPortalSupport","isPortalPartner","isPortalCustomer","isPortalAdminOrSupport","isPortalCustomerOrPartner","isPortalUser","clientRole","resourceAccess","client","item","roles","includes","getDefaultOptions","headers","Headers","Authorization","getDefaultKeycloakOptions","getUrl","url","request","options","a","fetch","response","has","parseInt","get","status","data","json","Promise","reject","Error","statusText","resource","apiCustomerDelete","serviceUrl","id","method","apiCustomersGet","apiCustomerGet","apiCustomerPost","customer","body","JSON","stringify","apiCustomerPut","apiGetCustomersProjects","customerId","apiAddProjectToCustomer","projectId","apiDeleteProjectFromCustomer","adminResource","apiAdminCustomersGet","apiAdminCustomerGet","myResource","apiMyCustomersGet","apiGetMyCustomersProjects","handleChanges","e","input","target","name","setState","handleFormSubmit","handleValidation","state","customerNumber","contactName","contactPhone","contactEmail","notes","customerPost","then","submitMsg","t","submitColour","updateCustomerList","catch","clearValues","document","querySelector","className","baseState","invalid","formIsValid","lastAtPos","lastIndexOf","lastDotPos","indexOf","length","addEventListener","modalConfirmation","style","color","modalId","ModalWrapper","buttonTriggerText","modalHeading","buttonTriggerClassName","handleSubmit","primaryButtonText","secondaryButtonText","Form","onSubmit","TextInput","labelText","onChange","invalidText","TextArea","subscribeToWidgetEvent","eventType","eventHandler","removeEventListener","KEYCLOAK_EVENT_TYPE","getKeycloakInstance","ATTRIBUTES","AdminAddCustomerElement","mountPoint","createElement","unsubscribeFromKeycloakEvent","render","appendChild","getAttribute","Locale","ReactDOM","Provider","HTMLElement","customElements","define","apiTicketingSystemDelete","apiCurrentTicketingSystemGet","apiTicketingSystemsGet","ticketingSystems","apiTicketingSystemPost","ticketingsystem","apiTicketingSystemPut","event","preventDefault","ticketingSystem","createTicketingSystem","updateTicketingSystem","ticketingSystemType","serviceAccount","serviceAccountSecret","systemId","currentTicketingSystem","getTicketingSystems","confirm","deleteTicketingSystem","Select","SelectItem","text","map","i","type","Button","kind","tabIndex","onClick","handleDelete","apiProductVersionsGet","apiProductVersionGet","versionId","apiUpdateProductVersionsStatus","apiProductVersionPost","productVersion","apiProductVersionPut","apiProductVersionDelete","addProductVersion","updateProductVersions","handleStartDateChange","date","startDate","moment","toISOString","format","handleEndDateChange","endDate","match","DatePicker","dateFormat","datePickerType","DatePickerInput","placeholder","version","versionPut","buttonId","getVersionDetails","buttonClassName","ProductVersion","handleDeleteVersion","deleteVersion","getProductVersions","versions","productVersions","DataTable","rows","rowData","headerData","getHeaderProps","getTableProps","TableContainer","Table","TableHead","TableRow","header","TableHeader","TableBody","Object","keys","index","TableCell","Toggle","size","handleToggleChange","aria-label","defaultToggled","display","width","key","entVersion","loading","adminConfig","label","content","Tile","Accordion","AccordionItem","title","description","toString","AdminConfigurationElement","apiPartnerPost","partner","apiProjectsGet","apiProjectGet","apiProjectPost","project","apiProjectPut","apiAddTicketToProject","ticketId","apiAddSubscriptionToProject","subscriptionId","apiAddUserToProject","userId","apiDeletePartnerFromProject","partnerId","apiDeleteSubscriptionFromProject","apiDeleteUserFromProject","apiAddPartnerToProject","apiGetProjectUsers","apiGetProjectSubscriptions","apiGetMyProject","apiAdminProjectsGet","apiMyProjectsGet","AuthenticatedView","children","UnauthenticatedView","partnerNumber","partnerPost","projectList","getProjects","projects","result","trim","alert","projectPost","getAllProjects","customerList","getCustomers","customers","allCustomers","allProjects","projectPut","updateProjectList","getProjectDetails","ManagePartnersModal","handleRemovePartner","removePartner","err","console","log","hasForm","partners","margin","border","borderTop","handleClick","showMenu","handleOutsideClick","prevState","node","contains","isAdmin","actionDivider","topButton","padding","editProjectSubscription","subscriptionParam","subscription","newOrRenewSubscription","href","textDecoration","manageUsers","manageSubscriptions","deleteProject","handleDeleteProject","zIndex","position","backgroundColor","to","substr","rel","formatStartDate","String","Date","toDateString","formatEndDate","lengthInMonths","setMonth","getMonth","apiSubscriptionGet","apiProjectSubscriptionPost","projectSubscriptionCreation","apiProjectSubscriptionPut","apiRenewSubscription","projectSubscriptionRenew","CustomerDataTable","fetchData","closeMenu","action","projectSubscriptions","find","entandoVersion","tickets","getCustomer","getCustomerDetails","updateCustomer","getCustomersProjects","deleteCustomer","open","accordionOpened","getTime","handleSearch","newFilteredState","filter","toLowerCase","filteredCustomers","currentPage","undefined","forceUpdate","role","test","numberOfPages","Math","ceil","Search","onKeyPress","indexOfLastItem","firstIndexOfCurrentPage","PaginationNav","loop","Boolean","page","Number","totalItems","itemsShown","AdminDashboardElement","RoleCheck","roleType","defaultValue","renderForm","AdminRoleCheckElement","jiraResource","apiJiraTicketsGet","projectName","organization","apiJiraTicketPost","ticket","TicketList","ticketSystemUrl","ticketingSystemBaseUrl","ticketUrl","summary","priority","createDate","updateDate","creationDate","openTicket","subscriptionRequest","projectSubscription","level","subscriptionPut","updateSubscription","isNumeric","str","isNaN","parseFloat","getSubscriptionDetails","disabled","subscriptionData","users","params","license","user","username","path","AppElement","apiUserPost","apiUserGetByUsername","apiKeycloakUserGet","realm","usersResource","mapKeycloakUserEmails","keycloakUsers","usernameEmailMap","Map","forEach","keycloakUser","set","email","assignUser","handleFormValidation","assignUserToProject","res","dispatchEvent","CustomEvent","getPortalUserId","portalUserId","portalUserApi","portalUser","message","createPortalUser","authServerUrl","keycloakUrl","search","location","URLSearchParams","userList","unshift","setupFormComponents","AssignUserElement","CustomerDataTableElement","CustomerDetailsElement","handleRemoveUser","warn","displayUsers","handleUserDisplay","userAccess","row","cells","cell","DeleteUserElement","EnhancementRequest","ticketNo","customerName","openedBy","partnerName","enhancementDescription","FormsEnhancementRequestElement","parse","fetchProjectSubscription","createTicket","types","priorities","projectParam","foundProject","fetchProjects","getTicketingSystem","FormsOpenTicketElement","handleDeleteSubscription","deleteSubscription","subscriptions","ManageSubscriptionsElement","userFunctionality","ManageUserElement","Navigation","NavigationElement","OpenTicketElement","ProductVersionElement","SubscriptionElement","subscriptionLevel","GOLD","PLATINUM","subscriptionStatus","requested","pending","active","expired","submitSuccess","submitError","formatted","formType","stateToSubscription","updateStateForSuccess","newSubscription","renewSubscription","entandoVersionId","success","toUpperCase","subscriptionLevelList","entries","versionList","statusList","subscriptionType","createFormMessage","subMessageKey","titleKey","formLabelKey","successErrorMessage","SubscriptionFormElement","TicketListCustomerElement","TicketingSystemElement","logout","forceRefresh","exact","LocalAppElement"],"mappings":"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","file":"static/js/main.b1cca131.chunk.js","sourcesContent":["import i18n from 'i18n-js';\r\n\r\nimport en from './i18n/locales/en.json';\r\nimport it from './i18n/locales/it.json';\r\n\r\ni18n.defaultLocale = 'en';\r\ni18n.locale = 'en';\r\ni18n.fallbacks = true;\r\ni18n.translations = { en, it };\r\n\r\nexport const setLocale = locale => {\r\n  i18n.locale = locale;\r\n};\r\n\r\nexport default i18n;\r\n","import React from 'react';\n\nconst KeycloakContext = React.createContext(null);\n\nexport default KeycloakContext;\n","import PropTypes from 'prop-types';\r\n\r\nexport default PropTypes.oneOfType([PropTypes.func, PropTypes.shape({ current: PropTypes.elementType }), PropTypes.shape(null)]);\r\n","/* eslint-disable react/jsx-props-no-spreading */\r\nimport React, { forwardRef, Component } from 'react';\r\nimport refType from '../components/__types__/ref';\r\nimport KeycloakContext from './KeycloakContext';\r\n\r\nexport default function withKeycloak(WrappedComponent) {\r\n  class WithKeycloakComponent extends Component {\r\n    renderWrappedComponent = value => {\r\n      const { forwardedRef, ...rest } = this.props;\r\n      return <WrappedComponent {...rest} ref={forwardedRef} keycloak={value} />;\r\n    };\r\n\r\n    render() {\r\n      return <KeycloakContext.Consumer>{this.renderWrappedComponent}</KeycloakContext.Consumer>;\r\n    }\r\n  }\r\n\r\n  WithKeycloakComponent.propTypes = {\r\n    forwardedRef: refType,\r\n  };\r\n\r\n  WithKeycloakComponent.defaultProps = {\r\n    forwardedRef: () => {},\r\n  };\r\n\r\n  return forwardRef((props, ref) => <WithKeycloakComponent {...props} forwardedRef={ref} />);\r\n}\r\n","export const getKeycloakToken = () => {\n  if (window && window.entando && window.entando.keycloak && window.entando.keycloak.authenticated) {\n    return window.entando.keycloak.token;\n  }\n  return '';\n};\n\nconst ADMIN = 'cp-admin';\nconst SUPPORT = 'cp-support';\nconst PARTNER = 'cp-partner';\nconst CUSTOMER = 'cp-customer';\n\nexport const isAuthenticated = (props) => {\n  const {keycloak} = props;\n  return keycloak.initialized && keycloak.authenticated;\n}\n\nexport const authenticationChanged = (props, prevProps) => {\n  const authenticated = isAuthenticated(props);\n  const changedAuth = prevProps.keycloak.authenticated !== authenticated;\n  return (authenticated && changedAuth);\n}\n\nexport const isPortalAdmin = () => {\n  return hasKeycloakClientRole(ADMIN);\n};\n\nexport const isPortalSupport = () => {\n  return hasKeycloakClientRole(SUPPORT);\n};\n\nexport const isPortalPartner = () => {\n  return hasKeycloakClientRole(PARTNER);\n};\n\nexport const isPortalCustomer = () => {\n  return hasKeycloakClientRole(CUSTOMER);\n};\n\nexport const isPortalAdminOrSupport = () => {\n  return isPortalAdmin() || isPortalSupport();\n};\n\nexport const isPortalCustomerOrPartner = () => {\n  return isPortalCustomer() || isPortalPartner();\n};\n\nexport const isPortalUser = () => {\n  return isPortalAdminOrSupport() || isPortalCustomerOrPartner();\n};\n\nexport const hasKeycloakClientRole = clientRole => {\n  if (getKeycloakToken()) {\n    const { resourceAccess } = window.entando.keycloak;\n    if (resourceAccess) {\n      for (const client in resourceAccess) {\n        const item = resourceAccess[client];\n        if (item.roles && item.roles.includes(clientRole)) {\n          // console.debug(\"Found role {} with client {} \", clientRole, client);\n          return true;\n        }\n      }\n    }\n  }\n  return false;\n};\n\nexport const getDefaultOptions = () => ({\n  headers: new Headers({\n    Authorization: `Bearer ${getKeycloakToken()}`,\n    'Content-Type': 'application/json',\n  }),\n});\n\nexport const getDefaultKeycloakOptions = () => ({\n  headers: new Headers({\n    Authorization: `Bearer ${getKeycloakToken()}`,\n    'Content-Type': 'application/x-www-form-urlencoded',\n  }),\n});\n\nexport const getUrl = url => {\n  return `${url}`;\n};\n\nexport const request = async (url, options) => {\n  const response = await fetch(url, options);\n\n  const headers = {\n    ...(response.headers.has('X-Total-Count') ? { 'X-Total-Count': parseInt(response.headers.get('X-Total-Count'), 10) } : {}),\n  };\n\n  if (response.status === 204) {\n    return { data: '', status: response.status };\n  }\n\n  return response.status >= 200 && response.status < 300\n    ? { data: await response.json(), headers, status: response.status }\n    : Promise.reject(new Error(response.statusText || response.status));\n};\n","import { getDefaultOptions, request, getUrl } from './helpers';\r\n\r\nconst resource = 'api/customers';\r\n\r\nexport const apiCustomerDelete = async (serviceUrl, id) => {\r\n  const url = `${serviceUrl}/${resource}/${id}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiCustomersGet = async serviceUrl => {\r\n  const url = getUrl(`${serviceUrl}/${resource}`);\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiCustomerGet = async (serviceUrl, id) => {\r\n  const url = getUrl(`${serviceUrl}/${resource}/${id}`);\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiCustomersGetForAdminDashboard = async serviceUrl => {\r\n  const url = `${serviceUrl}/${resource}/all`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiCustomerPost = async (serviceUrl, customer) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n    body: customer ? JSON.stringify(customer) : null,\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiCustomerPut = async (serviceUrl, customer) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'PUT',\r\n    body: customer ? JSON.stringify(customer) : null,\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiGetCustomersProjects = async (serviceUrl, customerId) => {\r\n  const url = `${serviceUrl}/${resource}/${customerId}/projects`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiAddProjectToCustomer = async (serviceUrl, customerId, projectId) => {\r\n  const url = `${serviceUrl}/${resource}/${customerId}/projects/${projectId}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiDeleteProjectFromCustomer = async (serviceUrl, customerId, projectId) => {\r\n  const url = `${serviceUrl}/${resource}/${customerId}/projects/${projectId}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\n// Endpoints for backend security\r\nconst adminResource = 'api/customers/admin';\r\nexport const apiAdminCustomersGet = async serviceUrl => {\r\n  const url = getUrl(`${serviceUrl}/${adminResource}`);\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiAdminCustomerGet = async (serviceUrl, customerId) => {\r\n  const url = getUrl(`${serviceUrl}/${adminResource}/${customerId}`);\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nconst myResource = 'api/customers/mycustomers';\r\nexport const apiMyCustomersGet = async serviceUrl => {\r\n  const url = getUrl(`${serviceUrl}/${myResource}`);\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiGetMyCustomersProjects = async (serviceUrl, customerId) => {\r\n  const url = `${serviceUrl}/${myResource}/${customerId}/projects`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n","import React, { Component } from 'react';\r\nimport i18n from '../../i18n';\r\nimport { ModalWrapper, Form, TextInput, TextArea } from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport { apiCustomerPost } from '../../api/customers';\r\n\r\nclass AddCustomerModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      name: '',\r\n      customerNumber: '',\r\n      contactName: '',\r\n      contactPhone: '',\r\n      contactEmail: '',\r\n      notes: '',\r\n      invalid: {},\r\n      submitMsg: '',\r\n      submitColour: 'black',\r\n    };\r\n\r\n    this.baseState = this.state;\r\n  }\r\n\r\n  handleValidation() {\r\n    let invalid = {};\r\n    let formIsValid = true;\r\n\r\n    if (this.state.name === '') {\r\n      formIsValid = false;\r\n      invalid['name'] = true;\r\n    }\r\n\r\n    if (this.state.customerNumber === '') {\r\n      formIsValid = false;\r\n      invalid['customerNumber'] = true;\r\n    }\r\n\r\n    if (typeof this.state.contactEmail !== 'undefined') {\r\n      let lastAtPos = this.state.contactEmail.lastIndexOf('@');\r\n      let lastDotPos = this.state.contactEmail.lastIndexOf('.');\r\n\r\n      if (\r\n        !(\r\n          lastAtPos < lastDotPos &&\r\n          lastAtPos > 0 &&\r\n          this.state.contactEmail.indexOf('@@') === -1 &&\r\n          lastDotPos > 2 &&\r\n          this.state.contactEmail.length - lastDotPos > 2\r\n        )\r\n      ) {\r\n        formIsValid = false;\r\n        invalid['contactEmail'] = true;\r\n      }\r\n    }\r\n\r\n    this.setState({ invalid: invalid });\r\n    return formIsValid;\r\n  }\r\n\r\n  handleChanges = e => {\r\n    const input = e.target;\r\n    const name = input.name;\r\n    const value = input.value;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  async customerPost(customer) {\r\n    const { keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n    if (authenticated) {\r\n      return await apiCustomerPost(this.props.serviceUrl, customer);\r\n    }\r\n  }\r\n\r\n  handleFormSubmit = () => {\r\n    const formIsValid = this.handleValidation();\r\n\r\n    if (formIsValid) {\r\n      const customer = {\r\n        name: this.state.name,\r\n        customerNumber: this.state.customerNumber,\r\n        contactName: this.state.contactName,\r\n        contactPhone: this.state.contactPhone,\r\n        contactEmail: this.state.contactEmail,\r\n        notes: this.state.notes,\r\n      };\r\n\r\n      this.customerPost(customer)\r\n        .then(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.added'),\r\n            submitColour: '#24a148',\r\n          });\r\n          this.props.updateCustomerList();\r\n        })\r\n        .catch(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.error'),\r\n            submitColour: '#da1e28',\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  clearValues = () => {\r\n    const customerModalElement = document.querySelector('#modal-form-customer');\r\n    if (!customerModalElement.className.includes('is-visible')) {\r\n      this.setState(this.baseState);\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    const modalOpenButton = document.querySelector('.add-customer-button');\r\n    modalOpenButton.addEventListener('click', this.clearValues, false);\r\n  }\r\n\r\n  render() {\r\n    const modalConfirmation = (\r\n      <div className=\"bx--modal-header\">\r\n        <p style={{ color: this.state.submitColour }}>{this.state.submitMsg}</p>\r\n      </div>\r\n    )\r\n    const modalId = \"modal-form-customer\"\r\n    return (\r\n      <ModalWrapper\r\n        buttonTriggerText={i18n.t('buttons.addCustomer')}\r\n        modalHeading={i18n.t('adminDashboard.addCustomer.title')}\r\n        buttonTriggerClassName=\"add-customer bx--btn bx--btn--tertiary add-customer-button\"\r\n        className=\"modal-form\"\r\n        id={modalId}\r\n        handleSubmit={this.handleFormSubmit}\r\n        primaryButtonText={i18n.t('modalText.save')}\r\n        secondaryButtonText={i18n.t('modalText.cancel')}\r\n      >\r\n        {modalConfirmation}\r\n        <div className=\"form-container\">\r\n          <Form onSubmit={this.handleFormSubmit}>\r\n            <TextInput\r\n              id={\"name\" + modalId}\r\n              name=\"name\"\r\n              labelText={i18n.t('adminDashboard.addCustomer.customerName') + ' *'}\r\n              value={this.state.name}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.required')}\r\n              invalid={this.state.invalid['name']}\r\n            />\r\n            <TextInput\r\n              id={\"customerNumber\" + modalId}\r\n              name=\"customerNumber\"\r\n              labelText={i18n.t('adminDashboard.addCustomer.customerNumber') + ' *'}\r\n              value={this.state.customerNumber}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.required')}\r\n              invalid={this.state.invalid['customerNumber']}\r\n            />\r\n            <TextInput\r\n              id={\"contactName\" + modalId}\r\n              name=\"contactName\"\r\n              labelText={i18n.t('adminDashboard.addCustomer.contactName')}\r\n              value={this.state.contactName}\r\n              onChange={this.handleChanges}\r\n            />\r\n            <TextInput\r\n              id={\"contactPhone\" + modalId}\r\n              name=\"contactPhone\"\r\n              labelText={i18n.t('adminDashboard.addCustomer.contactPhone')}\r\n              value={this.state.contactPhone}\r\n              onChange={this.handleChanges}\r\n            />\r\n            <TextInput\r\n              id={\"contactEmail\" + modalId}\r\n              name=\"contactEmail\"\r\n              labelText={i18n.t('adminDashboard.addCustomer.contactEmail') + ' *'}\r\n              value={this.state.contactEmail}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.email')}\r\n              invalid={this.state.invalid['contactEmail']}\r\n            />\r\n            <TextArea\r\n              id={\"notes\" + modalId}\r\n              name=\"notes\"\r\n              labelText={i18n.t('adminDashboard.addCustomer.notes')}\r\n              value={this.state.notes}\r\n              onChange={this.handleChanges}\r\n            />\r\n          </Form>\r\n        </div>\r\n        {modalConfirmation}\r\n      </ModalWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withKeycloak(AddCustomerModal);\r\n","export const publishWidgetEvent = (eventId, payload) => {\r\n  const widgetEvent = new CustomEvent(eventId, {\r\n    detail: {\r\n      payload,\r\n    },\r\n  });\r\n  window.dispatchEvent(widgetEvent);\r\n};\r\n\r\nexport const createWidgetEventPublisher = eventType => payload => publishWidgetEvent(eventType, payload);\r\n\r\nexport const subscribeToWidgetEvent = (eventType, eventHandler) => {\r\n  window.addEventListener(eventType, eventHandler);\r\n\r\n  return () => {\r\n    window.removeEventListener(eventType, eventHandler);\r\n  };\r\n};\r\n\r\nexport const subscribeToWidgetEvents = (widgetEvents, eventHandler) => {\r\n  widgetEvents.forEach(eventType => window.addEventListener(eventType, eventHandler));\r\n\r\n  return () => {\r\n    widgetEvents.forEach(eventType => window.removeEventListener(eventType, eventHandler));\r\n  };\r\n};\r\n\r\nexport const widgetEventToFSA = widgetEvent => {\r\n  // for info about Flux Standard Action (FSA) see https://github.com/redux-utilities/flux-standard-action\r\n  const {\r\n    type,\r\n    detail: { payload, error, meta },\r\n  } = widgetEvent;\r\n  return { type, payload, error, meta };\r\n};\r\n","export const INPUT_EVENT_TYPES = {\r\n  formUpdate: 'customer.form.update',\r\n  formCreate: 'customer.form.create',\r\n  formDelete: 'customer.form.delete',\r\n};\r\n\r\nexport const OUTPUT_EVENT_TYPES = {\r\n  select: 'customer.table.select',\r\n  add: 'customer.table.add',\r\n  error: 'customer.table.error',\r\n  delete: 'customer.table.delete',\r\n};\r\n\r\nexport const KEYCLOAK_EVENT_TYPE = 'keycloak';\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport AddCustomerModal from '../components/Admin/AddCustomerModal';\nimport '../index.scss';\n\nimport KeycloakContext from '../auth/KeycloakContext';\n\nimport { subscribeToWidgetEvent } from '../helpers/widgetEvents';\nimport {KEYCLOAK_EVENT_TYPE} from '../custom-elements/widgetEventTypes';\nimport * as Locale from \"../i18n\";\n\nconst getKeycloakInstance = () =>\n  (window && window.entando && window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\n    initialized: false,\n  };\n\nconst ATTRIBUTES = {\n  hidden: 'hidden',\n  locale: 'locale',\n  paginationMode: 'pagination-mode',\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\n  serviceUrl: 'service-url',\n};\n\nclass AdminAddCustomerElement extends HTMLElement {\n  container;\n\n  mountPoint;\n\n  unsubscribeFromKeycloakEvent;\n\n  keycloak = getKeycloakInstance();\n\n  connectedCallback() {\n    this.mountPoint = document.createElement('div');\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\n\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\n      this.render();\n    });\n\n    this.render();\n\n    //retargetEvents(shadowRoot);\n    this.appendChild(this.mountPoint);\n  }\n\n  render() {\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\n    const locale = this.getAttribute(ATTRIBUTES.locale) || '';\n    Locale.setLocale(locale);\n\n    ReactDOM.render(\n      <KeycloakContext.Provider value={this.keycloak}>\n        <AddCustomerModal serviceUrl={serviceUrl} locale={locale}/>\n      </KeycloakContext.Provider>,\n      this.mountPoint\n    );\n  }\n}\n\ncustomElements.define('admin-add-customer-widget', AdminAddCustomerElement);\n","import { getDefaultOptions, request, getUrl } from './helpers';\r\n\r\nconst resource = 'api/ticketing-systems';\r\n\r\nexport const apiTicketingSystemDelete = async (serviceUrl, id) => {\r\n  const url = `${serviceUrl}/${resource}/${id}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiCurrentTicketingSystemGet = async serviceUrl => {\r\n  const ticketingSystems = await apiTicketingSystemsGet(serviceUrl);\r\n  //Simplifying assumption to take the latest ticketing system as the current config\r\n  return ticketingSystems.data[ticketingSystems.data.length - 1];\r\n}\r\n\r\nexport const apiTicketingSystemsGet = async serviceUrl => {\r\n  const url = getUrl(`${serviceUrl}/${resource}`);\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiTicketingSystemPost = async (serviceUrl, ticketingsystem) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n    body: ticketingsystem ? JSON.stringify(ticketingsystem) : null,\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiTicketingSystemPut = async (serviceUrl, ticketingsystem) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'PUT',\r\n    body: ticketingsystem ? JSON.stringify(ticketingsystem) : null,\r\n  };\r\n  return request(url, options);\r\n};\r\n","import React, { Component } from 'react';\r\nimport i18n from '../../../i18n';\r\nimport { Form, TextInput, Select, SelectItem, Button } from 'carbon-components-react';\r\nimport {\r\n  apiTicketingSystemPost,\r\n  apiTicketingSystemsGet,\r\n  apiTicketingSystemPut,\r\n  apiTicketingSystemDelete,\r\n} from '../../../api/ticketingsystem';\r\nimport { isPortalAdmin } from '../../../api/helpers';\r\nimport withKeycloak from '../../../auth/withKeycloak';\r\n\r\nclass TicketingSystem extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      ticketingSystem: '',\r\n      ticketingSystemType: 'Jira',\r\n      url: '',\r\n      serviceAccount: '',\r\n      serviceAccountSecret: '',\r\n      systemId: '',\r\n      submitMsg: '',\r\n      submitColour: 'black',\r\n    };\r\n  }\r\n\r\n  handleChanges = e => {\r\n    const input = e.target;\r\n    const name = input.name;\r\n    const value = input.value;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  async createTicketingSystem() {\r\n    const ticketingSystem = {\r\n      url: this.state.url,\r\n      serviceAccount: this.state.serviceAccount,\r\n      serviceAccountSecret: this.state.serviceAccountSecret,\r\n      systemId: this.state.systemId,\r\n    };\r\n    return await apiTicketingSystemPost(this.props.serviceUrl, ticketingSystem);\r\n  }\r\n\r\n  async updateTicketingSystem() {\r\n    const ticketingSystem = {\r\n      id: this.state.ticketingSystem.id,\r\n      url: this.state.url,\r\n      serviceAccount: this.state.serviceAccount,\r\n      serviceAccountSecret: this.state.serviceAccountSecret,\r\n      systemId: this.state.systemId,\r\n    };\r\n    return await apiTicketingSystemPut(this.props.serviceUrl, ticketingSystem);\r\n  }\r\n\r\n  async getTicketingSystems() {\r\n    const ticketingSystems = await apiTicketingSystemsGet(this.props.serviceUrl);\r\n    if (ticketingSystems.data.length > 0) {\r\n      const currentTicketingSystem = ticketingSystems.data[ticketingSystems.data.length - 1];\r\n\r\n      this.setState({\r\n        ticketingSystem: currentTicketingSystem,\r\n        url: currentTicketingSystem.url,\r\n        serviceAccount: currentTicketingSystem.serviceAccount,\r\n        serviceAccountSecret: currentTicketingSystem.serviceAccountSecret,\r\n        systemId: currentTicketingSystem.systemId,\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n    if (authenticated) {\r\n      this.getTicketingSystems();\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n    const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n\r\n    if (authenticated && changedAuth) {\r\n      this.getTicketingSystems();\r\n    }\r\n  }\r\n\r\n  async deleteTicketingSystem() {\r\n    return await apiTicketingSystemDelete(this.props.serviceUrl, this.state.ticketingSystem.id);\r\n  }\r\n\r\n  handleDelete() {\r\n    if (window.confirm('Are you sure you want to delete this ticketing system?')) {\r\n      this.deleteTicketingSystem()\r\n        .then(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.deleted'),\r\n            submitColour: '#24a148',\r\n          });\r\n        })\r\n        .catch(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.error'),\r\n            submitColour: '#da1e28',\r\n          });\r\n        });\r\n    }\r\n  }\r\n\r\n  handleFormSubmit = event => {\r\n    event.preventDefault();\r\n    if (this.state.ticketingSystem === '') {\r\n      this.createTicketingSystem()\r\n        .then(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.created'),\r\n            submitColour: '#24a148',\r\n          });\r\n        })\r\n        .catch(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.error'),\r\n            submitColour: '#da1e28',\r\n          });\r\n        });\r\n    } else {\r\n      this.updateTicketingSystem()\r\n        .then(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.updated'),\r\n            submitColour: '#24a148',\r\n          });\r\n        })\r\n        .catch(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.error'),\r\n            submitColour: '#da1e28',\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const ticketingSystem = ['Jira'];\r\n    if (isPortalAdmin()) {\r\n      return (\r\n        <div className=\"cp-form\">\r\n          <p style={{ color: this.state.submitColour }}>{this.state.submitMsg}</p>\r\n          <Form onSubmit={this.handleFormSubmit}>\r\n            <div className=\"bx--grid\">\r\n              <div className=\"bx--row\">\r\n                <div className=\"bx--col\">\r\n                  <Select\r\n                    id=\"ticketingSystemType\"\r\n                    name=\"ticketingSystemType\"\r\n                    labelText={i18n.t('adminConfig.integrationTicketingSystem.selectBackendTicketingSystem')}\r\n                    value={this.state.ticketingSystemType}\r\n                    onChange={this.handleChanges}\r\n                  >\r\n                    <SelectItem text={i18n.t('adminConfig.integrationTicketingSystem.select')} value=\"ticketing-system\" />\r\n                    {ticketingSystem.map((ticketingSystem, i) => (\r\n                      <SelectItem key={i} text={ticketingSystem} value={ticketingSystem}>\r\n                        {ticketingSystem}\r\n                      </SelectItem>\r\n                    ))}\r\n                  </Select>\r\n                  <TextInput\r\n                    id=\"serviceAccount\"\r\n                    name=\"serviceAccount\"\r\n                    labelText={i18n.t('adminConfig.integrationTicketingSystem.userName')}\r\n                    value={this.state.serviceAccount}\r\n                    onChange={this.handleChanges}\r\n                  />\r\n                  <TextInput\r\n                    id=\"systemId\"\r\n                    name=\"systemId\"\r\n                    labelText={i18n.t('adminConfig.integrationTicketingSystem.projectName')}\r\n                    value={this.state.systemId}\r\n                    onChange={this.handleChanges}\r\n                  />\r\n                </div>\r\n                <div className=\"bx--col\">\r\n                  <TextInput\r\n                    id=\"url\"\r\n                    name=\"url\"\r\n                    labelText={i18n.t('adminConfig.integrationTicketingSystem.url')}\r\n                    value={this.state.url}\r\n                    onChange={this.handleChanges}\r\n                  />\r\n                  <TextInput\r\n                    id=\"serviceAccountSecret\"\r\n                    name=\"serviceAccountSecret\"\r\n                    type=\"password\"\r\n                    labelText={i18n.t('adminConfig.integrationTicketingSystem.password')}\r\n                    value={this.state.serviceAccountSecret}\r\n                    onChange={this.handleChanges}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <Button kind=\"primary\" tabIndex={0} type=\"submit\">\r\n                {' '}\r\n                {i18n.t('buttons.submit')}{' '}\r\n              </Button>\r\n              {this.state.ticketingSystem ? (\r\n                <Button kind=\"danger\" onClick={() => this.handleDelete()}>\r\n                  {' '}\r\n                  Delete{' '}\r\n                </Button>\r\n              ) : null}\r\n            </div>\r\n          </Form>\r\n        </div>\r\n      );\r\n    }\r\n    // Unauthorized\r\n    else {\r\n      return <p>{i18n.t('userMessages.unauthorized')}</p>;\r\n    }\r\n  }\r\n}\r\n\r\nexport default withKeycloak(TicketingSystem);\r\n","import { getDefaultOptions, request } from './helpers';\r\n\r\nconst resource = 'api/entando-versions';\r\n\r\nexport const apiProductVersionsGet = async serviceUrl => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiProductVersionGet = async (serviceUrl, versionId) => {\r\n  const url = `${serviceUrl}/${resource}/${versionId}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiUpdateProductVersionsStatus = async (serviceUrl, id) => {\r\n  const url = `${serviceUrl}/${resource}/${id}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'PUT',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiProductVersionPost = async (serviceUrl, productVersion) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n    body: productVersion ? JSON.stringify(productVersion) : null,\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiProductVersionPut = async (serviceUrl, productVersion) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'PUT',\r\n    body: productVersion ? JSON.stringify(productVersion) : null,\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiProductVersionDelete = async (serviceUrl, id) => {\r\n  const url = `${serviceUrl}/${resource}/${id}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE',\r\n  };\r\n  return request(url, options);\r\n};\r\n","import React, { Component } from 'react';\r\nimport i18n from '../../i18n';\r\nimport { ModalWrapper, Form, TextInput, DatePicker, DatePickerInput } from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport { apiProductVersionPost } from '../../api/productVersion';\r\nimport moment from 'moment';\r\n\r\nclass AddProductVersionModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      name: '',\r\n      startDate: '',\r\n      endDate: '',\r\n      invalid: {},\r\n      submitMsg: '',\r\n      submitColour: 'black',\r\n    };\r\n\r\n    this.baseState = this.state;\r\n  }\r\n\r\n  handleValidation() {\r\n    let invalid = {};\r\n    let formIsValid = true;\r\n\r\n    //name\r\n    if (this.state.name === '') {\r\n      formIsValid = false;\r\n      invalid['name'] = true;\r\n    }\r\n\r\n    if (typeof this.state.startDate !== 'undefined') {\r\n      if (!this.state.startDate.match(/^(0[1-9]|1[0-2])\\/(0[1-9]|1\\d|2\\d|3[01])\\/(19|20)\\d{2}$/)) {\r\n        formIsValid = false;\r\n        invalid['startDate'] = true;\r\n      }\r\n    }\r\n\r\n    if (typeof this.state.endDate !== 'undefined') {\r\n      if (!this.state.endDate.match(/^(0[1-9]|1[0-2])\\/(0[1-9]|1\\d|2\\d|3[01])\\/(19|20)\\d{2}$/)) {\r\n        formIsValid = false;\r\n        invalid['endDate'] = true;\r\n      }\r\n    }\r\n\r\n    this.setState({ invalid: invalid });\r\n    return formIsValid;\r\n  }\r\n\r\n  handleChanges = e => {\r\n    const input = e.target;\r\n    const name = input.name;\r\n    const value = input.value;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  async addProductVersion() {\r\n    const { keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n    if (authenticated) {\r\n      return await apiProductVersionPost(this.props.serviceUrl, this.state);\r\n    }\r\n  }\r\n\r\n  handleFormSubmit = () => {\r\n    const formIsValid = this.handleValidation();\r\n\r\n    if (formIsValid) {\r\n      this.addProductVersion()\r\n        .then(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.added'),\r\n            submitColour: '#24a148',\r\n          });\r\n          this.props.updateProductVersions();\r\n        })\r\n        .catch(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.error'),\r\n            submitColour: '#da1e28',\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  clearValues = () => {\r\n    const customerModalElement = document.querySelector('#modal-form-product-version');\r\n    if (!customerModalElement.className.includes('is-visible')) {\r\n      this.setState(this.baseState);\r\n    }\r\n  };\r\n\r\n  handleStartDateChange = date => {\r\n    this.setState({\r\n      startDate: moment(date[0].toISOString()).format('MM/DD/YYYY'),\r\n    });\r\n  };\r\n\r\n  handleEndDateChange = date => {\r\n    this.setState({\r\n      endDate: moment(date[0].toISOString()).format('MM/DD/YYYY'),\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    const modalOpenButton = document.querySelector('.add-product-version-button');\r\n    modalOpenButton.addEventListener('click', this.clearValues, false);\r\n  }\r\n\r\n  render() {\r\n    const modalConfirmation = (\r\n      <div className=\"bx--modal-header\">\r\n        <p style={{ color: this.state.submitColour }}>{this.state.submitMsg}</p>\r\n      </div>\r\n    )\r\n    const modalId = \"modal-form-product-version\"\r\n    return (\r\n      <ModalWrapper\r\n        buttonTriggerText={i18n.t('buttons.addProductVersion')}\r\n        modalHeading={i18n.t('adminDashboard.addProductVersion.title')}\r\n        buttonTriggerClassName=\"add-product-version bx--btn bx--btn--tertiary add-product-version-button\"\r\n        className=\"modal-form\"\r\n        id={modalId}\r\n        handleSubmit={this.handleFormSubmit}\r\n      >\r\n        {modalConfirmation}\r\n        <div className=\"form-container\">\r\n          <Form onSubmit={this.handleFormSubmit}>\r\n            <TextInput\r\n              id={\"name\" + modalId}\r\n              name=\"name\"\r\n              labelText={i18n.t('adminDashboard.addProductVersion.productVersion')}\r\n              value={this.state.name}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.required')}\r\n              invalid={this.state.invalid['name']}\r\n            />\r\n            <DatePicker dateFormat=\"m/d/Y\" datePickerType=\"single\" onChange={this.handleStartDateChange}>\r\n              <DatePickerInput\r\n                id={\"startDate\" + modalId}\r\n                name=\"startDate\"\r\n                placeholder=\"mm/dd/yyyy\"\r\n                labelText={i18n.t('adminDashboard.addProductVersion.productVersionStartDate')}\r\n                value={this.state.startDate}\r\n                //onChange={this.handleChanges}\r\n                type=\"text\"\r\n                invalidText={i18n.t('validation.invalid.date')}\r\n                invalid={this.state.invalid['startDate']}\r\n              />\r\n            </DatePicker>\r\n            <DatePicker dateFormat=\"m/d/Y\" datePickerType=\"single\" onChange={this.handleEndDateChange}>\r\n              <DatePickerInput\r\n                id={\"endDate\" + modalId}\r\n                name=\"endDate\"\r\n                placeholder=\"mm/dd/yyyy\"\r\n                labelText={i18n.t('adminDashboard.addProductVersion.productVersionEndDate')}\r\n                value={this.state.endDate}\r\n                type=\"text\"\r\n                invalidText={i18n.t('validation.invalid.date')}\r\n                invalid={this.state.invalid['endDate']}\r\n              />\r\n            </DatePicker>\r\n          </Form>\r\n        </div>\r\n        {modalConfirmation}\r\n      </ModalWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withKeycloak(AddProductVersionModal);\r\n","import React, { Component } from 'react';\nimport i18n from '../../i18n';\nimport { ModalWrapper, Form, TextInput, DatePicker, DatePickerInput } from 'carbon-components-react';\nimport withKeycloak from '../../auth/withKeycloak';\nimport { apiProductVersionGet, apiProductVersionPut } from '../../api/productVersion';\nimport moment from 'moment';\nimport {authenticationChanged} from \"../../api/helpers\";\n\nclass EditVersionModal extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      name: '',\n      startDate: '',\n      endDate: '',\n      invalid: {},\n      modalId: '',\n      buttonId: '',\n      submitMsg: '',\n      submitColour: 'black',\n    };\n  }\n\n  handleValidation() {\n    let invalid = {};\n    let formIsValid = true;\n\n    //name\n    if (this.state.name === '') {\n      formIsValid = false;\n      invalid['name'] = true;\n    }\n\n    if (typeof this.state.startDate !== 'undefined') {\n      if (!this.state.startDate.match(/^(0[1-9]|1[0-2])\\/(0[1-9]|1\\d|2\\d|3[01])\\/(19|20)\\d{2}$/)) {\n        formIsValid = false;\n        invalid['startDate'] = true;\n      }\n    }\n\n    if (typeof this.state.endDate !== 'undefined') {\n      if (!this.state.endDate.match(/^(0[1-9]|1[0-2])\\/(0[1-9]|1\\d|2\\d|3[01])\\/(19|20)\\d{2}$/)) {\n        formIsValid = false;\n        invalid['endDate'] = true;\n      }\n    }\n\n    this.setState({ invalid: invalid });\n    return formIsValid;\n  }\n\n  componentDidUpdate(prevProps) {\n    if (authenticationChanged(this.props, prevProps)) {\n      this.getVersionDetails();\n    }\n  }\n\n  handleChanges = e => {\n    const input = e.target;\n    const name = input.name;\n    const value = input.value;\n    this.setState({ [name]: value });\n  };\n\n  handleStartDateChange = date => {\n    this.setState({\n      startDate: moment(date[0].toISOString()).format('MM/DD/YYYY'),\n    });\n  };\n\n  handleEndDateChange = date => {\n    this.setState({\n      endDate: moment(date[0].toISOString()).format('MM/DD/YYYY'),\n    });\n  };\n\n  async getVersionDetails() {\n    const { keycloak } = this.props;\n    const authenticated = keycloak.initialized && keycloak.authenticated;\n    if (authenticated) {\n      const version = await apiProductVersionGet(this.props.serviceUrl, this.props.version.id);\n      this.setState({\n        name: version.data.name,\n        startDate: moment(version.data.startDate).format('MM/DD/YYYY'),\n        endDate: moment(version.data.endDate).format('MM/DD/YYYY'),\n        modalId: 'modal-form-version-edit-' + version.data.id,\n        buttonId: 'edit-version-button-' + version.data.id,\n      });\n    }\n  }\n\n  async versionPut(version) {\n    const { keycloak } = this.props;\n    const authenticated = keycloak.initialized && keycloak.authenticated;\n    if (authenticated) {\n      return await apiProductVersionPut(this.props.serviceUrl, version);\n    }\n  }\n\n  handleFormSubmit = () => {\n    const formIsValid = this.handleValidation();\n\n    if (formIsValid) {\n      const version = {\n        id: this.props.version.id,\n        name: this.state.name,\n        startDate: moment(this.state.startDate).format(),\n        endDate: moment(this.state.endDate).format(),\n      };\n      this.versionPut(version)\n        .then(() => {\n          this.setState({\n            submitMsg: i18n.t('submitMessages.updated'),\n            submitColour: '#24a148',\n          });\n          this.props.updateProductVersions();\n        })\n        .catch(() => {\n          this.setState({\n            submitMsg: i18n.t('submitMessages.error'),\n            submitColour: '#da1e28',\n          });\n        });\n    }\n  };\n\n  componentDidMount() {\n    const { keycloak } = this.props;\n    const authenticated = keycloak.initialized && keycloak.authenticated;\n\n    if (authenticated) {\n      this.getVersionDetails();\n      const modalOpenButton = document.querySelector('.edit-version-button-' + this.props.version.id);\n      modalOpenButton.addEventListener('click', this.clearValues, false);\n    }\n  }\n\n  render() {\n    const modalConfirmation = (\n      <div className=\"bx--modal-header\">\n        <p style={{ color: this.state.submitColour }}>{this.state.submitMsg}</p>\n      </div>\n    )\n    const buttonClassName = 'bx--btn bx--btn--ghost edit-version-button-' + this.props.version.id;\n    const modalId = this.state.modalId\n    return (\n      <ModalWrapper\n        buttonTriggerText={i18n.t('buttons.edit')}\n        modalHeading={i18n.t('adminDashboard.addProject.editTitle')}\n        buttonTriggerClassName={buttonClassName}\n        className=\"modal-form\"\n        id={this.state.modalId}\n        handleSubmit={this.handleFormSubmit}\n        primaryButtonText={i18n.t('modalText.save')}\n        secondaryButtonText={i18n.t('modalText.cancel')}\n      >\n        {modalConfirmation}\n        <div className=\"form-container\">\n          <Form onSubmit={this.handleFormSubmit}>\n            <TextInput\n              id={\"name\" + modalId}\n              name=\"name\"\n              labelText={i18n.t('adminDashboard.addProject.projectName') + ' *'}\n              value={this.state.name}\n              onChange={this.handleChanges}\n              invalidText={i18n.t('validation.invalid.required')}\n              invalid={this.state.invalid['name']}\n            />\n            <DatePicker dateFormat=\"m/d/Y\" datePickerType=\"single\" onChange={this.handleStartDateChange} value={this.state.startDate}>\n              <DatePickerInput\n                id={\"startDate\" + modalId}\n                name=\"startDate\"\n                placeholder=\"mm/dd/yyyy\"\n                labelText={i18n.t('subscriptionDetails.startDate') + ' *'}\n                onChange={this.handleChanges}\n                type=\"text\"\n                invalidText={i18n.t('validation.invalid.date')}\n                invalid={this.state.invalid['startDate']}\n              />\n            </DatePicker>\n            <DatePicker\n              dateFormat=\"m/d/Y\"\n              datePickerType=\"single\"\n              onChange={this.handleEndDateChange}\n              id={\"endDate\"+modalId}\n              name=\"endDate\"\n              value={this.state.endDate}\n            >\n              <DatePickerInput\n                id={\"endDate\"+modalId}\n                name=\"endDate\"\n                placeholder=\"mm/dd/yyyy\"\n                labelText={i18n.t('subscriptionDetails.endDate') + ' *'}\n                onChange={this.handleChanges}\n                type=\"text\"\n                invalidText={i18n.t('validation.invalid.date')}\n                invalid={this.state.invalid['endDate']}\n              />\n            </DatePicker>\n          </Form>\n        </div>\n        {modalConfirmation}\n      </ModalWrapper>\n    );\n  }\n}\n\nexport default withKeycloak(EditVersionModal);\n","import React, { Component } from 'react';\nimport i18n from '../../../i18n';\nimport {\n  DataTable,\n  TableContainer,\n  Table,\n  TableHead,\n  TableRow,\n  TableHeader,\n  TableBody,\n  TableCell,\n  Toggle,\n  Button,\n} from 'carbon-components-react';\nimport { apiProductVersionDelete, apiProductVersionsGet, apiUpdateProductVersionsStatus } from '../../../api/productVersion';\nimport withKeycloak from '../../../auth/withKeycloak';\nimport AddProductVersionModal from '../AddProductVersionModal';\nimport {authenticationChanged, isAuthenticated, isPortalAdminOrSupport} from '../../../api/helpers';\nimport EditVersionModal from '../EditVersionModal';\n\nclass ProductVersion extends Component {\n  constructor() {\n    super();\n    this.state = {\n      versions: '',\n    };\n  }\n\n  componentDidMount() {\n    if (isPortalAdminOrSupport()) {\n      this.getProductVersions();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (authenticationChanged(this.props, prevProps)) {\n      if (isPortalAdminOrSupport()) {\n        this.getProductVersions();\n      }\n    }\n  }\n\n  async getProductVersions() {\n    if (isAuthenticated(this.props)) {\n      const productVersions = await apiProductVersionsGet(this.props.serviceUrl);\n\n      this.setState({\n        versions: productVersions.data,\n      });\n    }\n  }\n\n  async deleteVersion(id) {\n    if (isAuthenticated(this.props)) {\n      return await apiProductVersionDelete(this.props.serviceUrl, id);\n    }\n  }\n\n  handleDeleteVersion = (e, id) => {\n    e.preventDefault();\n    if (window.confirm('Are you sure you want to delete this Entando version?')) {\n      this.deleteVersion(id)\n        .then(() => {\n          this.setState({\n            submitMsg: i18n.t('submitMessages.deleted'),\n            submitColour: '#24a148',\n          });\n          this.updateProductVersions();\n        })\n        .catch(() => {\n          this.setState({\n            submitMsg: i18n.t('submitMessages.error'),\n            submitColour: '#da1e28',\n          });\n        });\n    }\n  };\n\n  updateProductVersions = () => {\n    this.getProductVersions();\n  };\n\n  async handleToggleChange(id) {\n    return (await apiUpdateProductVersionsStatus(this.props.serviceUrl, id));\n  }\n\n  render() {\n    if (isPortalAdminOrSupport()) {\n      return (\n        <div>\n          <DataTable rows={rowData} headers={headerData}>\n            {({rows, headers, getHeaderProps, getTableProps}) => (\n              <TableContainer>\n                <Table {...getTableProps()}>\n                  <TableHead>\n                    <TableRow>\n                      {headers.map(header => (\n                        <TableHeader {...getHeaderProps({header})}>{header.header}</TableHeader>\n                      ))}\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {Object.keys(this.state.versions).length !== 0\n                      ? this.state.versions.map((productVersion, index) => (\n                        <TableRow key={index}>\n                          <TableCell>{productVersion.name}</TableCell>\n                          <TableCell>\n                            <Toggle size=\"sm\"\n                                    onClick={() => this.handleToggleChange(productVersion.id)}\n                                    aria-label=\"toggle button\"\n                                    id={'toggle' + productVersion.id}\n                                    defaultToggled={productVersion.status}\n                            />\n                          </TableCell>\n                            <TableCell>{productVersion.startDate}</TableCell>\n                            <TableCell>{productVersion.endDate}</TableCell>\n                            <TableCell>\n                              <div style={{ display: 'flex' }}>\n                                <EditVersionModal\n                                  key={productVersion.id}\n                                  version={productVersion}\n                                  serviceUrl={this.props.serviceUrl}\n                                  updateProductVersions={this.updateProductVersions}\n                                />\n                                <Button\n                                  kind=\"ghost\"\n                                  onClick={e => this.handleDeleteVersion(e, productVersion.id)}\n                                  style={{ display: 'flex', width: '100%', color: 'red' }}\n                                >\n                                  {i18n.t('buttons.delete')}\n                                </Button>\n                              </div>\n                            </TableCell>\n                          </TableRow>\n                        ))\n                      : null}\n                  </TableBody>\n                </Table>\n              </TableContainer>\n            )}\n          </DataTable>\n          <br />\n          <AddProductVersionModal serviceUrl={this.props.serviceUrl} updateProductVersions={this.updateProductVersions} />\n        </div>\n      );\n    } else {\n      return <p>{i18n.t('userMessages.unauthorized')}</p>;\n    }\n  }\n}\n\nconst headerData = [\n  {\n    header: i18n.t('adminConfig.manageProductVersion.entandoVersion'),\n    key: 'entVersion',\n  },\n  {\n    header: i18n.t('adminConfig.manageProductVersion.status'),\n    key: 'status',\n  },\n  {\n    header: i18n.t('adminConfig.manageProductVersion.startDate'),\n    key: 'startDate',\n  },\n  {\n    header: i18n.t('adminConfig.manageProductVersion.supportEndDate'),\n    key: 'endDate',\n  },\n  {\n    header: i18n.t('customerDashboard.action'),\n    key: 'action',\n  },\n];\n\nconst rowData = [\n  {\n    id: 'a',\n    entVersion: '5.2',\n    status: <Toggle size=\"sm\" aria-label=\"toggle button\" defaultToggled id=\"status-1\" />,\n    startDate: 'April, 2018',\n    endDate: 'April, 2022',\n  },\n  {\n    id: 'b',\n    entVersion: '6.3',\n    status: <Toggle size=\"sm\"  aria-label=\"toggle button\" id=\"status-2\" />,\n    startDate: 'Jile, 2019',\n    endDate: 'April, 2023',\n  },\n  {\n    id: 'c',\n    entVersion: '6.2',\n    status: <Toggle size=\"sm\"  aria-label=\"toggle button\" defaultToggled id=\"status-3\" />,\n    startDate: 'September, 2020',\n    endDate: 'April, 2024',\n  },\n];\n\nexport default withKeycloak(ProductVersion);\n","import React from 'react';\r\nimport i18n from '../../../i18n';\r\nimport { Accordion, AccordionItem, Tile } from 'carbon-components-react';\r\nimport TicketingSystem from './TicketingSystem';\r\nimport ProductVersion from './ProductVersion';\r\nimport { isPortalAdmin } from '../../../api/helpers';\r\nimport withKeycloak from '../../../auth/withKeycloak';\r\n\r\nclass AdminConfiguration extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: true,\r\n    };\r\n    this.adminConfig = [\r\n      {\r\n        label: (\r\n          <div>\r\n            <p className=\"title\">{i18n.t('adminConfig.integrationTicketingSystem.title')}</p>\r\n            <p className=\"desc\">{i18n.t('adminConfig.integrationTicketingSystem.desc')}</p>\r\n          </div>\r\n        ),\r\n        content: <TicketingSystem serviceUrl={this.props.serviceUrl} />,\r\n      },\r\n      {\r\n        label: (\r\n          <div>\r\n            <p className=\"title\">{i18n.t('adminConfig.manageProductVersion.title')}</p>\r\n            <p className=\"desc\">{i18n.t('adminConfig.manageProductVersion.desc')}</p>\r\n          </div>\r\n        ),\r\n        content: <ProductVersion serviceUrl={this.props.serviceUrl} />,\r\n      },\r\n    ];\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n    if (authenticated) {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n    const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n\r\n    if (authenticated && changedAuth) {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (!this.state.loading) {\r\n      // Authorized\r\n      if (isPortalAdmin()) {\r\n        return (\r\n          <div>\r\n            <h3 className=\"pageTitle\">{i18n.t('adminDashboard.adminTitle')}</h3>\r\n            <div className=\"form-container\">\r\n              <Tile>\r\n                <p className=\"title\">{i18n.t('adminConfig.title')}</p>\r\n                <p className=\"desc\">{i18n.t('adminConfig.desc')}</p>\r\n              </Tile>\r\n              <Accordion>\r\n                {this.adminConfig.map((item, index) => (\r\n                  <AccordionItem key={index.toString()} index={index} title={item.label} description={item.description}>\r\n                    <div>{item.content}</div>\r\n                  </AccordionItem>\r\n                ))}\r\n              </Accordion>\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n      // Unauthorized\r\n      else {\r\n        return <p>{i18n.t('userMessages.unauthorized')}</p>;\r\n      }\r\n    }\r\n    // Loading\r\n    else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\nexport default withKeycloak(AdminConfiguration);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport AdminConfiguration from '../components/Admin/Configuration/AdminConfiguration';\nimport '../index.scss';\nimport * as Locale from '../i18n';\n\nimport KeycloakContext from '../auth/KeycloakContext';\n\nimport { subscribeToWidgetEvent } from '../helpers/widgetEvents';\nimport { KEYCLOAK_EVENT_TYPE } from './widgetEventTypes';\n\nconst getKeycloakInstance = () =>\n  (window && window.entando && window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\n    initialized: false,\n  };\n\nconst ATTRIBUTES = {\n  hidden: 'hidden',\n  locale: 'locale',\n  paginationMode: 'pagination-mode',\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\n  serviceUrl: 'service-url'\n};\n\nclass AdminConfigurationElement extends HTMLElement {\n  container;\n\n  mountPoint;\n\n  unsubscribeFromKeycloakEvent;\n\n  keycloak = getKeycloakInstance();\n\n  connectedCallback() {\n    this.mountPoint = document.createElement('div');\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\n\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\n      this.render();\n    });\n\n    this.render();\n\n    //retargetEvents(shadowRoot);\n    this.appendChild(this.mountPoint);\n  }\n\n  render() {\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\n    const locale = this.getAttribute(ATTRIBUTES.locale) || '';\n    Locale.setLocale(locale);\n\n    ReactDOM.render(\n      <KeycloakContext.Provider value={this.keycloak}>\n        <AdminConfiguration serviceUrl={serviceUrl} locale={locale}/>\n      </KeycloakContext.Provider>,\n      this.mountPoint\n    );\n  }\n}\n\ncustomElements.define('admin-configuration-widget', AdminConfigurationElement);\n","import { getDefaultOptions, request, getUrl } from './helpers';\r\n\r\nconst resource = 'api/partners';\r\n\r\nexport const apiPartnerDelete = async (serviceUrl, id) => {\r\n  const url = `${serviceUrl}/${resource}/${id}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiPartnersGet = async serviceUrl => {\r\n  const url = getUrl(`${serviceUrl}/${resource}`);\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiPartnerPost = async (serviceUrl, partner) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n    body: partner ? JSON.stringify(partner) : null,\r\n  };\r\n  return request(url, options);\r\n};\r\n","import { getDefaultOptions, request, getUrl } from './helpers';\n\nconst resource = 'api/projects';\n\nexport const apiProjectsDelete = async (serviceUrl, id) => {\n  const url = `${serviceUrl}/${resource}/${id}`;\n  const options = {\n    ...getDefaultOptions(),\n    method: 'DELETE',\n  };\n  return request(url, options);\n};\n\nexport const apiProjectsGet = async serviceUrl => {\n  const url = getUrl(`${serviceUrl}/${resource}`);\n  const options = {\n    ...getDefaultOptions(),\n    method: 'GET',\n  };\n\n  return request(url, options);\n};\n\nexport const apiProjectGet = async (serviceUrl, id) => {\n  const url = getUrl(`${serviceUrl}/${resource}/${id}`);\n  const options = {\n    ...getDefaultOptions(),\n    method: 'GET',\n  };\n\n  return request(url, options);\n};\n\nexport const apiProjectPost = async (serviceUrl, project) => {\n  const url = `${serviceUrl}/${resource}`;\n  const options = {\n    ...getDefaultOptions(),\n    method: 'POST',\n    body: project ? JSON.stringify(project) : null,\n  };\n  return request(url, options);\n};\n\nexport const apiProjectPut = async (serviceUrl, project) => {\n  const url = `${serviceUrl}/${resource}`;\n  const options = {\n    ...getDefaultOptions(),\n    method: 'PUT',\n    body: project ? JSON.stringify(project) : null,\n  };\n  return request(url, options);\n};\n\nexport const apiAddTicketToProject = async (serviceUrl, projectId, ticketId) => {\n  const url = `${serviceUrl}/${resource}/${projectId}/tickets/${ticketId}`;\n  const options = {\n    ...getDefaultOptions(),\n    method: 'POST',\n  };\n  return request(url, options);\n};\n\nexport const apiAddSubscriptionToProject = async (serviceUrl, projectId, subscriptionId) => {\n  const url = `${serviceUrl}/${resource}/${projectId}/subscriptions/${subscriptionId}`;\n  const options = {\n    ...getDefaultOptions(),\n    method: 'POST',\n  };\n  return request(url, options);\n};\n\nexport const apiAddUserToProject = async (serviceUrl, projectId, userId) => {\n  const url = `${serviceUrl}/${resource}/${projectId}/users/${userId}`;\n  const options = {\n    ...getDefaultOptions(),\n    method: 'POST',\n  };\n  return request(url, options);\n};\n\nexport const apiDeletePartnerFromProject = async (serviceUrl, projectId, partnerId) => {\n  const url = `${serviceUrl}/${resource}/${projectId}/partners/${partnerId}`;\n  const options = {\n    ...getDefaultOptions(),\n    method: 'DELETE',\n  };\n  return request(url, options);\n};\n\nexport const apiDeleteSubscriptionFromProject = async (serviceUrl, projectId, subscriptionId) => {\n  const url = `${serviceUrl}/${resource}/${projectId}/subscriptions/${subscriptionId}`;\n  const options = {\n    ...getDefaultOptions(),\n    method: 'DELETE',\n  };\n  return request(url, options);\n};\n\n\nexport const apiDeleteUserFromProject = async (serviceUrl, projectId, userId) => {\n  const url = `${serviceUrl}/${resource}/${projectId}/users/${userId}`;\n  const options = {\n    ...getDefaultOptions(),\n    method: 'DELETE',\n  };\n  return request(url, options);\n};\n\nexport const apiAddPartnerToProject = async (serviceUrl, projectId, partnerId) => {\n  const url = `${serviceUrl}/${resource}/${projectId}/partners/${partnerId}`;\n  const options = {\n    ...getDefaultOptions(),\n    method: 'POST',\n  };\n  return request(url, options);\n};\n\nexport const apiGetProjectUsers = async (serviceUrl, projectId) => {\n  const url = `${serviceUrl}/${resource}/${projectId}/users/`;\n  const options = {\n    ...getDefaultOptions(),\n    method: 'GET',\n  };\n  return request(url, options);\n};\n\nexport const apiGetProjectsTickets = async (serviceUrl, projectId) => {\n  const url = `${serviceUrl}/${resource}/${projectId}/tickets/`;\n  const options = {\n    ...getDefaultOptions(),\n    method: 'GET',\n  };\n  return request(url, options);\n};\n\nexport const apiGetProjectSubscriptions = async (serviceUrl, projectId) => {\n  const url = `${serviceUrl}/${resource}/${projectId}/subscriptions/`;\n  const options = {\n    ...getDefaultOptions(),\n    method: 'GET',\n  };\n  return request(url, options);\n};\n\nexport const apiGetProjectIdsAndNames = async serviceUrl => {\n  const url = `${serviceUrl}/${resource}/nameId/`;\n  const options = {\n    ...getDefaultOptions(),\n    method: 'GET',\n  };\n  return request(url, options);\n};\n\nexport const apiGetMyProject = async (serviceUrl, projectId) => {\n  const url = `${serviceUrl}/${resource}/myproject/${projectId}/`;\n  const options = {\n    ...getDefaultOptions(),\n    method: 'GET',\n  };\n  return request(url, options);\n};\n\nexport const apiGetMyProjectIdNames = async serviceUrl => {\n  const url = `${serviceUrl}/${resource}/myprojects/nameId/`;\n  const options = {\n    ...getDefaultOptions(),\n    method: 'GET',\n  };\n  return request(url, options);\n};\n\nexport const apiGetMyProjectUsers = async (serviceUrl, projectId) => {\n  const url = `${serviceUrl}/${resource}/myproject/${projectId}/users`;\n  const options = {\n    ...getDefaultOptions(),\n    method: 'GET',\n  };\n  return request(url, options);\n};\n\n// Endpoints for backend security\nconst adminResource = 'api/projects/admin';\nexport const apiAdminProjectsGet = async serviceUrl => {\n  const url = getUrl(`${serviceUrl}/${adminResource}`);\n  const options = {\n    ...getDefaultOptions(),\n    method: 'GET',\n  };\n\n  return request(url, options);\n};\n\nconst myResource = 'api/projects/myprojects';\nexport const apiMyProjectsGet = async serviceUrl => {\n  const url = getUrl(`${serviceUrl}/${myResource}`);\n  const options = {\n    ...getDefaultOptions(),\n    method: 'GET',\n  };\n\n  return request(url, options);\n};\n","export const AuthenticatedView = ({ children, keycloak }) => {\n  const authenticated = keycloak && keycloak.initialized && keycloak.authenticated;\n  return authenticated ? children : null;\n};\n\nexport const UnauthenticatedView = ({ children, keycloak }) => {\n  const authenticated = keycloak && keycloak.initialized && keycloak.authenticated;\n  return !authenticated ? children : null;\n};\n","import React, {Component} from 'react';\nimport i18n from '../../i18n';\nimport {ModalWrapper, Form, TextInput, Select, SelectItem, TextArea} from 'carbon-components-react';\nimport withKeycloak from '../../auth/withKeycloak';\nimport {apiPartnerPost} from '../../api/partners';\nimport {apiProjectsGet, apiAddPartnerToProject} from '../../api/projects';\nimport {authenticationChanged, isAuthenticated} from \"../../api/helpers\";\nimport {AuthenticatedView} from \"../../auth/KeycloakViews\";\n\nclass AddPartnerModal extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      projectList: {},\n      projectId: '',\n      name: '',\n      partnerNumber: '',\n      notes: '',\n      invalid: {},\n      submitMsg: '',\n      submitColour: 'black',\n    };\n  }\n\n  componentDidMount() {\n    if (isAuthenticated(this.props)) {\n      this.getProjects();\n\n      const modalOpenButton = document.querySelector('.add-partner-button');\n      modalOpenButton.addEventListener('click', this.clearValues, false);\n    }\n  }\n\n\n  componentDidUpdate(prevProps) {\n    if (authenticationChanged(this.props, prevProps)) {\n      this.getProjects();\n    }\n  }\n\n  handleValidation() {\n    let invalid = {};\n    let formIsValid = true;\n\n    //project\n    if (this.state.projectId === '' || this.state.projectId === 'project-list') {\n      formIsValid = false;\n      invalid['projectId'] = true;\n    }\n\n    if (this.state.name === '') {\n      formIsValid = false;\n      invalid['name'] = true;\n    }\n\n    if (this.state.partnerNumber === '') {\n      formIsValid = false;\n      invalid['partnerNumber'] = true;\n    }\n\n    this.setState({ invalid: invalid });\n    return formIsValid;\n  }\n\n  handleChanges = e => {\n    const input = e.target;\n    const name = input.name;\n    const value = input.value;\n    this.setState({ [name]: value });\n  };\n\n  async getProjects() {\n    if (isAuthenticated(this.props)) {\n      const projects = await apiProjectsGet(this.props.serviceUrl);\n      this.setState({\n        projectList: projects.data\n      });\n    }\n  }\n\n  async partnerPost(partner) {\n    if (isAuthenticated(this.props)) {\n      const result = await apiPartnerPost(this.props.serviceUrl, partner);\n      return await apiAddPartnerToProject(this.props.serviceUrl, this.state.projectId, result.data.id);\n    }\n  }\n\n  handleFormSubmit = () => {\n    const formIsValid = this.handleValidation();\n\n    if (formIsValid) {\n      const partner = {\n        name: this.state.name,\n        partnerNumber: this.state.partnerNumber,\n        notes: this.state.notes,\n      };\n      this.partnerPost(partner)\n        .then(() => {\n          this.setState({\n            submitMsg: i18n.t('submitMessages.added'),\n            submitColour: '#24a148',\n          });\n          this.props.updateCustomerList();\n        })\n        .catch(() => {\n          this.setState({\n            submitMsg: i18n.t('submitMessages.error'),\n            submitColour: '#da1e28',\n          });\n        });\n    }\n  };\n\n  clearValues = () => {\n    const partnerModalElement = document.querySelector('#modal-form-partner');\n    if (!partnerModalElement.className.includes('is-visible')) {\n      this.setState({\n        projectId: '',\n        name: '',\n        partnerNumber: '',\n        notes: '',\n        invalid: {},\n        submitMsg: '',\n        submitColour: 'black',\n      });\n    }\n  };\n\n  render() {\n    const modalConfirmation = (\n      <div className=\"bx--modal-header\">\n        <p style={{color: this.state.submitColour}}>{this.state.submitMsg}</p>\n      </div>\n    )\n    const {keycloak} = this.props;\n    const modalId = \"modal-form-partner\";\n    return (\n      <AuthenticatedView keycloak={keycloak}>\n        <ModalWrapper\n          buttonTriggerText={i18n.t('buttons.addPartner')}\n          modalHeading={i18n.t('adminDashboard.addPartner.title')}\n          buttonTriggerClassName=\"add-partner bx--btn bx--btn--tertiary add-partner-button\"\n          className=\"modal-form\"\n          id={modalId}\n          handleSubmit={this.handleFormSubmit}\n          primaryButtonText={i18n.t('modalText.save')}\n          secondaryButtonText={i18n.t('modalText.cancel')}\n        >\n          {modalConfirmation}\n          <div className=\"form-container\">\n            <Form onSubmit={this.handleFormSubmit}>\n              <Select\n                id={\"projectId\" + modalId}\n                name=\"projectId\"\n                labelText={i18n.t('adminDashboard.addPartner.projectList') + ' *'}\n                value={this.state.projectId}\n                onChange={this.handleChanges}\n                invalidText={i18n.t('validation.invalid.required')}\n                invalid={this.state.invalid['projectId']}\n              >\n                <SelectItem text={i18n.t('adminDashboard.addPartner.selectProject')} value=\"project-list\"/>\n                {Object.keys(this.state.projectList).length !== 0\n                  ? this.state.projectList.map((project, i) => (\n                    <SelectItem key={i} text={project.name} value={project.id}>\n                      {project.name}\n                    </SelectItem>\n                  ))\n                  : null}\n              </Select>\n\n              <TextInput\n                id={\"name\" + modalId}\n                name=\"name\"\n                labelText={i18n.t('adminDashboard.addPartner.partnerName') + ' *'}\n                value={this.state.name}\n                onChange={this.handleChanges}\n                invalidText={i18n.t('validation.invalid.required')}\n                invalid={this.state.invalid['name']}\n              />\n              <TextInput\n                id={\"partnerNumber\" + modalId}\n                name=\"partnerNumber\"\n                labelText={i18n.t('adminDashboard.addPartner.partnerNumber') + ' *'}\n                value={this.state.partnerNumber}\n                onChange={this.handleChanges}\n                invalidText={i18n.t('validation.invalid.required')}\n                invalid={this.state.invalid['partnerNumber']}\n              />\n              <TextArea\n                name=\"notes\"\n                labelText={i18n.t('adminDashboard.addPartner.notes')}\n                value={this.state.notes}\n                onChange={this.handleChanges}\n              />\n            </Form>\n          </div>\n          {modalConfirmation}\n        </ModalWrapper>\n      </AuthenticatedView>\n    );\n  }\n}\n\nexport default withKeycloak(AddPartnerModal);\n","import React, { Component } from 'react';\r\nimport i18n from '../../i18n';\r\nimport { ModalWrapper, Form, TextInput, Select, SelectItem, TextArea } from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport { apiCustomersGet, apiAddProjectToCustomer } from '../../api/customers';\r\nimport { apiProjectPost, apiProjectsGet } from '../../api/projects';\r\n\r\nclass AddProjectModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      projects: {},\r\n      customerList: {},\r\n      customerId: '',\r\n      name: '',\r\n      description: '',\r\n      systemId: '',\r\n      contactName: '',\r\n      contactPhone: '',\r\n      contactEmail: '',\r\n      notes: '',\r\n      invalid: {},\r\n      submitMsg: '',\r\n      submitColour: 'black',\r\n    };\r\n  }\r\n\r\n  handleValidation() {\r\n    let invalid = {};\r\n    let formIsValid = true;\r\n\r\n    //customer\r\n    if (this.state.customerId === '' || this.state.customerId === 'customer-list') {\r\n      formIsValid = false;\r\n      invalid['customerId'] = true;\r\n    }\r\n\r\n    //name\r\n    if (this.state.name === '') {\r\n      formIsValid = false;\r\n      invalid['name'] = true;\r\n    }\r\n\r\n    //description\r\n    if (this.state.description === '') {\r\n      formIsValid = false;\r\n      invalid['description'] = true;\r\n    }\r\n\r\n    //contactEmail\r\n    if (typeof this.state.contactEmail !== 'undefined') {\r\n      let lastAtPos = this.state.contactEmail.lastIndexOf('@');\r\n      let lastDotPos = this.state.contactEmail.lastIndexOf('.');\r\n\r\n      if (\r\n        !(\r\n          lastAtPos < lastDotPos &&\r\n          lastAtPos > 0 &&\r\n          this.state.contactEmail.indexOf('@@') === -1 &&\r\n          lastDotPos > 2 &&\r\n          this.state.contactEmail.length - lastDotPos > 2\r\n        )\r\n      ) {\r\n        formIsValid = false;\r\n        invalid['contactEmail'] = true;\r\n      }\r\n    }\r\n\r\n    this.setState({ invalid: invalid });\r\n    return formIsValid;\r\n  }\r\n\r\n  async getAllProjects() {\r\n    const projects = await apiProjectsGet(this.props.serviceUrl);\r\n    this.setState({\r\n      projects: projects.data,\r\n    });\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n    const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n\r\n    if (authenticated && changedAuth) {\r\n      this.getCustomers();\r\n      this.getAllProjects();\r\n    }\r\n  }\r\n\r\n  handleChanges = e => {\r\n    const input = e.target;\r\n    const name = input.name;\r\n    const value = input.value;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  async getCustomers() {\r\n    const { keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n    if (authenticated) {\r\n      const customers = await apiCustomersGet(this.props.serviceUrl);\r\n      this.setState({ customerList: customers });\r\n    }\r\n  }\r\n\r\n  async projectPost(project) {\r\n    const { keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n    if (authenticated) {\r\n      const result = await apiProjectPost(this.props.serviceUrl, project);\r\n      return await apiAddProjectToCustomer(this.props.serviceUrl, this.state.customerId, result.data.id);\r\n    }\r\n  }\r\n\r\n  handleFormSubmit = () => {\r\n    const formIsValid = this.handleValidation();\r\n\r\n    if (formIsValid) {\r\n      const project = {\r\n        name: this.state.name,\r\n        description: this.state.description,\r\n        systemId: this.state.systemId,\r\n        contactName: this.state.contactName,\r\n        contactPhone: this.state.contactPhone,\r\n        contactEmail: this.state.contactEmail,\r\n        notes: this.state.notes,\r\n      };\r\n      for (var i = 0; i < this.state.projects.length; i++) {\r\n        if (project.systemId === this.state.projects[i].systemId && project.systemId.trim() !== '') {\r\n          window.alert('That system id is already in use in another project');\r\n          return;\r\n        }\r\n      }\r\n      this.projectPost(project)\r\n        .then(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.added'),\r\n            submitColour: '#24a148',\r\n          });\r\n          this.props.updateCustomerList();\r\n          this.getAllProjects();\r\n        })\r\n        .catch(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.error'),\r\n            submitColour: '#da1e28',\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  clearValues = () => {\r\n    const projectModalElement = document.querySelector('#modal-form-project');\r\n    if (!projectModalElement.className.includes('is-visible')) {\r\n      this.setState({\r\n        customerId: '',\r\n        name: '',\r\n        description: '',\r\n        systemId: '',\r\n        contactName: '',\r\n        contactPhone: '',\r\n        contactEmail: '',\r\n        notes: '',\r\n        invalid: {},\r\n      });\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getCustomers();\r\n    this.getAllProjects();\r\n\r\n    const modalOpenButton = document.querySelector('.add-project-button');\r\n    modalOpenButton.addEventListener('click', this.clearValues, false);\r\n  }\r\n\r\n  render() {\r\n    const modalConfirmation = (\r\n      <div className=\"bx--modal-header\">\r\n        <p style={{ color: this.state.submitColour }}>{this.state.submitMsg}</p>\r\n      </div>\r\n    )\r\n    const modalId = \"modal-form-project\"\r\n    return (\r\n      <ModalWrapper\r\n        buttonTriggerText={i18n.t('buttons.addProject')}\r\n        modalHeading={i18n.t('adminDashboard.addProject.title')}\r\n        buttonTriggerClassName=\"add-project bx--btn bx--btn--tertiary add-project-button\"\r\n        className=\"modal-form\"\r\n        id={modalId}\r\n        handleSubmit={this.handleFormSubmit}\r\n        primaryButtonText={i18n.t('modalText.save')}\r\n        secondaryButtonText={i18n.t('modalText.cancel')}\r\n      >\r\n        {modalConfirmation}\r\n        <div className=\"form-container\">\r\n          <Form onSubmit={this.handleFormSubmit}>\r\n            <Select\r\n              id={\"customerId\" + modalId}\r\n              name=\"customerId\"\r\n              labelText={i18n.t('adminDashboard.addProject.customerList') + ' *'}\r\n              value={this.state.customerId}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.required')}\r\n              invalid={this.state.invalid['customerId']}\r\n            >\r\n              <SelectItem text={i18n.t('adminDashboard.addProject.selectCustomer')} value=\"customer-list\" />\r\n              {Object.keys(this.props.allCustomers).length !== 0\r\n                ? this.props.allCustomers.map((customerList, i) => (\r\n                    <SelectItem key={i} text={customerList.name} value={customerList.id}>\r\n                      {customerList.name}\r\n                    </SelectItem>\r\n                  ))\r\n                : null}\r\n            </Select>\r\n\r\n            <TextInput\r\n              id={\"name\" + modalId}\r\n              name=\"name\"\r\n              labelText={i18n.t('adminDashboard.addProject.projectName') + ' *'}\r\n              value={this.state.name}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.required')}\r\n              invalid={this.state.invalid['name']}\r\n            />\r\n            <TextInput\r\n              id={\"description\" + modalId}\r\n              name=\"description\"\r\n              labelText={i18n.t('adminDashboard.addProject.projectDesc') + ' *'}\r\n              value={this.state.description}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.required')}\r\n              invalid={this.state.invalid['description']}\r\n            />\r\n            <TextInput\r\n              id={\"systemId\" + modalId}\r\n              name=\"systemId\"\r\n              labelText={i18n.t('adminDashboard.addProject.systemId')}\r\n              value={this.state.systemId}\r\n              onChange={this.handleChanges}\r\n            />\r\n            <TextInput\r\n              id={\"contactName\" + modalId}\r\n              name=\"contactName\"\r\n              labelText={i18n.t('adminDashboard.addProject.contactName')}\r\n              value={this.state.contactName}\r\n              onChange={this.handleChanges}\r\n            />\r\n            <TextInput\r\n              id={\"contactPhone\" + modalId}\r\n              name=\"contactPhone\"\r\n              labelText={i18n.t('adminDashboard.addProject.contactPhone')}\r\n              value={this.state.contactPhone}\r\n              onChange={this.handleChanges}\r\n            />\r\n            <TextInput\r\n              id={\"contactEmail\" + modalId}\r\n              name=\"contactEmail\"\r\n              labelText={i18n.t('adminDashboard.addProject.contactEmail') + ' *'}\r\n              value={this.state.contactEmail}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.email')}\r\n              invalid={this.state.invalid['contactEmail']}\r\n            />\r\n            <TextArea\r\n              id={\"notes\" + modalId}\r\n              name=\"notes\"\r\n              labelText={i18n.t('adminDashboard.addProject.notes')}\r\n              value={this.state.notes}\r\n              onChange={this.handleChanges}\r\n            />\r\n          </Form>\r\n        </div>\r\n        {modalConfirmation}\r\n      </ModalWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withKeycloak(AddProjectModal);\r\n","import React, { Component } from 'react';\nimport i18n from '../../i18n';\nimport { ModalWrapper, Form, TextInput, TextArea } from 'carbon-components-react';\nimport withKeycloak from '../../auth/withKeycloak';\nimport { apiCustomersGet } from '../../api/customers';\nimport { apiProjectGet, apiProjectPut, apiProjectsGet } from '../../api/projects';\n\nclass EditProjectModal extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      projects: {},\n      customerList: {},\n      customerId: '',\n      name: '',\n      description: '',\n      systemId: '',\n      contactName: '',\n      contactPhone: '',\n      contactEmail: '',\n      notes: '',\n      invalid: {},\n      modalId: '',\n      buttonId: '',\n      submitMsg: '',\n      submitColour: 'black',\n    };\n  }\n\n  handleValidation() {\n    let invalid = {};\n    let formIsValid = true;\n\n    //name\n    if (this.state.name === '') {\n      formIsValid = false;\n      invalid['name'] = true;\n    }\n\n    //description\n    if (this.state.description === '') {\n      formIsValid = false;\n      invalid['description'] = true;\n    }\n\n    //contactEmail\n    if (typeof this.state.contactEmail !== 'undefined') {\n      let lastAtPos = this.state.contactEmail.lastIndexOf('@');\n      let lastDotPos = this.state.contactEmail.lastIndexOf('.');\n\n      if (\n        !(\n          lastAtPos < lastDotPos &&\n          lastAtPos > 0 &&\n          this.state.contactEmail.indexOf('@@') === -1 &&\n          lastDotPos > 2 &&\n          this.state.contactEmail.length - lastDotPos > 2\n        )\n      ) {\n        formIsValid = false;\n        invalid['contactEmail'] = true;\n      }\n    }\n\n    this.setState({ invalid: invalid });\n    return formIsValid;\n  }\n\n  componentDidUpdate(prevProps) {\n    const { keycloak } = this.props;\n    const authenticated = keycloak.initialized && keycloak.authenticated;\n\n    const changedAuth = prevProps.keycloak.authenticated !== authenticated;\n\n    if (authenticated && changedAuth) {\n      this.getCustomers();\n      this.getAllProjects();\n      this.getProjectDetails();\n    }\n  }\n\n  handleChanges = e => {\n    const input = e.target;\n    const name = input.name;\n    const value = input.value;\n    this.setState({ [name]: value });\n  };\n\n  async getCustomers() {\n    const { keycloak } = this.props;\n    const authenticated = keycloak.initialized && keycloak.authenticated;\n    if (authenticated) {\n      const customers = await apiCustomersGet(this.props.serviceUrl);\n      this.setState({ customerList: customers });\n    }\n  }\n\n  async getProjectDetails() {\n    const { keycloak } = this.props;\n    const authenticated = keycloak.initialized && keycloak.authenticated;\n    if (authenticated) {\n      const project = await apiProjectGet(this.props.serviceUrl, this.props.project.id);\n      this.setState({\n        name: project.data.name,\n        description: project.data.description,\n        systemId: project.data.systemId,\n        contactName: project.data.contactName,\n        contactPhone: project.data.contactPhone,\n        contactEmail: project.data.contactEmail,\n        notes: project.data.notes,\n        modalId: 'modal-form-project-edit-' + project.data.id,\n        buttonId: 'edit-project-button-' + project.data.id,\n      });\n    }\n  }\n\n  async getAllProjects() {\n    const projects = await apiProjectsGet(this.props.serviceUrl);\n    this.setState({\n      projects: projects.data,\n    });\n  }\n\n  async projectPut(project) {\n    const { keycloak } = this.props;\n    const authenticated = keycloak.initialized && keycloak.authenticated;\n    if (authenticated) {\n      return await apiProjectPut(this.props.serviceUrl, project);\n    }\n  }\n\n  handleFormSubmit = () => {\n    const formIsValid = this.handleValidation();\n\n    if (formIsValid) {\n      const project = {\n        id: this.props.project.id,\n        customer: this.props.project.customer,\n        name: this.state.name,\n        description: this.state.description,\n        systemId: this.state.systemId,\n        contactName: this.state.contactName,\n        contactPhone: this.state.contactPhone,\n        contactEmail: this.state.contactEmail,\n        notes: this.state.notes,\n      };\n      for (var i = 0; i < this.props.allProjects.length; i++) {\n        if (\n          project.systemId === this.props.allProjects[i].systemId &&\n          project.id !== this.props.allProjects[i].id &&\n          project.systemId.trim() !== ''\n        ) {\n          window.alert('That system id is already in use in another project');\n          return;\n        }\n      }\n      this.projectPut(project)\n        .then(() => {\n          this.setState({\n            submitMsg: i18n.t('submitMessages.updated'),\n            submitColour: '#24a148',\n          });\n          this.props.updateProjectList();\n        })\n        .catch(() => {\n          this.setState({\n            submitMsg: i18n.t('submitMessages.error'),\n            submitColour: '#da1e28',\n          });\n        });\n    }\n  };\n\n  clearValues = () => {\n    const { keycloak } = this.props;\n    const authenticated = keycloak.initialized && keycloak.authenticated;\n\n    const customerModalElement = document.querySelector('#' + this.state.modalId);\n    if (!customerModalElement.className.includes('is-visible') && authenticated) {\n      this.setState({\n        name: this.props.project.name,\n        description: this.props.project.description,\n        systemId: this.props.project.systemId,\n        contactName: this.props.project.contactName,\n        contactPhone: this.props.project.contactPhone,\n        contactEmail: this.props.project.contactEmail,\n        notes: this.props.project.notes,\n        invalid: {},\n      });\n    }\n  };\n\n  componentDidMount() {\n    const { keycloak } = this.props;\n    const authenticated = keycloak.initialized && keycloak.authenticated;\n\n    if (authenticated) {\n      this.getCustomers();\n      this.getAllProjects();\n      this.getProjectDetails();\n\n      const modalOpenButton = document.querySelector('.edit-project-button-' + this.props.project.id);\n      modalOpenButton.addEventListener('click', this.clearValues, false);\n    }\n  }\n\n  render() {\n    const modalConfirmation = (\n      <div className=\"bx--modal-header\">\n        <p style={{ color: this.state.submitColour }}>{this.state.submitMsg}</p>\n      </div>\n    )\n    const buttonClassName = 'dropdown-button-button bx--btn bx--btn--ghost edit-project-button-' + this.props.project.id;\n    const modalId = this.state.modalId;\n    return (\n    <ModalWrapper\n        buttonTriggerText={i18n.t('buttons.edit')}\n        modalHeading={i18n.t('adminDashboard.addProject.editTitle')}\n        buttonTriggerClassName={buttonClassName}\n        className=\"modal-form\"\n        id={this.state.modalId}\n        handleSubmit={this.handleFormSubmit}\n        primaryButtonText={i18n.t('modalText.save')}\n        secondaryButtonText={i18n.t('modalText.cancel')}\n      >\n        {modalConfirmation}\n        <div className=\"form-container\">\n          <Form onSubmit={this.handleFormSubmit}>\n            <TextInput\n              id={\"name\" + modalId}\n              name=\"name\"\n              labelText={i18n.t('adminDashboard.addProject.projectName') + ' *'}\n              value={this.state.name}\n              onChange={this.handleChanges}\n              invalidText={i18n.t('validation.invalid.required')}\n              invalid={this.state.invalid['name']}\n            />\n            <TextInput\n              id={\"description\" + modalId}\n              name=\"description\"\n              labelText={i18n.t('adminDashboard.addProject.projectDesc') + ' *'}\n              value={this.state.description}\n              onChange={this.handleChanges}\n              invalidText={i18n.t('validation.invalid.required')}\n              invalid={this.state.invalid['description']}\n            />\n            <TextInput\n              id={\"systemId\" + modalId}\n              name=\"systemId\"\n              labelText={i18n.t('adminDashboard.addProject.systemId')}\n              value={this.state.systemId}\n              onChange={this.handleChanges}\n            />\n            <TextInput\n              id={\"contactName\" + modalId}\n              name=\"contactName\"\n              labelText={i18n.t('adminDashboard.addProject.contactName')}\n              value={this.state.contactName}\n              onChange={this.handleChanges}\n            />\n            <TextInput\n              id={\"contactPhone\" + modalId}\n              name=\"contactPhone\"\n              labelText={i18n.t('adminDashboard.addProject.contactPhone')}\n              value={this.state.contactPhone}\n              onChange={this.handleChanges}\n            />\n            <TextInput\n              id={\"contactEmail\" + modalId}\n              name=\"contactEmail\"\n              labelText={i18n.t('adminDashboard.addProject.contactEmail') + ' *'}\n              value={this.state.contactEmail}\n              onChange={this.handleChanges}\n              invalidText={i18n.t('validation.invalid.email')}\n              invalid={this.state.invalid['contactEmail']}\n            />\n            <TextArea\n              name=\"notes\"\n              labelText={i18n.t('adminDashboard.addProject.notes')}\n              value={this.state.notes}\n              onChange={this.handleChanges}\n            />\n          </Form>\n        </div>\n      {modalConfirmation}\n    </ModalWrapper>\n    );\n  }\n}\n\nexport default withKeycloak(EditProjectModal);\n","import React, {Component} from 'react';\r\nimport i18n from '../../i18n';\r\nimport {\r\n  Button,\r\n  DataTable,\r\n  ModalWrapper,\r\n  Table, TableBody,\r\n  TableCell, TableContainer, TableHead, TableHeader,\r\n  TableRow,\r\n} from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport {isPortalAdminOrSupport} from \"../../api/helpers\";\r\nimport {apiDeletePartnerFromProject} from \"../../api/projects\";\r\n\r\nclass ManagePartnersModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      projectId: this.props.project.id,\r\n      project: this.props.project,\r\n    }\r\n\r\n    this.headerData = [\r\n      {\r\n        header: i18n.t('adminDashboard.addPartner.partnerName'),\r\n        key: 'partner',\r\n      },\r\n      {\r\n        header: i18n.t('adminDashboard.addPartner.partnerNumber'),\r\n        key: 'partnerNumber',\r\n      },\r\n      {\r\n        header: i18n.t('adminDashboard.addPartner.notes'),\r\n        key: 'notes',\r\n      },\r\n      {\r\n        header: i18n.t('customerDashboard.action'),\r\n        key: 'action',\r\n      },\r\n    ];\r\n  }\r\n\r\n  async removePartner(projectId, partnerId) {\r\n    if (isPortalAdminOrSupport()) {\r\n      return await apiDeletePartnerFromProject(this.props.serviceUrl, projectId, partnerId);\r\n    }\r\n  }\r\n\r\n  handleRemovePartner = (e, projectId, partnerId) => {\r\n    e.preventDefault();\r\n    if (window.confirm('Are you sure you want to remove this partner from the project?')) {\r\n      this.removePartner(projectId, partnerId)\r\n        .then((result) => {\r\n          this.setState({\r\n            project: result.data,\r\n            submitMsg: i18n.t('submitMessages.deleted'),\r\n            submitColour: '#24a148',\r\n          });\r\n          this.props.updateProjectList();\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.error'),\r\n            submitColour: '#da1e28',\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const modalConfirmation = (\r\n      <div className=\"bx--modal-header\">\r\n        <p style={{color: this.state.submitColour}}>{this.state.submitMsg}</p>\r\n      </div>\r\n    )\r\n    const modalId = \"modal-form-manage-partners\";\r\n    return (\r\n      <ModalWrapper\r\n        buttonTriggerText={i18n.t('buttons.managePartners')}\r\n        modalHeading={i18n.t('adminDashboard.managePartners.title')}\r\n        buttonTriggerClassName=\"add-partner bx--btn bx--btn--tertiary add-partner-button\"\r\n        className=\"modal-form\"\r\n        id={modalId}\r\n        hasForm={false}\r\n        primaryButtonText={i18n.t('modalText.done')}\r\n        secondaryButtonText={null}\r\n      >\r\n        {modalConfirmation}\r\n        <div>\r\n          <DataTable rows={rowData} headers={this.headerData}>\r\n            {({rows, headers, getHeaderProps, getTableProps}) => (\r\n              <TableContainer description={i18n.t('customerDashboard.tableDesc')}>\r\n                <Table {...getTableProps()}>\r\n                  <TableHead>\r\n                    <TableRow key=\"headerRow\">\r\n                      {headers.map(header => {\r\n                        return <TableHeader {...getHeaderProps({header})}>\r\n                          {header.header}\r\n                        </TableHeader>\r\n                      })}\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {this.state.project.partners.map((partner, index) => {\r\n                      return (\r\n                        <TableRow key={\"partner\" + index}>\r\n                          <TableCell>\r\n                            {partner.name}\r\n                          </TableCell>\r\n                          <TableCell>\r\n                            {partner.partnerNumber}\r\n                          </TableCell>\r\n                          <TableCell>\r\n                            {partner.notes}\r\n                          </TableCell>\r\n                          <TableCell>\r\n                            <div>\r\n                              <Button\r\n                                kind=\"ghost\"\r\n                                onClick={e => this.handleRemovePartner(e, this.state.projectId, partner.id)}\r\n                                style={{display: 'block', width: '100%', color: 'red'}}\r\n                              >\r\n                                {i18n.t('buttons.delete')}\r\n                              </Button>\r\n                              <hr style={{margin: '0', border: 'none', borderTop: '1px solid lightgrey'}}/>\r\n                            </div>\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      )\r\n                    })\r\n                    }\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            )}\r\n          </DataTable>\r\n        </div>\r\n        {modalConfirmation}\r\n      </ModalWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nconst rowData = [\r\n  {\r\n    id: 'a',\r\n    name: 'Partner 1',\r\n    partnerNumber: '123',\r\n  },\r\n  {\r\n    id: 'b',\r\n    name: 'Partner 2',\r\n    partnerNumber: '456',\r\n  },\r\n];\r\n\r\nexport default withKeycloak(ManagePartnersModal);\r\n","import React from 'react';\nimport i18n from '../../i18n';\nimport withKeycloak from '../../auth/withKeycloak';\nimport { Button } from 'carbon-components-react';\nimport EditProjectModal from '../Admin/EditProjectModal';\nimport ManagePartnersModal from '../Admin/ManagePartnersModal';\nimport {isPortalAdmin} from '../../api/helpers';\nimport { Link } from 'react-router-dom';\n\nclass ProjectActionItems extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      showMenu: false,\n    };\n  }\n\n  handleClick = () => {\n    if (!this.state.showMenu) {\n      document.addEventListener('mousedown', this.handleOutsideClick, false);\n    } else {\n      document.removeEventListener('mousedown', this.handleOutsideClick, false);\n    }\n\n    this.setState(prevState => ({\n      showMenu: !prevState.showMenu,\n    }));\n  };\n\n  handleOutsideClick = e => {\n    if (this.node && !this.node.contains(e.target)) {\n      this.handleClick();\n    }\n  };\n\n  render() {\n    const isAdmin = isPortalAdmin();\n    const actionDivider = (\n      <hr style={{margin: '0', border: 'none', borderTop: '1px solid lightgrey'}}/>\n    );\n    const topButton = (\n      <Button onClick={this.handleClick} style={{padding: '10px 20px'}} kind=\"tertiary\">\n        +\n      </Button>\n    );\n    const editProjectSubscription = (\n      <div>\n        <EditProjectModal\n          key={this.props.project.id}\n          allProjects={this.props.allProjects}\n          project={this.props.project}\n          serviceUrl={this.props.serviceUrl}\n          updateProjectList={this.props.updateProjectList}\n        />\n        {actionDivider}\n      </div>\n    )\n    const subscriptionParam = this.props.subscription ? '&subscription=' + this.props.subscription.id : '';\n    const newOrRenewSubscription = (\n      <div>\n        <a\n          href={`/entando-de-app/${this.props.locale}/new_or_renew_subscription.page?project=${this.props.project.id}${subscriptionParam}`}\n          style={{textDecoration: 'none'}}\n        >\n          <Button kind=\"ghost\" style={{display: 'block', width: '100%'}} value=\"Subscription Request\">\n            {i18n.t('buttons.subscriptionRequest')}\n          </Button>\n        </a>\n        {actionDivider}\n      </div>\n    );\n    const manageUsers = (\n      <div>\n        <a\n          href={`/entando-de-app/${this.props.locale}/manage_users.page?project=${this.props.project.id}`}\n          style={{textDecoration: 'none'}}\n        >\n          <Button kind=\"ghost\" style={{display: 'block', width: '100%'}} value=\"Manage Users\">\n            {i18n.t('buttons.manageUsers')}\n          </Button>\n        </a>\n        {actionDivider}\n      </div>\n    );\n    const manageSubscriptions = (\n      <div>\n        <a\n          href={`/entando-de-app/${this.props.locale}/manage_subscriptions.page?project=${this.props.project.id}`}\n          style={{textDecoration: 'none'}}>\n          <Button kind=\"ghost\" style={{display: 'block', width: '100%'}} value=\"Manage Subscriptions\">\n            {i18n.t('buttons.manageSubscriptions')}\n          </Button>\n        </a>\n        {actionDivider}\n      </div>\n    );\n    const deleteProject = (\n      <div>\n        <Button\n          kind=\"ghost\"\n          onClick={e => this.props.handleDeleteProject(e, this.props.project.id)}\n          style={{display: 'block', width: '100%', color: 'red'}}\n        >\n          {i18n.t('buttons.delete')}\n        </Button>\n        {actionDivider}\n      </div>\n    );\n    if (!this.props.subscription) {\n      return (\n        <div>\n          {topButton}\n          {this.state.showMenu && (\n            <div\n              className=\"menu\"\n              style={{zIndex: '100', position: 'absolute', backgroundColor: 'white'}}\n              ref={node => {\n                this.node = node;\n              }}\n            >\n              {actionDivider}\n              {isAdmin && editProjectSubscription}\n              {newOrRenewSubscription}\n              {isAdmin && manageSubscriptions}\n              {isAdmin && manageUsers}\n              {isAdmin && deleteProject}\n            </div>\n          )}\n        </div>\n      );\n    } else {\n      return (\n        <div>\n          {topButton}\n          {this.state.showMenu && (\n            <div\n              className=\"menu\"\n              style={{zIndex: '100', position: 'absolute', backgroundColor: 'white'}}\n              ref={node => {\n                this.node = node;\n              }}\n            >\n              {actionDivider}\n              {/*View Project Subscription*/}\n              <Link to={`/subscription-details/${this.props.subscription.id}`} style={{textDecoration: 'none'}}>\n                <Button kind=\"ghost\" style={{display: 'block', width: '100%'}} value=\"View\">\n                  {i18n.t('buttons.view')}\n                </Button>\n              </Link>\n              {actionDivider}\n              {isAdmin && editProjectSubscription}\n              {/*Open Ticket*/}\n              <a\n                href={`/entando-de-app/${this.props.locale}/open_service_ticket.page?project=${this.props.project.id}`}\n                style={{textDecoration: 'none'}}\n              >\n                <Button kind=\"ghost\" style={{display: 'block', width: '100%'}} value=\"Open Ticket\">\n                  {i18n.t('buttons.openTicket')}\n                </Button>\n              </a>\n              {actionDivider}\n              {/*View All Tickets*/}\n              <a\n                href={\n                  this.props.ticketingSystem.url.substr(0, this.props.ticketingSystem.url.indexOf('/rest')) +\n                  '/issues/?jql=Organizations=' + this.props.project.systemId}\n                style={{textDecoration: 'none'}}\n                target=\"_blank\" rel=\"noreferrer\"\n              >\n                <Button kind=\"ghost\" style={{display: 'block', width: '100%'}} value=\"View All Tickets\">\n                  {i18n.t('buttons.viewAllTickets')}\n                </Button>\n              </a>\n              {actionDivider}\n              {!isAdmin && newOrRenewSubscription}\n              {isAdmin && (\n                <div>\n                  {/*Manage Partners*/}\n                  <ManagePartnersModal\n                    key={this.props.project.id}\n                    project={this.props.project}\n                    serviceUrl={this.props.serviceUrl}\n                    updateProjectList={this.props.updateProjectList}\n                  />\n                  {actionDivider}\n                  {manageSubscriptions}\n                  {manageUsers}\n                  {/*Delete Project*/}\n                  <Button\n                    kind=\"ghost\"\n                    onClick={e => this.props.handleDeleteProject(e, this.props.project.id)}\n                    className=\"button-warning\"\n                  >\n                    {i18n.t('buttons.delete')}\n                  </Button>\n                  {actionDivider}\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n      );\n    }\n  }\n}\n\nexport default withKeycloak(ProjectActionItems);\n","import {getDefaultOptions, request} from './helpers';\nimport moment from \"moment\";\n\nconst resource = 'api/project-subscriptions';\n\nexport const formatStartDate = (startDate) => {\n  return String(new Date(startDate).toDateString());\n}\n\nexport const formatEndDate = (startDate, lengthInMonths) => {\n  const endDate = new Date(startDate).setMonth(new Date(startDate).getMonth() + lengthInMonths);\n  return String(new Date(endDate).toDateString());\n}\n\nexport const stripTime = (date) => {\n  return moment(date).format('MM/DD/YYYY');\n}\n\nexport const apiSubscriptionGet = async (serviceUrl, id) => {\n  const url = `${serviceUrl}/${resource}/${id}`;\n  const options = {\n    ...getDefaultOptions(),\n    method: 'GET',\n  };\n  return request(url, options);\n};\n\n// Project Subscription creation consists of an object containing a projectSubscription, an entandoVersionId, and a\n// project id, see SubscriptionCreationRequest.\n/**\n * Called to create a new project subscription\n *\n * @param {string} serviceUrl\n * @param {ProjectSubscriptionCreation} projectSubscriptionCreation\n * @returns\n */\nexport const apiProjectSubscriptionPost = async (serviceUrl, projectSubscriptionCreation) => {\n  const url = `${serviceUrl}/${resource}`;\n  const options = {\n    ...getDefaultOptions(),\n    method: 'POST',\n    body: projectSubscriptionCreation ? JSON.stringify(projectSubscriptionCreation) : null,\n  };\n  return request(url, options);\n};\n\nexport const apiProjectSubscriptionPut = async (serviceUrl, projectSubscriptionCreation) => {\n  const url = `${serviceUrl}/${resource}`;\n  const options = {\n    ...getDefaultOptions(),\n    method: 'PUT',\n    body: projectSubscriptionCreation ? JSON.stringify(projectSubscriptionCreation) : null,\n  };\n  return request(url, options);\n};\n\n// Same format as {projectSubscriptionCreation}\nexport const apiRenewSubscription = async (serviceUrl, projectSubscriptionRenew) => {\n  const url = `${serviceUrl}/${resource}/renew`;\n\n  const options = {\n    ...getDefaultOptions(),\n    method: 'PUT',\n    body: projectSubscriptionRenew ? JSON.stringify(projectSubscriptionRenew) : null,\n  };\n\n  return request(url, options);\n};\n","import React, { Component } from 'react';\nimport { DataTable, TableContainer, Table, TableHead, TableRow, TableHeader, TableBody, TableCell } from 'carbon-components-react';\nimport '../../index.scss';\nimport { apiGetCustomersProjects, apiGetMyCustomersProjects, apiDeleteProjectFromCustomer } from '../../api/customers';\nimport withKeycloak from '../../auth/withKeycloak';\nimport { Link } from 'react-router-dom';\nimport i18n from '../../i18n';\nimport {authenticationChanged, isAuthenticated, isPortalAdminOrSupport} from '../../api/helpers';\nimport {apiCurrentTicketingSystemGet} from \"../../api/ticketingsystem\";\nimport ProjectActionItems from '../Admin/ProjectActionItems';\nimport {formatEndDate, formatStartDate} from \"../../api/subscriptions\";\n\nclass CustomerDataTable extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      projects: {},\n      ticketingSystem: {},\n      action: 'Edit',\n      showMenu: {},\n    };\n    this.headerData = [\n      {\n        header: i18n.t('customerDashboard.projectName'),\n        key: 'projectName',\n      },\n      {\n        header: i18n.t('customerDashboard.partners'),\n        key: 'partners',\n      },\n      {\n        header: i18n.t('customerDashboard.entandoVersion'),\n        key: 'entandoVersion',\n      },\n      {\n        header: i18n.t('customerDashboard.status'),\n        key: 'status',\n      },\n      {\n        header: i18n.t('customerDashboard.startDate'),\n        key: 'startDate',\n      },\n      {\n        header: i18n.t('customerDashboard.endDate'),\n        key: 'endDate',\n      },\n      {\n        header: i18n.t('customerDashboard.openTickets'),\n        key: 'openTickets',\n      },\n      {\n        header: i18n.t('customerDetails.notes'),\n        key: 'notes',\n      },\n      {\n        header: i18n.t('customerDashboard.action'),\n        key: 'action',\n      },\n    ];\n  }\n\n  async fetchData() {\n    if (isAuthenticated(this.props)) {\n      try {\n        var projects;\n        //TOOD: refactor\n        if (isPortalAdminOrSupport()) {\n          projects = await apiGetCustomersProjects(this.props.serviceUrl, this.props.customerNumber);\n        } else {\n          projects = await apiGetMyCustomersProjects(this.props.serviceUrl, this.props.customerNumber);\n        }\n\n        const ticketingSystem = await apiCurrentTicketingSystemGet(this.props.serviceUrl);\n\n        this.setState({\n          projects: projects,\n          ticketingSystem: ticketingSystem,\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    this.render();\n  }\n\n  componentDidMount() {\n    if (isAuthenticated(this.props)) {\n      this.fetchData();\n    }\n  }\n\n  updateProjectList = () => {\n    this.fetchData();\n  };\n\n  showMenu = (e, id) => {\n    var showMenu = {};\n    showMenu[String(id)] = !this.state.showMenu[String(id)];\n    this.setState({\n      showMenu: showMenu,\n    });\n  };\n\n  closeMenu = () => {\n    this.setState({ showMenu: false }, () => {\n      document.removeEventListener('click', this.closeMenu);\n    });\n  };\n\n  async deleteProject(id) {\n    if (isAuthenticated(this.props)) {\n      return await apiDeleteProjectFromCustomer(this.props.serviceUrl, this.props.customerNumber, id);\n    }\n  }\n\n  handleDeleteProject = (e, id) => {\n    e.preventDefault();\n    if (window.confirm('Are you sure you want to delete this project?')) {\n      this.deleteProject(id)\n        .then(() => {\n          this.setState({\n            submitMsg: i18n.t('submitMessages.deleted'),\n            submitColour: '#24a148',\n          });\n          this.props.updateCustomerList();\n        })\n        .catch(() => {\n          this.setState({\n            submitMsg: i18n.t('submitMessages.error'),\n            submitColour: '#da1e28',\n          });\n        });\n    }\n  };\n\n  componentDidUpdate(prevProps) {\n    if (authenticationChanged(this.props, prevProps)) {\n      this.fetchData();\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <DataTable rows={rowData} headers={this.headerData}>\n          {({ rows, headers, getHeaderProps, getTableProps }) => (\n            <TableContainer description={i18n.t('customerDashboard.tableDesc')}>\n              <Table {...getTableProps()}>\n                <TableHead>\n                  <TableRow key=\"headerRow\">\n                    {headers.map(header => {\n                      let result;\n                      if (header.header === i18n.t('customerDetails.notes')) {\n                        if (isPortalAdminOrSupport()) {\n                          result = <TableHeader {...getHeaderProps({ header })}>{header.header}</TableHeader>;\n                        }\n                      } else {\n                        result = <TableHeader {...getHeaderProps({ header })}>{header.header}</TableHeader>;\n                      }\n                      return result;\n                    })}\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {Object.keys(this.state.projects).length !== 0\n                    ? this.state.projects.data.map((project, index) => {\n                      //Display the first ACTIVE subscription in the list. An admin can see and manage the full list at any time\n                      const subscription = project.projectSubscriptions.find(\n                        item => {\n                          return (item.status === \"ACTIVE\") ? item : null\n                        }\n                      )\n                      if (!subscription) {\n                        return (\n                          <TableRow key={index}>\n                            <TableCell>{project.name}</TableCell>\n                            {project.partners.length !== 0 ? (\n                              <TableCell>\n                                {project.partners.map(partner => (\n                                  <p>{partner.name}</p>\n                                ))}\n                              </TableCell>\n                            ) : (\n                                <TableCell>{i18n.t('userMessages.none')}</TableCell>\n                              )}\n                              <TableCell>{i18n.t('userMessages.none')}</TableCell>\n                              <TableCell>{i18n.t('userMessages.none')}</TableCell>\n                              <TableCell>{i18n.t('userMessages.none')}</TableCell>\n                              <TableCell>{i18n.t('userMessages.none')}</TableCell>\n                              <TableCell>{project.tickets.length}</TableCell>\n                              {isPortalAdminOrSupport() ? <TableCell style={{ width: '250px' }}>{project.notes}</TableCell> : null}\n                              <TableCell>\n                                <ProjectActionItems\n                                  serviceUrl={this.props.serviceUrl}\n                                  ticketingSystem={this.state.ticketingSystem}\n                                  locale={this.props.locale}\n                                  project={project}\n                                  allProjects={this.state.projects.data}\n                                  handleDeleteProject={this.handleDeleteProject}\n                                  updateProjectList={this.updateProjectList}\n                                />\n                              </TableCell>\n                            </TableRow>\n                          );\n                        } else {\n                          return (\n                            <TableRow key={index}>\n                              <TableCell>\n                                <Link to={`/subscription-details/${subscription.id}`}>{project.name}</Link>\n                              </TableCell>\n                              {project.partners.length !== 0 ? (\n                                <TableCell>\n                                  {project.partners.map(partner => (\n                                    <p>{partner.name}</p>\n                                  ))}\n                                </TableCell>\n                              ) : (\n                                <TableCell>{i18n.t('userMessages.none')}</TableCell>\n                              )}\n                              {subscription.entandoVersion ? (\n                                <TableCell>{subscription.entandoVersion.name}</TableCell>\n                              ) : (\n                                <TableCell>{i18n.t('userMessages.none')}</TableCell>\n                              )}\n                              <TableCell>{subscription.status}</TableCell>\n                              <TableCell>{formatStartDate(subscription.startDate)}</TableCell>\n                              <TableCell>{formatEndDate(subscription.startDate, subscription.lengthInMonths)}</TableCell>\n                              <TableCell>{project.tickets.length}</TableCell>\n                              {isPortalAdminOrSupport() ?\n                                <TableCell style={{width: '250px'}}>{project.notes}</TableCell> : null\n                              }\n                              <TableCell>\n                                <ProjectActionItems\n                                  serviceUrl={this.props.serviceUrl}\n                                  ticketingSystem={this.state.ticketingSystem}\n                                  locale={this.props.locale}\n                                  subscription={subscription}\n                                  project={project}\n                                  allProjects={this.state.projects.data}\n                                  handleDeleteProject={this.handleDeleteProject}\n                                  updateProjectList={this.updateProjectList}\n                                />\n                              </TableCell>\n                            </TableRow>\n                          );\n                        }\n                      })\n                    : null}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          )}\n        </DataTable>\n      </div>\n    );\n  }\n}\n\nconst rowData = [{id: 'a'}];\n\nexport default withKeycloak(CustomerDataTable);\n","import React from 'react';\r\nimport i18n from '../../i18n';\r\nimport { Tile } from 'carbon-components-react';\r\nimport { apiCustomerGet } from '../../api/customers';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\n\r\nclass CustomerDetails extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      customer: {},\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    const { keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n    if (authenticated) {\r\n      this.getCustomer(this.props.customerNumber);\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n    const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n\r\n    if (authenticated && changedAuth) {\r\n      this.getCustomer(this.props.customerNumber);\r\n    }\r\n  }\r\n\r\n  async getCustomer() {\r\n    const { keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n    if (authenticated) {\r\n      const customer = await apiCustomerGet(this.props.serviceUrl, this.props.customerNumber);\r\n      this.setState({\r\n        customer: customer.data,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"customer-details\">\r\n        <Tile>\r\n          <p>\r\n            <strong>{i18n.t('customerDashboard.customerName')}</strong> {this.state.customer.name}\r\n          </p>\r\n          <p>\r\n            <strong>{i18n.t('customerDashboard.customerId')}</strong> {this.state.customer.id}\r\n          </p>\r\n        </Tile>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withKeycloak(CustomerDetails);\r\n","import React, { Component } from 'react';\nimport i18n from '../../i18n';\nimport { ModalWrapper, Form, TextInput, TextArea } from 'carbon-components-react';\nimport withKeycloak from '../../auth/withKeycloak';\nimport {apiCustomerGet, apiCustomerPut} from '../../api/customers';\nimport {authenticationChanged, isAuthenticated} from \"../../api/helpers\";\n\nclass EditCustomerModal extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      name: '',\n      customerNumber: '',\n      contactName: '',\n      contactPhone: '',\n      contactEmail: '',\n      notes: '',\n      invalid: {},\n      modalId: '',\n      buttonId: '',\n      submitMsg: '',\n      submitColour: 'black',\n    };\n  }\n\n  handleValidation() {\n    let invalid = {};\n    let formIsValid = true;\n\n    //name\n    if (this.state.name === '') {\n      formIsValid = false;\n      invalid['name'] = true;\n    }\n\n    //customerNumber\n    if (this.state.customerNumber === '') {\n      formIsValid = false;\n      invalid['customerNumber'] = true;\n    }\n\n    //contactEmail\n    if (typeof this.state.contactEmail !== 'undefined') {\n      let lastAtPos = this.state.contactEmail.lastIndexOf('@');\n      let lastDotPos = this.state.contactEmail.lastIndexOf('.');\n\n      if (\n        !(\n          lastAtPos < lastDotPos &&\n          lastAtPos > 0 &&\n          this.state.contactEmail.indexOf('@@') === -1 &&\n          lastDotPos > 2 &&\n          this.state.contactEmail.length - lastDotPos > 2\n        )\n      ) {\n        formIsValid = false;\n        invalid['contactEmail'] = true;\n      }\n    }\n\n    this.setState({ invalid: invalid });\n    return formIsValid;\n  }\n\n  handleChanges = e => {\n    const input = e.target;\n    const name = input.name;\n    const value = input.value;\n    this.setState({ [name]: value });\n  };\n\n  async updateCustomer(customer) {\n    if (isAuthenticated(this.props)) {\n      return await apiCustomerPut(this.props.serviceUrl, customer);\n    }\n  }\n\n  getCustomerDetails = customerId => {\n    this.getCustomer(customerId);\n  };\n\n  async getCustomer(customerId) {\n    if (isAuthenticated(this.props)) {\n      const customer = (await apiCustomerGet(this.props.serviceUrl, customerId)).data;\n      this.setState({\n        name: customer.name,\n        customerNumber: customer.customerNumber,\n        contactName: customer.contactName,\n        contactPhone: customer.contactPhone,\n        contactEmail: customer.contactEmail,\n        notes: customer.notes,\n        modalId: 'modal-form-customer-edit-' + customer.id,\n        buttonId: 'edit-customer-button-' + customer.id,\n      });\n    }\n  }\n\n  handleFormSubmit = () => {\n    const formIsValid = this.handleValidation();\n\n    if (formIsValid) {\n      const customer = {\n        id: this.props.customer.id,\n        name: this.state.name,\n        customerNumber: this.state.customerNumber,\n        contactName: this.state.contactName,\n        contactPhone: this.state.contactPhone,\n        contactEmail: this.state.contactEmail,\n        notes: this.state.notes,\n      };\n      this.updateCustomer(customer)\n        .then(() => {\n          this.setState({\n            submitMsg: i18n.t('submitMessages.updated'),\n            submitColour: '#24a148',\n          });\n          this.props.updateCustomerList();\n          this.getCustomerDetails(this.props.customer.id);\n        })\n        .catch(() => {\n          this.setState({\n            submitMsg: i18n.t('submitMessages.error'),\n            submitColour: '#da1e28',\n          });\n        });\n    }\n  };\n\n  clearValues = () => {\n    const { keycloak } = this.props;\n    const authenticated = keycloak.initialized && keycloak.authenticated;\n\n    const customerModalElement = document.querySelector('#' + this.state.modalId);\n    if (!customerModalElement.className.includes('is-visible') && authenticated) {\n      this.setState({\n        name: this.props.customer.name,\n        customerNumber: this.props.customer.customerNumber,\n        contactName: this.props.customer.contactName,\n        contactPhone: this.props.customer.contactPhone,\n        contactEmail: this.props.customer.contactEmail,\n        notes: this.props.customer.notes,\n        invalid: {},\n      });\n    }\n  };\n\n  componentDidMount() {\n    if (isAuthenticated(this.props)) {\n      if (this.props.customerId) {\n        this.getCustomerDetails(this.props.customerId);\n      }\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (authenticationChanged(this.props, prevProps)) {\n      this.getCustomerDetails(this.props.customerId);\n    }\n  }\n\n  render() {\n    const modalConfirmation = (\n      <div className=\"bx--modal-header\">\n        <p style={{color: this.state.submitColour}}>{this.state.submitMsg}</p>\n      </div>\n    )\n    const modalId = this.state.modalId;\n    const buttonClassName = 'bx--btn bx--btn--ghost edit-customer-button-' + this.props.customerId;\n    return (modalId &&\n      <ModalWrapper\n        buttonTriggerText={i18n.t('buttons.edit')}\n        modalHeading={i18n.t('adminDashboard.editCustomer.title')}\n        buttonTriggerClassName={buttonClassName}\n        className=\"modal-form\"\n        id={modalId}\n        handleSubmit={this.handleFormSubmit}\n        primaryButtonText={i18n.t('modalText.save')}\n        secondaryButtonText={i18n.t('modalText.cancel')}\n      >\n        {modalConfirmation}\n        <div className=\"form-container\">\n          <Form onSubmit={this.handleFormSubmit} id={\"form-\" + modalId}>\n            <TextInput\n              id={\"name\" + modalId}\n              name=\"name\"\n              labelText={i18n.t('adminDashboard.addCustomer.customerName') + ' *'}\n              value={this.state.name}\n              onChange={this.handleChanges}\n              invalidText={i18n.t('validation.invalid.required')}\n              invalid={this.state.invalid['name']}\n            />\n            <TextInput\n              id={\"customerNumber\"+modalId}\n              name=\"customerNumber\"\n              labelText={i18n.t('adminDashboard.addCustomer.customerNumber') + ' *'}\n              value={this.state.customerNumber}\n              onChange={this.handleChanges}\n              invalidText={i18n.t('validation.invalid.required')}\n              invalid={this.state.invalid['customerNumber']}\n            />\n            <TextInput\n              id={\"contactName\"+modalId}\n              name=\"contactName\"\n              labelText={i18n.t('adminDashboard.addCustomer.contactName')}\n              value={this.state.contactName}\n              onChange={this.handleChanges}\n            />\n            <TextInput\n              id={\"contactPhone\"+modalId}\n              name=\"contactPhone\"\n              labelText={i18n.t('adminDashboard.addCustomer.contactPhone')}\n              value={this.state.contactPhone}\n              onChange={this.handleChanges}\n            />\n            <TextInput\n              id={\"contactEmail\"+modalId}\n              name=\"contactEmail\"\n              labelText={i18n.t('adminDashboard.addCustomer.contactEmail') + ' *'}\n              value={this.state.contactEmail}\n              onChange={this.handleChanges}\n              invalidText={i18n.t('validation.invalid.email')}\n              invalid={this.state.invalid['contactEmail']}\n            />\n            <TextArea\n              name=\"notes\"\n              labelText={i18n.t('adminDashboard.addCustomer.notes')}\n              value={this.state.notes}\n              onChange={this.handleChanges}\n            />\n          </Form>\n        </div>\n        {modalConfirmation}\n      </ModalWrapper>\n    );\n  }\n}\n\nexport default withKeycloak(EditCustomerModal);\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport {AccordionItem, Button} from 'carbon-components-react';\nimport withKeycloak from '../../auth/withKeycloak';\nimport {\n  apiCustomerGet,\n  apiCustomerDelete,\n  apiGetCustomersProjects,\n  apiGetMyCustomersProjects\n} from '../../api/customers';\nimport CustomerDataTable from './CustomerDataTable';\nimport CustomerDetails from './CustomerDetails';\nimport {\n  isPortalAdminOrSupport,\n  isPortalAdmin,\n  isPortalCustomer,\n  isAuthenticated,\n  authenticationChanged\n} from '../../api/helpers';\nimport EditCustomerModal from '../Admin/EditCustomerModal';\nimport i18n from '../../i18n';\n\nclass CustomerAccordian extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      projects: {},\n      customer: {},\n      authenticated: false,\n    };\n  }\n\n  componentDidMount() {\n    if (isAuthenticated(this.props)) {\n      this.getCustomersProjects(this.props.customerNumber);\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (authenticationChanged(this.props, prevProps)) {\n      this.getCustomersProjects(this.props.customerNumber);\n    }\n  }\n\n  async getCustomersProjects(id) {\n    if (isAuthenticated(this.props)) {\n      const customer = await apiCustomerGet(this.props.serviceUrl, id);\n\n      var projects;\n      try {\n        if (isPortalAdminOrSupport()) {\n          projects = await apiGetCustomersProjects(this.props.serviceUrl, id);\n        } else {\n          projects = await apiGetMyCustomersProjects(this.props.serviceUrl, id);\n        }\n\n        this.setState({\n          projects: projects.data,\n          customer: customer.data,\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }\n\n  async deleteCustomer() {\n    return await apiCustomerDelete(this.props.serviceUrl, this.state.customer.id);\n  }\n\n  handleDelete() {\n    if (window.confirm('Are you sure you want to delete this customer?')) {\n      this.deleteCustomer().then(() => {\n        this.props.updateCustomerList();\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <div>\n          {isPortalCustomer() ? <CustomerDetails serviceUrl={this.props.serviceUrl} customerNumber={this.props.customerNumber} /> : null}\n          <AccordionItem title={this.props.title} open={this.props.accordionOpened}>\n            <div style={{ display: 'flex' }}>\n              {isPortalAdminOrSupport() ? (\n                <Link style={{ textDecoration: 'none' }} to={`/customer-details/${this.state.customer.id}`}>\n                  <Button kind=\"ghost\">{i18n.t('buttons.viewDetails')}</Button>\n                </Link>\n              ) : null}\n              {isPortalAdmin() ? (\n                <div style={{ display: 'flex' }}>\n                  <EditCustomerModal\n                    serviceUrl={this.props.serviceUrl}\n                    customer={this.state.customer}\n                    key={this.state.customer.id}\n                    updateCustomerList={this.props.updateCustomerList}\n                    customerId={this.state.customer.id}\n                  />\n                  <Button kind=\"ghost\" style={{ color: 'red' }} onClick={() => this.handleDelete()}>\n                    {i18n.t('buttons.delete')}\n                  </Button>\n                </div>\n              ) : null}\n            </div>\n            <CustomerDataTable\n              key={new Date().getTime()}\n              serviceUrl={this.props.serviceUrl}\n              customerNumber={this.props.customerNumber}\n              locale={this.props.locale}\n              updateCustomerList={this.props.updateCustomerList}\n            />\n          </AccordionItem>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withKeycloak(CustomerAccordian);\n","import React from 'react';\nimport i18n from '../../i18n';\nimport { Accordion, PaginationNav, Search, Tile } from 'carbon-components-react';\nimport AddCustomerModal from './AddCustomerModal';\nimport AddPartnerModal from './AddPartnerModal';\nimport AddProjectModal from './AddProjectModal';\nimport withKeycloak from '../../auth/withKeycloak';\nimport { apiAdminCustomersGet, apiMyCustomersGet } from '../../api/customers';\nimport CustomerAccordian from '../Customer/CustomerAccordian';\nimport {\n  authenticationChanged,\n  isPortalAdmin,\n  isPortalSupport,\n  isPortalPartner,\n  isPortalCustomer,\n  isPortalAdminOrSupport,\n  isPortalUser,\n  isAuthenticated\n} from '../../api/helpers';\n\nclass AdminDashboard extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      customers: {},\n      role: '',\n      filteredCustomers: {},\n      currentPage: 0,\n      test: '',\n    };\n  }\n\n  componentDidMount() {\n    this.getCustomers();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (authenticationChanged(this.props, prevProps)) {\n      this.getCustomers();\n    }\n  }\n\n  async getCustomers() {\n    if (isAuthenticated(this.props)) {\n      var customers;\n      if (isPortalAdminOrSupport()) {\n        customers = await apiAdminCustomersGet(this.props.serviceUrl);\n      } else {\n        customers = await apiMyCustomersGet(this.props.serviceUrl);\n      }\n\n      this.setState({\n        customers: customers.data,\n        filteredCustomers: customers.data,\n      });\n    }\n  }\n\n  handleSearch = event => {\n    if (event.key === 'Enter') {\n      const newFilteredState = this.state.customers.filter(customer =>\n        customer.name.toLowerCase().includes(event.target.value.toLowerCase())\n      );\n      this.setState({\n        filteredCustomers: newFilteredState,\n        currentPage: 0,\n      });\n    } else {\n      if (event.target.value === '' || event.target.value === undefined) {\n        this.setState({\n          filteredCustomers: this.state.customers,\n        });\n      }\n    }\n    this.forceUpdate();\n  };\n\n  updateCustomerList = () => {\n    this.getCustomers();\n  };\n\n  render() {\n    var numberOfPages = 1;\n    if (Object.keys(this.state.filteredCustomers).length !== 0) {\n      numberOfPages = Math.ceil(this.state.filteredCustomers.length / 5);\n    } else {\n      numberOfPages = 1;\n    }\n\n    const props = () => ({\n      loop: Boolean(false),\n      page: Number(this.state.currentPage),\n      totalItems: Number(numberOfPages),\n      itemsShown: Number(1),\n      onChange: event => this.setState({ currentPage: event }),\n    });\n\n    return (\n      <div className=\"admin-dashboard\">\n        {isPortalAdmin() ? (\n          <h3 className=\"pageTitle\">{i18n.t('adminDashboard.adminTitle')}</h3>\n        ) : isPortalSupport() ? (\n          <h3 className=\"pageTitle\">{i18n.t('adminDashboard.supportTitle')}</h3>\n        ) : isPortalCustomer() ? (\n          <h3 className=\"pageTitle\">{i18n.t('adminDashboard.customerTitle')}</h3>\n        ) : isPortalPartner() ? (\n          <h3 className=\"pageTitle\">{i18n.t('adminDashboard.partnerTitle')}</h3>\n        ) : null}\n        {isPortalAdmin() || isPortalSupport() || isPortalPartner() ? (\n          <Tile>\n            <p className=\"title\">{i18n.t('adminDashboard.allCustomers')}</p>\n            <div className=\"bx--row\">\n              <div className=\"bx--col\">\n                <Search\n                  onChange={this.handleSearch}\n                  id=\"search\"\n                  placeholder={i18n.t('adminDashboard.searchText')}\n                  labelText={i18n.t('adminDashboard.searchLabel')}\n                  onKeyPress={this.handleSearch}\n                />\n              </div>\n              {isPortalAdmin() ? (\n                <div className=\"bx--col\">\n                  <div>\n                    <AddPartnerModal\n                      serviceUrl={this.props.serviceUrl}\n                      updateCustomerList={this.updateCustomerList}\n                    />\n                    <AddCustomerModal serviceUrl={this.props.serviceUrl} updateCustomerList={this.updateCustomerList} />\n                    <AddProjectModal\n                      serviceUrl={this.props.serviceUrl}\n                      updateCustomerList={this.updateCustomerList}\n                      allCustomers={this.state.customers}\n                    />\n                  </div>\n                </div>\n              ) : null}\n            </div>\n          </Tile>\n        ) : null}\n\n        <div className=\"form-container\">\n          <Accordion>\n            {Object.keys(this.state.customers).length !== 0\n              ? this.state.filteredCustomers.map((customer, index) => {\n                  // Pagination for Admin and Support roles (5 items per page)\n                  var indexOfLastItem = (this.state.currentPage + 1) * 5 - 1;\n                  var firstIndexOfCurrentPage = this.state.currentPage * 5;\n                  var accordionOpened = this.state.customers.length === 1;\n\n                  if (isPortalUser()) {\n                    if (index >= firstIndexOfCurrentPage && index <= indexOfLastItem) {\n                      return (\n                        <CustomerAccordian\n                          key={customer.id}\n                          serviceUrl={this.props.serviceUrl}\n                          customerNumber={customer.id}\n                          title={customer.name}\n                          updateCustomerList={this.updateCustomerList}\n                          locale={this.props.locale}\n                          accordionOpened={accordionOpened}\n                        />\n                      );\n                    } else {\n                      return null;\n                    }\n                  } else {\n                    return null;\n                  }\n                })\n              : null}\n          </Accordion>\n          <PaginationNav {...props()} className=\"pagination-right\" />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withKeycloak(AdminDashboard);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport AdminDashboard from '../components/Admin/AdminDashboard';\nimport '../index.scss';\n\nimport KeycloakContext from '../auth/KeycloakContext';\n\nimport { subscribeToWidgetEvent } from '../helpers/widgetEvents';\nimport {KEYCLOAK_EVENT_TYPE} from '../custom-elements/widgetEventTypes';\nimport * as Locale from \"../i18n\";\n\nconst getKeycloakInstance = () =>\n  (window && window.entando && window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\n    initialized: false,\n  };\n\nconst ATTRIBUTES = {\n  hidden: 'hidden',\n  locale: 'locale',\n  paginationMode: 'pagination-mode',\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\n  serviceUrl: 'service-url',\n};\n\nclass AdminDashboardElement extends HTMLElement {\n  container;\n\n  mountPoint;\n\n  unsubscribeFromKeycloakEvent;\n\n  keycloak = getKeycloakInstance();\n\n  connectedCallback() {\n    this.mountPoint = document.createElement('div');\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\n\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\n      this.render();\n    });\n\n    this.render();\n\n    //retargetEvents(shadowRoot);\n    this.appendChild(this.mountPoint);\n  }\n\n  render() {\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\n    const locale = this.getAttribute(ATTRIBUTES.locale) || '';\n    Locale.setLocale(locale);\n\n    ReactDOM.render(\n      <KeycloakContext.Provider value={this.keycloak}>\n        <AdminDashboard serviceUrl={serviceUrl} locale={locale}/>\n      </KeycloakContext.Provider>,\n      this.mountPoint\n    );\n  }\n}\n\ncustomElements.define('admin-dashboard-widget', AdminDashboardElement);\n","import React, { Component } from 'react';\nimport {Select, SelectItem} from 'carbon-components-react';\nimport CustomerDetails from '../Customer/CustomerDetails';\nimport AdminDashboard from './AdminDashboard';\nimport '../../index.scss';\nimport CustomerDataTable from \"../Customer/CustomerDataTable\";\n\nexport default class RoleCheck extends Component {\n  state = {\n    roleType: 'customer',\n  };\n\n  handleChanges = e => {\n    const input = e.target;\n    const name = input.name;\n    const value = input.value;\n    this.setState({ [name]: value });\n  };\n\n  render() {\n    const roleType = ['Admin', 'Customer'];\n    return (\n      <div className=\"role-check\">\n        <Select\n          defaultValue=\"role-type\"\n          id=\"roleType\"\n          name=\"roleType\"\n          labelText=\"Select Role(Testing)\"\n          value={this.state.roleType}\n          onChange={this.handleChanges}\n        >\n          <SelectItem text=\"Select Role\" value=\"role-type\" />\n          {roleType.map((roleType, i) => (\n            <SelectItem key={i} text={roleType} value={roleType.toLowerCase()}>\n              {roleType}\n            </SelectItem>\n          ))}\n        </Select>\n        {this.renderForm()}\n      </div>\n    );\n  }\n\n  // Render Dashboard based on role\n  renderForm() {\n    if (this.state.roleType === 'customer')\n      return (\n        <div>\n          <h3 className=\"pageTitle\">Welcome to Entando Customer Portal</h3>\n          <CustomerDetails />\n          <CustomerDataTable />\n        </div>\n      );\n    if (this.state.roleType === 'admin')\n      return (\n        <div>\n          <h3 className=\"pageTitle\">Welcome to Entando Admin View</h3>\n          <AdminDashboard />\n        </div>\n      );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport RoleCheck from '../components/Admin/RoleCheck';\nimport '../index.scss';\n\nimport KeycloakContext from '../auth/KeycloakContext';\n\nimport { subscribeToWidgetEvent } from '../helpers/widgetEvents';\nimport { KEYCLOAK_EVENT_TYPE } from '../custom-elements/widgetEventTypes';\n\nconst getKeycloakInstance = () =>\n  (window && window.entando && window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\n    initialized: false,\n  };\n\nconst ATTRIBUTES = {\n  hidden: 'hidden',\n  locale: 'locale',\n  paginationMode: 'pagination-mode',\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\n  serviceUrl: 'service-url',\n};\n\nclass AdminRoleCheckElement extends HTMLElement {\n  container;\n\n  mountPoint;\n\n  unsubscribeFromKeycloakEvent;\n\n  keycloak = getKeycloakInstance();\n\n  connectedCallback() {\n    this.mountPoint = document.createElement('div');\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\n\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\n      this.render();\n    });\n\n    this.render();\n\n    //retargetEvents(shadowRoot);\n    this.appendChild(this.mountPoint);\n  }\n\n  render() {\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\n\n    ReactDOM.render(\n      <KeycloakContext.Provider value={this.keycloak}>\n        <RoleCheck serviceUrl={serviceUrl} />\n      </KeycloakContext.Provider>,\n      this.mountPoint\n    );\n  }\n}\n\ncustomElements.define('admin-rolecheck-widget', AdminRoleCheckElement);\n\n//export default AdminRoleCheckElement;\n","import { getDefaultOptions, request, getUrl } from './helpers';\r\n\r\nconst resource = 'api/tickets';\r\n\r\nexport const apiTicketDelete = async (serviceUrl, id) => {\r\n  const url = `${serviceUrl}/${resource}/${id}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiTicketsGet = async serviceUrl => {\r\n  const url = getUrl(`${serviceUrl}/${resource}`);\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiTicketPost = async (serviceUrl, ticket) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n    body: ticket ? JSON.stringify(ticket) : null,\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nconst jiraResource = 'api/tickets/ticketingsystem';\r\nexport const apiJiraTicketDelete = async (serviceUrl, id) => {\r\n  const url = `${serviceUrl}/${jiraResource}/${id}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiJiraTicketsGet = async (serviceUrl, projectName, organization) => {\r\n  const url = `${serviceUrl}/${jiraResource}/${projectName}/${organization}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiJiraTicketPost = async (serviceUrl, projectName, organization, ticket) => {\r\n  const url = `${serviceUrl}/${jiraResource}/${projectName}/${organization}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n    body: ticket ? JSON.stringify(ticket) : null,\r\n  };\r\n  return request(url, options);\r\n};\r\n","import React, { Component } from 'react';\r\nimport {\r\n  DataTable,\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableHeader,\r\n  TableBody,\r\n  TableCell,\r\n  PaginationNav,\r\n} from 'carbon-components-react';\r\nimport {apiJiraTicketsGet} from '../../api/tickets';\r\nimport {apiCurrentTicketingSystemGet} from '../../api/ticketingsystem';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport {apiProjectGet, apiAddTicketToProject, apiGetMyProject} from '../../api/projects';\r\nimport {isPortalAdminOrSupport, isPortalUser} from '../../api/helpers';\r\nimport i18n from '../../i18n';\r\n\r\nclass TicketList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      tickets: {},\r\n      project: {},\r\n      currentTicketingSystem: {},\r\n      currentPage: 0,\r\n    };\r\n    this.headerData = [\r\n      {\r\n        header: i18n.t('ticketDetails.issue'),\r\n        key: 'issue',\r\n      },\r\n      {\r\n        header: i18n.t('ticketDetails.summary'),\r\n        key: 'summary',\r\n      },\r\n      {\r\n        header: i18n.t('ticketDetails.status'),\r\n        key: 'status',\r\n      },\r\n      {\r\n        header: i18n.t('ticketDetails.type'),\r\n        key: 'type',\r\n      },\r\n      {\r\n        header: i18n.t('ticketDetails.priority'),\r\n        key: 'priority',\r\n      },\r\n      {\r\n        header: i18n.t('ticketDetails.created'),\r\n        key: 'created',\r\n      },\r\n      {\r\n        header: i18n.t('ticketDetails.updated'),\r\n        key: 'updated',\r\n      },\r\n      {\r\n        header: i18n.t('ticketDetails.link'),\r\n        key: 'link',\r\n      },\r\n    ];\r\n  }\r\n\r\n  async fetchData() {\r\n    const { keycloak } = this.props;\r\n    var authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n    if (authenticated) {\r\n      try {\r\n        let project;\r\n        if (isPortalAdminOrSupport()) {\r\n          project = await apiProjectGet(this.props.serviceUrl, this.props.projectId);\r\n        } else {\r\n          project = await apiGetMyProject(this.props.serviceUrl, this.props.projectId);\r\n        }\r\n        const currentTicketingSystem = await apiCurrentTicketingSystemGet(this.props.serviceUrl);\r\n        var tickets = await apiJiraTicketsGet(this.props.serviceUrl, currentTicketingSystem.systemId, project.data.systemId);\r\n        for (var i = 0; i < tickets.data.length; i++) {\r\n          apiAddTicketToProject(this.props.serviceUrl, this.props.projectId, tickets.data[i].id);\r\n        }\r\n\r\n        this.setState({\r\n          tickets: tickets,\r\n          project: project,\r\n          currentTicketingSystem: currentTicketingSystem,\r\n        });\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (isPortalUser()) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n    const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n\r\n    if (authenticated && changedAuth && isPortalUser()) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var numberOfPages = 1;\r\n    if (Object.keys(this.state.tickets).length !== 0) {\r\n      numberOfPages = Math.ceil(this.state.tickets.data.length / 10);\r\n    }\r\n\r\n    const paginationProps = () => ({\r\n      loop: Boolean(false),\r\n      page: Number(this.state.currentPage),\r\n      totalItems: Number(numberOfPages),\r\n      itemsShown: Number(1),\r\n      onChange: event => this.setState({currentPage: event}),\r\n    });\r\n    const ticketSystemUrl = this.state.currentTicketingSystem.url;\r\n    const ticketingSystemBaseUrl = (ticketSystemUrl != null) ?\r\n      ticketSystemUrl.substr(0, ticketSystemUrl.indexOf('/rest'))\r\n      : null;\r\n\r\n    return (\r\n      <div>\r\n        <DataTable rows={rowData} headers={this.headerData}>\r\n          {({rows, headers, getHeaderProps, getTableProps}) => (\r\n            <TableContainer\r\n              title={i18n.t('ticketDetails.listOfTickets')}\r\n              description={\r\n                this.state.project.data != null ? (\r\n                  <a\r\n                    href={ticketingSystemBaseUrl + '/issues/' +\r\n                    '?jql=Organizations=' +\r\n                    this.state.project.data.systemId\r\n                    }\r\n                    style={{textDecoration: 'none'}}\r\n                    target=\"_blank\" rel=\"noreferrer\"\r\n                  >\r\n                    {i18n.t('buttons.viewAllTickets')}\r\n                  </a>\r\n                ) : (\r\n                  <div>{i18n.t('ticketDetails.tickets')}</div>\r\n                )\r\n              }\r\n            >\r\n              <Table {...getTableProps()}>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    {headers.map(header => (\r\n                      <TableHeader {...getHeaderProps({ header })}>{header.header}</TableHeader>\r\n                    ))}\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {Object.keys(this.state.tickets).length !== 0 ? (\r\n                    this.state.tickets.data.map((ticket, index) => {\r\n                      const indexOfLastItem = (this.state.currentPage + 1) * 10 - 1;\r\n                      const firstIndexOfCurrentPage = this.state.currentPage * 10;\r\n                      const ticketUrl = ticketingSystemBaseUrl +\r\n                        '/browse/' + ticket.systemId;\r\n\r\n                      if (index >= firstIndexOfCurrentPage && index <= indexOfLastItem) {\r\n                        return (\r\n                          <TableRow key={ticket.id}>\r\n                            <TableCell>\r\n                              <a href={ticketUrl} target=\"_blank\" rel=\"noreferrer\">\r\n                                {ticket.systemId}\r\n                              </a>\r\n                            </TableCell>\r\n                            <TableCell>{ticket.summary}</TableCell>\r\n                            <TableCell>{ticket.status}</TableCell>\r\n                            <TableCell>{ticket.type}</TableCell>\r\n                            <TableCell>{ticket.priority}</TableCell>\r\n                            <TableCell>{new Date(ticket.createDate).toDateString()}</TableCell>\r\n                            <TableCell>{new Date(ticket.updateDate).toDateString()}</TableCell>\r\n                            <TableCell>\r\n                              <a href={ticketUrl} target=\"_blank\" rel=\"noreferrer\">\r\n                                {i18n.t('ticketDetails.viewTicket')}\r\n                              </a>\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        );\r\n                      } else {\r\n                        return null;\r\n                      }\r\n                    })\r\n                  ) : (\r\n                    <TableRow/>\r\n                  )}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          )}\r\n        </DataTable>\r\n        <PaginationNav {...paginationProps()} className=\"pagination-right\"/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst rowData = [\r\n  {\r\n    id: 'a',\r\n    projectName: 'Ticket1',\r\n    project: 'Leonardo',\r\n    entandoVersion: 6.2,\r\n    creationDate: 'October, 2019',\r\n    openTicket: 'Open Ticket',\r\n  },\r\n  {\r\n    id: 'a',\r\n    projectName: 'Ticket1',\r\n    project: 'Leonardo',\r\n    entandoVersion: 6.2,\r\n    creationDate: 'October, 2019',\r\n    openTicket: 'Open Ticket',\r\n  },\r\n  {\r\n    id: 'a',\r\n    projectName: 'Ticket1',\r\n    project: 'Leonardo',\r\n    entandoVersion: 6.2,\r\n    creationDate: 'October, 2019',\r\n    openTicket: 'Open Ticket',\r\n  },\r\n];\r\n\r\nexport default withKeycloak(TicketList);\r\n","import React, { Component } from 'react';\r\nimport i18n from '../../i18n';\r\nimport { ModalWrapper, Form, TextInput, TextArea, Select, SelectItem, DatePicker, DatePickerInput } from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport { apiProjectSubscriptionPut, apiSubscriptionGet } from '../../api/subscriptions';\r\nimport moment from 'moment';\r\n\r\nclass EditSubscriptionModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      level: '',\r\n      status: '',\r\n      lengthInMonths: '',\r\n      startDate: '',\r\n      notes: '',\r\n      invalid: {},\r\n      submitMsg: '',\r\n      submitColour: 'black',\r\n    };\r\n  }\r\n\r\n  handleValidation() {\r\n    let invalid = {};\r\n    let formIsValid = true;\r\n\r\n    if (this.state.level === 'level') {\r\n      formIsValid = false;\r\n      invalid['level'] = true;\r\n    }\r\n\r\n    if (this.state.status === 'status') {\r\n      formIsValid = false;\r\n      invalid['status'] = true;\r\n    }\r\n\r\n    if (this.state.lengthInMonths === '' || !this.isNumeric(String(this.state.lengthInMonths))) {\r\n      formIsValid = false;\r\n      invalid['lengthInMonths'] = true;\r\n    }\r\n\r\n    if (typeof this.state.startDate !== 'undefined') {\r\n      if (!this.state.startDate.match(/^(0[1-9]|1[0-2])\\/(0[1-9]|1\\d|2\\d|3[01])\\/(19|20)\\d{2}$/)) {\r\n        formIsValid = false;\r\n        invalid['startDate'] = true;\r\n      }\r\n    }\r\n\r\n    this.setState({ invalid: invalid });\r\n    return formIsValid;\r\n  }\r\n\r\n  isNumeric(str) {\r\n    if (typeof str != 'string') return false;\r\n    return !isNaN(str) && !isNaN(parseFloat(str));\r\n  }\r\n\r\n  handleChanges = e => {\r\n    const input = e.target;\r\n    const name = input.name;\r\n    const value = input.value;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleFormSubmit = e => {\r\n    const formIsValid = this.handleValidation();\r\n\r\n    if (formIsValid) {\r\n      const subscriptionRequest = {\r\n        projectSubscription: {\r\n          id: this.props.subscription.id,\r\n          level: this.state.level,\r\n          status: this.state.status,\r\n          lengthInMonths: this.state.lengthInMonths,\r\n          startDate: moment(this.state.startDate).format(),\r\n          notes: this.state.notes,\r\n          project: this.props.project,\r\n          entandoVersion: this.props.subscription.entandoVersion,\r\n        },\r\n      };\r\n      this.subscriptionPut(subscriptionRequest)\r\n        .then(result => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.updated'),\r\n            submitColour: '#24a148',\r\n          });\r\n          this.props.updateSubscription();\r\n        })\r\n        .catch(err => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.error'),\r\n            submitColour: '#da1e28',\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n    if (authenticated) {\r\n      this.getSubscriptionDetails();\r\n    }\r\n  }\r\n\r\n  handleStartDateChange = date => {\r\n    this.setState({\r\n      startDate: moment(date[0].toISOString()).format('MM/DD/YYYY'),\r\n    });\r\n  };\r\n\r\n  async getSubscriptionDetails() {\r\n    const { keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n    if (authenticated) {\r\n      const subscription = await apiSubscriptionGet(this.props.serviceUrl, this.props.subscription.id);\r\n      this.setState({\r\n        level: subscription.data.level,\r\n        status: subscription.data.status,\r\n        lengthInMonths: subscription.data.lengthInMonths,\r\n        startDate: moment(subscription.data.startDate).format('MM/DD/YYYY'),\r\n        notes: subscription.data.notes,\r\n        submitMsg: '',\r\n      });\r\n    }\r\n  }\r\n\r\n  async subscriptionPut(subscription) {\r\n    const { keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n    if (authenticated) {\r\n      return await apiProjectSubscriptionPut(this.props.serviceUrl, subscription);\r\n    }\r\n  }\r\n  render() {\r\n    const levelList = ['GOLD', 'PLATINUM'];\r\n    const statusList = ['REQUESTED', 'PENDING', 'ACTIVE', 'EXPIRED'];\r\n    const modalId = \"modal-form-sub-edit\"\r\n    const modalConfirmation = (\r\n      <div className=\"bx--modal-header\">\r\n        <p style={{ color: this.state.submitColour }}>{this.state.submitMsg}</p>\r\n      </div>\r\n    )\r\n    return (\r\n      <ModalWrapper\r\n        buttonTriggerText={i18n.t('buttons.edit')}\r\n        modalHeading={i18n.t('editSubscription.title')}\r\n        buttonTriggerClassName=\"add-project bx--btn bx--btn--tertiary edit-sub-button\"\r\n        className=\"modal-form\"\r\n        id= {modalId}\r\n        handleSubmit={this.handleFormSubmit}\r\n        primaryButtonText={i18n.t('modalText.save')}\r\n        secondaryButtonText={i18n.t('modalText.cancel')}\r\n      >\r\n        {modalConfirmation}\r\n        <div className=\"form-container\">\r\n          <Form onSubmit={this.handleFormSubmit}>\r\n            <Select\r\n              id={\"level\"+modalId}\r\n              name=\"level\"\r\n              labelText={i18n.t('subscriptionDetails.level') + ' *'}\r\n              value={this.state.level}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.required')}\r\n              invalid={this.state.invalid['level']}\r\n            >\r\n              <SelectItem disabled text=\"Select Level\" value=\"level\" />\r\n              {levelList.map((level, i) => (\r\n                <SelectItem key={i} text={level} value={level}>\r\n                  {level}\r\n                </SelectItem>\r\n              ))}\r\n            </Select>\r\n            <Select\r\n              id={\"status\"+modalId}\r\n              name=\"status\"\r\n              labelText={i18n.t('subscriptionDetails.status') + ' *'}\r\n              value={this.state.status}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.required')}\r\n              invalid={this.state.invalid['status']}\r\n            >\r\n              <SelectItem disabled text=\"Select Status\" value=\"status\" />\r\n              {statusList.map((status, i) => (\r\n                <SelectItem key={i} text={status} value={status}>\r\n                  {status}\r\n                </SelectItem>\r\n              ))}\r\n            </Select>\r\n            <DatePicker dateFormat=\"m/d/Y\" datePickerType=\"single\" onChange={this.handleStartDateChange} value={this.state.startDate}>\r\n              <DatePickerInput\r\n                id={\"startDate\"+modalId}\r\n                name=\"startDate\"\r\n                placeholder=\"mm/dd/yyyy\"\r\n                labelText={i18n.t('subscriptionDetails.startDate') + ' *'}\r\n                //onChange={this.handleChanges}\r\n                type=\"text\"\r\n                invalidText={i18n.t('validation.invalid.date')}\r\n                invalid={this.state.invalid['startDate']}\r\n              />\r\n            </DatePicker>\r\n            <TextInput\r\n              id={\"lengthInMonths\"+modalId}\r\n              name=\"lengthInMonths\"\r\n              labelText={i18n.t('subscriptionDetails.lengthInMonths') + ' *'}\r\n              value={this.state.lengthInMonths}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.number')}\r\n              invalid={this.state.invalid['lengthInMonths']}\r\n            />\r\n            <TextArea\r\n              id={\"notes\"+modalId}\r\n              name=\"notes\"\r\n              labelText={i18n.t('adminDashboard.addProject.notes')}\r\n              value={this.state.notes}\r\n              onChange={this.handleChanges}\r\n            />\r\n          </Form>\r\n        </div>\r\n        {modalConfirmation}\r\n      </ModalWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withKeycloak(EditSubscriptionModal);\r\n","import React from 'react';\nimport TicketList from './TicketList';\nimport {Tile} from 'carbon-components-react';\nimport {apiSubscriptionGet, formatStartDate, formatEndDate} from '../../api/subscriptions';\nimport withKeycloak from '../../auth/withKeycloak';\nimport {apiGetProjectUsers, apiProjectGet} from '../../api/projects';\nimport {\n  isPortalAdminOrSupport,\n  isPortalUser,\n  isPortalAdmin,\n  authenticationChanged,\n} from '../../api/helpers';\nimport EditSubscriptionModal from '../Admin/EditSubscriptionModal';\nimport i18n from '../../i18n';\n\nconst subscriptionData = {\n  type: 'Product Support Subscription Entando Platform',\n  license: 'Free Commercial Open Source',\n};\n\nclass Subscription extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      subscription: {},\n      users: {},\n      project: {},\n      customer: {},\n    };\n  }\n\n  async fetchData() {\n    if (isPortalUser()) {\n      try {\n        let users = {};\n        let project = {};\n        const subscription = await apiSubscriptionGet(this.props.serviceUrl, this.props.match.params.id);\n        if (subscription.data.project) {\n          project = await apiProjectGet(this.props.serviceUrl, subscription.data.project.id);\n          users = await apiGetProjectUsers(this.props.serviceUrl, project.data.id);\n        }\n        this.setState({\n          subscription: subscription,\n          project: project,\n          customer: project.customer,\n          users: users,\n          loading: false,\n        });\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  }\n\n  updateSubscription = () => {\n    this.fetchData();\n  };\n\n  componentDidMount() {\n    if (isPortalUser()) {\n      this.fetchData();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (authenticationChanged(this.props, prevProps) && isPortalUser()) {\n      this.fetchData();\n    }\n  }\n\n  render() {\n    const { type, license } = subscriptionData;\n\n    if (!this.state.loading) {\n      if (isPortalUser()) {\n        if (Object.keys(this.state.subscription).length !== 0 && Object.keys(this.state.project).length !== 0) {\n          return (\n            <div className=\"subscription-details\">\n              <div>\n                <Tile>\n                  <div className=\"bx--grid\">\n                    <div className=\"bx--row\">\n                      <div className=\"bx--col\">\n                        <p>\n                          <strong>{i18n.t('customerDashboard.customerName')}:</strong> {this.state.project.data.customer.name}\n                        </p>\n                        <p>\n                          <strong>{i18n.t('customerDashboard.projectName')}:</strong> {this.state.project.data.name}\n                        </p>\n                        <p>\n                          <strong>{i18n.t('subscriptionDetails.description')}:</strong> {this.state.subscription.data.project.description}\n                        </p>\n                        <p>\n                          <strong>{i18n.t('subscriptionDetails.partners')}:</strong>\n                          {this.state.project.data !== '' && Object.keys(this.state.project.data.partners).length !== 0 ? (\n                            <>\n                              {this.state.project.data.partners.map((partner, index) => (\n                                <> {index === this.state.project.data.partners.length - 1 ? partner.name : partner.name + ', '} </>\n                              ))}\n                            </>\n                          ) : (\n                            <> {i18n.t('userMessages.none')} </>\n                          )}\n                        </p>\n                        <p>\n                          <strong>{i18n.t('subscriptionDetails.type')}:</strong> {type}\n                        </p>\n                        {isPortalAdminOrSupport() ? (\n                          <p>\n                            <strong>{i18n.t('subscriptionDetails.notes')}:</strong> {this.state.subscription.data.notes}\n                          </p>\n                        ) : null}\n                      </div>\n                      <div className=\"bx--col\">\n                        <p>\n                          <strong>{i18n.t('subscriptionDetails.status')}:</strong> {this.state.subscription.data.status}\n                        </p>\n                        <p>\n                          <strong>{i18n.t('subscriptionDetails.level')}:</strong> {this.state.subscription.data.level}\n                        </p>\n                        <p>\n                          <strong>{i18n.t('subscriptionDetails.startDate')}:</strong>{' '}\n                          {formatStartDate(this.state.subscription.data.startDate)}\n                        </p>\n                        <p>\n                          <strong>{i18n.t('subscriptionDetails.endDate')}:</strong>{' '}\n                          {formatEndDate(this.state.subscription.data.startDate, this.state.subscription.data.lengthInMonths)}\n                        </p>\n                        <p>\n                          <strong>{i18n.t('subscriptionDetails.license')}:</strong> {license}\n                        </p>\n                        <p>\n                          <strong>{i18n.t('subscriptionDetails.assignedUsers')}:</strong>\n                          {this.state.project.data !== '' && Object.keys(this.state.users.data).length !== 0 ? (\n                            <>\n                              {this.state.users.data.map((user, index) => (\n                                <> {index === this.state.users.data.length - 1 ? user.username : user.username + ', '} </>\n                              ))}\n                            </>\n                          ) : (\n                            <> {i18n.t('userMessages.none')} </>\n                          )}\n                        </p>\n                      </div>\n                    </div>\n                  </div>\n                  {isPortalAdmin() ? (\n                    <EditSubscriptionModal\n                      project={this.state.project.data}\n                      subscription={this.state.subscription.data}\n                      serviceUrl={this.props.serviceUrl}\n                      updateSubscription={this.updateSubscription}\n                    />\n                  ) : null}\n                </Tile>\n                <br />\n                <TicketList projectId={this.state.project.data.id} serviceUrl={this.props.serviceUrl} />\n              </div>\n            </div>\n          );\n        } else {\n          return <p>{i18n.t('userMessages.unauthorized')}</p>;\n        }\n      } else {\n        return <p>{i18n.t('userMessages.unauthorized')}</p>;\n      }\n    } else {\n      return null;\n    }\n  }\n}\n\nexport default withKeycloak(Subscription);\n","import React from 'react';\nimport { Tile } from 'carbon-components-react';\nimport withKeycloak from '../../auth/withKeycloak';\nimport {apiAdminCustomerGet, apiGetCustomersProjects} from '../../api/customers';\nimport {authenticationChanged, isAuthenticated, isPortalAdminOrSupport} from '../../api/helpers';\nimport i18n from '../../i18n';\nimport CustomerDataTable from \"./CustomerDataTable\";\n\nclass CustomerProjectList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      projects: {},\n      customer: {},\n    };\n  }\n\n  async getCustomer() {\n    if (isAuthenticated(this.props)) {\n      try {\n        const customer = await apiAdminCustomerGet(this.props.serviceUrl, this.props.match.params.id);\n        const projects = await apiGetCustomersProjects(this.props.serviceUrl, customer.data.id);\n        this.setState({\n          customer: customer.data,\n          projects: projects.data,\n          loading: false,\n        });\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  }\n\n  updateCustomer = () => {\n    this.getCustomer();\n  };\n\n  componentDidMount() {\n    if (isPortalAdminOrSupport()) {\n      this.getCustomer();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (authenticationChanged(this.props, prevProps)) {\n      if (isPortalAdminOrSupport()) {\n        this.getCustomer();\n      }\n    }\n  }\n\n  render() {\n    if (!this.state.loading) {\n      if (isPortalAdminOrSupport()) {\n        if (Object.keys(this.state.customer).length !== 0) {\n          return (\n            <div>\n              <Tile>\n                <div className=\"bx--grid\">\n                  <div className=\"bx--row\">\n                    <div className=\"bx--col\">\n                      <p>\n                        <strong>{i18n.t('customerDetails.id')}: </strong> {this.state.customer.id}\n                      </p>\n                      <p>\n                        <strong>{i18n.t('customerDetails.name')}: </strong> {this.state.customer.name}\n                      </p>\n                      <p>\n                        <strong>{i18n.t('customerDetails.notes')}: </strong> {this.state.customer.notes}\n                      </p>\n                    </div>\n                    <div className=\"bx--col\">\n                      <p>\n                        <strong>{i18n.t('customerDetails.contactName')}: </strong> {this.state.customer.contactName}\n                      </p>\n                      <p>\n                        <strong>{i18n.t('customerDetails.contactPhone')}: </strong> {this.state.customer.contactPhone}\n                      </p>\n                      <p>\n                        <strong>{i18n.t('customerDetails.contactEmail')}: </strong> {this.state.customer.contactEmail}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n              </Tile>\n              <CustomerDataTable serviceUrl={this.props.serviceUrl} customerNumber={this.state.customer.id} locale={this.props.locale} />\n            </div>\n          );\n        } else {\n          return <p>{i18n.t('userMessages.loading')}...</p>;\n        }\n      } else {\n        return <p>{i18n.t('userMessages.unauthorized')}</p>;\n      }\n    } else {\n      return null;\n    }\n  }\n}\n\nexport default withKeycloak(CustomerProjectList);\n","import React, { Component } from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport AdminDashboard from './Admin/AdminDashboard';\nimport Subscription from './SubscriptionDetails/Subscription';\nimport withKeycloak from '../auth/withKeycloak';\nimport {AuthenticatedView, UnauthenticatedView} from '../auth/KeycloakViews';\nimport {authenticationChanged, isAuthenticated, isPortalUser} from '../api/helpers';\nimport CustomerProjectList from './Customer/CustomerProjectList';\nimport i18n from '../i18n';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n    };\n  }\n\n  componentDidMount() {\n    if (isAuthenticated(this.props)) {\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (authenticationChanged(this.props, prevProps)) {\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n\n  render() {\n    var { keycloak } = this.props;\n\n    if (!this.state.loading) {\n      if (isPortalUser()) {\n        return (\n          <div id=\"entando-customer-portal\">\n            <AuthenticatedView keycloak={keycloak}>\n              <HashRouter>\n                <Switch>\n                  <Route\n                    path={'**/customer-details/:id'}\n                    render={props => <CustomerProjectList {...props} serviceUrl={this.props.serviceUrl} locale={this.props.locale} />}\n                  />\n                  <Route\n                    path={'**/subscription-details/:id'}\n                    render={props => <Subscription {...props} serviceUrl={this.props.serviceUrl} locale={this.props.locale} />}\n                  />\n                  <Route\n                    path=\"**/\"\n                    render={props => <AdminDashboard {...props} serviceUrl={this.props.serviceUrl} locale={this.props.locale} />}\n                  />\n                </Switch>\n              </HashRouter>\n            </AuthenticatedView>\n            <UnauthenticatedView keycloak={keycloak}>\n              <p>{i18n.t('userMessages.unauthorized')}</p>\n            </UnauthenticatedView>\n          </div>\n        );\n      } else {\n        return <p>{i18n.t('userMessages.unauthorized')}</p>;\n      }\n    } else {\n      return null;\n    }\n  }\n}\n\nexport default withKeycloak(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '../index.scss';\nimport * as Locale from '../i18n';\n\nimport KeycloakContext from '../auth/KeycloakContext';\nimport App from '../components/App';\n\nimport { subscribeToWidgetEvent } from '../helpers/widgetEvents';\nimport { KEYCLOAK_EVENT_TYPE } from './widgetEventTypes';\n\nconst getKeycloakInstance = () =>\n  (window && window.entando && window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\n    initialized: false,\n  };\n\nconst ATTRIBUTES = {\n  hidden: 'hidden',\n  locale: 'locale',\n  paginationMode: 'pagination-mode',\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\n  serviceUrl: 'service-url',\n};\n\nclass AppElement extends HTMLElement {\n  container;\n\n  mountPoint;\n\n  unsubscribeFromKeycloakEvent;\n\n  keycloak = getKeycloakInstance();\n\n  connectedCallback() {\n    this.mountPoint = document.createElement('div');\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\n\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\n      this.render();\n    });\n\n    this.render();\n\n    //retargetEvents(shadowRoot);\n    this.appendChild(this.mountPoint);\n  }\n\n  render() {\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\n    const locale = this.getAttribute(ATTRIBUTES.locale) || '';\n    Locale.setLocale(locale);\n\n    ReactDOM.render(\n      <KeycloakContext.Provider value={this.keycloak}>\n        <App serviceUrl={serviceUrl} locale={locale} />\n      </KeycloakContext.Provider>,\n      this.mountPoint\n    );\n  }\n}\n\ncustomElements.define('app-element', AppElement);\n","import { getDefaultOptions, request, getUrl } from './helpers';\r\n\r\nconst resource = 'api/portal-users';\r\n\r\nexport const apiUserDelete = async (serviceUrl, id) => {\r\n  const url = `${serviceUrl}/${resource}/${id}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE',\r\n  };\r\n  return await request(url, options);\r\n};\r\n\r\nexport const apiUsersPut = async (serviceUrl, user) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'PUT',\r\n    body: user ? JSON.stringify(user) : null,\r\n  };\r\n  return await request(url, options);\r\n};\r\n\r\nexport const apiUsersGet = async serviceUrl => {\r\n  const url = getUrl(`${serviceUrl}/${resource}`);\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return await request(url, options);\r\n};\r\n\r\nexport const apiUserGet = async (serviceUrl, userId) => {\r\n  const url = getUrl(`${serviceUrl}/${resource}/${userId}`);\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return await request(url, options);\r\n};\r\n\r\nexport const apiUserPost = async (serviceUrl, user) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n    body: user ? JSON.stringify(user) : null,\r\n  };\r\n  return await request(url, options);\r\n};\r\n\r\nexport const apiUserGetByUsername = async (serviceUrl, username) => {\r\n  const url = getUrl(`${serviceUrl}/${resource}/username/${username}`);\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return await request(url, options);\r\n};\r\n","import { getDefaultKeycloakOptions, request, getUrl } from './helpers';\r\n\r\nexport const apiKeycloakUserGet = async (serviceUrl, realm) => {\r\n  const usersResource = `admin/realms/${realm}/users`;\r\n  const url = `${serviceUrl}/${usersResource}`;\r\n  const options = {\r\n    ...getDefaultKeycloakOptions(),\r\n    method: 'GET',\r\n  };\r\n  return await request(url, options);\r\n};\r\n\r\nexport const apiKeycloakToken = async (serviceUrl, realm) => {\r\n  const tokenResource = `realms/${realm}/protocol/openid-connect/token`;\r\n  const url = getUrl(`${serviceUrl}/${tokenResource}`);\r\n  const keycloakBody = {\r\n    client_id: 'web_app',\r\n    username: 'admin',\r\n    password: 'admin',\r\n    grant_type: 'password',\r\n  };\r\n  const options = {\r\n    ...getDefaultKeycloakOptions(),\r\n    method: 'POST',\r\n    body: keycloakBody ? serialize(keycloakBody) : null,\r\n  };\r\n  return await request(url, options);\r\n};\r\n\r\nfunction serialize(obj) {\r\n  var str = [];\r\n  for (var p in obj)\r\n    if (obj.hasOwnProperty(p)) {\r\n      str.push(encodeURIComponent(p) + '=' + encodeURIComponent(obj[p]));\r\n    }\r\n  return str.join('&');\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Form, Select, SelectItem, Button } from 'carbon-components-react';\r\nimport * as portalUserApi from '../../../api/portalusers';\r\nimport {apiAddUserToProject, apiProjectGet} from '../../../api/projects';\r\nimport withKeycloak from '../../../auth/withKeycloak';\r\nimport { apiKeycloakUserGet } from '../../../api/keycloak';\r\nimport i18n from '../../../i18n';\r\nclass AssignUser extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      project: null,\r\n      projectId: '',\r\n      assignUser: '',\r\n      users: new Map(),\r\n      invalid: {},\r\n      submitMsg: '',\r\n      submitColour: 'black',\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { keycloak } = this.props;\r\n\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n    if (authenticated) {\r\n      this.fetchData(keycloak.authServerUrl);\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n    const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n\r\n    if (authenticated && changedAuth) {\r\n      this.fetchData(keycloak.authServerUrl);\r\n    }\r\n  }\r\n\r\n  async fetchData(keycloakUrl) {\r\n    const {keycloak} = this.props;\r\n    const users = this.mapKeycloakUserEmails((await apiKeycloakUserGet(keycloakUrl, keycloak.realm)).data);\r\n    const search = window.location.search;\r\n    const params = new URLSearchParams(search);\r\n    let projectId = params.get('project');\r\n    let project = null;\r\n    if (projectId != null) {\r\n      project = (await apiProjectGet(this.props.serviceUrl, projectId)).data;\r\n    } else {\r\n      projectId = '';\r\n    }\r\n\r\n    this.setState({\r\n      projectId: projectId,\r\n      project: project,\r\n      users: users\r\n    });\r\n  }\r\n\r\n  mapKeycloakUserEmails = keycloakUsers => {\r\n    const usernameEmailMap = new Map();\r\n    keycloakUsers.forEach(keycloakUser => usernameEmailMap.set(keycloakUser.username, keycloakUser.email));\r\n    return usernameEmailMap;\r\n  };\r\n\r\n  handleChanges = e => {\r\n    const input = e.target;\r\n    const name = input.name;\r\n    const value = input.value;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleFormSubmit = event => {\r\n    event.preventDefault();\r\n    const { projectId, assignUser } = this.state;\r\n    const formIsValid = this.handleFormValidation();\r\n\r\n    if (formIsValid) {\r\n      this.assignUserToProject(projectId, assignUser).then(res => {\r\n        if (res.status === 201) {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.updated'),\r\n            submitColour: '#24a148',\r\n          });\r\n          window.dispatchEvent(new CustomEvent(\"cp-user-assigned\"));\r\n        } else {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.error'),\r\n            submitColour: '#da1e28',\r\n          });\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  handleFormValidation() {\r\n    let invalid = {};\r\n    let formIsValid = true;\r\n    const { projectId, assignUser } = this.state;\r\n\r\n    //name\r\n    if (projectId === '') {\r\n      formIsValid = false;\r\n      invalid['projectId'] = true;\r\n    }\r\n\r\n    //customerNumber\r\n    if (assignUser === '') {\r\n      formIsValid = false;\r\n      invalid['assignUser'] = true;\r\n    }\r\n\r\n    this.setState({ invalid: invalid });\r\n    return formIsValid;\r\n  }\r\n\r\n  assignUserToProject = async (projectId, username) => {\r\n    const portalUserId = await this.getPortalUserId({ username, email: this.state.users.get(username) });\r\n    return await apiAddUserToProject(this.props.serviceUrl, projectId, portalUserId);\r\n  };\r\n\r\n  getPortalUserId = async keycloakUser => {\r\n    let portalUserId = null;\r\n    try {\r\n      const portalUser = await portalUserApi.apiUserGetByUsername(this.props.serviceUrl, keycloakUser.username);\r\n      portalUserId = portalUser.data.id;\r\n    } catch (e) {\r\n      if (e.message.toLowerCase().includes('not found')) {\r\n        const portalUser = await this.createPortalUser(keycloakUser);\r\n        portalUserId = portalUser.data.id;\r\n      }\r\n    }\r\n\r\n    return portalUserId;\r\n  };\r\n\r\n  createPortalUser = async keycloakUser => {\r\n    return await portalUserApi.apiUserPost(this.props.serviceUrl, { username: keycloakUser.username, email: keycloakUser.email });\r\n  };\r\n\r\n  setupFormComponents() {\r\n    const users = this.state.users;\r\n    const project = this.state.project;\r\n    let userList = null;\r\n    let projectList = null;\r\n\r\n    if (users.size > 0) {\r\n      userList = [...users.keys()].map((assignUser, i) => (\r\n        <SelectItem key={i} text={assignUser} value={assignUser}>\r\n          {assignUser}\r\n        </SelectItem>\r\n      ));\r\n      userList.unshift(<SelectItem key=\"-1\" text={i18n.t('manageUsers.assign.userList')} value=\"\"/>);\r\n    } else {\r\n      userList = <SelectItem text={i18n.t('manageUsers.assign.noUsers')} value=\"\"/>;\r\n    }\r\n\r\n    if (project != null) {\r\n      projectList = <SelectItem key={project.id} text={project.name} value={project.id}/>;\r\n    } else {\r\n      projectList = <SelectItem text={i18n.t('manageUsers.assign.noProjects')} value=\"\"/>;\r\n    }\r\n\r\n    return {userList, projectList};\r\n  }\r\n\r\n  render() {\r\n    const { userList, projectList } = this.setupFormComponents();\r\n\r\n    return (\r\n      <div>\r\n        <p style={{ color: this.state.submitColour }}>{this.state.submitMsg}</p>\r\n        <Form onSubmit={this.handleFormSubmit}>\r\n          <div className=\"bx--grid\">\r\n            <div className=\"bx--row\">\r\n              <div className=\"bx--col\">\r\n                <Select\r\n                  id=\"projectId\"\r\n                  name=\"projectId\"\r\n                  labelText={i18n.t('manageUsers.assign.projectName')}\r\n                  value={this.state.projectId}\r\n                  onChange={this.handleChanges}\r\n                  invalidText={i18n.t('validation.invalid.required')}\r\n                  invalid={this.state.invalid['projectId']}\r\n                >\r\n                  {projectList}\r\n                </Select>\r\n              </div>\r\n            </div>\r\n            <div className=\"bx--row\">\r\n              <div className=\"bx--col\">\r\n                <Select\r\n                  id=\"assignUser\"\r\n                  name=\"assignUser\"\r\n                  labelText={i18n.t('manageUsers.assign.assignUser')}\r\n                  value={this.state.assignUser}\r\n                  onChange={this.handleChanges}\r\n                  invalidText={i18n.t('validation.invalid.required')}\r\n                  invalid={this.state.invalid['assignUser']}\r\n                >\r\n                  {userList}\r\n                </Select>\r\n              </div>\r\n            </div>\r\n            <Button kind=\"primary\" tabIndex={0} type=\"submit\">\r\n              {' '}\r\n              {i18n.t('buttons.submit')}{' '}\r\n            </Button>\r\n          </div>\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withKeycloak(AssignUser);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport AssignUser from '../components/Admin/ManageUser/AssignUser';\nimport '../index.scss';\n\nimport KeycloakContext from '../auth/KeycloakContext';\n\nimport { subscribeToWidgetEvent } from '../helpers/widgetEvents';\nimport { KEYCLOAK_EVENT_TYPE } from '../custom-elements/widgetEventTypes';\n\nconst getKeycloakInstance = () =>\n  (window && window.entando && window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\n    initialized: false,\n  };\n\nconst ATTRIBUTES = {\n  hidden: 'hidden',\n  locale: 'locale',\n  paginationMode: 'pagination-mode',\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\n  serviceUrl: 'service-url',\n};\n\nclass AssignUserElement extends HTMLElement {\n  container;\n\n  mountPoint;\n\n  unsubscribeFromKeycloakEvent;\n\n  keycloak = getKeycloakInstance();\n\n  connectedCallback() {\n    this.mountPoint = document.createElement('div');\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\n\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\n      this.render();\n    });\n\n    this.render();\n\n    //retargetEvents(shadowRoot);\n    this.appendChild(this.mountPoint);\n  }\n\n  render() {\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\n\n    ReactDOM.render(\n      <KeycloakContext.Provider value={this.keycloak}>\n        <AssignUser serviceUrl={serviceUrl} />\n      </KeycloakContext.Provider>,\n      this.mountPoint\n    );\n  }\n}\n\ncustomElements.define('assign-user-widget', AssignUserElement);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CustomerDataTable from '../components/Customer/CustomerDataTable';\nimport KeycloakContext from '../auth/KeycloakContext';\nimport '../index.scss';\n\nimport { subscribeToWidgetEvent } from '../helpers/widgetEvents';\nimport { KEYCLOAK_EVENT_TYPE } from './widgetEventTypes';\n\nconst getKeycloakInstance = () =>\n  (window && window.entando && window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\n    initialized: false,\n  };\n\nconst ATTRIBUTES = {\n  hidden: 'hidden',\n  locale: 'locale',\n  paginationMode: 'pagination-mode',\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\n  serviceUrl: 'service-url',\n};\n\nclass CustomerDataTableElement extends HTMLElement {\n  container;\n\n  mountPoint;\n\n  unsubscribeFromKeycloakEvent;\n\n  keycloak = getKeycloakInstance();\n\n  connectedCallback() {\n    this.mountPoint = document.createElement('div');\n\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\n\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\n      this.render();\n    });\n\n    this.render();\n\n    this.appendChild(this.mountPoint);\n  }\n\n  render() {\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\n\n    ReactDOM.render(\n      <KeycloakContext.Provider value={this.keycloak}>\n        <CustomerDataTable serviceUrl={serviceUrl} />\n      </KeycloakContext.Provider>,\n      this.mountPoint\n    );\n  }\n}\n\ncustomElements.define('customer-datatable-widget', CustomerDataTableElement);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CustomerDetails from '../components/Customer/CustomerDetails';\nimport KeycloakContext from '../auth/KeycloakContext';\n\nimport { subscribeToWidgetEvent } from '../helpers/widgetEvents';\nimport { KEYCLOAK_EVENT_TYPE } from '../custom-elements/widgetEventTypes';\n\nconst getKeycloakInstance = () =>\n  (window && window.entando && window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\n    initialized: false,\n  };\n\nconst ATTRIBUTES = {\n  hidden: 'hidden',\n  locale: 'locale',\n  paginationMode: 'pagination-mode',\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\n  serviceUrl: 'service-url',\n};\n\nclass CustomerDetailsElement extends HTMLElement {\n  container;\n\n  mountPoint;\n\n  unsubscribeFromKeycloakEvent;\n\n  keycloak = getKeycloakInstance();\n\n  connectedCallback() {\n    this.mountPoint = document.createElement('div');\n\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\n\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\n      this.render();\n    });\n\n    this.render();\n\n    this.appendChild(this.mountPoint);\n  }\n\n  render() {\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\n\n    ReactDOM.render(\n      <KeycloakContext.Provider value={this.keycloak}>\n        <CustomerDetails serviceUrl={serviceUrl} />\n      </KeycloakContext.Provider>,\n      this.mountPoint\n    );\n  }\n}\ncustomElements.define('customer-details-widget', CustomerDetailsElement);\n","import React, { Component } from 'react';\nimport {\n  DataTable,\n  TableContainer,\n  Table,\n  TableHead,\n  TableRow,\n  TableHeader,\n  TableBody,\n  TableCell,\n  Button\n} from 'carbon-components-react';\nimport withKeycloak from '../../../auth/withKeycloak';\nimport i18n from '../../../i18n';\nimport {apiGetProjectUsers, apiDeleteUserFromProject} from \"../../../api/projects\";\n\nclass DeleteUser extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      users: [],\n      displayUsers: [],\n      projectId: '',\n    };\n    this.headerData = [\n      {\n        header: i18n.t('manageUsers.delete.userName'),\n        key: 'username',\n      },\n      {\n        header: i18n.t('manageUsers.delete.userEmail'),\n        key: 'email',\n      },\n      {\n        header: i18n.t('manageUsers.delete.userAccess'),\n        key: 'userAccess',\n      },\n    ];\n    window.addEventListener(\"cp-user-assigned\", (event) => {\n      this.fetchData();\n    });\n  }\n\n  componentDidMount() {\n    const { keycloak } = this.props;\n    const authenticated = keycloak.initialized && keycloak.authenticated;\n\n    if (authenticated) {\n      this.fetchData();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { keycloak } = this.props;\n    const authenticated = keycloak.initialized && keycloak.authenticated;\n\n    const changedAuth = prevProps.keycloak.authenticated !== authenticated;\n\n    if (authenticated && changedAuth) {\n      this.fetchData();\n    }\n  }\n\n  async fetchData() {\n    const {keycloak} = this.props;\n\n    const authenticated = keycloak.initialized && keycloak.authenticated;\n    if (authenticated) {\n      let search = window.location.search;\n      const params = new URLSearchParams(search);\n      const projectId = params.get('project');\n      let users = [];\n      if (projectId != null) {\n        users = ((await apiGetProjectUsers(this.props.serviceUrl, projectId)).data);\n      }\n\n      this.setState({\n        users,\n        projectId\n      });\n\n      this.handleUserDisplay();\n    }\n  }\n\n  handleUserDisplay() {\n    const users = this.state.users;\n    const projectId = this.state.projectId;\n\n    const displayUsers = users.map(user => ({\n      id: user.username,\n      username: user.username,\n      email: user.email,\n      userAccess: (\n        <Button\n          kind=\"ghost\"\n          onClick={event => this.handleRemoveUser(user.id, projectId, event)}\n          className=\"button-warning\"\n        >\n          {i18n.t('manageUsers.delete.removeUser')}\n        </Button>\n      ),\n    }));\n\n    this.setState({\n      displayUsers,\n    });\n  }\n\n  handleRemoveUser = (userId, projectId, event) => {\n    event.preventDefault();\n\n    apiDeleteUserFromProject(this.props.serviceUrl, projectId, userId).then(res => {\n      if (res.status === 201) {\n        this.fetchData();\n      } else {\n        console.warn(\"Failed to delete user\", res);\n      }\n    });\n  };\n\n  render() {\n    return (\n      <DataTable rows={this.state.displayUsers} headers={this.headerData}>\n        {({ rows, headers, getHeaderProps, getTableProps }) => (\n          <TableContainer>\n            <Table {...getTableProps()}>\n              <TableHead>\n                <TableRow>\n                  {headers.map(header => (\n                    <TableHeader {...getHeaderProps({ header })}>{header.header}</TableHeader>\n                  ))}\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {rows.map(row => (\n                  <TableRow key={row.id}>\n                    {row.cells.map(cell => (\n                      <TableCell key={cell.id}>{cell.value}</TableCell>\n                    ))}\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        )}\n      </DataTable>\n    );\n  }\n}\n\nexport default withKeycloak(DeleteUser);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport DeleteUser from '../components/Admin/ManageUser/DeleteUser';\nimport '../index.scss';\n\nimport KeycloakContext from '../auth/KeycloakContext';\n\nimport { subscribeToWidgetEvent } from '../helpers/widgetEvents';\nimport { KEYCLOAK_EVENT_TYPE } from '../custom-elements/widgetEventTypes';\n\nconst getKeycloakInstance = () =>\n  (window && window.entando && window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\n    initialized: false,\n  };\n\nconst ATTRIBUTES = {\n  hidden: 'hidden',\n  locale: 'locale',\n  paginationMode: 'pagination-mode',\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\n  serviceUrl: 'service-url',\n};\n\nclass DeleteUserElement extends HTMLElement {\n  container;\n\n  mountPoint;\n\n  unsubscribeFromKeycloakEvent;\n\n  keycloak = getKeycloakInstance();\n\n  connectedCallback() {\n    this.mountPoint = document.createElement('div');\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\n\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\n      this.render();\n    });\n\n    this.render();\n\n    //retargetEvents(shadowRoot);\n    this.appendChild(this.mountPoint);\n  }\n\n  render() {\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\n\n    ReactDOM.render(\n      <KeycloakContext.Provider value={this.keycloak}>\n        <DeleteUser serviceUrl={serviceUrl} />\n      </KeycloakContext.Provider>,\n      this.mountPoint\n    );\n  }\n}\n\ncustomElements.define('delete-user-widget', DeleteUserElement);\n","import React, { Component } from 'react';\r\nimport { Form, TextInput, TextArea, Button } from 'carbon-components-react';\r\nimport i18n from '../../i18n';\r\n\r\nexport default class EnhancementRequest extends Component {\r\n  state = {\r\n    ticketNo: '',\r\n    customerName: '',\r\n    projectName: '',\r\n    openedBy: '',\r\n    priority: '',\r\n    partnerName: '',\r\n    enhancementDescription: '',\r\n    invalid: {},\r\n  };\r\n\r\n  handleValidation() {\r\n    let invalid = {};\r\n    let formIsValid = true;\r\n\r\n    if (this.state.ticketNo === '') {\r\n      formIsValid = false;\r\n      invalid['ticketNo'] = true;\r\n    }\r\n\r\n    if (this.state.customerName === '') {\r\n      formIsValid = false;\r\n      invalid['customerName'] = true;\r\n    }\r\n\r\n    if (this.state.projectName === '') {\r\n      formIsValid = false;\r\n      invalid['projectName'] = true;\r\n    }\r\n\r\n    if (this.state.openedBy === '') {\r\n      formIsValid = false;\r\n      invalid['openedBy'] = true;\r\n    }\r\n\r\n    if (this.state.partnerName === '') {\r\n      formIsValid = false;\r\n      invalid['partnerName'] = true;\r\n    }\r\n\r\n    if (this.state.enhancementDescription === '') {\r\n      formIsValid = false;\r\n      invalid['enhancementDescription'] = true;\r\n    }\r\n\r\n    this.setState({ invalid: invalid });\r\n    return formIsValid;\r\n  }\r\n\r\n  handleChanges = e => {\r\n    const input = e.target;\r\n    const name = input.name;\r\n    const value = input.value;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleFormSubmit = event => {\r\n    console.log(this.state.ticketNo);\r\n    event.preventDefault();\r\n\r\n    const formIsValid = this.handleValidation();\r\n\r\n    if (formIsValid) {\r\n      // placeholder\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h3 className=\"pageTitle\">{i18n.t('enhancementForm.title')}</h3>\r\n        <div className=\"form-container\">\r\n          <Form onSubmit={this.handleFormSubmit}>\r\n            <div className=\"form-desc\">\r\n              <h4>{i18n.t('enhancementForm.formTitle')}</h4>\r\n              <p>{i18n.t('enhancementForm.desc')}</p>\r\n            </div>\r\n            <div className=\"bx--grid\">\r\n              <div className=\"bx--row\">\r\n                <div className=\"bx--col\">\r\n                  <TextInput\r\n                    name=\"ticketNo\"\r\n                    labelText={i18n.t('enhancementForm.ticketNumber')}\r\n                    value={this.state.ticketNo}\r\n                    onChange={this.handleChanges}\r\n                    invalidText={i18n.t('validation.invalid.required')}\r\n                    invalid={this.state.invalid['ticketNo']}\r\n                  />\r\n                  <TextInput\r\n                    name=\"projectName\"\r\n                    labelText={i18n.t('enhancementForm.projectName')}\r\n                    value={this.state.projectName}\r\n                    onChange={this.handleChanges}\r\n                    invalidText={i18n.t('validation.invalid.required')}\r\n                    invalid={this.state.invalid['projectName']}\r\n                  />\r\n                  <TextInput\r\n                    name=\"priority\"\r\n                    labelText={i18n.t('enhancementForm.priority')}\r\n                    value={this.state.priority}\r\n                    onChange={this.handleChanges}\r\n                  />\r\n                </div>\r\n                <div className=\"bx--col\">\r\n                  <TextInput\r\n                    name=\"customerName\"\r\n                    labelText={i18n.t('enhancementForm.customerName')}\r\n                    value={this.state.customerName}\r\n                    onChange={this.handleChanges}\r\n                    invalidText={i18n.t('validation.invalid.required')}\r\n                    invalid={this.state.invalid['customerName']}\r\n                  />\r\n                  <TextInput\r\n                    name=\"openedBy\"\r\n                    labelText={i18n.t('enhancementForm.ticketOpenedBy')}\r\n                    value={this.state.openedBy}\r\n                    onChange={this.handleChanges}\r\n                    invalidText={i18n.t('validation.invalid.required')}\r\n                    invalid={this.state.invalid['openedBy']}\r\n                  />\r\n                  <TextInput\r\n                    name=\"partnerName\"\r\n                    labelText={i18n.t('enhancementForm.partnerName')}\r\n                    value={this.state.partnerName}\r\n                    onChange={this.handleChanges}\r\n                    invalidText={i18n.t('validation.invalid.required')}\r\n                    invalid={this.state.invalid['partnerName']}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"bx--row\">\r\n                <div className=\"bx--col\">\r\n                  <TextArea\r\n                    labelText={i18n.t('enhancementForm.enhancementDescription')}\r\n                    placeholder={i18n.t('enhancementForm.addenhancementDescription')}\r\n                    name=\"enhancementDescription\"\r\n                    value={this.state.enhancementDescription}\r\n                    onChange={this.handleChanges}\r\n                    invalidText={i18n.t('validation.invalid.required')}\r\n                    invalid={this.state.invalid['enhancementDescription']}\r\n                  />\r\n                  <Button kind=\"primary\" tabIndex={0} type=\"submit\">\r\n                    {' '}\r\n                    {i18n.t('buttons.submit')}{' '}\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport EnhancementRequest from '../components/Forms/enhancementRequest';\nimport KeycloakContext from '../auth/KeycloakContext';\n\nimport { subscribeToWidgetEvent } from '../helpers/widgetEvents';\nimport { KEYCLOAK_EVENT_TYPE } from '../custom-elements/widgetEventTypes';\n\nconst getKeycloakInstance = () =>\n  (window && window.entando && window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\n    initialized: false,\n  };\n\nconst ATTRIBUTES = {\n  hidden: 'hidden',\n  locale: 'locale',\n  paginationMode: 'pagination-mode',\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\n  serviceUrl: 'service-url',\n};\n\nclass FormsEnhancementRequestElement extends HTMLElement {\n  container;\n\n  mountPoint;\n\n  unsubscribeFromKeycloakEvent;\n\n  keycloak = getKeycloakInstance();\n\n  connectedCallback() {\n    this.mountPoint = document.createElement('div');\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\n\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\n      this.render();\n    });\n\n    this.render();\n\n    //retargetEvents(shadowRoot);\n    this.appendChild(this.mountPoint);\n  }\n\n  render() {\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\n\n    ReactDOM.render(\n      <KeycloakContext.Provider value={this.keycloak}>\n        <EnhancementRequest serviceUrl={serviceUrl} />\n      </KeycloakContext.Provider>,\n      this.mountPoint\n    );\n  }\n}\n\ncustomElements.define('forms-enhancement-request-widget', FormsEnhancementRequestElement);\n","import React, { Component } from 'react';\r\nimport i18n from '../../i18n';\r\nimport { Form, Select, SelectItem, Button, TextArea, TextInput } from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport { apiAdminProjectsGet, apiMyProjectsGet, apiGetProjectSubscriptions } from '../../api/projects';\r\nimport { apiJiraTicketPost } from '../../api/tickets';\r\nimport { apiTicketingSystemsGet } from '../../api/ticketingsystem';\r\nimport {\r\n  isPortalAdmin,\r\n  isPortalAdminOrSupport,\r\n  isPortalCustomer,\r\n  isPortalCustomerOrPartner,\r\n  isPortalPartner,\r\n  isPortalSupport,\r\n  isPortalUser,\r\n} from '../../api/helpers';\r\n\r\nclass OpenTicket extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      loading: true,\r\n      project: {},\r\n      projects: [],\r\n      systemId: '',\r\n      type: 'Support',\r\n      description: '',\r\n      priority: 'Medium',\r\n      status: 'To Do',\r\n      createDate: '',\r\n      updateDate: '',\r\n      role: '',\r\n      invalid: {},\r\n      submitMsg: '',\r\n      submitColour: 'black',\r\n    };\r\n    this.types = ['Support', 'Feature Request'];\r\n    this.priorities = ['Critical', 'High', 'Medium', 'Low'];\r\n  }\r\n\r\n  handleValidation() {\r\n    let invalid = {};\r\n    let formIsValid = true;\r\n\r\n    if (this.state.project.systemId === undefined || this.state.project.systemId === 'project-list') {\r\n      formIsValid = false;\r\n      invalid['project'] = true;\r\n    }\r\n\r\n    if (this.state.type === '' || this.state.type === 'Select') {\r\n      formIsValid = false;\r\n      invalid['type'] = true;\r\n    }\r\n\r\n    if (this.state.description === '' || this.state.description === 'Select') {\r\n      formIsValid = false;\r\n      invalid['description'] = true;\r\n    }\r\n\r\n    if (this.state.priority === '' || this.state.priority === 'Select') {\r\n      formIsValid = false;\r\n      invalid['priority'] = true;\r\n    }\r\n\r\n    this.setState({ invalid: invalid });\r\n    return formIsValid;\r\n  }\r\n\r\n  handleChanges = e => {\r\n    const input = e.target;\r\n    const name = input.name;\r\n    const value = input.value;\r\n\r\n    if (name === 'project' && value !== '' && value !== 'project-list') {\r\n      this.setState({\r\n        project: JSON.parse(value),\r\n      });\r\n    } else {\r\n      this.setState({ [name]: value });\r\n    }\r\n  };\r\n\r\n  handleFormSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    const formIsValid = this.handleValidation();\r\n\r\n    if (formIsValid) {\r\n      // check if project has subscription\r\n      this.fetchProjectSubscription(this.state.project.id)\r\n        .then(result => {\r\n          // if project has subscription, create ticket\r\n          if (result.data.length > 0) {\r\n            this.createTicket()\r\n              .then(() => {\r\n                this.setState({\r\n                  submitMsg: i18n.t('submitMessages.created'),\r\n                  submitColour: '#24a148',\r\n                });\r\n              })\r\n              .catch(() => {\r\n                this.setState({\r\n                  submitMsg: i18n.t('submitMessages.ticketError'),\r\n                  submitColour: '#da1e28',\r\n                });\r\n              });\r\n          }\r\n          // if no subscriptions, don't create ticket\r\n          else {\r\n            this.setState({\r\n              submitMsg: i18n.t('submitMessages.subscriptionRequired'),\r\n              submitColour: '#da1e28',\r\n            });\r\n          }\r\n        })\r\n        .catch(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.error'),\r\n            submitColour: '#da1e28',\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  async fetchProjectSubscription(projectId) {\r\n    return await apiGetProjectSubscriptions(this.props.serviceUrl, projectId);\r\n  }\r\n\r\n  async fetchProjects() {\r\n    const { keycloak } = this.props;\r\n    var authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n    if (authenticated) {\r\n      if (isPortalAdminOrSupport()) {\r\n        let projects = await apiAdminProjectsGet(this.props.serviceUrl);\r\n        let search = window.location.search;\r\n        let params = new URLSearchParams(search);\r\n        let projectParam = params.get('project');\r\n        if (projectParam) {\r\n          projects.data.forEach(project => {\r\n            if (String(project.id) === projectParam) {\r\n              projects = project;\r\n              this.setState({\r\n                projects: [projects],\r\n                project: projects,\r\n              });\r\n            }\r\n          });\r\n        } else {\r\n          this.setState({\r\n            projects: projects.data,\r\n          });\r\n        }\r\n      } else if (isPortalCustomerOrPartner()) {\r\n        var projects = await apiMyProjectsGet(this.props.serviceUrl);\r\n        let search = window.location.search;\r\n        let params = new URLSearchParams(search);\r\n        let projectParam = params.get('project');\r\n        if (projectParam) {\r\n          projects.data.forEach(project => {\r\n            if (String(project.id) === projectParam) {\r\n              var foundProject = project;\r\n              this.setState({\r\n                projects: [foundProject],\r\n                project: foundProject,\r\n              });\r\n            }\r\n          });\r\n        } else {\r\n          this.setState({\r\n            projects: projects.data,\r\n          });\r\n        }\r\n      }\r\n    }\r\n\r\n    this.render();\r\n  }\r\n\r\n  async createTicket() {\r\n    const { keycloak } = this.props;\r\n    var authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n    if (authenticated) {\r\n      const ticket = {\r\n        systemId: this.state.project.systemId,\r\n        type: this.state.type,\r\n        summary: this.state.summary,\r\n        description: this.state.description,\r\n        priority: this.state.priority,\r\n        status: 'To Do',\r\n        // these dates are just placeholder to validate the POST request (date will be updated in the backend)\r\n        createDate: '2021-02-22T14:14:09-05:00',\r\n        updateDate: '2021-02-22T14:14:09-05:00',\r\n      };\r\n      return await apiJiraTicketPost(this.props.serviceUrl, this.state.ticketingSystem.systemId, this.state.project.systemId, ticket);\r\n      //const addedTicket = await apiAddTicketToProject(this.props.serviceUrl, this.state.project.id, result.data.id);\r\n    }\r\n  }\r\n\r\n  async getTicketingSystem() {\r\n    if (isPortalUser()) {\r\n      const ticketingSystems = await apiTicketingSystemsGet(this.props.serviceUrl);\r\n      const currentTicketingSystem = ticketingSystems.data[ticketingSystems.data.length - 1];\r\n      this.setState({\r\n        ticketingSystem: currentTicketingSystem,\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n    if (authenticated) {\r\n      this.fetchProjects();\r\n      this.getTicketingSystem();\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n    const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n\r\n    if (authenticated && changedAuth) {\r\n      this.fetchProjects();\r\n      this.getTicketingSystem();\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (!this.state.loading && this.state.projects.length !== 0) {\r\n      if (isPortalUser()) {\r\n        return (\r\n          <div>\r\n            {isPortalAdmin() ? (\r\n              <h3 className=\"pageTitle\">{i18n.t('adminDashboard.adminTitle')}</h3>\r\n            ) : isPortalSupport() ? (\r\n              <h3 className=\"pageTitle\">{i18n.t('adminDashboard.supportTitle')}</h3>\r\n            ) : isPortalCustomer() ? (\r\n              <h3 className=\"pageTitle\">{i18n.t('adminDashboard.customerTitle')}</h3>\r\n            ) : isPortalPartner() ? (\r\n              <h3 className=\"pageTitle\">{i18n.t('adminDashboard.partnerTitle')}</h3>\r\n            ) : null}\r\n            <div className=\"form-container\">\r\n              <p style={{ color: this.state.submitColour }}>{this.state.submitMsg}</p>\r\n              <Form onSubmit={this.handleFormSubmit}>\r\n                <div className=\"form-desc\">\r\n                  <h4>{i18n.t('supportTicketForm.formTitle')}</h4>\r\n                  <p>{i18n.t('supportTicketForm.desc')}</p>\r\n                </div>\r\n                <div className=\"bx--grid\">\r\n                  <div className=\"bx--row\">\r\n                    <div className=\"bx--col\">\r\n                      <Select\r\n                        id=\"project\"\r\n                        name=\"project\"\r\n                        labelText={i18n.t('supportTicketForm.selectProject') + ' *'}\r\n                        value={JSON.stringify(this.state.project)}\r\n                        onChange={this.handleChanges}\r\n                        invalidText={i18n.t('validation.invalid.required')}\r\n                        invalid={this.state.invalid['project']}\r\n                      >\r\n                        {this.state.projects.length > 1 ? (\r\n                          <SelectItem text={i18n.t('adminDashboard.addPartner.selectProject')} value=\"project-list\" />\r\n                        ) : null}\r\n                        {Object.keys(this.state.projects).length !== 0\r\n                          ? this.state.projects.map((project, i) => {\r\n                              return (\r\n                                <SelectItem key={i} text={project.name} value={JSON.stringify(project)}>\r\n                                  {project.name}\r\n                                </SelectItem>\r\n                              );\r\n                            })\r\n                          : null}\r\n                      </Select>\r\n                      <Select\r\n                        id=\"type\"\r\n                        name=\"type\"\r\n                        labelText={i18n.t('supportTicketForm.type') + ' *'}\r\n                        value={this.state.type}\r\n                        onChange={this.handleChanges}\r\n                        invalidText={i18n.t('validation.invalid.required')}\r\n                        invalid={this.state.invalid['type']}\r\n                      >\r\n                        {this.types.map((type, i) => (\r\n                          <SelectItem key={i} text={type} value={type}>\r\n                            {type}\r\n                          </SelectItem>\r\n                        ))}\r\n                      </Select>\r\n                      <Select\r\n                        id=\"priority\"\r\n                        name=\"priority\"\r\n                        labelText={i18n.t('supportTicketForm.priority') + ' *'}\r\n                        value={this.state.priority}\r\n                        onChange={this.handleChanges}\r\n                        invalidText={i18n.t('validation.invalid.required')}\r\n                        invalid={this.state.invalid['priority']}\r\n                      >\r\n                        {this.priorities.map((priority, i) => (\r\n                          <SelectItem key={i} text={priority} value={priority}>\r\n                            {priority}\r\n                          </SelectItem>\r\n                        ))}\r\n                      </Select>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"bx--row\">\r\n                    <div className=\"bx--col\">\r\n                      <TextInput\r\n                        labelText={i18n.t('supportTicketForm.ticketSummary') + ' *'}\r\n                        placeholder={i18n.t('supportTicketForm.addticketSummary')}\r\n                        id=\"summary\"\r\n                        name=\"summary\"\r\n                        value={this.state.summary}\r\n                        onChange={this.handleChanges}\r\n                        invalidText={i18n.t('validation.invalid.required')}\r\n                        invalid={this.state.invalid['summary']}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"bx--row\">\r\n                    <div className=\"bx--col\">\r\n                      <TextArea\r\n                        labelText={i18n.t('supportTicketForm.ticketDescription') + ' *'}\r\n                        placeholder={i18n.t('supportTicketForm.addticketDescription')}\r\n                        name=\"description\"\r\n                        value={this.state.description}\r\n                        onChange={this.handleChanges}\r\n                        invalidText={i18n.t('validation.invalid.required')}\r\n                        invalid={this.state.invalid['description']}\r\n                      />\r\n                      <Button kind=\"primary\" tabIndex={0} type=\"submit\">\r\n                        {' '}\r\n                        {i18n.t('buttons.submit')}{' '}\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </Form>\r\n            </div>\r\n          </div>\r\n        );\r\n      } else {\r\n        return <p>{i18n.t('userMessages.unauthorized')}</p>;\r\n      }\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport default withKeycloak(OpenTicket);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport OpenTicket from '../components/Forms/openTicket';\nimport KeycloakContext from '../auth/KeycloakContext';\n\nimport { subscribeToWidgetEvent } from '../helpers/widgetEvents';\nimport {KEYCLOAK_EVENT_TYPE} from '../custom-elements/widgetEventTypes';\nimport * as Locale from \"../i18n\";\n\nconst getKeycloakInstance = () =>\n  (window && window.entando && window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\n    initialized: false,\n  };\n\nconst ATTRIBUTES = {\n  hidden: 'hidden',\n  locale: 'locale',\n  paginationMode: 'pagination-mode',\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\n  serviceUrl: 'service-url',\n};\n\nclass FormsOpenTicketElement extends HTMLElement {\n  container;\n\n  mountPoint;\n\n  unsubscribeFromKeycloakEvent;\n\n  keycloak = getKeycloakInstance();\n\n  connectedCallback() {\n    this.mountPoint = document.createElement('div');\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\n\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\n      this.render();\n    });\n\n    this.render();\n\n    //retargetEvents(shadowRoot);\n    this.appendChild(this.mountPoint);\n  }\n\n  render() {\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\n    const locale = this.getAttribute(ATTRIBUTES.locale) || '';\n    Locale.setLocale(locale);\n\n    ReactDOM.render(\n      <KeycloakContext.Provider value={this.keycloak}>\n        <OpenTicket serviceUrl={serviceUrl} locale={locale}/>\n      </KeycloakContext.Provider>,\n      this.mountPoint\n    );\n  }\n}\n\ncustomElements.define('forms-openticket-widget', FormsOpenTicketElement);\n","import React, {Component} from 'react';\nimport {\n  DataTable,\n  TableContainer,\n  Table,\n  TableHead,\n  TableRow,\n  TableHeader,\n  TableBody,\n  TableCell,\n  Button\n} from 'carbon-components-react';\nimport '../../../index.scss';\nimport withKeycloak from '../../../auth/withKeycloak';\nimport i18n from '../../../i18n';\nimport {isAuthenticated, authenticationChanged} from \"../../../api/helpers\";\nimport {apiDeleteSubscriptionFromProject, apiGetProjectSubscriptions, apiProjectGet} from \"../../../api/projects\";\nimport {formatEndDate, formatStartDate} from \"../../../api/subscriptions\";\n\nclass ManageSubscriptions extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      projectId: '',\n      project: {},\n      subscriptions: []\n    }\n    ;\n    this.headerData = [\n      {\n        header: i18n.t('projectDetails.id'),\n        key: 'id',\n      },\n      {\n        header: i18n.t('projectDetails.status'),\n        key: 'status',\n      },\n      {\n        header: i18n.t('projectDetails.entandoVersion'),\n        key: 'entandoVersion',\n      },\n      {\n        header: i18n.t('projectDetails.level'),\n        key: 'level',\n      },\n      {\n        header: i18n.t('projectDetails.startDate'),\n        key: 'startDate',\n      },\n      {\n        header: i18n.t('projectDetails.endDate'),\n        key: 'endDate',\n      },\n      {\n        header: i18n.t('projectDetails.lengthInMonths'),\n        key: 'lengthInMonths',\n      },\n      {\n        header: i18n.t('customerDashboard.action'),\n        key: 'action',\n      },\n    ];\n  }\n\n  componentDidMount() {\n    if (isAuthenticated(this.props)) {\n      this.fetchData();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (authenticationChanged(this.props, prevProps)) {\n      this.fetchData();\n    }\n  }\n\n  async fetchData() {\n    if (isAuthenticated(this.props)) {\n      let search = window.location.search;\n      const params = new URLSearchParams(search);\n      const projectId = params.get('project');\n\n      let project = {};\n      let subscriptions = {};\n      if (projectId != null) {\n        project = ((await apiProjectGet(this.props.serviceUrl, projectId)).data);\n        subscriptions = ((await apiGetProjectSubscriptions(this.props.serviceUrl, projectId)).data);\n      }\n\n      this.setState({\n        projectId: projectId,\n        project: project,\n        subscriptions: subscriptions\n      });\n    }\n  }\n\n  async deleteSubscription(subscriptionId) {\n    if (isAuthenticated(this.props)) {\n      return await apiDeleteSubscriptionFromProject(this.props.serviceUrl, this.state.projectId, subscriptionId);\n    }\n  }\n\n  handleDeleteSubscription = (e, id) => {\n    e.preventDefault();\n    if (window.confirm(i18n.t('submitMessages.confirmDelete'))) {\n      console.log(\"confirmed to delete\", id);\n      this.deleteSubscription(id)\n        .then(() => {\n          this.setState({\n            submitMsg: i18n.t('submitMessages.deleted'),\n            submitColour: '#24a148',\n          });\n          this.fetchData();\n        })\n        .catch(() => {\n          this.setState({\n            submitMsg: i18n.t('submitMessages.error'),\n            submitColour: '#da1e28',\n          });\n        });\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <h5>{(this.state.project !== null) && this.state.project.name}</h5>\n        <a\n          href={`/entando-de-app/${this.props.locale}/new_or_renew_subscription.page?project=${this.state.projectId}`}\n          style={{textDecoration: 'none'}}\n        >\n          <Button kind=\"ghost\" style={{display: 'block', width: '100%'}} value=\"Add Subscription\">\n            {i18n.t('buttons.addSubscription')}\n          </Button>\n        </a>\n\n        <DataTable rows={[{id: \"1\"}]} headers={this.headerData}>\n          {({headers, getHeaderProps, getTableProps}) => (\n            <TableContainer>\n              <Table {...getTableProps()}>\n                <TableHead>\n                  <TableRow>\n                    {headers.map(header => (\n                      <TableHeader {...getHeaderProps({header})}>{header.header}</TableHeader>\n                    ))}\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {(Object.keys(this.state.subscriptions).length !== 0) &&\n                  this.state.subscriptions.map((subscription, index) => (\n                    <TableRow key={index}>\n                      <TableCell>{subscription.id}</TableCell>\n                      <TableCell>{subscription.status}</TableCell>\n                      <TableCell>{subscription.entandoVersion.name}</TableCell>\n                      <TableCell>{subscription.level}</TableCell>\n                      <TableCell>{formatStartDate(subscription.startDate)}</TableCell>\n                      <TableCell>{formatEndDate(subscription.startDate, subscription.lengthInMonths)}</TableCell>\n                      <TableCell>{subscription.lengthInMonths}</TableCell>\n                      <TableCell>\n                        <a\n                          href={`/entando-de-app/${this.props.locale}/new_or_renew_subscription.page?project=${this.state.projectId}&subscription=${subscription.id}`}\n                          style={{textDecoration: 'none'}}>\n                          <Button kind=\"ghost\" style={{display: 'block', width: '100%'}} value=\"Edit\">\n                            {i18n.t('buttons.edit')}\n                          </Button>\n                        </a>\n                        <Button\n                          kind=\"ghost\"\n                          onClick={(event) => this.handleDeleteSubscription(event, subscription.id)}\n                          className=\"button-warning\">\n                          {i18n.t('buttons.delete')}\n                        </Button>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          )}\n        </DataTable>\n      </div>\n    );\n  }\n}\n\nexport default withKeycloak(ManageSubscriptions);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ManageSubscriptions from \"../components/Admin/ManageSubscriptions/ManageSubscriptions\";\nimport * as Locale from '../i18n';\n\nimport KeycloakContext from '../auth/KeycloakContext';\n\nimport {subscribeToWidgetEvent} from '../helpers/widgetEvents';\nimport {KEYCLOAK_EVENT_TYPE} from './widgetEventTypes';\n\nconst getKeycloakInstance = () =>\n  (window && window.entando && window.entando.keycloak && {...window.entando.keycloak, initialized: true}) || {\n    initialized: false,\n  };\n\nconst ATTRIBUTES = {\n  hidden: 'hidden',\n  locale: 'locale',\n  paginationMode: 'pagination-mode',\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\n  serviceUrl: 'service-url'\n};\n\nclass ManageSubscriptionsElement extends HTMLElement {\n  container;\n\n  mountPoint;\n\n  unsubscribeFromKeycloakEvent;\n\n  keycloak = getKeycloakInstance();\n\n  connectedCallback() {\n    this.mountPoint = document.createElement('div');\n    this.keycloak = {...getKeycloakInstance(), initialized: true};\n\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\n      this.keycloak = {...getKeycloakInstance(), initialized: true};\n      this.render();\n    });\n\n    this.render();\n\n    //retargetEvents(shadowRoot);\n    this.appendChild(this.mountPoint);\n  }\n\n  render() {\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\n    const locale = this.getAttribute(ATTRIBUTES.locale) || '';\n    Locale.setLocale(locale);\n\n    ReactDOM.render(\n      <KeycloakContext.Provider value={this.keycloak}>\n        <ManageSubscriptions serviceUrl={serviceUrl} locale={locale}/>\n      </KeycloakContext.Provider>,\n      this.mountPoint\n    );\n  }\n}\n\ncustomElements.define('manage-subscriptions-widget', ManageSubscriptionsElement);\n","import React, { Component } from 'react';\r\nimport i18n from '../../../i18n';\r\nimport { Accordion, AccordionItem } from 'carbon-components-react';\r\nimport AssignUser from './AssignUser';\r\nimport DeleteUser from './DeleteUser';\r\nimport { isPortalAdmin } from '../../../api/helpers';\r\nimport withKeycloak from '../../../auth/withKeycloak';\r\n\r\nclass ManageUser extends Component {\r\n  userFunctionality;\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: true,\r\n    };\r\n    this.userFunctionality = [\r\n      {\r\n        label: (\r\n          <div>\r\n            <p className=\"title\">{i18n.t('manageUsers.manage.title')}</p>\r\n            <p className=\"desc\">{i18n.t('manageUsers.manage.desc')}</p>\r\n          </div>\r\n        ),\r\n        content: <DeleteUser serviceUrl={this.props.serviceUrl}/>,\r\n        open: true,\r\n      },\r\n      {\r\n        label: (\r\n          <div>\r\n            <p className=\"title\">{i18n.t('manageUsers.assign.title')}</p>\r\n            <p className=\"desc\">{i18n.t('manageUsers.assign.desc')}</p>\r\n          </div>\r\n        ),\r\n        content: <AssignUser serviceUrl={this.props.serviceUrl}/>,\r\n        open: true,\r\n      }\r\n    ];\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n    if (authenticated) {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n    const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n\r\n    if (authenticated && changedAuth) {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (!this.state.loading) {\r\n      if (isPortalAdmin()) {\r\n        return (\r\n          <div>\r\n            <h3 className=\"pageTitle\">{i18n.t('adminDashboard.adminTitle')}</h3>\r\n            <div className=\"form-container\">\r\n              <Accordion>\r\n                {this.userFunctionality.map((item, index) => (\r\n                  <AccordionItem key={index.toString()} index={index} title={item.label} description={item.description} open={item.open}>\r\n                    {item.content}\r\n                  </AccordionItem>\r\n                ))}\r\n              </Accordion>\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n      // Unauthorized\r\n      else {\r\n        return <p>{i18n.t('userMessages.unauthorized')}</p>;\r\n      }\r\n    }\r\n    // Loading\r\n    else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport default withKeycloak(ManageUser);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ManageUser from '../components/Admin/ManageUser/ManageUser';\nimport '../index.scss';\nimport * as Locale from '../i18n';\n\nimport KeycloakContext from '../auth/KeycloakContext';\n\nimport { subscribeToWidgetEvent } from '../helpers/widgetEvents';\nimport { KEYCLOAK_EVENT_TYPE } from './widgetEventTypes';\n\nconst getKeycloakInstance = () =>\n  (window && window.entando && window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\n    initialized: false,\n  };\n\nconst ATTRIBUTES = {\n  hidden: 'hidden',\n  locale: 'locale',\n  paginationMode: 'pagination-mode',\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\n  serviceUrl: 'service-url'\n};\n\nclass ManageUserElement extends HTMLElement {\n  container;\n\n  mountPoint;\n\n  unsubscribeFromKeycloakEvent;\n\n  keycloak = getKeycloakInstance();\n\n  connectedCallback() {\n    this.mountPoint = document.createElement('div');\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\n\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\n      this.render();\n    });\n\n    this.render();\n\n    //retargetEvents(shadowRoot);\n    this.appendChild(this.mountPoint);\n  }\n\n  render() {\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\n    const locale = this.getAttribute(ATTRIBUTES.locale) || '';\n    Locale.setLocale(locale);\n\n    ReactDOM.render(\n      <KeycloakContext.Provider value={this.keycloak}>\n        <ManageUser serviceUrl={serviceUrl} locale={locale}/>\n      </KeycloakContext.Provider>,\n      this.mountPoint\n    );\n  }\n}\n\ncustomElements.define('manage-user-widget', ManageUserElement);\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Navigation = () => {\r\n  return (\r\n    <ul id=\"navigation\">\r\n      <li>\r\n        <NavLink to=\"/\">Home</NavLink>\r\n      </li>\r\n      <li>\r\n        <NavLink to=\"/subscription-details\">Subscription Details</NavLink>\r\n      </li>\r\n      <li>\r\n        <NavLink to=\"/subscription\">New or Renew Subscription</NavLink>\r\n      </li>\r\n      <li>\r\n        <NavLink to=\"/service-ticket\">Open Service Ticket</NavLink>\r\n      </li>\r\n      <li>\r\n        <NavLink to=\"/enhancement\">Request for Enhancement Process</NavLink>\r\n      </li>\r\n      <li>\r\n        <NavLink to=\"/manage-users\">Manage Users</NavLink>\r\n      </li>\r\n      <li>\r\n        <NavLink to=\"/configuration-settings\">Configuration Settings</NavLink>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Navigation from '../components/Navigation/Navigation';\nimport KeycloakContext from '../auth/KeycloakContext';\n\nimport { subscribeToWidgetEvent } from '../helpers/widgetEvents';\nimport { KEYCLOAK_EVENT_TYPE } from '../custom-elements/widgetEventTypes';\n\nconst getKeycloakInstance = () =>\n  (window && window.entando && window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\n    initialized: false,\n  };\n\nconst ATTRIBUTES = {\n  hidden: 'hidden',\n  locale: 'locale',\n  paginationMode: 'pagination-mode',\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\n  serviceUrl: 'service-url',\n};\n\nclass NavigationElement extends HTMLElement {\n  container;\n\n  mountPoint;\n\n  unsubscribeFromKeycloakEvent;\n\n  keycloak = getKeycloakInstance();\n\n  connectedCallback() {\n    this.mountPoint = document.createElement('div');\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\n\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\n      this.render();\n    });\n\n    this.render();\n\n    //retargetEvents(shadowRoot);\n    this.appendChild(this.mountPoint);\n  }\n\n  render() {\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\n\n    ReactDOM.render(\n      <KeycloakContext.Provider value={this.keycloak}>\n        <Navigation serviceUrl={serviceUrl} />\n      </KeycloakContext.Provider>,\n      this.mountPoint\n    );\n  }\n}\n\ncustomElements.define('navigation-widget', NavigationElement);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport OpenTicket from '../components/Forms/openTicket';\nimport '../index.scss';\nimport * as Locale from '../i18n';\n\nimport KeycloakContext from '../auth/KeycloakContext';\n\nimport { subscribeToWidgetEvent } from '../helpers/widgetEvents';\nimport { KEYCLOAK_EVENT_TYPE } from '../custom-elements/widgetEventTypes';\n\nconst getKeycloakInstance = () =>\n  (window && window.entando && window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\n    initialized: false,\n  };\n\nconst ATTRIBUTES = {\n  hidden: 'hidden',\n  locale: 'locale',\n  paginationMode: 'pagination-mode',\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\n  serviceUrl: 'service-url',\n};\n\nclass OpenTicketElement extends HTMLElement {\n  container;\n\n  mountPoint;\n\n  unsubscribeFromKeycloakEvent;\n\n  keycloak = getKeycloakInstance();\n\n  connectedCallback() {\n    this.mountPoint = document.createElement('div');\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\n\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\n      this.render();\n    });\n\n    this.render();\n\n    //retargetEvents(shadowRoot);\n    this.appendChild(this.mountPoint);\n  }\n\n  render() {\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\n    const locale = this.getAttribute(ATTRIBUTES.locale) || '';\n    Locale.setLocale(locale);\n\n    ReactDOM.render(\n      <KeycloakContext.Provider value={this.keycloak}>\n        <OpenTicket serviceUrl={serviceUrl} locale={locale}/>\n      </KeycloakContext.Provider>,\n      this.mountPoint\n    );\n  }\n}\n\ncustomElements.define('open-ticket-widget', OpenTicketElement);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ProductVersion from '../components/Admin/Configuration/ProductVersion';\nimport '../index.scss';\n\nimport KeycloakContext from '../auth/KeycloakContext';\n\nimport { subscribeToWidgetEvent } from '../helpers/widgetEvents';\nimport { KEYCLOAK_EVENT_TYPE } from './widgetEventTypes';\n\nconst getKeycloakInstance = () =>\n  (window && window.entando && window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\n    initialized: false,\n  };\n\nconst ATTRIBUTES = {\n  hidden: 'hidden',\n  locale: 'locale',\n  paginationMode: 'pagination-mode',\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\n  serviceUrl: 'service-url',\n};\n\nclass ProductVersionElement extends HTMLElement {\n  container;\n\n  mountPoint;\n\n  unsubscribeFromKeycloakEvent;\n\n  keycloak = getKeycloakInstance();\n\n  connectedCallback() {\n    this.mountPoint = document.createElement('div');\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\n\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\n      this.render();\n    });\n\n    this.render();\n\n    //retargetEvents(shadowRoot);\n    this.appendChild(this.mountPoint);\n  }\n\n  render() {\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\n\n    ReactDOM.render(\n      <KeycloakContext.Provider value={this.keycloak}>\n        <ProductVersion serviceUrl={serviceUrl} />\n      </KeycloakContext.Provider>,\n      this.mountPoint\n    );\n  }\n}\n\ncustomElements.define('product-version-widget', ProductVersionElement);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Subscription from '../components/SubscriptionDetails/Subscription';\nimport KeycloakContext from '../auth/KeycloakContext';\n\nimport {subscribeToWidgetEvent} from '../helpers/widgetEvents';\nimport {KEYCLOAK_EVENT_TYPE} from './widgetEventTypes';\n\nconst getKeycloakInstance = () =>\n  (window && window.entando && window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\n    initialized: false,\n  };\n\nconst ATTRIBUTES = {\n  hidden: 'hidden',\n  locale: 'locale',\n  paginationMode: 'pagination-mode',\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\n  serviceUrl: 'service-url',\n};\n\nclass SubscriptionElement extends HTMLElement {\n  container;\n\n  mountPoint;\n\n  unsubscribeFromKeycloakEvent;\n\n  keycloak = getKeycloakInstance();\n\n  connectedCallback() {\n    this.mountPoint = document.createElement('div');\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\n\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\n      this.render();\n    });\n\n    this.render();\n\n    //retargetEvents(shadowRoot);\n    this.appendChild(this.mountPoint);\n  }\n\n  render() {\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\n\n    ReactDOM.render(\n      <KeycloakContext.Provider value={this.keycloak}>\n        <Subscription serviceUrl={serviceUrl} />\n      </KeycloakContext.Provider>,\n      this.mountPoint\n    );\n  }\n}\n\ncustomElements.define('subscription-widget', SubscriptionElement);\n","import React, {Component} from 'react';\nimport i18n from '../../i18n';\nimport {Form, TextInput, Select, SelectItem, Button, DatePicker, DatePickerInput} from 'carbon-components-react';\nimport withKeycloak from '../../auth/withKeycloak';\nimport {apiProjectGet} from '../../api/projects';\nimport {\n  apiProjectSubscriptionPost,\n  apiProjectSubscriptionPut,\n  apiRenewSubscription,\n  apiSubscriptionGet,\n  stripTime\n} from '../../api/subscriptions';\nimport {apiProductVersionsGet} from '../../api/productVersion';\nimport {\n  authenticationChanged,\n  isAuthenticated,\n  isPortalAdmin,\n  isPortalUser\n} from '../../api/helpers';\nimport {apiAddSubscriptionToProject} from '../../api/projects';\nimport moment from \"moment\";\n\nconst subscriptionLevel = {\n  GOLD: 'GOLD',\n  PLATINUM: 'PLATINUM',\n};\n\nconst subscriptionStatus = {\n  requested: 'REQUESTED',\n  pending: 'PENDING',\n  active: 'ACTIVE',\n  expired: 'EXPIRED',\n};\n\nclass SubscriptionForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      project: {},\n      projectId: '',\n      subscription: {},\n      startDate: '',\n      level: 'PLATINUM',\n      lengthInMonths: '',\n      entandoVersionId: '',\n      status: '',\n      formType: 'new',\n      invalid: {},\n      productVersions: [],\n      submitSuccess: false,\n      submitError: false,\n      submitColour: 'black',\n    };\n  }\n\n  componentDidMount() {\n    if (isAuthenticated(this.props)) {\n      this.fetchData();\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (authenticationChanged(this.props, prevProps)) {\n      this.fetchData();\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n\n  async fetchData() {\n    if (!isPortalUser()) {\n      return;\n    }\n\n    const serviceUrl = this.props.serviceUrl;\n\n    const search = window.location.search;\n    const params = new URLSearchParams(search);\n\n    const subscriptionId = params.get('subscription');\n    let projectId = params.get('project');\n\n    let subscription = {};\n    let project = {};\n    let formType = 'new';\n    let status = '';\n    const isAdmin = isPortalAdmin();\n\n    if (subscriptionId !== null) {\n      subscription = (await apiSubscriptionGet(serviceUrl, subscriptionId)).data;\n      status = subscription.status;\n      formType = isAdmin ? 'edit' : 'renewal';\n      project = subscription.project;\n    } else if (projectId !== null) {\n      project = (await apiProjectGet(serviceUrl, projectId)).data;\n      status = isAdmin ? subscriptionStatus.pending : subscriptionStatus.requested;\n    } else {\n      console.log(\"Unable to load project and/or subscription\");\n      return;\n    }\n\n    const productVersions = (await apiProductVersionsGet(serviceUrl)).data;\n\n    this.setState({\n      subscription: subscription,\n      level: subscription.level,\n      entandoVersionId: (subscription.entandoVersion) ? subscription.entandoVersion.id : '',\n      startDate: stripTime(subscription.startDate),\n      lengthInMonths: subscription.lengthInMonths,\n      status: status,\n      formType: formType,\n      project: project,\n      projectId: projectId,\n      productVersions: productVersions\n    });\n  }\n\n  isNumeric(str) {\n    return !isNaN(str) && !isNaN(parseInt(str));\n  }\n\n  handleValidation() {\n    let invalid = {};\n\n    if (!this.state.startDate || !this.state.startDate.match(/^(0[1-9]|1[0-2])\\/(0[1-9]|1\\d|2\\d|3[01])\\/(19|20)\\d{2}$/)) {\n      invalid['startDate'] = true;\n    }\n\n    if (!this.state.lengthInMonths || !this.isNumeric(this.state.lengthInMonths)) {\n      invalid['lengthInMonths'] = true;\n    }\n\n    if (!this.state.level) {\n      invalid['level'] = true;\n    }\n\n    if (this.state.entandoVersionId === '') {\n      invalid['entandoVersionId'] = true;\n    }\n\n    this.setState({ invalid: invalid });\n    return (Object.keys(invalid).length === 0);\n  }\n\n  handleChanges = e => {\n    const input = e.target;\n    const name = input.name;\n    const value = input.value;\n    this.setState({ [name]: value });\n    this.setState({\n      submitSuccess: false,\n      submitError: false,\n    });\n  };\n\n  handleStartDateChange = date => {\n    let formatted = '';\n    if (date && date[0]) {\n      formatted = moment(date[0].toISOString()).format('MM/DD/YYYY');\n    }\n    this.setState({\n      startDate: formatted\n    });\n  };\n\n  updateStateForSuccess(success) {\n    if (success) {\n      this.setState({\n        submitSuccess: true,\n        submitError: false,\n        submitColour: '#24a148',\n      })\n    } else {\n      this.setState({\n        submitSuccess: false,\n        submitError: true,\n        submitColour: '#da1e28',\n      });\n    }\n  }\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    this.setState({\n      submitSuccess: false,\n      submitError: false,\n    });\n    const formIsValid = this.handleValidation();\n\n    if (formIsValid) {\n      const formType = this.state.formType;\n      const serviceUrl = this.props.serviceUrl;\n      const subscriptionRequest = this.stateToSubscription();\n\n      if (formType === 'edit') {\n        apiProjectSubscriptionPut(serviceUrl, subscriptionRequest)\n          .then(() => {\n            this.updateStateForSuccess(true);\n          })\n          .catch(() => {\n            this.updateStateForSuccess(false);\n          });\n      } else if (formType === 'new') {\n        this.newSubscription(subscriptionRequest)\n          .then(res => {\n            apiAddSubscriptionToProject(serviceUrl, this.state.projectId, res.data.id);\n            this.updateStateForSuccess(true);\n          })\n          .catch(() => {\n            this.updateStateForSuccess(false);\n          });\n      } else if (formType === 'renewal') {\n        this.renewSubscription(subscriptionRequest)\n          .then(res => {\n            apiAddSubscriptionToProject(serviceUrl, this.state.projectId, res.data.id);\n            this.updateStateForSuccess(true);\n          })\n          .catch(() => {\n            this.updateStateForSuccess(false);\n          });\n      } else {\n        console.log(\"Illegal operation\");\n      }\n    }\n  };\n\n  stateToSubscription() {\n    return {\n      entandoVersionId: this.state.entandoVersionId,\n      projectId: this.state.projectId,\n      projectSubscription: {\n        id: this.state.subscription.id,\n        startDate: new Date(this.state.startDate),\n        lengthInMonths: this.state.lengthInMonths,\n        level: this.state.level,\n        status: this.state.status.toUpperCase(),\n      },\n    };\n  };\n\n  async newSubscription(request) {\n    return await apiProjectSubscriptionPost(this.props.serviceUrl, request);\n  }\n\n  async renewSubscription(request) {\n    return await apiRenewSubscription(this.props.serviceUrl, request);\n  }\n\n  setupFormComponents() {\n    const subscriptionLevelList = Object.entries(subscriptionLevel).map(([key, value]) => (\n      <SelectItem key={key} text={value} value={key}>\n        {value}\n      </SelectItem>\n    ));\n    subscriptionLevelList.unshift(<SelectItem key=\"-1\" text={i18n.t('subscriptionForm.chooseLevel')} value=\"\"/>);\n\n    const versionList = this.state.productVersions.map(version => {\n      // only allow the user to choose from active entando versions\n      if (version.status) {\n        return (\n          <SelectItem key={version.id} text={version.name} value={version.id}>\n            {version.name}\n          </SelectItem>\n        );\n      } else {\n        return null;\n      }\n    });\n    versionList.unshift(<SelectItem key=\"-1\" text={i18n.t('subscriptionForm.chooseVersion')} value=\"\"/>);\n\n    const statusList = Object.entries(subscriptionStatus).map(([key, value]) => (\n      <SelectItem key={key} text={value} value={value}>\n        {value}\n      </SelectItem>\n    ));\n\n    return {subscriptionLevelList, versionList, statusList};\n  }\n\n  renderForm() {\n    const {subscriptionLevelList, versionList, statusList} = this.setupFormComponents();\n    return (\n      <div>\n        <div className=\"bx--row\">\n          <div className=\"bx--col\">\n            <div>\n              <span>{i18n.t('subscriptionForm.projectName')}:</span> {this.state.project.name}\n            </div>\n            <Select\n              id=\"status\"\n              name=\"status\"\n              labelText={i18n.t('subscriptionForm.subscriptionStatus')}\n              value={this.state.status}\n              onChange={this.handleChanges}\n              invalidText={i18n.t('validation.invalid.required')}\n              invalid={this.state.invalid['status']}\n              disabled={!isPortalAdmin()}\n            >\n              {statusList}\n            </Select>\n            <Select\n              id=\"level\"\n              name=\"level\"\n              labelText={i18n.t('subscriptionForm.subscriptionLevel') + ' *'}\n              value={this.state.level || ''}\n              onChange={this.handleChanges}\n              invalidText={i18n.t('validation.invalid.required')}\n              invalid={this.state.invalid['level']}\n            >\n              {subscriptionLevelList}\n            </Select>\n            <Select\n              id=\"entandoVersionId\"\n              name=\"entandoVersionId\"\n              labelText={i18n.t('subscriptionForm.entandoVersion') + ' *'}\n              value={this.state.entandoVersionId}\n              onChange={this.handleChanges}\n              invalidText={i18n.t('validation.invalid.required')}\n              invalid={this.state.invalid['entandoVersionId']}\n            >\n              {versionList}\n            </Select>\n          </div>\n          <div className=\"bx--col\">\n            <DatePicker dateFormat=\"m/d/Y\" datePickerType=\"single\" value={this.state.startDate}\n                        onChange={this.handleStartDateChange}>\n              <DatePickerInput\n                id=\"startDate\"\n                name=\"startDate\"\n                placeholder=\"mm/dd/yyyy\"\n                labelText={i18n.t('subscriptionForm.subscriptionStartDate')}\n                type=\"text\"\n                invalidText={i18n.t('validation.invalid.date')}\n                invalid={this.state.invalid['startDate']}\n              />\n            </DatePicker>\n            <TextInput\n              id=\"lengthInMonths\"\n              name=\"lengthInMonths\"\n              labelText={i18n.t('subscriptionForm.subscriptionLength') + ' *'}\n              value={this.state.lengthInMonths}\n              onChange={this.handleChanges}\n              invalidText={i18n.t('validation.invalid.number')}\n              invalid={this.state.invalid['lengthInMonths']}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  successErrorMessage() {\n    const isAdmin = isPortalAdmin();\n    const { subscriptionType, submitSuccess, submitError } = this.state;\n\n    //TODO: rework messages?\n    if (subscriptionType === 'new') {\n      if (submitSuccess) {\n        return isAdmin ? this.createFormMessage('adminSubmitNewSuccess') : this.createFormMessage('customerSubmitSuccess');\n      } else if (submitError) {\n        return this.createFormMessage('newSubError');\n      }\n    } else {\n      if (submitSuccess) {\n        return isAdmin ? this.createFormMessage('adminRenewNewSuccess') : this.createFormMessage('customerSubmitSuccess');\n      } else if (submitError) {\n        return this.createFormMessage('renewSubError');\n      }\n    }\n  }\n\n  createFormMessage(subMessageKey) {\n    return <p style={{ color: this.state.submitColour }}>{i18n.t(`subscriptionForm.${subMessageKey}`)}</p>;\n  }\n\n  render() {\n    const titleKey = isPortalAdmin() ? \"subscriptionForm.adminTitle\" : \"subscriptionForm.formTitle\";\n    const formType = this.state.formType;\n    let formLabelKey = \"subscriptionForm.newSubscription\";\n    if (formType !== 'new') {\n      formLabelKey = isPortalAdmin() ? \"subscriptionForm.editSubscription\" : \"subscriptionForm.renewSubscription\";\n    }\n\n    if (!this.state.loading) {\n      if (isPortalUser()) {\n        return (\n          <div>\n            <h3 className=\"pageTitle\">{i18n.t(titleKey)}</h3>\n            <div className=\"form-container\">\n              {this.successErrorMessage()}\n              <Form onSubmit={this.handleFormSubmit}>\n                <div className=\"bx--grid\">\n                  <div className=\"bx--row\">\n                    <div className=\"bx--col\">\n                      <strong>{i18n.t(formLabelKey)}</strong>\n                    </div>\n                  </div>\n                  {this.renderForm()}\n                  <Button kind=\"primary\" tabIndex={0} type=\"submit\">\n                    {' '}\n                    {i18n.t('buttons.submit')}\n                  </Button>\n                </div>\n              </Form>\n            </div>\n          </div>\n        );\n      } else {\n        return <p>{i18n.t('userMessages.unauthorized')}</p>;\n      }\n    }\n    // Loading\n    else {\n      return null;\n    }\n\n  }\n}\n\nexport default withKeycloak(SubscriptionForm);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport SubscriptionForm from '../components/Forms/SubscriptionForm';\nimport '../index.scss';\nimport * as Locale from '../i18n';\n\nimport KeycloakContext from '../auth/KeycloakContext';\n\nimport { subscribeToWidgetEvent } from '../helpers/widgetEvents';\nimport { KEYCLOAK_EVENT_TYPE } from './widgetEventTypes';\n\nconst getKeycloakInstance = () =>\n  (window && window.entando && window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\n    initialized: false,\n  };\n\nconst ATTRIBUTES = {\n  hidden: 'hidden',\n  locale: 'locale',\n  paginationMode: 'pagination-mode',\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\n  serviceUrl: 'service-url'\n};\n\nclass SubscriptionFormElement extends HTMLElement {\n  container;\n\n  mountPoint;\n\n  unsubscribeFromKeycloakEvent;\n\n  keycloak = getKeycloakInstance();\n\n  connectedCallback() {\n    this.mountPoint = document.createElement('div');\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\n\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\n      this.render();\n    });\n\n    this.render();\n\n    //retargetEvents(shadowRoot);\n    this.appendChild(this.mountPoint);\n  }\n\n  render() {\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\n    const locale = this.getAttribute(ATTRIBUTES.locale) || '';\n    Locale.setLocale(locale);\n\n    ReactDOM.render(\n      <KeycloakContext.Provider value={this.keycloak}>\n        <SubscriptionForm serviceUrl={serviceUrl} />\n      </KeycloakContext.Provider>,\n      this.mountPoint\n    );\n  }\n}\n\ncustomElements.define('subscription-form-widget', SubscriptionFormElement);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport TicketList from '../components/SubscriptionDetails/TicketList';\nimport '../index.scss';\n\nimport KeycloakContext from '../auth/KeycloakContext';\n\nimport { subscribeToWidgetEvent } from '../helpers/widgetEvents';\nimport { KEYCLOAK_EVENT_TYPE } from '../custom-elements/widgetEventTypes';\n\nconst getKeycloakInstance = () =>\n  (window && window.entando && window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\n    initialized: false,\n  };\n\nconst ATTRIBUTES = {\n  hidden: 'hidden',\n  locale: 'locale',\n  paginationMode: 'pagination-mode',\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\n  serviceUrl: 'service-url',\n};\n\nclass TicketListCustomerElement extends HTMLElement {\n  container;\n\n  mountPoint;\n\n  unsubscribeFromKeycloakEvent;\n\n  keycloak = getKeycloakInstance();\n\n  connectedCallback() {\n    this.mountPoint = document.createElement('div');\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\n\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\n      this.render();\n    });\n\n    this.render();\n\n    //retargetEvents(shadowRoot);\n    this.appendChild(this.mountPoint);\n  }\n\n  render() {\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\n\n    ReactDOM.render(\n      <KeycloakContext.Provider value={this.keycloak}>\n        <TicketList serviceUrl={serviceUrl} />\n      </KeycloakContext.Provider>,\n      this.mountPoint\n    );\n  }\n}\n\ncustomElements.define('ticket-list-widget', TicketListCustomerElement);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport TicketingSystem from '../components/Admin/Configuration/TicketingSystem';\nimport '../index.scss';\n\nimport KeycloakContext from '../auth/KeycloakContext';\n\nimport { subscribeToWidgetEvent } from '../helpers/widgetEvents';\nimport { KEYCLOAK_EVENT_TYPE } from './widgetEventTypes';\n\nconst getKeycloakInstance = () =>\n  (window && window.entando && window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\n    initialized: false,\n  };\n\nconst ATTRIBUTES = {\n  hidden: 'hidden',\n  locale: 'locale',\n  paginationMode: 'pagination-mode',\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\n  serviceUrl: 'service-url',\n};\n\nclass TicketingSystemElement extends HTMLElement {\n  container;\n\n  mountPoint;\n\n  unsubscribeFromKeycloakEvent;\n\n  keycloak = getKeycloakInstance();\n\n  connectedCallback() {\n    this.mountPoint = document.createElement('div');\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\n\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\n      this.render();\n    });\n\n    this.render();\n\n    //retargetEvents(shadowRoot);\n    this.appendChild(this.mountPoint);\n  }\n\n  render() {\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\n\n    ReactDOM.render(\n      <KeycloakContext.Provider value={this.keycloak}>\n        <TicketingSystem serviceUrl={serviceUrl} />\n      </KeycloakContext.Provider>,\n      this.mountPoint\n    );\n  }\n}\n\ncustomElements.define('ticketing-system-widget', TicketingSystemElement);\n","import React, {Component} from 'react';\nimport {BrowserRouter, Route, Switch, Link} from 'react-router-dom';\nimport App from '../components/App';\nimport withKeycloak from '../auth/withKeycloak';\nimport SubscriptionForm from \"../components/Forms/SubscriptionForm\";\nimport AdminConfiguration from \"../components/Admin/Configuration/AdminConfiguration\";\nimport OpenTicket from \"../components/Forms/openTicket\";\nimport ManageUser from \"../components/Admin/ManageUser/ManageUser\";\nimport ManageSubscriptions from \"../components/Admin/ManageSubscriptions/ManageSubscriptions\";\nimport {authenticationChanged, isAuthenticated, isPortalAdminOrSupport} from \"../api/helpers\";\n\nclass LocalApp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n    };\n  }\n\n  componentDidMount() {\n    if (isAuthenticated(this.props)) {\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (authenticationChanged(this.props, prevProps)) {\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n\n  logout() {\n    window.entando.keycloak.logout();\n  }\n\n  render() {\n    if (!this.state.loading) {\n      return (\n        <div>\n          <BrowserRouter forceRefresh={true}>\n            {/*Simple Menu for switching to page-based elements*/}\n            <div>\n              <ul>\n                <li><Link to={'/'}>Home</Link></li>\n                {/*TODO: rework the entando-de-app-based paths so the application name and locale are more general*/}\n                {isPortalAdminOrSupport() &&\n                <li><Link to={'/entando-de-app/en/admin.page'}>Admin</Link></li>\n                }\n                <li><a href=\"/\" onClick={this.logout}>Logout</a></li>\n              </ul>\n            </div>\n            <Switch>\n              <Route path=\"/entando-de-app/en/admin.page\">\n                <AdminConfiguration serviceUrl={this.props.serviceUrl} locale={this.props.locale}/>\n              </Route>\n              <Route path=\"/entando-de-app/en/manage_subscriptions.page\">\n                <ManageSubscriptions serviceUrl={this.props.serviceUrl} locale={this.props.locale}/>\n              </Route>\n              <Route path=\"/entando-de-app/en/manage_users.page\">\n                <ManageUser serviceUrl={this.props.serviceUrl} locale={this.props.locale}/>\n              </Route>\n              <Route path=\"/entando-de-app/en/new_or_renew_subscription.page\">\n                <SubscriptionForm serviceUrl={this.props.serviceUrl} locale={this.props.locale}/>\n              </Route>\n              <Route path=\"/entando-de-app/en/open_service_ticket.page\">\n                <OpenTicket serviceUrl={this.props.serviceUrl} locale={this.props.locale}/>\n              </Route>\n              <Route path=\"/\" exact={true}>\n                <App serviceUrl={this.props.serviceUrl} locale={this.props.locale}/>\n              </Route>\n            </Switch>\n          </BrowserRouter>\n        </div>\n      );\n    } else {\n      return null;\n    }\n  }\n}\n\nexport default withKeycloak(LocalApp);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '../index.scss';\nimport * as Locale from '../i18n';\n\nimport KeycloakContext from '../auth/KeycloakContext';\nimport LocalApp from '../local/LocalApp';\n\nimport {subscribeToWidgetEvent} from '../helpers/widgetEvents';\nimport {KEYCLOAK_EVENT_TYPE} from '../custom-elements/widgetEventTypes';\n\nconst getKeycloakInstance = () =>\n  (window && window.entando && window.entando.keycloak && {...window.entando.keycloak, initialized: true}) || {\n    initialized: false,\n  };\n\nconst ATTRIBUTES = {\n  hidden: 'hidden',\n  locale: 'locale',\n  paginationMode: 'pagination-mode',\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\n  serviceUrl: 'service-url',\n};\n\nclass LocalAppElement extends HTMLElement {\n  container;\n\n  mountPoint;\n\n  unsubscribeFromKeycloakEvent;\n\n  keycloak = getKeycloakInstance();\n\n  connectedCallback() {\n    this.mountPoint = document.createElement('div');\n    this.keycloak = {...getKeycloakInstance(), initialized: true};\n\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\n      this.keycloak = {...getKeycloakInstance(), initialized: true};\n      this.render();\n    });\n\n    this.render();\n\n    //retargetEvents(shadowRoot);\n    this.appendChild(this.mountPoint);\n  }\n\n  render() {\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\n    const locale = this.getAttribute(ATTRIBUTES.locale) || '';\n    Locale.setLocale(locale);\n\n    ReactDOM.render(\n      <KeycloakContext.Provider value={this.keycloak}>\n        <LocalApp serviceUrl={serviceUrl} locale={locale}/>\n      </KeycloakContext.Provider>,\n      this.mountPoint\n    );\n  }\n}\n\ncustomElements.define('local-app-element', LocalAppElement);\n"],"sourceRoot":""}