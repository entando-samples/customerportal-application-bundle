{"version":3,"sources":["auth/KeycloakContext.js","components/__types__/ref.js","auth/withKeycloak.js","api/helpers.js","api/customers.js","components/Admin/AddCustomerModal.js","api/partners.js","api/projects.js","components/Admin/AddPartnerModal.js","components/Admin/AddProjectModal.js","auth/KeycloakViews.js","components/Customer/customDataTable.js","components/Customer/CustomerAccordian.js","components/Admin/AdminDashboard.js","helpers/widgetEvents.js","custom-elements/widgetEventTypes.js","custom-elements/AdminDashboardElement.js","api/tickets.js","api/ticketingsystem.js","components/SubscriptionDetails/TicketList.js","api/subscriptions.js","api/portalusers.js","components/SubscriptionDetails/subscription.js","components/App.js","custom-elements/AdminAddCustomerElement.js","components/Customer/customerDetails.js","components/Admin/RoleCheck.js","custom-elements/AdminRoleCheckElement.js","custom-elements/CustomDataTableElement.js","custom-elements/CustomerDetailsElement.js","custom-elements/SubscriptionElement.js","components/Forms/openTicket.js","custom-elements/FormsOpenTicketElement.js","components/Navigation/Navigation.js","custom-elements/NavigationElement.js","components/Forms/enhancementRequest.js","custom-elements/FormsEnhancementRequestElement.js","custom-elements/AppElement.js","custom-elements/TicketListElement.js","components/Admin/Configuration/TicketingSystem.js","api/productVersion.js","components/Admin/AddProductVersionModal.js","components/Admin/Configuration/ProductVersion.js","components/Admin/Configuration/AdminConfiguration.js","custom-elements/AdminConfigurationElement.js","custom-elements/OpenTicketElement.js","components/Admin/ManageUser/AssignUser.js","components/Admin/ManageUser/DeleteUser.js","components/Admin/ManageUser/ManageUser.js","custom-elements/ManageUserElement.js","custom-elements/AssignUserElement.js","custom-elements/DeleteUserElement.js","custom-elements/TicketingSystemElement.js","custom-elements/ProductVersionElement.js","components/Forms/SubscriptionForm.js","custom-elements/SubscriptionFormElement.js"],"names":["KeycloakContext","PropTypes","oneOfType","func","shape","current","elementType","React","createContext","withKeycloak","WrappedComponent","WithKeycloakComponent","renderWrappedComponent","value","props","forwardedRef","rest","ref","keycloak","Consumer","this","Component","defaultProps","forwardRef","getDefaultOptions","headers","Headers","Authorization","window","entando","authenticated","token","getUrl","url","request","options","a","fetch","response","has","parseInt","get","status","data","json","Promise","reject","Error","statusText","resource","apiCustomersGet","serviceUrl","method","apiCustomerPost","customer","body","JSON","stringify","apiGetCustomersProjects","customerId","apiAddProjectToCustomer","projectId","handleChanges","e","input","target","name","setState","handleFormSubmit","console","log","state","customerNumber","contactName","contactPhone","contactEmail","notes","render","location","reload","customerName","ModalWrapper","buttonTriggerText","modalHeading","buttonTriggerClassName","className","handleSubmit","Form","onSubmit","TextInput","labelText","onChange","errorMessage","isValid","TextArea","apiPartnerPost","partner","apiProjectsGet","apiProjectGet","id","apiProjectPost","project","apiAddPartnerToProject","partnerId","apiGetProjectsUsers","partnerNumber","partnerPost","projectList","prevProps","initialized","changedAuth","getProjects","t","projects","result","Select","defaultValue","SelectItem","text","Object","keys","length","map","i","description","systemId","projectPost","customerList","getCustomers","customers","AuthenticatedView","children","UnauthenticatedView","CustomTable","fetchData","DataTable","rows","rowData","headerData","getHeaderProps","getTableProps","TableContainer","title","Table","TableHead","TableRow","header","TableHeader","TableBody","index","projectSubscriptions","TableCell","partners","entandoVersion","tickets","sub","to","String","Date","startDate","setMonth","getMonth","lengthInMonths","key","projectName","href","partnerName","endDate","openTickets","role","getCustomersProjects","users","j","username","tokenParsed","preferred_username","checkPermissions","AccordionItem","customersProjects","getCustomer","Tile","Search","placeHolderText","Accordion","PaginationNav","cssClass","subscribeToWidgetEvent","eventType","eventHandler","addEventListener","removeEventListener","KEYCLOAK_EVENT_TYPE","getKeycloakInstance","ATTRIBUTES","AdminDashboardElement","mountPoint","document","createElement","unsubscribeFromKeycloakEvent","appendChild","getAttribute","ReactDOM","Provider","HTMLElement","customElements","define","jiraResource","apiJiraTicketsGet","organization","apiJiraTicketPost","ticket","apiTicketingSystemPost","ticketingsystem","TicketList","changeState","split","type","createDate","creationDate","openTicket","apiSubscriptionGet","apiUsersGet","subscriptionData","subscription","match","params","realmAccess","roles","getSubscription","getProject","checkRole","getPortalUsers","quantityRequest","components","license","level","exact","path","AdminAddCustomerElement","customerData","CustomerDetails","RoleCheck","roleType","toLowerCase","renderForm","AdminRoleCheckElement","CustomDataTableElement","CustomerDetailsElement","SubscriptionElement","event","preventDefault","createTicket","priority","updateDate","fetchProjects","placeholder","Button","kind","tabIndex","FormsOpenTicketElement","Navigation","NavigationElement","EnhancementRequest","ticketNo","openedBy","enhancementDescription","FormsEnhancementRequestElement","AppElement","TicketListCustomerElement","TicketingSystem","createTicketingSystem","ticketingSystem","userName","password","serviceAccount","serviceAccountSecret","apiProductVersionsGet","apiUpdateProductVersionsStatus","apiProductVersionPost","productVersion","DatePicker","dateFormat","datePickerType","DatePickerInput","ProductVersion","getProductVersions","productVersions","ToggleSmall","onClick","handleToggleChange","aria-label","defaultToggled","entVersion","adminConfig","label","content","AdminConfiguration","class","item","toString","AdminConfigurationElement","OpenTicketElement","AssignUSer","assignUser","selectRole","DeleteUser","filterText","row","cells","cell","userRole","dateAdded","userAccess","fill","user","ManageUser","ManageUserElement","AssignUserElement","AssignUser","DeleteUserElement","TicketingSystemElement","ProductVersionElement","SubscriptionForm","customerNo","customerType","customerEmail","subscriptionLevel","subscriptionLength","contactNo","required","SubsciptionFormElement"],"mappings":"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","file":"static/js/main.233782dc.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst KeycloakContext = React.createContext(null);\r\n\r\nexport default KeycloakContext;\r\n","import PropTypes from 'prop-types';\r\n\r\nexport default PropTypes.oneOfType([\r\n  PropTypes.func,\r\n  PropTypes.shape({ current: PropTypes.elementType }),\r\n  PropTypes.shape(null),\r\n]);\r\n","/* eslint-disable react/jsx-props-no-spreading */\r\nimport React, { forwardRef, Component } from 'react';\r\nimport refType from '../components/__types__/ref';\r\nimport KeycloakContext from './KeycloakContext';\r\n\r\nexport default function withKeycloak(WrappedComponent) {\r\n  class WithKeycloakComponent extends Component {\r\n    renderWrappedComponent = value => {\r\n      const { forwardedRef, ...rest } = this.props;\r\n      return <WrappedComponent {...rest} ref={forwardedRef} keycloak={value} />;\r\n    };\r\n\r\n    render() {\r\n      return <KeycloakContext.Consumer>{this.renderWrappedComponent}</KeycloakContext.Consumer>;\r\n    }\r\n  }\r\n\r\n  \r\n  WithKeycloakComponent.propTypes = {\r\n    forwardedRef: refType,\r\n  };\r\n  \r\n\r\n  WithKeycloakComponent.defaultProps = {\r\n    forwardedRef: () => {},\r\n  };\r\n\r\n  return forwardRef((props, ref) => <WithKeycloakComponent {...props} forwardedRef={ref} />);\r\n}\r\n","export const getKeycloakToken = () => {\r\n  if (\r\n    window &&\r\n    window.entando &&\r\n    window.entando.keycloak &&\r\n    window.entando.keycloak.authenticated\r\n  ) {\r\n    return window.entando.keycloak.token;\r\n  }\r\n  return '';\r\n};\r\n\r\nexport const getDefaultOptions = () => ({\r\n  headers: new Headers({\r\n    Authorization: `Bearer ${getKeycloakToken()}`,\r\n    'Content-Type': 'application/json'\r\n  }),\r\n});\r\n\r\nexport const getUrl = (url) => {\r\n  return `${url}`;\r\n};\r\n\r\nexport const request = async (url, options) => {\r\n  const response = await fetch(url, options);\r\n\r\n  const headers = {\r\n    ...(response.headers.has('X-Total-Count')\r\n      ? { 'X-Total-Count': parseInt(response.headers.get('X-Total-Count'), 10) }\r\n      : {}),\r\n  };\r\n\r\n  if (response.status === 204) {\r\n    return { data: '' };\r\n  }\r\n\r\n  return response.status >= 200 && response.status < 300\r\n    ? { data: await response.json(), headers }\r\n    : Promise.reject(new Error(response.statusText || response.status));\r\n};\r\n","import { getDefaultOptions, request, getUrl } from './helpers';\r\n\r\nconst resource = 'api/customers';\r\n\r\nexport const apiCustomersDelete = async (serviceUrl, id) => {\r\n  const url = `${serviceUrl}/${resource}/${id}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiCustomersGet = async (serviceUrl) => {\r\n  const url = getUrl(\r\n    `${serviceUrl}/${resource}`\r\n  );\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiCustomersGetForAdminDashboard = async (serviceUrl) => {\r\n  const url = `${serviceUrl}/${resource}/all`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiCustomerPost = async (serviceUrl, customer) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n    body: customer ? JSON.stringify(customer) : null,\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiGetCustomersProjects = async (serviceUrl, customerId) => {\r\n  const url = `${serviceUrl}/${resource}/${customerId}/projects`\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiAddProjectToCustomer = async (serviceUrl, customerId, projectId) => {\r\n  const url = `${serviceUrl}/${resource}/${customerId}/projects/${projectId}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n  };\r\n  return request(url, options);\r\n};","import React, {Component} from 'react';\r\nimport { ModalWrapper, Form, TextInput, TextArea } from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport { apiCustomerPost } from '../../api/customers';\r\n\r\nclass AddCustomerModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        this.state = {\r\n            name: '',\r\n            customerNumber: '',\r\n            contactName: '',\r\n            contactPhone: '',\r\n            contactEmail:'',\r\n            notes:''\r\n        };\r\n    }\r\n\r\n    handleChanges = e => {\r\n        const input = e.target;\r\n        const name = input.name;\r\n        const value = input.value;\r\n        this.setState({ [name]: value });\r\n    };\r\n\r\n    handleFormSubmit = e => {\r\n        //e.preventDefault();\r\n        console.log('Customer Name:', this.state.name);\r\n        console.log('Customer Number:', this.state.customerNumber);\r\n        console.log('Contact Name:', this.state.contactName);\r\n        console.log('Contact Phone:', this.state.contactPhone);\r\n        console.log('Contact email:', this.state.contactEmail);\r\n        console.log('Notes:', this.state.notes);\r\n        console.log(this.state);\r\n        console.log(this.props.serviceUrl)\r\n        const customer = apiCustomerPost(this.props.serviceUrl, this.state);\r\n        this.render();\r\n        window.location.reload(false);\r\n    };\r\n\r\n    isValid() {\r\n        if (this.state.customerName === '') {\r\n          return false;\r\n        }\r\n        return true;\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <ModalWrapper\r\n                buttonTriggerText=\"Add a customer + \"\r\n                modalHeading=\"Add a new customer\"\r\n                buttonTriggerClassName=\"add-customer bx--btn bx--btn--tertiary\"\r\n                className=\"modal-form\"\r\n                handleSubmit={this.handleFormSubmit}\r\n            >\r\n                <div className=\"form-container\">\r\n                    <p> Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse cursus fermentum risus, sit amet fringilla nunc pellentesque quis. </p>\r\n                    <Form onSubmit={this.handleFormSubmit}>\r\n                        <TextInput name=\"name\" labelText=\"Customer Name\" value={this.state.name} onChange={this.handleChanges}  errorMessage={this.isValid() ? '' : 'This field is required'}/>\r\n                        <TextInput name=\"customerNumber\" labelText=\"Customer Number\" value={this.state.customerNumber} onChange={this.handleChanges} />\r\n                        <TextInput name=\"contactName\" labelText=\"Contact Name\" value='' onChange=''value={this.state.contactName} onChange={this.handleChanges} />\r\n                        <TextInput name=\"contactPhone\" labelText=\"Contact Phone\" value={this.state.contactPhone} onChange={this.handleChanges} />\r\n                        <TextInput name=\"contactEmail\" labelText=\"Contact Email\" value={this.state.contactEmail} onChange={this.handleChanges} />\r\n                        <TextArea name=\"notes\" labelText=\"Notes\" value={this.state.notes} onChange={this.handleChanges} />\r\n                        {/*<button disabled={!this.isValid()} type=\"submit\">Submit</button>*/}\r\n                    </Form>\r\n                </div> \r\n            </ModalWrapper>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default withKeycloak(AddCustomerModal);\r\n\r\n\r\n","import { getDefaultOptions, request, getUrl } from './helpers';\r\n\r\nconst resource = 'api/partners';\r\n\r\nexport const apiPartnerDelete = async (serviceUrl, id) => {\r\n  const url = `${serviceUrl}/${resource}/${id}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiPartnersGet = async (serviceUrl) => {\r\n  const url = getUrl(\r\n    `${serviceUrl}/${resource}`\r\n  );\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiPartnerPost = async (serviceUrl, partner) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n    body: partner ? JSON.stringify(partner) : null,\r\n  };\r\n  return request(url, options);\r\n};\r\n","import { getDefaultOptions, request, getUrl } from './helpers';\r\n\r\nconst resource = 'api/projects';\r\n\r\nexport const apiProjectsDelete = async (serviceUrl, id) => {\r\n  const url = `${serviceUrl}/${resource}/${id}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiProjectsGet = async (serviceUrl) => {\r\n  const url = getUrl(\r\n    `${serviceUrl}/${resource}`\r\n  );\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiProjectGet = async (serviceUrl, id) => {\r\n  const url = getUrl(\r\n    `${serviceUrl}/${resource}/${id}`\r\n  );\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\n\r\n\r\nexport const apiProjectsGetForCustomer = async (serviceUrl, customerNumber) => {\r\n  const url = `${serviceUrl}/${resource}/subscriptions/customer/${customerNumber}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiProjectPost = async (serviceUrl, project) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n    body: project ? JSON.stringify(project) : null,\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiProjectPut = async (serviceUrl, project) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'PUT',\r\n    body: project ? JSON.stringify(project) : null,\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiAddTicketToProject = async (serviceUrl, projectId, ticketId) => {\r\n  const url = `${serviceUrl}/${resource}/${projectId}/tickets/${ticketId}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiAddUserToProject = async (serviceUrl, projectId, userId) => {\r\n  const url = `${serviceUrl}/${resource}/${projectId}/users/${userId}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiAddPartnerToProject = async (serviceUrl, projectId, partnerId) => {\r\n  const url = `${serviceUrl}/${resource}/${projectId}/partners/${partnerId}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiGetProjectsUsers = async (serviceUrl, projectId) => {\r\n  const url = `${serviceUrl}/${resource}/${projectId}/users/`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiGetProjectsTickets = async (serviceUrl, projectId) => {\r\n  const url = `${serviceUrl}/${resource}/${projectId}/users/`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n  return request(url, options);\r\n};","import React, {Component} from 'react';\r\nimport { ModalWrapper, Form, TextInput, Select, SelectItem, TextArea } from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport { apiPartnerPost } from '../../api/partners';\r\nimport { apiProjectPost, apiProjectsGet, apiAddPartnerToProject } from '../../api/projects';\r\n\r\nclass AddPartnerModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        this.state = {\r\n            projectList: {},\r\n            projectId: '',\r\n            name: '',\r\n            partnerNumber: '',\r\n            notes:''\r\n        };\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const { keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n    \r\n        const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n    \r\n        if (authenticated && changedAuth) {\r\n          this.getProjects();\r\n        }\r\n      }\r\n\r\n    handleChanges = e => {\r\n        const input = e.target;\r\n        const name = input.name;\r\n        const value = input.value;\r\n        this.setState({ [name]: value });\r\n    };\r\n\r\n    async getProjects() {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n        if (authenticated) {\r\n            const projects = await apiProjectsGet(this.props.serviceUrl);\r\n            this.setState({projectList: projects})\r\n        }\r\n    }\r\n\r\n    async partnerPost(partner) {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n        if (authenticated) {\r\n            const result = await apiPartnerPost(this.props.serviceUrl, partner);\r\n            await apiAddPartnerToProject(this.props.serviceUrl, this.state.projectId, result.data.id)\r\n        }\r\n    }\r\n\r\n    handleFormSubmit = (e) => {\r\n        //e.preventDefault();\r\n        console.log('Project Id:', this.state.projectId);\r\n        console.log('Partner Name:', this.state.name);\r\n        console.log('Partner Number:', this.state.partnerNumber);\r\n        console.log('Notes:', this.state.notes);\r\n        const partner = {\r\n            name: this.state.name,\r\n            partnerNumber: this.state.partnerNumber,\r\n            notes: this.state.notes\r\n        }\r\n        this.partnerPost(partner);\r\n        window.location.reload(false);\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.getProjects();\r\n    }\r\n\r\n    isValid() {\r\n        if (this.state.customerName === '') {\r\n          return false;\r\n        }\r\n        return true;\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <ModalWrapper\r\n                buttonTriggerText=\"Add a partner + \"\r\n                modalHeading=\"Add a partner\"\r\n                buttonTriggerClassName=\"add-partner bx--btn bx--btn--tertiary\"\r\n                className=\"modal-form\"\r\n                handleSubmit={this.handleFormSubmit}\r\n            >\r\n                <div className=\"form-container\">\r\n                    <p> Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse cursus fermentum risus, sit amet fringilla nunc pellentesque quis. </p>\r\n                    <Form onSubmit={this.handleFormSubmit}>\r\n                        <Select defaultValue=\"project-list\" name=\"projectId\" labelText=\"Project List\" value={this.state.projectId} onChange={this.handleChanges}>\r\n                            <SelectItem\r\n                                text=\"Select Project\"\r\n                                value=\"project-list\"\r\n                            />\r\n                            {Object.keys(this.state.projectList).length !== 0 ? this.state.projectList.data.map((projectList, i) => <SelectItem key={i} text={projectList.name} value={projectList.id}>{projectList.name}</SelectItem>) : null}\r\n                        </Select>\r\n\r\n                        <TextInput name=\"name\" labelText=\"Partner Name\" value={this.state.name} onChange={this.handleChanges}  errorMessage={this.isValid() ? '' : 'This field is required'}/>\r\n                        <TextInput name=\"partnerNumber\" labelText=\"Partner Number\" value='' onChange=''value={this.state.partnerNumber} onChange={this.handleChanges} />\r\n                        <TextArea name=\"notes\" labelText=\"Notes\" value={this.state.notes} onChange={this.handleChanges} />\r\n                        {/*<button disabled={!this.isValid()} type=\"submit\">Submit</button>*/}\r\n                    </Form>\r\n                </div> \r\n            </ModalWrapper>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default withKeycloak(AddPartnerModal)","import React, {Component} from 'react';\r\nimport { ModalWrapper, Form, TextInput, Select, SelectItem, TextArea } from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport { apiCustomersGet, apiAddProjectToCustomer } from '../../api/customers';\r\nimport { apiProjectPost } from '../../api/projects';\r\n\r\nclass AddProjectModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        this.state = {\r\n            customerList: {},\r\n            customerId: '',\r\n            name: '',\r\n            description: '',\r\n            systemId: '',\r\n            contactName: '',\r\n            contactPhone: '',\r\n            contactEmail:'',\r\n            notes:''\r\n        };\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const { keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n    \r\n        const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n    \r\n        if (authenticated && changedAuth) {\r\n          this.getCustomers();\r\n        }\r\n      }\r\n\r\n    handleChanges = e => {\r\n        const input = e.target;\r\n        const name = input.name;\r\n        const value = input.value;\r\n        this.setState({ [name]: value });\r\n    };\r\n\r\n    async getCustomers() {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n        if (authenticated) {\r\n            const customers = await apiCustomersGet(this.props.serviceUrl);\r\n            this.setState({customerList: customers})\r\n        }\r\n    }\r\n\r\n    async projectPost(project) {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n        if (authenticated) {\r\n            const result = await apiProjectPost(this.props.serviceUrl, project);\r\n            await apiAddProjectToCustomer(this.props.serviceUrl, this.state.customerId, result.data.id)\r\n        }\r\n    }\r\n\r\n    handleFormSubmit = (e) => {\r\n        //e.preventDefault();\r\n        console.log('Customer Id:', this.state.customerId);\r\n        console.log('Project Name:', this.state.name);\r\n        console.log('project Description:', this.state.description);\r\n        console.log('SystemId:', this.state.systemId);\r\n        console.log('Contact Name:', this.state.contactName);\r\n        console.log('Contact Phone:', this.state.contactPhone);\r\n        console.log('Contact email:', this.state.contactEmail);\r\n        console.log('Notes:', this.state.notes);\r\n        const project = {\r\n            name: this.state.name,\r\n            description: this.state.description,\r\n            systemId: this.state.systemId,\r\n            contactName: this.state.contactName,\r\n            contactPhone: this.state.contactPhone,\r\n            contactEmail: this.state.contactEmail,\r\n            notes: this.state.notes\r\n        }\r\n        this.projectPost(project);\r\n        window.location.reload(false);\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.getCustomers();\r\n    }\r\n\r\n    isValid() {\r\n        if (this.state.customerName === '') {\r\n          return false;\r\n        }\r\n        return true;\r\n    }\r\n    \r\n    render() {\r\n        const customerList = ['Customer1', 'Customer2', 'Customer3'];\r\n        return (\r\n            <ModalWrapper\r\n                buttonTriggerText=\"Add a project + \"\r\n                modalHeading=\"Add a project\"\r\n                buttonTriggerClassName=\"add-project bx--btn bx--btn--tertiary\"\r\n                className=\"modal-form\"\r\n                handleSubmit={this.handleFormSubmit}\r\n            >\r\n                <div className=\"form-container\">\r\n                    <p> Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse cursus fermentum risus, sit amet fringilla nunc pellentesque quis. </p>\r\n                    <Form onSubmit={this.handleFormSubmit}>\r\n                        <Select defaultValue=\"customer-list\" name=\"customerId\" labelText=\"Customer List\" value={this.state.customerId} onChange={this.handleChanges}>\r\n                            <SelectItem\r\n                                text=\"Select Customer\"\r\n                                value=\"customer-list\"\r\n                            />\r\n                            {Object.keys(this.state.customerList).length !== 0 ? this.state.customerList.data.map((customerList, i) => <SelectItem key={i} text={customerList.name} value={customerList.id}>{customerList.name}</SelectItem>) : null}\r\n                        </Select>\r\n\r\n                        <TextInput name=\"name\" labelText=\"Project Name\" value={this.state.name} onChange={this.handleChanges}  errorMessage={this.isValid() ? '' : 'This field is required'}/>\r\n                        <TextInput name=\"description\" labelText=\"Project Description\" value={this.state.description} onChange={this.handleChanges} />\r\n                        <TextInput name=\"systemId\" labelText=\"System Id\" value='' onChange=''value={this.state.systemId} onChange={this.handleChanges} />\r\n                        <TextInput name=\"contactName\" labelText=\"Contact Name\" value={this.state.contactName} onChange={this.handleChanges} />\r\n                        <TextInput name=\"contactPhone\" labelText=\"Contact Phone\" value={this.state.contactPhone} onChange={this.handleChanges} />\r\n                        <TextInput name=\"contactEmail\" labelText=\"Contact Email\" value={this.state.contactEmail} onChange={this.handleChanges} />\r\n                        <TextArea name=\"notes\" labelText=\"Notes\" value={this.state.notes} onChange={this.handleChanges} />\r\n                        {/*<button disabled={!this.isValid()} type=\"submit\">Submit</button>*/}\r\n                    </Form>\r\n                </div> \r\n            </ModalWrapper>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default withKeycloak(AddProjectModal)","export const AuthenticatedView = ({ children, keycloak }) => {\r\n  const authenticated = keycloak.initialized && keycloak.authenticated;\r\n  return authenticated ? children : null;\r\n};\r\n\r\nexport const UnauthenticatedView = ({ children, keycloak }) => {\r\n  const authenticated = keycloak.initialized && keycloak.authenticated;\r\n  return !authenticated ? children : null;\r\n};\r\n","import React, { Component } from 'react';\r\nimport { DataTable, TableContainer, Table, TableHead, TableRow, TableHeader, TableBody, TableCell } from 'carbon-components-react';\r\nimport '../../index.scss';\r\nimport { apiGetCustomersProjects } from '../../api/customers';\r\nimport { AuthenticatedView, UnauthenticatedView } from '../../auth/KeycloakViews';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass CustomTable extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n      data: {}\r\n     }\r\n  }\r\n\r\n  async fetchData() {\r\n    const { t, keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n    \r\n    if (authenticated) {\r\n        const projects = await apiGetCustomersProjects(this.props.serviceUrl, this.props.customerNumber);\r\n        \r\n        this.setState({\r\n            data: projects\r\n        });\r\n    }\r\n    this.render();\r\n}\r\n\r\ncomponentDidMount(){\r\n    this.fetchData();\r\n}\r\n\r\ncomponentDidUpdate(prevProps) {\r\n    const { keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n    const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n\r\n    if (authenticated && changedAuth) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n\r\n  render() { \r\n    return (\r\n      <div>\r\n        <DataTable rows={rowData} headers={headerData} data={this.state.data}>\r\n        {({ rows, headers, getHeaderProps, getTableProps }) => (\r\n          <TableContainer title=\"Subscriptions\" description=\"In this table there are open subscriptions\">\r\n            <Table {...getTableProps()}>\r\n              <TableHead>\r\n                <TableRow>\r\n                  {headers.map((header) => (\r\n                    <TableHeader {...getHeaderProps({ header })}>\r\n                      {header.header}\r\n                    </TableHeader>\r\n                  ))}\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {/*\r\n                {Object.keys(this.state.data).length !== 0 ? \r\n                  this.state.data.data.map((project, index) => (\r\n                    project.projectSubscriptions.map((sub) => (\r\n                      <TableRow key={index} >\r\n                          <TableCell><Link to={`/subscription-details/${sub.id}`}>{project.name}</Link></TableCell>\r\n                          {project.partners ? \r\n                            <TableCell>\r\n                              {project.partners.map(partner => (\r\n                                <p>{partner.name}</p>\r\n                              ))}\r\n                            </TableCell> \r\n                            : <TableCell>None</TableCell>}\r\n                          {project.entandoVersion ? <TableCell>{project.entandoVersion.name}</TableCell> : <TableCell>None</TableCell>}\r\n                          <TableCell>{sub.status}</TableCell>\r\n                          <TableCell>{String(new Date(sub.startDate))}</TableCell>\r\n                          <TableCell>{String(new Date(new Date(sub.startDate).setMonth(new Date(sub.startDate).getMonth() + sub.lengthInMonths)))}</TableCell>\r\n                          <TableCell>{project.tickets.length}</TableCell>\r\n                      </TableRow>\r\n                  )))) : null\r\n              }*/}\r\n              {Object.keys(this.state.data).length !== 0 ? \r\n                  this.state.data.data.map((project, index) => {\r\n                    if (project.projectSubscriptions.length === 0) {\r\n                      return(\r\n                        <TableRow key={index} >\r\n                          <TableCell>{project.name}</TableCell>\r\n                          {project.partners.length !== 0 ? \r\n                            <TableCell>\r\n                              {project.partners.map(partner => (\r\n                                <p>{partner.name}</p>\r\n                              ))}\r\n                            </TableCell> \r\n                          : <TableCell>None</TableCell>}\r\n                          {project.entandoVersion ? <TableCell>{project.entandoVersion.name}</TableCell> : <TableCell>None</TableCell>}\r\n                          <TableCell>None</TableCell>\r\n                          <TableCell>None</TableCell>\r\n                          <TableCell>None</TableCell>\r\n                          <TableCell>{project.tickets.length}</TableCell>\r\n                      </TableRow>\r\n                      )\r\n                    }\r\n                    else {\r\n                      return(\r\n                        project.projectSubscriptions.map((sub) => (\r\n                          <TableRow key={index} >\r\n                              <TableCell><Link to={`/subscription-details/${sub.id}`}>{project.name}</Link></TableCell>\r\n                              {project.partners.length !== 0 ? \r\n                                <TableCell>\r\n                                  {project.partners.map(partner => (\r\n                                    <p>{partner.name}</p>\r\n                                  ))}\r\n                                </TableCell> \r\n                                : <TableCell>None</TableCell>}\r\n                              {project.entandoVersion ? <TableCell>{project.entandoVersion.name}</TableCell> : <TableCell>None</TableCell>}\r\n                              <TableCell>{sub.status}</TableCell>\r\n                              <TableCell>{String(new Date(sub.startDate))}</TableCell>\r\n                              <TableCell>{String(new Date(new Date(sub.startDate).setMonth(new Date(sub.startDate).getMonth() + sub.lengthInMonths)))}</TableCell>\r\n                              <TableCell>{project.tickets.length}</TableCell>\r\n                          </TableRow>\r\n                        ))\r\n                      )\r\n                    }\r\n                  }) : null\r\n              }\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        )}\r\n      </DataTable>\r\n    </div>\r\n  )}\r\n}\r\n/*\r\nconst headerData = [\r\n  {\r\n    header: 'Project Name',\r\n    key: 'projectName',\r\n  },\r\n  {\r\n    header: 'Description',\r\n    key: 'description',\r\n  },\r\n  {\r\n    header: 'System Id',\r\n    key: 'systemId',\r\n  },\r\n  {\r\n    header: 'Notes',\r\n    key: 'notes',\r\n  },\r\n  {\r\n      header: 'Contact Name',\r\n      key: 'contactName',\r\n  },\r\n  {\r\n      header: 'Open Tickets',\r\n      key: 'openTickets',\r\n  },\r\n];\r\n*/\r\n\r\nconst headerData = [\r\n  {\r\n    header: 'Project Name',\r\n    key: 'projectName',\r\n  },\r\n  {\r\n    header: 'Partners',\r\n    key: 'partners',\r\n  },\r\n  {\r\n    header: 'Entando Version',\r\n    key: 'entandoVersion',\r\n  },\r\n  {\r\n    header: 'Status',\r\n    key: 'status',\r\n  },\r\n  {\r\n    header: 'Start Date',\r\n    key: 'startDate',\r\n  },\r\n  {\r\n      header: 'End Date',\r\n      key: 'endDate',\r\n  },\r\n  {\r\n      header: 'Open Tickets',\r\n      key: 'openTickets',\r\n  },\r\n];\r\n\r\n\r\nconst rowData = [\r\n  {\r\n       id: 'a',\r\n       projectName: <a href=\"\">Supplier Portal</a>,\r\n       partnerName: 'Leonardo',\r\n       entandoVersion: 5.2,\r\n       startDate: 'October, 2019',\r\n       endDate: 'October, 2022',\r\n       openTickets: '5',\r\n    },\r\n    {\r\n      id: 'b',\r\n      projectName: <a href=\"\">Task Manager</a>,\r\n      partnerName: 'Veriday',\r\n      entandoVersion: 5.2,\r\n      startDate: 'July, 2019',\r\n      endDate: 'July, 2022',\r\n      openTickets: '2',\r\n    },\r\n    {\r\n      id: 'c',\r\n      projectName: <a href=\"\">Sales Coordination App</a>,\r\n      partnerName: 'Accenture',\r\n      entandoVersion: 6.2,\r\n      startDate: 'September, 2019',\r\n      endDate: 'September, 2022',\r\n      openTickets: '2',\r\n    },\r\n    {\r\n      id: 'd',\r\n      projectName: <a href=\"\">Website</a>,\r\n      partnerName: 'Veriday',\r\n      entandoVersion: 5.2,\r\n      startDate: 'October, 2019',\r\n      endDate: 'October, 2022',\r\n      openTickets: '1',\r\n    }  \r\n];\r\n \r\nexport default withKeycloak(CustomTable);\r\n","import React from 'react';\r\nimport { AccordionItem } from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport { apiGetCustomersProjects } from '../../api/customers';\r\nimport { apiGetProjectsUsers } from '../../api/projects';\r\nimport CustomTable from './customDataTable';\r\n\r\nclass CustomerAccordian extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            projects: '',\r\n            authenticated: false\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        const { keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n        if (authenticated) {\r\n            if (this.props.role === 'Admin' || this.props.role === 'Support') {\r\n                this.setState({\r\n                    authenticated: true\r\n                })\r\n            }\r\n            else {\r\n                this.getCustomersProjects(this.props.customerNumber);\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const { keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n    \r\n        const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n    \r\n        if (authenticated && changedAuth) {\r\n            if (this.props.role === 'Admin' || this.props.role === 'Support') {\r\n                this.setState({\r\n                    authenticated: true\r\n                })\r\n            }\r\n            else {\r\n                this.getCustomersProjects(this.props.customerNumber);\r\n            }\r\n        }\r\n      }\r\n\r\n    async checkPermissions(projects) {\r\n        const { keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n        \r\n        for(var i = 0; i < projects.length; i++) {\r\n            const users = await apiGetProjectsUsers(this.props.serviceUrl, projects[i].id)\r\n            for(var j = 0; j < users.data.length; j++) {\r\n                if ((users.data[j].username === keycloak.tokenParsed.preferred_username)) {\r\n                    this.setState({\r\n                        authenticated: true\r\n                    })\r\n                    break;\r\n                }\r\n            }\r\n        }   \r\n    }\r\n\r\n    async getCustomersProjects(id) {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n        if (authenticated) {\r\n            const projects = await apiGetCustomersProjects(this.props.serviceUrl, id);\r\n            this.checkPermissions(projects.data);\r\n\r\n            this.setState({\r\n                projects: projects.data\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        var { t, keycloak } = this.props;\r\n        var authenticated = keycloak.initialized && keycloak.authenticated;\r\n        return(\r\n            <div>\r\n                {this.state.authenticated ?\r\n                    <AccordionItem title={this.props.title}>\r\n                        <CustomTable serviceUrl={this.props.serviceUrl} customerNumber={this.props.customerNumber} />\r\n                    </AccordionItem> : null\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withKeycloak(CustomerAccordian);","import React from 'react';\r\nimport { Accordion, AccordionItem, PaginationNav, Search, Tile} from 'carbon-components-react';\r\nimport AddCustomerModal from './AddCustomerModal';\r\nimport AddPartnerModal from './AddPartnerModal';\r\nimport AddProjectModal from './AddProjectModal'\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport { apiCustomersGet } from '../../api/customers';\r\nimport CustomerAccordian from '../Customer/CustomerAccordian';\r\n\r\nclass AdminDashboard extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            customers: {},\r\n            customersProjects: {},\r\n            role: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getCustomer();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const { keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n    \r\n        const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n    \r\n        if (authenticated && changedAuth) {\r\n          this.getCustomer();\r\n        }\r\n      }\r\n\r\n\r\n    async getCustomer() {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n        if (authenticated) {\r\n            const customers = await apiCustomersGet(this.props.serviceUrl);\r\n\r\n            this.setState({\r\n                customers: customers\r\n            })\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"admin-dashboard\">\r\n                <h3 className=\"pageTitle\">Welcome to Entando {this.props.role} View</h3>\r\n                <Tile>\r\n                    <p className=\"title\">All Customers</p>\r\n                    <div className=\"bx--row\">\r\n                        <div className=\"bx--col\">\r\n                            <Search id=\"search\" placeHolderText=\"Which customer are you looking for?\" />\r\n                        </div>\r\n                        <div className=\"bx--col\">\r\n                            {this.props.role === 'Admin' ?\r\n                            <div>\r\n                                <AddPartnerModal serviceUrl={this.props.serviceUrl} />\r\n                                <AddCustomerModal serviceUrl={this.props.serviceUrl} />\r\n                                <AddProjectModal serviceUrl={this.props.serviceUrl} />\r\n                            </div>\r\n                            : null\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </Tile>  \r\n                    \r\n                <div className=\"form-container\">\r\n                    <Accordion>\r\n                        {Object.keys(this.state.customers).length !== 0 ? this.state.customers.data.map((customer, index) => {\r\n                                return(\r\n                                    <CustomerAccordian role={this.props.role} serviceUrl={this.props.serviceUrl} customerNumber={customer.id} title={customer.name}/>\r\n                                )\r\n                        }) : null}\r\n                    </Accordion>\r\n                    <PaginationNav cssClass='pagination-right'/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default withKeycloak(AdminDashboard);\r\n","export const publishWidgetEvent = (eventId, payload) => {\r\n  const widgetEvent = new CustomEvent(eventId, {\r\n    detail: {\r\n      payload,\r\n    },\r\n  });\r\n  window.dispatchEvent(widgetEvent);\r\n};\r\n\r\nexport const createWidgetEventPublisher = eventType => payload =>\r\n  publishWidgetEvent(eventType, payload);\r\n\r\nexport const subscribeToWidgetEvent = (eventType, eventHandler) => {\r\n  window.addEventListener(eventType, eventHandler);\r\n\r\n  return () => {\r\n    window.removeEventListener(eventType, eventHandler);\r\n  };\r\n};\r\n\r\nexport const subscribeToWidgetEvents = (widgetEvents, eventHandler) => {\r\n  widgetEvents.forEach(eventType => window.addEventListener(eventType, eventHandler));\r\n\r\n  return () => {\r\n    widgetEvents.forEach(eventType => window.removeEventListener(eventType, eventHandler));\r\n  };\r\n};\r\n\r\nexport const widgetEventToFSA = widgetEvent => {\r\n  // for info about Flux Standard Action (FSA) see https://github.com/redux-utilities/flux-standard-action\r\n  const {\r\n    type,\r\n    detail: { payload, error, meta },\r\n  } = widgetEvent;\r\n  return { type, payload, error, meta };\r\n};\r\n","export const INPUT_EVENT_TYPES = {\r\n    formUpdate: 'customer.form.update',\r\n    formCreate: 'customer.form.create',\r\n    formDelete: 'customer.form.delete',\r\n  };\r\n  \r\n  export const OUTPUT_EVENT_TYPES = {\r\n    select: 'customer.table.select',\r\n    add: 'customer.table.add',\r\n    error: 'customer.table.error',\r\n    delete: 'customer.table.delete',\r\n  };\r\n  \r\n  export const KEYCLOAK_EVENT_TYPE = 'keycloak';\r\n  ","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport AdminDashboard from '../components/Admin/AdminDashboard';\r\nimport '../index.scss'\r\nimport './dashboard.css'\r\n\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\n\r\nimport {\r\n  subscribeToWidgetEvent\r\n} from '../helpers/widgetEvents';\r\nimport {\r\n  KEYCLOAK_EVENT_TYPE,\r\n} from '../custom-elements/widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window &&\r\n    window.entando &&\r\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\nconst ATTRIBUTES = {\r\n  hidden: 'hidden',\r\n  locale: 'locale',\r\n  paginationMode: 'pagination-mode',\r\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n  serviceUrl: 'service-url',\r\n};\r\n\r\nclass AdminDashboardElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    \r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    //retargetEvents(shadowRoot);\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <AdminDashboard serviceUrl={serviceUrl}/>\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.define('admin-dashboard-widget', AdminDashboardElement);\r\n","import { getDefaultOptions, request, getUrl } from './helpers';\r\n\r\nconst resource = 'api/tickets';\r\n\r\nexport const apiTicketDelete = async (serviceUrl, id) => {\r\n  const url = `${serviceUrl}/${resource}/${id}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiTicketsGet = async (serviceUrl ) => {\r\n\r\n  const url = getUrl(\r\n    `${serviceUrl}/${resource}`\r\n  );\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiTicketPost = async (serviceUrl, ticket) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n    body: ticket ? JSON.stringify(ticket) : null,\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\n\r\nconst jiraResource = 'api/tickets/ticketingsystem/GSP';\r\nexport const apiJiraTicketDelete = async (serviceUrl, id) => {\r\n  const url = `${serviceUrl}/${jiraResource}/${id}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiJiraTicketsGet = async (serviceUrl, organization) => {\r\n  const url = `${serviceUrl}/${jiraResource}/${organization}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiJiraTicketPost = async (serviceUrl, organization, ticket) => {\r\n  const url = `${serviceUrl}/${jiraResource}/${organization}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n    body: ticket ? JSON.stringify(ticket) : null,\r\n  };\r\n  return request(url, options);\r\n};","import { getDefaultOptions, request, getUrl } from './helpers';\r\n\r\nconst resource = 'api/ticketing-systems';\r\n\r\nexport const apiTicketingSystemDelete = async (serviceUrl, id) => {\r\n  const url = `${serviceUrl}/${resource}/${id}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiTicketingSystemsGet = async (serviceUrl ) => {\r\n  const url = getUrl(\r\n    `${serviceUrl}/${resource}`\r\n  );\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiTicketingSystemPost = async (serviceUrl, ticketingsystem) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n    body: ticketingsystem ? JSON.stringify(ticketingsystem) : null,\r\n  };\r\n  return request(url, options);\r\n};\r\n","import React, { Component } from 'react';\r\nimport { DataTable, TableContainer, Table, TableHead, TableRow, TableHeader, TableBody, TableCell } from 'carbon-components-react';\r\nimport { apiJiraTicketsGet } from '../../api/tickets';\r\nimport { apiTicketingSystemsGet, apiTicketingSystemPost } from '../../api/ticketingsystem';\r\nimport { AuthenticatedView, UnauthenticatedView } from '../../auth/KeycloakViews';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport { apiGetProjectsUsers, apiProjectGet, apiGetProjectsTickets } from '../../api/projects';\r\n\r\nclass TicketList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n      data: {}\r\n     }\r\n  }\r\n\r\n  async fetchData() {\r\n    const { t, keycloak } = this.props;\r\n    var authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n    /*\r\n    if (keycloak.realmAccess) {\r\n      for (var i = 0; i < keycloak.tokenParsed.roles.length; i++) {\r\n        console.log(keycloak.tokenParsed.roles[i])\r\n        console.log(keycloak.tokenParsed.preferred_username)\r\n        if (keycloak.tokenParsed.roles[i] == \"ROLE_ADMIN\") {\r\n          authenticated = true;\r\n        }\r\n      }\r\n    }\r\n    */\r\n\r\n    if (authenticated) {\r\n        const project = await apiProjectGet(this.props.serviceUrl, this.props.projectId);\r\n        var tickets = await apiJiraTicketsGet(this.props.serviceUrl, project.data.systemId);\r\n        //var tickets = await apiGetProjectsTickets(this.props.serviceUrl, this.props.projectId);\r\n\r\n        this.setState({\r\n            data: tickets\r\n        });\r\n    }\r\n    this.render();\r\n}\r\n\r\ncomponentDidMount(){\r\n    this.fetchData();\r\n}\r\n\r\ncomponentDidUpdate(prevProps) {\r\n  const { keycloak } = this.props;\r\n  const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n  const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n\r\n  if (authenticated && changedAuth) {\r\n    this.fetchData();\r\n  }\r\n}\r\n\r\n  changeState = () => {   \r\n    this.setState({data:'test data'});  \r\n  };  \r\n\r\n  render() { \r\n    return ( \r\n      <div>\r\n        <DataTable rows={rowData} headers={headerData}>\r\n        {({ rows, headers, getHeaderProps, getTableProps }) => (\r\n          <TableContainer title=\"List of Tickets\" description=\"Tickets\">\r\n            <Table {...getTableProps()}>\r\n              <TableHead>\r\n                <TableRow>\r\n                  {headers.map((header) => (\r\n                    <TableHeader {...getHeaderProps({ header })}>\r\n                      {header.header}\r\n                    </TableHeader>\r\n                  ))}\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {Object.keys(this.state.data).length !== 0 ? this.state.data.data.map((ticket) => {\r\n                  return (\r\n                    <TableRow key={ticket.id}>\r\n                      <TableCell key={ticket.id}>{ticket.systemId}</TableCell>\r\n                      <TableCell key={ticket.id}>{ticket.systemId.split(\"-\")[0]}</TableCell>\r\n                      <TableCell key={ticket.id}>{ticket.description}</TableCell>\r\n                      <TableCell key={ticket.id}>{ticket.type}</TableCell>\r\n                      <TableCell key={ticket.id}>{ticket.createDate}</TableCell>\r\n                      <TableCell key={ticket.id}><a href={\"https://jira.entando.org/browse/\" + ticket.systemId} target=\"_blank\">View Ticket</a></TableCell>\r\n                    </TableRow>\r\n                  )\r\n                }) : <p>Loading...</p>}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        )}\r\n      </DataTable>\r\n    </div>\r\n  )}\r\n}\r\n\r\nconst headerData = [\r\n  {\r\n    header: 'Issue',\r\n    key: 'projectName',\r\n  },\r\n  {\r\n    header: 'Project',\r\n    key: 'project',\r\n  },\r\n  {\r\n    header: 'Description',\r\n    key: 'description',\r\n  },\r\n  {\r\n    header: 'Type',\r\n    key: 'type',\r\n  },\r\n  {\r\n    header: 'Creation Date',\r\n    key: 'creationDate',\r\n  },\r\n  {\r\n      header: 'Link',\r\n      key: 'openTicket',\r\n  },\r\n];\r\n\r\nconst rowData = [\r\n  {\r\n       id: 'a',\r\n       projectName: 'Ticket1',\r\n       project: 'Leonardo',\r\n       entandoVersion: 6.2,\r\n       creationDate: 'October, 2019',\r\n       openTicket: <a href=\"\">Open Ticket</a>,\r\n    },\r\n    {\r\n        id: 'a',\r\n        projectName: 'Ticket1',\r\n        project: 'Leonardo',\r\n        entandoVersion: 6.2,\r\n        creationDate: 'October, 2019',\r\n        openTicket: <a href=\"\">Open Ticket</a>,\r\n    },\r\n    {\r\n        id: 'a',\r\n        projectName: 'Ticket1',\r\n        project: 'Leonardo',\r\n        entandoVersion: 6.2,\r\n        creationDate: 'October, 2019',\r\n        openTicket: <a href=\"\">Open Ticket</a>,\r\n     },\r\n  \r\n];\r\n \r\nexport default withKeycloak(TicketList);\r\n","import { getDefaultOptions, request } from './helpers';\r\n\r\nconst resource = 'api/project-subscriptions'\r\n\r\nexport const apiSubscriptionGet = async (serviceUrl, id) => {\r\n    const url = `${serviceUrl}/${resource}/${id}`;\r\n    const options = {\r\n        ...getDefaultOptions(),\r\n        method: 'GET',\r\n    };\r\n    return request(url, options);\r\n};\r\n\r\n// Project Subscription creation consists of an object containing a projectSubscription, an entandoVersionId, and a\r\n// project id, see SubscriptionCreationRequest.\r\n/**\r\n * Called to create a new project subscription\r\n * \r\n * @param {string} serviceUrl \r\n * @param {ProjectSubscriptionCreation} projectSubscriptionCreation \r\n * @returns \r\n */\r\nexport const apiProjectSubscriptionPost = async (serviceUrl, projectSubscriptionCreation) => {\r\n    const url = `${serviceUrl}/${resource}`;\r\n    const options = {\r\n        ...getDefaultOptions(),\r\n        method: 'POST',\r\n        body: projectSubscriptionCreation ? JSON.stringify(projectSubscriptionCreation) : null,\r\n    };\r\n    return request(url, options);\r\n};\r\n\r\nexport const apiProjectSubscriptionPut = async (serviceUrl, projectSubscriptionCreation) => {\r\n    const url = `${serviceUrl}/${resource}`;\r\n    const options = {\r\n        ...getDefaultOptions(),\r\n        method: 'PUT',\r\n        body: projectSubscriptionCreation ? JSON.stringify(projectSubscriptionCreation) : null,\r\n    };\r\n    return request(url, options);\r\n};","import { getDefaultOptions, request, getUrl } from './helpers';\r\n\r\nconst resource = 'api/portal-users';\r\n\r\nexport const apiUserDelete = async (serviceUrl, id) => {\r\n  const url = `${serviceUrl}/${resource}/${id}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiUsersGet = async (serviceUrl ) => {\r\n  const url = getUrl(\r\n    `${serviceUrl}/${resource}`\r\n  );\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiUserPost = async (serviceUrl, user) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n    body: user ? JSON.stringify(user) : null,\r\n  };\r\n  return request(url, options);\r\n};\r\n","import React from 'react';\r\nimport TicketList from './TicketList';\r\nimport { Tile } from 'carbon-components-react';\r\nimport { apiSubscriptionGet } from '../../api/subscriptions'\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport { apiUsersGet } from '../../api/portalusers';\r\nimport { apiProjectGet } from '../../api/projects'; \r\n\r\nconst subscriptionData = {\r\n    description: 'Entando Product Support Subscription Suplier Portal',\r\n    commitment: 'Leonardo',\r\n    type: 'Product Support Subscription Entando Platform',\r\n    quantityRequest: '1(8 Core)',\r\n    components: '',\r\n    level: 'Gold',\r\n    startDate: 'May 2019',\r\n    endDate: 'May 2020',\r\n    license: 'Free Commercial Open Source',\r\n};\r\n\r\nclass Subscription extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            subscription: '',\r\n            users: {},\r\n            role: 'Admin',\r\n            project: ''\r\n        }\r\n    }\r\n\r\n    async getSubscription() {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n        if (authenticated) {\r\n            const subscription = await apiSubscriptionGet(this.props.serviceUrl, this.props.match.params.id);\r\n            var project = '';\r\n            if (subscription.data.project) {\r\n                project = await apiProjectGet(this.props.serviceUrl, subscription.data.project.id)\r\n            }\r\n            this.setState({\r\n                subscription: subscription,\r\n                project: project\r\n            })\r\n        }\r\n    }\r\n\r\n    async getPortalUsers() {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n        if (authenticated) {\r\n            const users = await apiUsersGet(this.props.serviceUrl)\r\n\r\n            this.setState({\r\n                users: users\r\n            })\r\n        }\r\n    }\r\n\r\n    async getProject(id) {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n        if (authenticated) {\r\n            const project =  await apiProjectGet(this.props.serviceUrl, id)\r\n\r\n            this.setState({\r\n                project: project\r\n            })\r\n        }\r\n    }\r\n\r\n    checkRole() {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n        var role = ''\r\n        if (keycloak.realmAccess) {\r\n            for (var i = 0; i < keycloak.tokenParsed.roles.length; i++) {\r\n              if (keycloak.tokenParsed.roles[i] == \"ROLE_ADMIN\") {\r\n                role = 'Admin'\r\n                break;\r\n              }\r\n              else if (keycloak.tokenParsed.roles[i] == \"ROLE_SUPPORT\") {\r\n                role = 'Support'\r\n              }\r\n              else if (keycloak.tokenParsed.roles[i] == \"ROLE_PARTNER\") {\r\n                role = 'Partner'\r\n              }\r\n              else if (keycloak.tokenParsed.roles[i] == \"ROLE_CUSTOMER\") {\r\n                role = 'Customer'\r\n              }\r\n            }\r\n            this.setState({\r\n                role: role\r\n            })\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        const { keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n        this.getSubscription();\r\n        if (this.state.subscription !== '') {\r\n            this.getProject(this.state.subscription.project.id);\r\n        }\r\n        this.checkRole();\r\n        this.getPortalUsers();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const { keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n    \r\n        const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n    \r\n        if (authenticated && changedAuth) {\r\n          this.getSubscription();\r\n          if (this.state.subscription !== '') {\r\n            this.getProject(this.state.subscription.project.id);\r\n          }\r\n          this.checkRole();\r\n          this.getPortalUsers();\r\n        }\r\n      }\r\n\r\n    render() {\r\n        const { description, commitment, type, quantityRequest, components, level, startDate, endDate, license } = subscriptionData\r\n        var { t, keycloak } = this.props;\r\n        var authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n        if (this.state.role === 'Admin' || this.state.role === 'Support' || this.state.role === 'Partner' || this.state.role === 'Customer') {\r\n\r\n            // wait for data from api\r\n            if (Object.keys(this.state.users).length !== 0 && Object.keys(this.state.subscription).length !== 0) {\r\n                // Looping through users and checking if this user is mapped to this project or if user is admin/support\r\n                for (var i = 0; i < this.state.users.data.length; i++) {\r\n                    if ((keycloak.tokenParsed.preferred_username === this.state.users.data[i].username \r\n                        && this.state.users.data[i].project.id === this.state.subscription.data.project.id) \r\n                        || (this.state.role === 'Admin' || this.state.role === 'Support')) {\r\n                            return (\r\n                                <div className=\"subscription-details\">\r\n                                    {Object.keys(this.state.subscription).length !== 0 ? <div><p>Project Id: {this.state.subscription.data.project.id}</p>\r\n                                    <Tile>\r\n                                        <div className=\"bx--grid\">\r\n                                            <div className=\"bx--row\">\r\n                                                <div className=\"bx--col\">\r\n                                                    <p><strong>Description:</strong> {this.state.subscription.data.project.description}</p>\r\n                                                    <p><strong>Commitment:</strong>\r\n                                                    {this.state.project.data !== '' && Object.keys(this.state.project.data.partners).length !== 0 ? \r\n                                                    \r\n                                                    <>\r\n                                                        {this.state.project.data.partners.map(partner => (\r\n                                                            <> {partner.name} </>\r\n                                                        ))}\r\n                                                    </>\r\n                                                    : <> None </>}\r\n                                                    </p>\r\n                                                    <p><strong>Type:</strong> {type}</p>\r\n                                                    <p><strong>Quantity Request:</strong> {quantityRequest}</p>\r\n                                                    <p><strong>Components:</strong> {components}</p>\r\n                                                </div>\r\n                                                <div className=\"bx--col\">\r\n                                                    <p><strong>Level:</strong> {this.state.subscription.data.level}</p>\r\n                                                    <p><strong>Start Date:</strong> {String(new Date(this.state.subscription.data.startDate))}</p>\r\n                                                    <p><strong>End Date:</strong> {String(new Date(new Date(this.state.subscription.data.startDate).setMonth(new Date(this.state.subscription.data.startDate).getMonth() + this.state.subscription.data.lengthInMonths)))}</p>\r\n                                                    <p><strong>License:</strong> {license}</p>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </Tile>\r\n                                    <br/>\r\n                                    <TicketList projectId={this.state.subscription.data.project.id} serviceUrl={this.props.serviceUrl}/>\r\n                                    </div>\r\n                                    : null }\r\n                                </div>\r\n                            )\r\n                    }\r\n                    \r\n                }\r\n            }\r\n            return (\r\n                <p>No data</p>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <p>Incorrect role</p>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default withKeycloak(Subscription);","import React, { Component } from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport AdminDashboard from './Admin/AdminDashboard';\r\nimport Subscription from './SubscriptionDetails/subscription';\r\nimport withKeycloak from '../auth/withKeycloak';\r\nimport { AuthenticatedView, UnauthenticatedView } from '../auth/KeycloakViews';\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            role: 'admin'\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n      \r\n        const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n    }\r\n\r\n    render() {\r\n        var { t, keycloak } = this.props;\r\n        var authenticated = keycloak.initialized && keycloak.authenticated;\r\n        var role = ''\r\n        if (keycloak.realmAccess) {\r\n            for (var i = 0; i < keycloak.tokenParsed.roles.length; i++) {\r\n              if (keycloak.tokenParsed.roles[i] == \"ROLE_ADMIN\") {\r\n                role = 'Admin'\r\n                break;\r\n              }\r\n              else if (keycloak.tokenParsed.roles[i] == \"ROLE_SUPPORT\") {\r\n                role = 'Support'\r\n              }\r\n              else if (keycloak.tokenParsed.roles[i] == \"ROLE_PARTNER\") {\r\n                role = 'Partner'\r\n              }\r\n              else if (keycloak.tokenParsed.roles[i] == \"ROLE_CUSTOMER\") {\r\n                role = 'Customer'\r\n              }\r\n            }\r\n        }\r\n        \r\n        if (role === 'Admin' || role === 'Support' || role === 'Partner' || role === 'Customer') {\r\n            return (\r\n                <div id=\"entando-customer-portal\">\r\n                    <AuthenticatedView keycloak={keycloak}>\r\n                        <BrowserRouter>\r\n                            <Switch>\r\n                                <Route exact path=\"/\" render={(props) => (\r\n                                    <AdminDashboard {...props} serviceUrl={this.props.serviceUrl} role={role} />\r\n                                )}/>\r\n                                <Route path=\"/subscription-details/:id\" render={(props) => (\r\n                                    <Subscription {...props} serviceUrl={this.props.serviceUrl} />\r\n                                )}/>\r\n                            </Switch>\r\n                        </BrowserRouter>\r\n                    </AuthenticatedView>\r\n                    <UnauthenticatedView keycloak={keycloak}>\r\n                        <p>Unauthenticated</p>\r\n                    </UnauthenticatedView>\r\n                </div>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <div id=\"entando-customer-portal\">\r\n                    <BrowserRouter>\r\n                        <Switch>\r\n                            <Route path=\"/subscription-details/:id\" render={(props) => (\r\n                                <Subscription {...props} serviceUrl={this.props.serviceUrl} />\r\n                            )}/>\r\n                        </Switch>\r\n                    </BrowserRouter>\r\n                </div>    \r\n            )\r\n        }\r\n     }\r\n  }\r\n  \r\nexport default withKeycloak(App);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport AddCustomerModal from '../components/Admin/AddCustomerModal';\r\nimport '../index.scss'\r\nimport './dashboard.css'\r\n\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\nimport App from '../components/App';\r\n\r\nimport {\r\n  subscribeToWidgetEvent\r\n} from '../helpers/widgetEvents';\r\nimport {\r\n  KEYCLOAK_EVENT_TYPE,\r\n} from '../custom-elements/widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window &&\r\n    window.entando &&\r\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\nconst ATTRIBUTES = {\r\n  hidden: 'hidden',\r\n  locale: 'locale',\r\n  paginationMode: 'pagination-mode',\r\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n  serviceUrl: 'service-url',\r\n};\r\n\r\nclass AdminAddCustomerElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    \r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    //retargetEvents(shadowRoot);\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <AddCustomerModal serviceUrl={serviceUrl}/>\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.define('admin-add-customer-widget', AdminAddCustomerElement);\r\n\r\n","import React from 'react';\r\nimport { Tile } from 'carbon-components-react';\r\n\r\nconst customerData = {\r\n    name: 'Ford',\r\n    id: '5564 4563 3345',\r\n    startDate: '01/01/2020'\r\n}\r\n\r\nconst CustomerDetails = () => {\r\n    const { name, id, startDate } = customerData //destructuring\r\n    return (\r\n        <div className=\"customer-details\">\r\n            <Tile>\r\n                <p><strong>Customer Name:</strong> {name}</p>\r\n                <p><strong>Customer Id:</strong> {id}</p>\r\n                <p><strong>Start Date:</strong> {startDate}</p>\r\n            </Tile>\r\n          </div>\r\n    );\r\n}\r\n\r\nexport default CustomerDetails;\r\n","import React, {Component} from 'react';\r\nimport { Select, SelectItem} from 'carbon-components-react';\r\nimport CustomerDetails from '../Customer/customerDetails';\r\nimport CustomTable from '../Customer/customDataTable';\r\nimport AdminDashboard from './AdminDashboard';\r\nimport '../../index.scss';\r\n\r\nexport default class RoleCheck extends Component {\r\n    state = {\r\n        roleType: 'customer'\r\n    };\r\n\r\n    handleChanges = (e) => {\r\n        const input = e.target;\r\n        const name = input.name;\r\n        const value = input.value;\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    render() {\r\n        const roleType = ['Admin', 'Customer'];\r\n        return (\r\n            \r\n                <div className='role-check'>  \r\n                <Select defaultValue=\"role-type\" name=\"roleType\" labelText=\"Select Role(Testing)\" value={this.state.roleType} onChange={this.handleChanges}>\r\n                        <SelectItem\r\n                                text=\"Select Role\"\r\n                                value=\"role-type\"\r\n                        />\r\n                        {roleType.map((roleType, i) => <SelectItem key={i} text={roleType} value={roleType.toLowerCase()}>{roleType}</SelectItem>)}\r\n                        </Select>\r\n                    { this.renderForm()}\r\n                </div>\r\n            \r\n            );\r\n    }\r\n\r\n    // Render Dashboard based on role\r\n    renderForm() {\r\n        if (this.state.roleType === 'customer') return (\r\n            <div>\r\n                 <h3 className=\"pageTitle\">Welcome to Entando Customer Portal</h3>\r\n                <CustomerDetails />\r\n                <CustomTable />\r\n            </div>\r\n        )\r\n        if (this.state.roleType === 'admin') return (\r\n            <div>\r\n                 <h3 className=\"pageTitle\">Welcome to Entando Admin View</h3>\r\n                <AdminDashboard />\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport RoleCheck from '../components/Admin/RoleCheck';\r\nimport '../index.scss'\r\nimport './dashboard.css'\r\n\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\n\r\nimport {\r\n  subscribeToWidgetEvent\r\n} from '../helpers/widgetEvents';\r\nimport {\r\n  KEYCLOAK_EVENT_TYPE,\r\n} from '../custom-elements/widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window &&\r\n    window.entando &&\r\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\n  const ATTRIBUTES = {\r\n    hidden: 'hidden',\r\n    locale: 'locale',\r\n    paginationMode: 'pagination-mode',\r\n    disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n    serviceUrl: 'service-url',\r\n  };\r\n\r\nclass AdminRoleCheckElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    \r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    //retargetEvents(shadowRoot);\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <RoleCheck serviceUrl={serviceUrl}/>\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.define('admin-rolecheck-widget', AdminRoleCheckElement);\r\n\r\n//export default AdminRoleCheckElement;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport CustomDataTable from '../components/Customer/customDataTable';\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\nimport '../index.scss'\r\nimport './dashboard.css'\r\n\r\nimport {\r\n  subscribeToWidgetEvent\r\n} from '../helpers/widgetEvents';\r\nimport {\r\n  KEYCLOAK_EVENT_TYPE,\r\n} from '../custom-elements/widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window &&\r\n    window.entando &&\r\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\n  const ATTRIBUTES = {\r\n    hidden: 'hidden',\r\n    locale: 'locale',\r\n    paginationMode: 'pagination-mode',\r\n    disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n    serviceUrl: 'service-url',\r\n  };\r\n\r\nclass CustomDataTableElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    \r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <CustomDataTable serviceUrl={serviceUrl}/>\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.define('custom-datatable-widget', CustomDataTableElement);\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport CustomerDetails from '../components/Customer/customerDetails';\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\nimport './dashboard.css'\r\n\r\nimport {\r\n  subscribeToWidgetEvent\r\n} from '../helpers/widgetEvents';\r\nimport {\r\n  KEYCLOAK_EVENT_TYPE,\r\n} from '../custom-elements/widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window &&\r\n    window.entando &&\r\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\n  const ATTRIBUTES = {\r\n    hidden: 'hidden',\r\n    locale: 'locale',\r\n    paginationMode: 'pagination-mode',\r\n    disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n    serviceUrl: 'service-url',\r\n  };\r\n\r\nclass CustomerDetailsElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    \r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <CustomerDetails serviceUrl={serviceUrl}/>\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\ncustomElements.define('customer-details-widget', CustomerDetailsElement);\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Subscription from '../components/SubscriptionDetails/subscription';\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\nimport './dashboard.css'\r\n\r\nimport {\r\n  subscribeToWidgetEvent\r\n} from '../helpers/widgetEvents';\r\nimport {\r\n  KEYCLOAK_EVENT_TYPE,\r\n} from '../custom-elements/widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window &&\r\n    window.entando &&\r\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\nconst ATTRIBUTES = {\r\n  hidden: 'hidden',\r\n  locale: 'locale',\r\n  paginationMode: 'pagination-mode',\r\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n  serviceUrl: 'service-url',\r\n};\r\n\r\n\r\nclass SubscriptionElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    \r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    //retargetEvents(shadowRoot);\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <Subscription serviceUrl={serviceUrl}/>\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.define('subscription-widget', SubscriptionElement);\r\n\r\n","import React, {Component} from 'react';\r\nimport { Form, TextInput, Select, SelectItem, Button, TextArea } from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport { apiProjectsGet, apiAddTicketToProject } from '../../api/projects';\r\nimport { apiJiraTicketPost } from '../../api/tickets';\r\n\r\nclass OpenTicket extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            systemId: '',\r\n            projects: {},\r\n            type: '',\r\n            description: '',\r\n            priority: '',\r\n            status: 'To Do',\r\n            createDate: '',\r\n            updateDate: ''\r\n        };\r\n    }\r\n\r\n    handleChanges = (e) => {\r\n        const input = e.target;\r\n        const name = input.name;\r\n        const value = input.value;\r\n        this.setState({ [name]: value });\r\n        console.log(this.state)\r\n    }\r\n\r\n    handleFormSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.createTicket();\r\n    };\r\n\r\n    async fetchProjects() {\r\n        const { t, keycloak } = this.props;\r\n        var authenticated = keycloak.initialized && keycloak.authenticated;\r\n    \r\n        if (authenticated && keycloak.tokenParsed.preferred_username === \"admin\") {\r\n            \r\n            var projects = await apiProjectsGet(this.props.serviceUrl)\r\n            this.setState({\r\n                projects: projects\r\n            })\r\n        }\r\n        this.render();\r\n    }\r\n\r\n    async createTicket() {\r\n        const { t, keycloak } = this.props;\r\n        var authenticated = keycloak.initialized && keycloak.authenticated;\r\n    \r\n        if (authenticated) {\r\n            const ticket = {\r\n                systemId: this.state.systemId,\r\n                type: this.state.type,\r\n                description: this.state.description,\r\n                priority: this.state.priority,\r\n                status: 'To Do',\r\n                createDate: '2021-02-22T14:14:09-05:00',\r\n                updateDate: '2021-02-22T14:14:09-05:00'\r\n            }\r\n            const result = await apiJiraTicketPost(this.props.serviceUrl, this.state.systemId, ticket);\r\n            //const addedTicket = await apiAddTicketToProject(this.props.serviceUrl, this.state.project.id, result.data.id);\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchProjects();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n      \r\n        const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n      \r\n        if (authenticated && changedAuth) {\r\n            this.fetchProjects();\r\n        }\r\n    }\r\n        \r\n    render() {\r\n        const textareaProps = {\r\n            labelText: 'Ticket Description',\r\n            placeholder: 'Add ticket description',\r\n            name: 'description',\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <h3 className=\"pageTitle\">Welcome to Entando Customer Portal</h3>\r\n                <div className=\"form-container\">\r\n                    <Form onSubmit={this.handleFormSubmit}>\r\n                        <div className=\"form-desc\">\r\n                            <h4>Open Service Ticket</h4>\r\n                            <p>Lorem ipsum, or lipsum as it is sometimes known, is dummy text used in laying out print, graphic or web designs. </p>\r\n                        </div>\r\n\r\n                        <div className=\"bx--grid\">\r\n                            <div className=\"bx--row\">\r\n                                <div className=\"bx--col\">\r\n                                    <Select defaultValue=\"ticketing-system\" name=\"systemId\" labelText=\"Select Project\" value={this.state.systemId} onChange={this.handleChanges}>\r\n                                        <SelectItem\r\n                                            text=\"Select\"\r\n                                            value=\"ticketing-system\"\r\n                                        />\r\n                                        {Object.keys(this.state.projects).length !== 0 ? this.state.projects.data.map((project, i) => {\r\n                                        return (\r\n                                            <SelectItem key={i} text={project.name} value={project.systemId}>{project.name}</SelectItem>\r\n                                        )}) : null}\r\n                                    </Select>\r\n                                    <TextInput name=\"type\" labelText=\"Type\" value={this.state.type} onChange={this.handleChanges}/>\r\n                                    <TextInput name=\"priority\" labelText=\"Priority\" value={this.state.priority} onChange={this.handleChanges}/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"bx--row\">\r\n                                <div className=\"bx--col\">\r\n                                    <TextArea {...textareaProps} value={this.state.description} onChange={this.handleChanges}  />\r\n                                    <Button kind=\"primary\" tabIndex={0} type=\"submit\" > Submit  </Button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Form>\r\n                </div>\r\n            </div>    \r\n        );\r\n    }\r\n}\r\n\r\nexport default withKeycloak(OpenTicket);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport OpenTicket from '../components/Forms/openTicket';\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\nimport './dashboard.css'\r\n\r\nimport {\r\n  subscribeToWidgetEvent\r\n} from '../helpers/widgetEvents';\r\nimport {\r\n  KEYCLOAK_EVENT_TYPE,\r\n} from '../custom-elements/widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window &&\r\n    window.entando &&\r\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\nconst ATTRIBUTES = {\r\n  hidden: 'hidden',\r\n  locale: 'locale',\r\n  paginationMode: 'pagination-mode',\r\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n  serviceUrl: 'service-url',\r\n};\r\n\r\n\r\nclass FormsOpenTicketElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    \r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    //retargetEvents(shadowRoot);\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <OpenTicket serviceUrl={serviceUrl}/>\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.define('forms-openticket-widget', FormsOpenTicketElement);\r\n\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n \r\nconst Navigation = () => {\r\n    return (\r\n       <ul id='navigation'>\r\n          <li><NavLink to=\"/\">Home</NavLink></li>\r\n          <li><NavLink to=\"/subscription-details\">Subscription Details</NavLink></li>\r\n          <li><NavLink to=\"/subscription\">New or Renew Subscription</NavLink></li>\r\n          <li><NavLink to=\"/service-ticket\">Open Service Ticket</NavLink></li>\r\n          <li><NavLink to=\"/enhancement\">Request for Enhancement Process</NavLink></li>\r\n          <li><NavLink to=\"/manage-users\">Manage Users</NavLink></li>\r\n          <li><NavLink to=\"/configuration-settings\">Configuration Settings</NavLink></li>\r\n      </ul>\r\n    );\r\n}\r\n \r\nexport default Navigation;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Navigation from '../components/Navigation/Navigation';\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\nimport './dashboard.css'\r\n\r\nimport {\r\n  subscribeToWidgetEvent\r\n} from '../helpers/widgetEvents';\r\nimport {\r\n  KEYCLOAK_EVENT_TYPE,\r\n} from '../custom-elements/widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window &&\r\n    window.entando &&\r\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\nconst ATTRIBUTES = {\r\n  hidden: 'hidden',\r\n  locale: 'locale',\r\n  paginationMode: 'pagination-mode',\r\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n  serviceUrl: 'service-url',\r\n};\r\n\r\n\r\nclass NavigationElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    \r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    //retargetEvents(shadowRoot);\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <Navigation serviceUrl={serviceUrl}/>\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.define('navigation-widget', NavigationElement);\r\n","import React, {Component} from 'react';\r\nimport { Form, TextInput, TextArea, Button } from 'carbon-components-react';\r\n\r\nexport default class EnhancementRequest extends Component {\r\n    state = {\r\n        ticketNo: '',\r\n        customerName: '',\r\n        projectName: '',\r\n        openedBy: '',\r\n        priority: '',\r\n        partnerName: '',\r\n        enhancementDescription: ''\r\n    };\r\n\r\n    handleChanges = (e) => {\r\n        const input = e.target;\r\n        const name = input.name;\r\n        const value = input.value;\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    handleFormSubmit = (event) => {\r\n        console.log(this.state.ticketNo)\r\n        event.preventDefault();\r\n    };\r\n      \r\n    render() {\r\n        const textareaProps = {\r\n            labelText: 'Enhancement Description',\r\n            placeholder: 'Add enhancement description',\r\n            name: 'enhamcementDescription',\r\n        }\r\n        return (\r\n            <div>\r\n                <h3 className=\"pageTitle\">Welcome to Entando Customer Portal</h3>\r\n                <div className=\"form-container\">\r\n                    <Form onSubmit={this.handleFormSubmit}>\r\n                        <div className=\"form-desc\">\r\n                            <h4>Request for Enhancements</h4>\r\n                            <p>Lorem ipsum, or lipsum as it is sometimes known, is dummy text used in laying out print, graphic or web designs. </p>\r\n                        </div>\r\n                        <div className=\"bx--grid\">\r\n                            <div className=\"bx--row\">\r\n                                <div className=\"bx--col\">\r\n                                    <TextInput name=\"ticketNo\" labelText=\"Ticket Number\" value={this.state.ticketNo} onChange={this.handleChanges}/>\r\n                                    <TextInput name=\"projectName\" labelText=\"Project Name\" value={this.state.projectName} onChange={this.handleChanges}/>\r\n                                    <TextInput name=\"priority\" labelText=\"Priority\" value={this.state.priority} onChange={this.handleChanges}/>\r\n                                </div>\r\n                                <div className=\"bx--col\">\r\n                                    <TextInput name=\"customerName\" labelText=\"Customer Name\" value={this.state.customerName} onChange={this.handleChanges}/>\r\n                                    <TextInput name=\"openedBy\" labelText=\"Ticket Opened By\" value={this.state.openedBy} onChange={this.handleChanges}/>\r\n                                    <TextInput name=\"partnerName\" labelText=\"Partner Name\" value={this.state.partnerName} onChange={this.handleChanges}/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"bx--row\">\r\n                                <div className=\"bx--col\">\r\n                                    <TextArea {...textareaProps} value={this.state.enhancementDescription} onChange={this.handleChanges}  />\r\n                                    <Button kind=\"primary\" tabIndex={0} type=\"submit\" > Submit  </Button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Form>\r\n                </div>\r\n            </div>    \r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport EnhancementRequest from '../components/Forms/enhancementRequest';\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\nimport './dashboard.css'\r\n\r\nimport {\r\n  subscribeToWidgetEvent\r\n} from '../helpers/widgetEvents';\r\nimport {\r\n  KEYCLOAK_EVENT_TYPE,\r\n} from '../custom-elements/widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window &&\r\n    window.entando &&\r\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\nconst ATTRIBUTES = {\r\n  hidden: 'hidden',\r\n  locale: 'locale',\r\n  paginationMode: 'pagination-mode',\r\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n  serviceUrl: 'service-url',\r\n};\r\n\r\n\r\nclass FormsEnhancementRequestElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    \r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    //retargetEvents(shadowRoot);\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <EnhancementRequest serviceUrl={serviceUrl}/>\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.define('forms-enhancement-request-widget', FormsEnhancementRequestElement);\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport retargetEvents from 'react-shadow-dom-retarget-events';\r\nimport '../index.scss'\r\nimport './dashboard.css'\r\n\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\nimport App from '../components/App';\r\n\r\nimport {\r\n  subscribeToWidgetEvent\r\n} from '../helpers/widgetEvents';\r\nimport {\r\n  KEYCLOAK_EVENT_TYPE,\r\n} from '../custom-elements/widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window &&\r\n    window.entando &&\r\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\nconst ATTRIBUTES = {\r\n  hidden: 'hidden',\r\n  locale: 'locale',\r\n  paginationMode: 'pagination-mode',\r\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n  serviceUrl: 'service-url',\r\n};\r\n\r\n\r\nclass AppElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    \r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    //retargetEvents(shadowRoot);\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <App serviceUrl={serviceUrl}/>\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.define('app-element', AppElement);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport TicketList from '../components/SubscriptionDetails/TicketList';\r\nimport '../index.scss'\r\n//import './dashboard.css'\r\n\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\n\r\nimport {\r\n  subscribeToWidgetEvent\r\n} from '../helpers/widgetEvents';\r\nimport {\r\n  KEYCLOAK_EVENT_TYPE,\r\n} from '../custom-elements/widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window &&\r\n    window.entando &&\r\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\nconst ATTRIBUTES = {\r\n  hidden: 'hidden',\r\n  locale: 'locale',\r\n  paginationMode: 'pagination-mode',\r\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n  serviceUrl: 'service-url',\r\n};\r\n\r\nclass TicketListCustomerElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    \r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    //retargetEvents(shadowRoot);\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <TicketList serviceUrl={serviceUrl}/>\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.define('ticket-list-widget', TicketListCustomerElement);\r\n\r\n","import React, { Component } from 'react';\r\nimport { Form, TextInput, Select, SelectItem, Button} from 'carbon-components-react';\r\nimport { apiTicketingSystemPost } from '../../../api/ticketingsystem';\r\n\r\nclass TicketingSystem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            ticketingSystem:'',\r\n            url: '',\r\n            userName: '',\r\n            password: '',\r\n            projectName: ''\r\n        }\r\n    }\r\n    \r\n    handleChanges = (e) => {\r\n        const input = e.target;\r\n        const name = input.name;\r\n        const value = input.value;\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    async createTicketingSystem() {\r\n        const ticketingSystem = {\r\n            url: this.state.url,\r\n            serviceAccount: this.state.userName,\r\n            serviceAccountSecret: this.state.password,\r\n            systemId: this.state.projectName\r\n        }\r\n        await apiTicketingSystemPost(this.props.serviceUrl, ticketingSystem);\r\n    }\r\n\r\n    handleFormSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.createTicketingSystem();\r\n        this.setState({\r\n            ticketingSystem:'',\r\n            url: '',\r\n            userName: '',\r\n            password: '',\r\n            projectName: ''\r\n        })\r\n    };\r\n\r\n    render() { \r\n        const ticketingSystem = ['Jira', 'Other'];\r\n        return (\r\n            <div className=\"cp-form\">\r\n                <Form onSubmit={this.handleFormSubmit}>\r\n                    <div className=\"bx--grid\">\r\n                        <div className=\"bx--row\">\r\n                            <div className=\"bx--col\">\r\n                                <Select defaultValue=\"ticketing-system\" name=\"ticketingSystem\" labelText=\"Select Backend Ticketing System\" value={this.state.ticketingSystem} onChange={this.handleChanges}>\r\n                                    <SelectItem\r\n                                        text=\"Select\"\r\n                                        value=\"ticketing-system\"\r\n                                    />\r\n                                    {ticketingSystem.map((ticketingSystem, i) => <SelectItem key={i} text={ticketingSystem} value={ticketingSystem.toLowerCase()}>{ticketingSystem}</SelectItem>)}\r\n                                </Select>\r\n                                <TextInput name=\"userName\" labelText=\"User Name\" value={this.state.userName} onChange={this.handleChanges}/>\r\n                                <TextInput name=\"projectName\" labelText=\"Project Name\" value={this.state.projectName} onChange={this.handleChanges}/>\r\n                            </div>\r\n                            <div className=\"bx--col\">\r\n                                <TextInput name=\"url\" labelText=\"URL\" value={this.state.url} onChange={this.handleChanges}/>\r\n                                <TextInput name=\"password\" type=\"password\" labelText=\"Password\" value={this.state.password} onChange={this.handleChanges}/>\r\n                            </div>\r\n                        </div>\r\n                        <Button kind=\"primary\" tabIndex={0} type=\"submit\"> Submit  </Button>\r\n                    </div>\r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default TicketingSystem;","import { getDefaultOptions, request, getUrl } from './helpers';\r\n\r\nconst resource = 'api/entando-versions';\r\n\r\nexport const apiProductVersionsGet = async (serviceUrl) => {\r\n    const url = `${serviceUrl}/${resource}`;\r\n    const options = {\r\n        ...getDefaultOptions(),\r\n        method: 'GET',\r\n    };\r\n\r\n    return request(url, options);\r\n};\r\n\r\nexport const apiUpdateProductVersionsStatus = async (serviceUrl, id) => {\r\n    const url = `${serviceUrl}/${resource}/${id}`;\r\n    const options = {\r\n      ...getDefaultOptions(),\r\n      method: 'PUT',\r\n    };\r\n    return request(url, options);\r\n};\r\n\r\nexport const apiProductVersionPost = async (serviceUrl, productVersion) => {\r\n    const url = `${serviceUrl}/${resource}`;\r\n    const options = {\r\n      ...getDefaultOptions(),\r\n      method: 'POST',\r\n      body: productVersion ? JSON.stringify(productVersion) : null,\r\n    };\r\n    return request(url, options);\r\n};","import React, {Component} from 'react';\r\nimport { ModalWrapper, Form, TextInput, DatePicker, DatePickerInput} from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport { apiProductVersionPost } from '../../api/productVersion';\r\n\r\nclass AddProductVersionModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        this.state = {\r\n            name: '',\r\n            startDate: '',\r\n            endDate: '',\r\n        };\r\n    }\r\n\r\n    handleChanges = e => {\r\n        const input = e.target;\r\n        const name = input.name;\r\n        const value = input.value;\r\n        this.setState({ [name]: value });\r\n    };\r\n\r\n    handleFormSubmit = e => {\r\n        //e.preventDefault();\r\n        console.log('Name:', this.state.name);\r\n        console.log('start:', this.state.startDate);\r\n        console.log('end:', this.state.endDate);\r\n        console.log(this.state);\r\n        console.log(this.props.serviceUrl)\r\n        const productVersion = apiProductVersionPost(this.props.serviceUrl, this.state);\r\n        this.render();\r\n    };\r\n\r\n    isValid() {\r\n        if (this.state.name === '') {\r\n          return false;\r\n        }\r\n        return true;\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <ModalWrapper\r\n                buttonTriggerText=\"Add product version + \"\r\n                modalHeading=\"Add a new product version\"\r\n                buttonTriggerClassName=\"add-product-version bx--btn bx--btn--tertiary\"\r\n                className=\"modal-form\"\r\n                handleSubmit={this.handleFormSubmit}\r\n            >\r\n                <div className=\"form-container\">\r\n                    <p> Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse cursus fermentum risus, sit amet fringilla nunc pellentesque quis. </p>\r\n                    <Form onSubmit={this.handleFormSubmit}>\r\n                        <TextInput name=\"name\" labelText=\"Product Version\" value={this.state.name} onChange={this.handleChanges}  errorMessage={this.isValid() ? '' : 'This field is required'}/>\r\n                        <DatePicker dateFormat=\"m/d/Y\" datePickerType=\"simple\">\r\n                            <DatePickerInput\r\n                                name=\"startDate\"\r\n                                placeholder=\"mm/dd/yyyy\"\r\n                                labelText=\"Product Version Start Date\"\r\n                                value={this.state.startDate}\r\n                                onChange={this.handleChanges}\r\n                                type=\"text\"\r\n                            />\r\n                        </DatePicker>       \r\n                        <DatePicker dateFormat=\"m/d/Y\" datePickerType=\"simple\">\r\n                            <DatePickerInput\r\n                                name=\"endDate\"\r\n                                placeholder=\"mm/dd/yyyy\"\r\n                                labelText=\"Product Version End Date\"\r\n                                value={this.state.endDate}\r\n                                onChange={this.handleChanges}\r\n                                type=\"text\"\r\n                            />\r\n                        </DatePicker>                  \r\n                    </Form>\r\n                </div> \r\n            </ModalWrapper>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default withKeycloak(AddProductVersionModal);\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport { DataTable, TableContainer, Table, TableHead, TableRow, TableHeader, TableBody, TableCell, ToggleSmall, Button} from 'carbon-components-react';\r\nimport { SubtractAlt16 } from '@carbon/icons-react';\r\nimport { apiProductVersionsGet, apiUpdateProductVersionsStatus } from '../../../api/productVersion';\r\nimport withKeycloak from '../../../auth/withKeycloak';\r\nimport AddProductVersionModal from '../AddProductVersionModal';\r\n\r\n\r\nclass ProductVersion extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            data: \"\",\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getProductVersions();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const { keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n    \r\n        const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n    \r\n        if (authenticated && changedAuth) {\r\n          this.getProductVersions();\r\n        }\r\n    }\r\n\r\n    async getProductVersions() {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n        if (authenticated) {\r\n            const productVersions = await apiProductVersionsGet(this.props.serviceUrl);\r\n\r\n            this.setState({\r\n                data: productVersions\r\n            })\r\n        }\r\n    }\r\n\r\n    async handleToggleChange(id) {\r\n        await apiUpdateProductVersionsStatus(this.props.serviceUrl, id);\r\n    }\r\n\r\n    render() {\r\n        return ( \r\n            <div>\r\n                <DataTable rows={rowData} headers={headerData}>\r\n                {({ rows, headers, getHeaderProps, getTableProps }) => (\r\n                    <TableContainer>\r\n                        <Table {...getTableProps()}>\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    {headers.map((header) => (\r\n                                    <TableHeader {...getHeaderProps({ header })}>\r\n                                        {header.header}\r\n                                    </TableHeader>\r\n                                    ))}\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {Object.keys(this.state.data).length !== 0 ? this.state.data.data.map((productVersion, index) => (\r\n                                    <TableRow key={index}>\r\n                                        <TableCell>{productVersion.name}</TableCell>\r\n                                        <TableCell>\r\n                                            <ToggleSmall \r\n                                                onClick={() => this.handleToggleChange(productVersion.id)}\r\n                                                aria-label=\"toggle button\" \r\n                                                id={productVersion.id}\r\n                                                defaultToggled={productVersion.status ? true : false } />\r\n                                        </TableCell>\r\n                                        <TableCell>{productVersion.startDate}</TableCell>\r\n                                        <TableCell>{productVersion.endDate}</TableCell>\r\n                                    </TableRow>\r\n                                )) : null}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                )}\r\n                </DataTable>\r\n                <br/>\r\n                <AddProductVersionModal serviceUrl={this.props.serviceUrl} />\r\n            </div>    \r\n        );\r\n    }\r\n}\r\n\r\nconst headerData = [\r\n    {\r\n      header: 'Entando Version',\r\n      key: 'entVersion',\r\n    },\r\n    {\r\n      header: 'Status *',\r\n      key: 'status',\r\n    },\r\n    {\r\n      header: 'Start Date',\r\n      key: 'startDate',\r\n    },\r\n    {\r\n      header: 'Support End Date',\r\n      key: 'endDate',\r\n    }\r\n  ];\r\n\r\nconst rowData = [\r\n    {\r\n         id: 'a',\r\n         entVersion: '5.2',\r\n         status:  <ToggleSmall aria-label=\"toggle button\" defaultToggled id=\"status-1\" />,\r\n         startDate: 'April, 2018',\r\n         endDate: 'April, 2022',\r\n    },\r\n    {\r\n        id: 'b',\r\n        entVersion: '6.3',\r\n        status:  <ToggleSmall aria-label=\"toggle button\"  id=\"status-2\" />,\r\n        startDate: 'Jile, 2019',\r\n        endDate: 'April, 2023',\r\n    },\r\n    {\r\n        id: 'c',\r\n        entVersion: '6.2',\r\n        status:  <ToggleSmall aria-label=\"toggle button\" defaultToggled id=\"status-3\" />,\r\n        startDate: 'September, 2020',\r\n        endDate: 'April, 2024',\r\n     },\r\n];\r\n   \r\nexport default withKeycloak(ProductVersion);\r\n","import React from 'react';\r\nimport { Accordion, AccordionItem, Tile} from 'carbon-components-react';\r\nimport TicketingSystem from './TicketingSystem';\r\nimport ProductVersion from './ProductVersion';\r\n\r\nconst adminConfig = [\r\n    {\r\n        label: <div><p className=\"title\">Integration with Ticketing System</p><p className=\"desc\">This allows you to manage the ticketing system</p></div>,\r\n        content: <TicketingSystem />\r\n    },\r\n    {\r\n        label: <div><p className=\"title\">Manage Product Version</p><p className=\"desc\">This let’s you manage the entando product versions</p></div>,\r\n        content: <ProductVersion/>\r\n    }\r\n]\r\n\r\nconst AdminConfiguration = () => (\r\n    <div>\r\n        <h3 className=\"pageTitle\">Entando Admin View</h3>\r\n        <div className=\"form-container\">\r\n            <Tile>\r\n                <p className=\"title\">All Customers</p>\r\n                <p class=\"desc\">Lorem ipsum dolor sit lorem a amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt.</p>\r\n            </Tile>\r\n            <Accordion>\r\n                {adminConfig.map((item, index) => (\r\n                    <AccordionItem key={index.toString()} index={index} title={item.label} description={ item.description}>\r\n                        <p>{item.content}</p>\r\n                    </AccordionItem>\r\n                ))}\r\n            </Accordion>\r\n        </div>\r\n    </div>  \r\n)\r\n\r\nexport default AdminConfiguration;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport AdminConfiguration from '../components/Admin/Configuration/AdminConfiguration';\r\nimport '../index.scss'\r\nimport './dashboard.css'\r\n\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\n\r\nimport {\r\n  subscribeToWidgetEvent\r\n} from '../helpers/widgetEvents';\r\nimport {\r\n  KEYCLOAK_EVENT_TYPE,\r\n} from './widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window &&\r\n    window.entando &&\r\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\nconst ATTRIBUTES = {\r\n  hidden: 'hidden',\r\n  locale: 'locale',\r\n  paginationMode: 'pagination-mode',\r\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n  serviceUrl: 'service-url',\r\n};\r\n\r\nclass AdminConfigurationElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    \r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    //retargetEvents(shadowRoot);\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <AdminConfiguration serviceUrl={serviceUrl}/>\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.define('admin-configuration-widget', AdminConfigurationElement);\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport OpenTicket from '../components/Forms/openTicket';\r\nimport '../index.scss'\r\nimport './dashboard.css'\r\n\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\n\r\nimport {\r\n  subscribeToWidgetEvent\r\n} from '../helpers/widgetEvents';\r\nimport {\r\n  KEYCLOAK_EVENT_TYPE,\r\n} from '../custom-elements/widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window &&\r\n    window.entando &&\r\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\nconst ATTRIBUTES = {\r\n  hidden: 'hidden',\r\n  locale: 'locale',\r\n  paginationMode: 'pagination-mode',\r\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n  serviceUrl: 'service-url',\r\n};\r\n\r\nclass OpenTicketElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    \r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    //retargetEvents(shadowRoot);\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <OpenTicket serviceUrl={serviceUrl}/>\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.define('open-ticket-widget', OpenTicketElement);\r\n\r\n","import React, { Component } from 'react';\r\nimport { Form, TextInput, Select, SelectItem, Button} from 'carbon-components-react';\r\n\r\nclass AssignUSer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            projectName:'',\r\n            assignUser:'',\r\n            selectRole:''\r\n        }\r\n    }\r\n    \r\n    handleChanges = (e) => {\r\n        const input = e.target;\r\n        const name = input.name;\r\n        const value = input.value;\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    handleFormSubmit = (event) => {\r\n        console.log(this.state.assignUser)\r\n        event.preventDefault();\r\n    };\r\n\r\n    render() { \r\n        const assignUser = ['User1', 'User2'];\r\n        const selectRole = ['Role1', 'Role2'];\r\n        return (\r\n            <div className=\"\">\r\n                <Form onSubmit={this.handleFormSubmit}>\r\n                <div className=\"bx--grid\">\r\n                        <div className=\"bx--row\">\r\n                            <div className=\"bx--col\">\r\n                                <TextInput name=\"projectName\" labelText=\"Project Name\" value={this.state.projectName} onChange={this.handleChanges}/>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"bx--row\">\r\n                            <div className=\"bx--col\">\r\n                                <Select defaultValue=\"assign-user\" name=\"assignUser\" labelText=\"Assign User\" value={this.state.assignUser} onChange={this.handleChanges}>\r\n                                    <SelectItem\r\n                                        text=\"Assign User\"\r\n                                        value=\"assign-user\"\r\n                                    />\r\n                                    {assignUser.map((assignUser, i) => <SelectItem key={i} text={assignUser} value={assignUser.toLowerCase()}>{assignUser}</SelectItem>)}\r\n                                </Select>\r\n                            </div>\r\n                            <div className=\"bx--col\">\r\n                                <Select defaultValue=\"select-role\" name=\"selectRole\" labelText=\"Select Role\" value={this.state.selectRole} onChange={this.handleChanges}>\r\n                                    <SelectItem\r\n                                        text=\"Select Role\"\r\n                                        value=\"select-role\"\r\n                                    />\r\n                                    {selectRole.map((selectRole, i) => <SelectItem key={i} text={selectRole} value={selectRole.toLowerCase()}>{selectRole}</SelectItem>)}\r\n                                </Select>\r\n                            </div>\r\n                        </div>\r\n                        <Button kind=\"primary\" tabIndex={0} type=\"submit\" > Submit  </Button>\r\n                    </div>\r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default AssignUSer;","import React, { Component } from 'react';\r\nimport { DataTable, TableContainer, Table, TableHead, TableRow, TableHeader, TableBody, TableCell } from 'carbon-components-react';\r\nimport { SubtractAlt16 } from '@carbon/icons-react';\r\n\r\n\r\nclass DeleteUser extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n        this.state.filterText = \"\";\r\n    }\r\n    render() { \r\n        return ( \r\n            <DataTable rows={rowData} headers={headerData}>\r\n              {({ rows, headers, getHeaderProps, getTableProps }) => (\r\n                <TableContainer>\r\n                  <Table {...getTableProps()}>\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        {headers.map((header) => (\r\n                          <TableHeader {...getHeaderProps({ header })}>\r\n                            {header.header}\r\n                          </TableHeader>\r\n                        ))}\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {rows.map((row) => (\r\n                        <TableRow key={row.id}>\r\n                          {row.cells.map((cell) => (\r\n                            <TableCell key={cell.id}>{cell.value}</TableCell>\r\n                          ))}\r\n                        </TableRow>\r\n                      ))}\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n              )}\r\n            </DataTable>\r\n         );\r\n    }\r\n}\r\n\r\nconst headerData = [\r\n    {\r\n      header: 'User Name',\r\n      key: 'userName',\r\n    },\r\n    {\r\n      header: 'User Role',\r\n      key: 'userRole',\r\n    },\r\n    {\r\n      header: 'Date Added',\r\n      key: 'dateAdded',\r\n    },\r\n    {\r\n      header: 'User Access',\r\n      key: 'userAccess',\r\n    }\r\n  ];\r\n\r\nconst rowData = [\r\n    {\r\n         id: 'a',\r\n         userName: 'User1',\r\n         userRole: 'Role1',\r\n         dateAdded: 'April, 2019',\r\n         userAccess: <a onClick=''><SubtractAlt16 fill=\"red\" /> Remove User</a>,\r\n      },\r\n      {\r\n        id: 'b',\r\n        userName: 'User2',\r\n        userRole: 'Role2',\r\n        dateAdded: 'October, 2018',\r\n        userAccess: <a onClick=\"\"><SubtractAlt16 fill=\"red\" /> Remove User</a>\r\n      },\r\n      {\r\n        id: 'c',\r\n        userName: 'User3',\r\n        userRole: 'Role3',\r\n        dateAdded: 'August, 2017',\r\n        userAccess: <a onClick=\"\"><SubtractAlt16 fill=\"red\" /> Remove User</a>\r\n      },\r\n      {\r\n        id: 'd',\r\n        userName: 'User4',\r\n        userRole: 'Role4',\r\n        dateAdded: 'October, 2019',\r\n        userAccess: <a onClick=\"\"><SubtractAlt16 fill=\"red\" /> Remove User</a>\r\n      }  \r\n  ];\r\n  \r\nexport default DeleteUser;","import React from 'react';\r\nimport { Accordion, AccordionItem } from 'carbon-components-react';\r\nimport AssignUSer from './AssignUser';\r\nimport DeleteUser from './DeleteUser';\r\n\r\nconst user = [\r\n    {\r\n        label: <div><h4>Assign a new User</h4><p>Lorem ipsum, or lipsum as it is sometimes known, is dummy text used in laying out print, graphic or web designs.</p></div>,\r\n        content: <AssignUSer />\r\n    },\r\n    {\r\n        label: <div><h4>Manage all users</h4><p>Lorem ipsum, or lipsum as it is sometimes known, is dummy text used in laying out print, graphic or web designs.</p></div>,\r\n        content: <DeleteUser/>\r\n    }\r\n]\r\n\r\nconst ManageUser = () => (\r\n    <div>\r\n        <h3 className=\"pageTitle\">Entando Admin View</h3>\r\n        <div className=\"form-container\">\r\n            <Accordion>\r\n                {user.map((item, index) => (\r\n                    <AccordionItem key={index.toString()} index={index} title={item.label} description={ item.description}>\r\n                        <p>{item.content}</p>\r\n                    </AccordionItem>\r\n                ))}\r\n            </Accordion>\r\n        </div>\r\n    </div>    \r\n)\r\n\r\nexport default ManageUser;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport ManageUser from '../components/Admin/ManageUser/ManageUser';\r\nimport '../index.scss'\r\nimport './dashboard.css'\r\n\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\n\r\nimport {\r\n  subscribeToWidgetEvent\r\n} from '../helpers/widgetEvents';\r\nimport {\r\n  KEYCLOAK_EVENT_TYPE,\r\n} from '../custom-elements/widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window &&\r\n    window.entando &&\r\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\nconst ATTRIBUTES = {\r\n  hidden: 'hidden',\r\n  locale: 'locale',\r\n  paginationMode: 'pagination-mode',\r\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n  serviceUrl: 'service-url',\r\n};\r\n\r\nclass ManageUserElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    \r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    //retargetEvents(shadowRoot);\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <ManageUser serviceUrl={serviceUrl}/>\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.define('manage-user-widget', ManageUserElement);\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport AssignUser from '../components/Admin/ManageUser/AssignUser';\r\nimport '../index.scss'\r\nimport './dashboard.css'\r\n\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\n\r\nimport {\r\n  subscribeToWidgetEvent\r\n} from '../helpers/widgetEvents';\r\nimport {\r\n  KEYCLOAK_EVENT_TYPE,\r\n} from '../custom-elements/widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window &&\r\n    window.entando &&\r\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\nconst ATTRIBUTES = {\r\n  hidden: 'hidden',\r\n  locale: 'locale',\r\n  paginationMode: 'pagination-mode',\r\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n  serviceUrl: 'service-url',\r\n};\r\n\r\nclass AssignUserElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    \r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    //retargetEvents(shadowRoot);\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <AssignUser serviceUrl={serviceUrl}/>\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.define('assign-user-widget', AssignUserElement);\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport DeleteUser from '../components/Admin/ManageUser/DeleteUser';\r\nimport '../index.scss'\r\nimport './dashboard.css'\r\n\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\n\r\nimport {\r\n  subscribeToWidgetEvent\r\n} from '../helpers/widgetEvents';\r\nimport {\r\n  KEYCLOAK_EVENT_TYPE,\r\n} from '../custom-elements/widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window &&\r\n    window.entando &&\r\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\nconst ATTRIBUTES = {\r\n  hidden: 'hidden',\r\n  locale: 'locale',\r\n  paginationMode: 'pagination-mode',\r\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n  serviceUrl: 'service-url',\r\n};\r\n\r\nclass DeleteUserElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    \r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    //retargetEvents(shadowRoot);\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <DeleteUser serviceUrl={serviceUrl}/>\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.define('delete-user-widget', DeleteUserElement);\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport TicketingSystem from '../components/Admin/Configuration/TicketingSystem';\r\nimport '../index.scss'\r\nimport './dashboard.css'\r\n\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\n\r\nimport {\r\n  subscribeToWidgetEvent\r\n} from '../helpers/widgetEvents';\r\nimport {\r\n  KEYCLOAK_EVENT_TYPE,\r\n} from './widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window &&\r\n    window.entando &&\r\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\nconst ATTRIBUTES = {\r\n  hidden: 'hidden',\r\n  locale: 'locale',\r\n  paginationMode: 'pagination-mode',\r\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n  serviceUrl: 'service-url',\r\n};\r\n\r\nclass TicketingSystemElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    \r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    //retargetEvents(shadowRoot);\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <TicketingSystem serviceUrl={serviceUrl}/>\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.define('ticketing-system-widget', TicketingSystemElement);\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport ProductVersion from '../components/Admin/Configuration/ProductVersion';\r\nimport '../index.scss'\r\nimport './dashboard.css'\r\n\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\n\r\nimport {\r\n  subscribeToWidgetEvent\r\n} from '../helpers/widgetEvents';\r\nimport {\r\n  KEYCLOAK_EVENT_TYPE,\r\n} from './widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window &&\r\n    window.entando &&\r\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\nconst ATTRIBUTES = {\r\n  hidden: 'hidden',\r\n  locale: 'locale',\r\n  paginationMode: 'pagination-mode',\r\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n  serviceUrl: 'service-url',\r\n};\r\n\r\nclass ProductVersionElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    \r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    //retargetEvents(shadowRoot);\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <ProductVersion serviceUrl={serviceUrl}/>\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.define('product-version-widget', ProductVersionElement);\r\n\r\n","import React, {Component} from 'react';\r\nimport { Form, TextInput, Select, SelectItem, Button, DatePicker, DatePickerInput} from 'carbon-components-react';\r\n\r\nexport default class SubscriptionForm extends Component {\r\n    state = {\r\n        customerNo: '',\r\n        customerName: '',\r\n        customerType: '',\r\n        customerEmail: '',\r\n        projectName: '',\r\n        startDate: '',\r\n        subscriptionLevel: '',\r\n        subscriptionLength: '',\r\n        contactName: '',\r\n        contactEmail: '',\r\n        contactNo: ''\r\n    };\r\n\r\n    handleChanges = (e) => {\r\n        const input = e.target;\r\n        const name = input.name;\r\n        const value = input.value;\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    handleFormSubmit = (event) => {\r\n        console.log(this.state.customerType)\r\n        event.preventDefault();\r\n    };\r\n\r\n    render() {\r\n        const customerType = ['New', 'Existing'];\r\n        return (\r\n            <div>\r\n                <h3 className=\"pageTitle\">Welcome to Entando Portal</h3>\r\n                <div className=\"form-container\">\r\n                    <Form onSubmit={this.handleFormSubmit}>\r\n                        <div className=\"form-desc\">\r\n                            <h4>New / Renew Subscription</h4>\r\n                            <p>Lorem ipsum, or lipsum as it is sometimes known, is dummy text used in laying out print, graphic or web designs. </p>\r\n                        </div>\r\n                        <div className=\"bx--grid\">\r\n                            <div className=\"bx--row\">\r\n                                <div className=\"bx--col\">\r\n                                    <Select defaultValue=\"customer-type\" name=\"customerType\" labelText=\"Customer Type *\" required value={this.state.customerType} onChange={this.handleChanges}>\r\n                                        <SelectItem\r\n                                            text=\"Select Customer Type\"\r\n                                            value=\"customer-type\"\r\n                                        />\r\n                                        {customerType.map((customerType, i) => <SelectItem key={i} text={customerType} required value={customerType.toLowerCase()}>{customerType}</SelectItem>)}\r\n                                    </Select>\r\n                                    <TextInput name=\"customerNo\" labelText=\"Customer Number *\" required value={this.state.customerNo} onChange={this.handleChanges}/>\r\n                                </div>\r\n                                <div className=\"bx--col\">\r\n                                    <TextInput name=\"customerName\" labelText=\"Customer Name *\" required value={this.state.customerName} onChange={this.handleChanges} />\r\n                                    <TextInput name=\"customerEmail\" labelText=\"Customer Email *\" required value={this.state.customerEmail} onChange={this.handleChanges}/>\r\n                                </div>\r\n                            </div>\r\n                            { this.renderForm()}\r\n                            <Button kind=\"primary\" tabIndex={0} type=\"submit\" > Submit  </Button>\r\n                        </div>\r\n                    </Form>\r\n                </div>\r\n            </div>    \r\n        );\r\n    }\r\n\r\n    // Render the Customer Type Form\r\n    renderForm() {\r\n        const subscriptionLevel = ['Level1', 'Level2', 'Level3'];\r\n        const subscriptionLength = ['1 Year','2 Years', '3 Years'];\r\n        if (this.state.customerType === 'new') return (\r\n            <div>\r\n                <p><strong>New Subscription</strong></p><br/>\r\n                <div className=\"bx--row\">\r\n                    <div className=\"bx--col\">\r\n                        <TextInput name=\"projectName\" labelText=\"Project Name *\" required value={this.state.projectName} onChange={this.handleChanges} />\r\n                        <Select defaultValue=\"subscription-level\" name=\"subscriptionLevel\" labelText=\"Desired subscription Level\" value={this.state.subscriptionLevel} onChange={this.handleChanges}>\r\n                            <SelectItem\r\n                                text=\"Choose an option\"\r\n                                value=\"subscription-level\"\r\n                            />\r\n                            {subscriptionLevel.map((subscriptionLevel, i) => <SelectItem key={i} text={subscriptionLevel} value={subscriptionLevel.toLowerCase()}>{subscriptionLevel}</SelectItem>)}\r\n                        </Select>\r\n                        <TextInput name=\"contactName\" labelText=\"Contact Name *\" required value={this.state.contactName} onChange={this.handleChanges} />\r\n                        <TextInput name=\"contactNumber\" labelText=\"Contact Phone Number\" value={this.state.contactNo} onChange={this.handleChanges} />\r\n                    </div>\r\n                    <div className=\"bx--col\">\r\n                        <DatePicker dateFormat=\"m/d/Y\" datePickerType=\"simple\">\r\n                            <DatePickerInput\r\n                                name=\"startDate\"\r\n                                placeholder=\"mm/dd/yyyy\"\r\n                                labelText=\"Desired Subscription Start Date *\"\r\n                                value={this.state.startDate}\r\n                                onChange={ this.handleChanges}\r\n                                type=\"text\"\r\n                                required\r\n                            />\r\n                        </DatePicker>\r\n                        <Select defaultValue=\"subscription-length\" name=\"subscriptionLength\" labelText=\"Desired subscription Length\" value={this.state.subscriptionLength} onChange={this.handleChanges}>\r\n                            <SelectItem\r\n                                text=\"Choose an option\"\r\n                                value=\"subscription-length\"\r\n                            />\r\n                            {subscriptionLength.map((subscriptionLength, i) => <SelectItem key={i} text={subscriptionLength} value={subscriptionLength.toLowerCase()}>{subscriptionLength}</SelectItem>)}\r\n                        </Select>\r\n                        <TextInput name=\"contactEmail\" labelText=\"Contact Email *\" required value={this.state.contactEmail} onChange={this.handleChanges} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n\r\n        if (this.state.customerType === 'existing') return (\r\n            <div>\r\n                <p><strong>Renew Subscription</strong></p><br/>\r\n                <div className=\"bx--row\">\r\n                    <div className=\"bx--col\">\r\n                        <TextInput name=\"projectName\" labelText=\"Project Name\" value={this.state.projectName} onChange={this.handleChanges} />\r\n                        <Select defaultValue=\"subscription-level\" name=\"subscriptionLevel\" labelText=\"Desired subscription Level\" value={this.state.subscriptionLevel} onChange={this.handleChanges}>\r\n                            <SelectItem\r\n                                text=\"Choose an option\"\r\n                                value=\"subscription-level\"\r\n                            />\r\n                            {subscriptionLevel.map((subscriptionLevel, i) => <SelectItem key={i} text={subscriptionLevel} value={subscriptionLevel.toLowerCase()}>{subscriptionLevel}</SelectItem>)}\r\n                        </Select>\r\n                        <TextInput name=\"contactName\" labelText=\"Contact Name *\" required value={this.state.contactName} onChange={this.handleChanges} />\r\n                        <TextInput name=\"contactNumber\" labelText=\"Contact Phone Number\" value={this.state.contactNo} onChange={this.handleChanges} />\r\n                    </div>\r\n                    <div className=\"bx--col\">\r\n                        <DatePicker dateFormat=\"m/d/Y\" datePickerType=\"simple\">\r\n                            <DatePickerInput\r\n                                name=\"startDate\"\r\n                                placeholder=\"mm/dd/yyyy\"\r\n                                labelText=\"Desired Subscription Start Date *\"\r\n                                value={this.state.startDate}\r\n                                onChange={ this.handleChanges}\r\n                                type=\"text\"\r\n                                required\r\n                            />\r\n                        </DatePicker>\r\n                        <Select defaultValue=\"subscription-length\" name=\"subscriptionLength\" labelText=\"Desired subscription Length\" value={this.state.subscriptionLength} onChange={this.handleChanges}>\r\n                            <SelectItem\r\n                                text=\"Choose an option\"\r\n                                value=\"subscription-length\"\r\n                            />\r\n                            {subscriptionLength.map((subscriptionLength, i) => <SelectItem key={i} text={subscriptionLength} value={subscriptionLength.toLowerCase()}>{subscriptionLength}</SelectItem>)}\r\n                        </Select>\r\n                        <TextInput name=\"contactEmail\" labelText=\"Contact Email *\" required value={this.state.contactEmail} onChange={this.handleChanges} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport SubsciptionForm from '../components/Forms/SubscriptionForm';\r\nimport '../index.scss'\r\nimport './dashboard.css'\r\n\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\n\r\nimport {\r\n  subscribeToWidgetEvent\r\n} from '../helpers/widgetEvents';\r\nimport {\r\n  KEYCLOAK_EVENT_TYPE,\r\n} from '../custom-elements/widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window &&\r\n    window.entando &&\r\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\nconst ATTRIBUTES = {\r\n  hidden: 'hidden',\r\n  locale: 'locale',\r\n  paginationMode: 'pagination-mode',\r\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n  serviceUrl: 'service-url',\r\n};\r\n\r\nclass SubsciptionFormElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    \r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    //retargetEvents(shadowRoot);\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <SubsciptionForm serviceUrl={serviceUrl}/>\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.define('subscription-form-widget', SubsciptionFormElement);\r\n\r\n"],"sourceRoot":""}