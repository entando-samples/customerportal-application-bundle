{"version":3,"sources":["i18n.js","auth/KeycloakContext.js","components/__types__/ref.js","auth/withKeycloak.js","api/helpers.js","api/customers.js","components/Admin/AddCustomerModal.js","helpers/widgetEvents.js","custom-elements/widgetEventTypes.js","custom-elements/AdminAddCustomerElement.js","api/ticketingsystem.js","components/Admin/Configuration/TicketingSystem.js","api/productVersion.js","components/Admin/AddProductVersionModal.js","components/Admin/EditVersionModal.js","components/Admin/Configuration/ProductVersion.js","components/Admin/Configuration/AdminConfiguration.js","custom-elements/AdminConfigurationElement.js","api/partners.js","api/projects.js","auth/KeycloakViews.js","components/Admin/AddPartnerModal.js","components/Admin/AddProjectModal.js","components/Admin/EditProjectModal.js","components/Admin/ManagePartnersModal.js","components/Admin/ProjectActionItems.js","api/subscriptions.js","components/Customer/CustomerDataTable.js","components/Customer/CustomerDetails.js","components/Admin/EditCustomerModal.js","components/Customer/CustomerAccordian.js","components/Admin/AdminDashboard.js","custom-elements/AdminDashboardElement.js","api/tickets.js","components/SubscriptionDetails/TicketList.js","components/Admin/EditSubscriptionModal.js","components/SubscriptionDetails/Subscription.js","components/Customer/CustomerProjectList.js","components/App.js","custom-elements/AppElement.js","api/portalusers.js","api/keycloak.js","components/Admin/ManageUser/AssignUser.js","custom-elements/AssignUserElement.js","components/Admin/ManageUser/DeleteUser.js","custom-elements/DeleteUserElement.js","components/Forms/OpenTicketForm.js","custom-elements/FormsOpenTicketElement.js","components/Admin/ManageSubscriptions/ManageSubscriptions.js","custom-elements/ManageSubscriptionsElement.js","components/Admin/ManageUser/ManageUser.js","custom-elements/ManageUserElement.js","components/Navigation/Navigation.js","custom-elements/NavigationElement.js","custom-elements/OpenTicketElement.js","custom-elements/ProductVersionElement.js","custom-elements/SubscriptionElement.js","components/Forms/SubscriptionForm.js","custom-elements/SubscriptionFormElement.js","custom-elements/TicketListElement.js","custom-elements/TicketingSystemElement.js","local/LocalApp.js","local/LocalAppElement.js"],"names":["i18n","defaultLocale","locale","fallbacks","translations","en","it","setLocale","KeycloakContext","PropTypes","oneOfType","func","shape","current","elementType","React","createContext","withKeycloak","WrappedComponent","WithKeycloakComponent","renderWrappedComponent","value","props","forwardedRef","rest","ref","keycloak","Consumer","this","Component","defaultProps","forwardRef","getKeycloakToken","window","entando","authenticated","token","isAuthenticated","initialized","authenticationChanged","prevProps","changedAuth","isPortalAdmin","hasKeycloakClientRole","isPortalSupport","isPortalPartner","isPortalCustomer","isPortalAdminOrSupport","isPortalUser","clientRole","resourceAccess","client","item","roles","includes","getDefaultOptions","headers","Headers","Authorization","getDefaultKeycloakOptions","getActiveSubscription","project","projectSubscriptions","find","status","getUrl","url","request","options","a","fetch","response","has","parseInt","get","data","json","Promise","reject","Error","statusText","resource","apiCustomerDelete","serviceUrl","id","method","apiCustomersGet","apiCustomerGet","apiCustomerPost","customer","body","JSON","stringify","apiCustomerPut","apiAddProjectToCustomer","customerId","projectId","apiDeleteProjectFromCustomer","handleChanges","e","input","target","name","setState","handleFormSubmit","handleValidation","state","customerNumber","contactName","contactPhone","contactEmail","notes","customerPost","then","submitMsg","t","submitColour","updateCustomerList","catch","clearValues","document","querySelector","className","baseState","invalid","formIsValid","lastAtPos","lastIndexOf","lastDotPos","indexOf","length","addEventListener","modalConfirmation","style","color","modalId","ModalWrapper","buttonTriggerText","modalHeading","buttonTriggerClassName","handleSubmit","primaryButtonText","secondaryButtonText","Form","onSubmit","TextInput","labelText","onChange","invalidText","TextArea","subscribeToWidgetEvent","eventType","eventHandler","removeEventListener","KEYCLOAK_EVENT_TYPE","getKeycloakInstance","ATTRIBUTES","AdminAddCustomerElement","mountPoint","createElement","unsubscribeFromKeycloakEvent","render","appendChild","getAttribute","Locale","ReactDOM","Provider","HTMLElement","customElements","define","apiTicketingSystemDelete","apiCurrentTicketingSystemGet","apiTicketingSystemsGet","ticketingSystems","apiTicketingSystemPost","ticketingSystem","secret","tsRequest","apiTicketingSystemPut","event","preventDefault","updateTicketingSystem","createTicketingSystem","ticketingSystemType","serviceAccount","serviceAccountSecret","systemId","fetchData","confirm","deleteTicketingSystem","Select","SelectItem","text","map","type","i","Button","kind","tabIndex","onClick","handleDelete","apiProductVersionsGet","apiProductVersionGet","versionId","apiUpdateProductVersionsStatus","apiProductVersionPost","productVersion","apiProductVersionPut","apiProductVersionDelete","addProductVersion","updateProductVersions","handleStartDateChange","date","startDate","moment","toISOString","format","handleEndDateChange","endDate","match","DatePicker","dateFormat","datePickerType","DatePickerInput","placeholder","version","versionPut","buttonId","getVersionDetails","buttonClassName","ProductVersion","handleDeleteVersion","deleteVersion","getProductVersions","versions","productVersions","DataTable","rows","rowData","headerData","getHeaderProps","getTableProps","TableContainer","Table","TableHead","TableRow","header","TableHeader","TableBody","Object","keys","index","TableCell","Toggle","size","handleToggleChange","aria-label","defaultToggled","display","width","key","entVersion","loading","adminConfig","label","content","Tile","Accordion","AccordionItem","title","description","toString","AdminConfigurationElement","apiPartnerPost","partner","apiProjectsGet","apiProjectGet","apiProjectPost","apiProjectPut","apiAddSubscriptionToProject","subscriptionId","apiAddUserToProject","userId","apiDeletePartnerFromProject","partnerId","apiDeleteSubscriptionFromProject","apiDeleteUserFromProject","apiAddPartnerToProject","apiGetProjectUsers","apiGetProjectSubscriptions","AuthenticatedView","children","UnauthenticatedView","partnerNumber","partnerPost","projectList","projects","result","trim","alert","projectPost","getAllProjects","customerList","getCustomers","customers","allCustomers","allProjects","projectPut","updateProjectList","getProjectDetails","ManagePartnersModal","handleRemovePartner","removePartner","err","console","log","hasForm","partners","margin","border","borderTop","handleClick","showMenu","handleOutsideClick","prevState","node","contains","isAdmin","actionDivider","topButton","padding","editProjectSubscription","subscriptionParam","subscription","newOrRenewSubscription","href","textDecoration","managePartners","manageUsers","manageSubscriptions","openTicket","viewAllTickets","substr","rel","deleteProject","handleDeleteProject","zIndex","position","backgroundColor","to","formatStartDate","String","Date","toDateString","formatEndDate","lengthInMonths","setMonth","getMonth","apiSubscriptionGet","apiProjectSubscriptionPost","projectSubscriptionCreation","apiProjectSubscriptionPut","apiRenewSubscription","projectSubscriptionRenew","action","callback","partnerIndex","entandoVersion","tickets","minHeight","paddingBottom","getCustomerDetails","getCustomer","updateCustomer","deleteCustomer","open","accordionOpened","getTime","handleSearch","newFilteredState","filter","toLowerCase","filteredCustomers","currentPage","undefined","forceUpdate","role","test","numberOfPages","Math","ceil","Search","onKeyPress","indexOfLastItem","firstIndexOfCurrentPage","PaginationNav","loop","Boolean","page","Number","totalItems","itemsShown","AdminDashboardElement","jiraResource","apiJiraTicketsGet","apiJiraTicketPost","ticket","ticketSystemUrl","ticketingSystemBaseUrl","ticketUrl","summary","priority","createDate","updateDate","subscriptionRequest","projectSubscription","level","subscriptionPut","updateSubscription","isNumeric","str","isNaN","parseFloat","getSubscriptionDetails","disabled","subscriptionData","users","params","license","user","username","path","AppElement","apiUserPost","apiUserGetByUsername","apiKeycloakUserGet","realm","usersResource","mapKeycloakUserEmails","keycloakUsers","usernameEmailMap","Map","forEach","keycloakUser","set","email","assignUser","handleFormValidation","assignUserToProject","res","dispatchEvent","CustomEvent","getPortalUserId","portalUserId","portalUserApi","portalUser","message","createPortalUser","authServerUrl","keycloakUrl","search","location","URLSearchParams","userList","unshift","setupFormComponents","AssignUserElement","handleRemoveUser","warn","displayUsers","handleUserDisplay","userAccess","row","cells","cell","DeleteUserElement","createTicket","types","priorities","error","FormsOpenTicketElement","handleDeleteSubscription","deleteSubscription","subscriptions","ManageSubscriptionsElement","userFunctionality","ManageUserElement","Navigation","NavigationElement","OpenTicketElement","ProductVersionElement","SubscriptionElement","FORM_TYPE","SUBSCRIPTION_LEVEL","GOLD","PLATINUM","SUBSCRIPTION_STATUS","requested","pending","active","expired","submitSuccess","submitError","formatted","formType","stateToSubscription","updateStateForSuccess","newSubscription","renewSubscription","entandoVersionId","success","renewal","toUpperCase","subscriptionLevelList","entries","versionList","statusList","subscriptionType","createFormMessage","subMessageKey","titleKey","formLabelKey","successErrorMessage","renderForm","SubscriptionFormElement","TicketListCustomerElement","TicketingSystemElement","logout","forceRefresh","exact","LocalAppElement"],"mappings":"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","file":"static/js/main.9ef37247.chunk.js","sourcesContent":["import i18n from 'i18n-js';\n\nimport en from './i18n/locales/en.json';\nimport it from './i18n/locales/it.json';\n\ni18n.defaultLocale = 'en';\ni18n.locale = 'en';\ni18n.fallbacks = true;\ni18n.translations = { en, it };\n\nexport const setLocale = locale => {\n  i18n.locale = locale;\n};\n\nexport default i18n;\n","import React from 'react';\n\nconst KeycloakContext = React.createContext(null);\n\nexport default KeycloakContext;\n","import PropTypes from 'prop-types';\n\nexport default PropTypes.oneOfType([PropTypes.func, PropTypes.shape({ current: PropTypes.elementType }), PropTypes.shape(null)]);\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React, { forwardRef, Component } from 'react';\nimport refType from '../components/__types__/ref';\nimport KeycloakContext from './KeycloakContext';\n\nexport default function withKeycloak(WrappedComponent) {\n  class WithKeycloakComponent extends Component {\n    renderWrappedComponent = value => {\n      const { forwardedRef, ...rest } = this.props;\n      return <WrappedComponent {...rest} ref={forwardedRef} keycloak={value} />;\n    };\n\n    render() {\n      return <KeycloakContext.Consumer>{this.renderWrappedComponent}</KeycloakContext.Consumer>;\n    }\n  }\n\n  WithKeycloakComponent.propTypes = {\n    forwardedRef: refType,\n  };\n\n  WithKeycloakComponent.defaultProps = {\n    forwardedRef: () => {},\n  };\n\n  return forwardRef((props, ref) => <WithKeycloakComponent {...props} forwardedRef={ref} />);\n}\n","export const getKeycloakToken = () => {\n  if (window && window.entando && window.entando.keycloak && window.entando.keycloak.authenticated) {\n    return window.entando.keycloak.token;\n  }\n  return '';\n};\n\nconst ADMIN = 'cp-admin';\nconst SUPPORT = 'cp-support';\nconst PARTNER = 'cp-partner';\nconst CUSTOMER = 'cp-customer';\n\nexport const isAuthenticated = props => {\n  const {keycloak} = props;\n  return keycloak.initialized && keycloak.authenticated;\n};\n\nexport const authenticationChanged = (props, prevProps) => {\n  const authenticated = isAuthenticated(props);\n  const changedAuth = prevProps.keycloak.authenticated !== authenticated;\n  return authenticated && changedAuth;\n};\n\nexport const isPortalAdmin = () => {\n  return hasKeycloakClientRole(ADMIN);\n};\n\nexport const isPortalSupport = () => {\n  return hasKeycloakClientRole(SUPPORT);\n};\n\nexport const isPortalPartner = () => {\n  return hasKeycloakClientRole(PARTNER);\n};\n\nexport const isPortalCustomer = () => {\n  return hasKeycloakClientRole(CUSTOMER);\n};\n\nexport const isPortalAdminOrSupport = () => {\n  return isPortalAdmin() || isPortalSupport();\n};\n\nexport const isPortalCustomerOrPartner = () => {\n  return isPortalCustomer() || isPortalPartner();\n};\n\nexport const isPortalUser = () => {\n  return isPortalAdminOrSupport() || isPortalCustomerOrPartner();\n};\n\nexport const hasKeycloakClientRole = clientRole => {\n  if (getKeycloakToken()) {\n    const { resourceAccess } = window.entando.keycloak;\n    if (resourceAccess) {\n      for (const client in resourceAccess) {\n        const item = resourceAccess[client];\n        if (item.roles && item.roles.includes(clientRole)) {\n          // console.debug(\"Found role {} with client {} \", clientRole, client);\n          return true;\n        }\n      }\n    }\n  }\n  return false;\n};\n\nexport const getDefaultOptions = () => ({\n  headers: new Headers({\n    Authorization: `Bearer ${getKeycloakToken()}`,\n    'Content-Type': 'application/json',\n  }),\n});\n\nexport const getDefaultKeycloakOptions = () => ({\n  headers: new Headers({\n    Authorization: `Bearer ${getKeycloakToken()}`,\n    'Content-Type': 'application/x-www-form-urlencoded',\n  }),\n});\n\nexport const getActiveSubscription = project => {\n  return (\n    project &&\n    project.projectSubscriptions &&\n    project.projectSubscriptions.find(item => {\n      return item.status === 'ACTIVE' ? item : null;\n    })\n  );\n};\n\nexport const getUrl = url => {\n  return `${url}`;\n};\n\nexport const request = async (url, options) => {\n  const response = await fetch(url, options);\n\n  const headers = {\n    ...(response.headers.has('X-Total-Count') ? {'X-Total-Count': parseInt(response.headers.get('X-Total-Count'), 10)} : {}),\n  };\n\n  if (response.status === 204) {\n    return { data: '', status: response.status };\n  }\n\n  return response.status >= 200 && response.status < 300\n    ? { data: await response.json(), headers, status: response.status }\n    : Promise.reject(new Error(response.statusText || response.status));\n};\n","import { getDefaultOptions, request, getUrl } from './helpers';\n\nconst resource = 'api/customers';\n\nexport const apiCustomerDelete = async (serviceUrl, id) => {\n  const url = `${serviceUrl}/${resource}/${id}`;\n  const options = {\n    ...getDefaultOptions(),\n    method: 'DELETE',\n  };\n  return request(url, options);\n};\n\nexport const apiCustomersGet = async serviceUrl => {\n  const url = getUrl(`${serviceUrl}/${resource}`);\n  const options = {\n    ...getDefaultOptions(),\n    method: 'GET',\n  };\n\n  return request(url, options);\n};\n\nexport const apiCustomerGet = async (serviceUrl, id) => {\n  const url = getUrl(`${serviceUrl}/${resource}/${id}`);\n  const options = {\n    ...getDefaultOptions(),\n    method: 'GET',\n  };\n\n  return request(url, options);\n};\n\nexport const apiCustomerPost = async (serviceUrl, customer) => {\n  const url = `${serviceUrl}/${resource}`;\n  const options = {\n    ...getDefaultOptions(),\n    method: 'POST',\n    body: customer ? JSON.stringify(customer) : null,\n  };\n  return request(url, options);\n};\n\nexport const apiCustomerPut = async (serviceUrl, customer) => {\n  const url = `${serviceUrl}/${resource}`;\n  const options = {\n    ...getDefaultOptions(),\n    method: 'PUT',\n    body: customer ? JSON.stringify(customer) : null,\n  };\n  return request(url, options);\n};\n\nexport const apiAddProjectToCustomer = async (serviceUrl, customerId, projectId) => {\n  const url = `${serviceUrl}/${resource}/${customerId}/projects/${projectId}`;\n  const options = {\n    ...getDefaultOptions(),\n    method: 'POST',\n  };\n  return request(url, options);\n};\n\nexport const apiDeleteProjectFromCustomer = async (serviceUrl, customerId, projectId) => {\n  const url = `${serviceUrl}/${resource}/${customerId}/projects/${projectId}`;\n  const options = {\n    ...getDefaultOptions(),\n    method: 'DELETE',\n  };\n  return request(url, options);\n};\n","import React, { Component } from 'react';\nimport i18n from '../../i18n';\nimport { ModalWrapper, Form, TextInput, TextArea } from 'carbon-components-react';\nimport withKeycloak from '../../auth/withKeycloak';\nimport { apiCustomerPost } from '../../api/customers';\n\nclass AddCustomerModal extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      name: '',\n      customerNumber: '',\n      contactName: '',\n      contactPhone: '',\n      contactEmail: '',\n      notes: '',\n      invalid: {},\n      submitMsg: '',\n      submitColour: 'black',\n    };\n\n    this.baseState = this.state;\n  }\n\n  handleValidation() {\n    let invalid = {};\n    let formIsValid = true;\n\n    if (this.state.name === '') {\n      formIsValid = false;\n      invalid['name'] = true;\n    }\n\n    if (this.state.customerNumber === '') {\n      formIsValid = false;\n      invalid['customerNumber'] = true;\n    }\n\n    if (typeof this.state.contactEmail !== 'undefined') {\n      let lastAtPos = this.state.contactEmail.lastIndexOf('@');\n      let lastDotPos = this.state.contactEmail.lastIndexOf('.');\n\n      if (\n        !(\n          lastAtPos < lastDotPos &&\n          lastAtPos > 0 &&\n          this.state.contactEmail.indexOf('@@') === -1 &&\n          lastDotPos > 2 &&\n          this.state.contactEmail.length - lastDotPos > 2\n        )\n      ) {\n        formIsValid = false;\n        invalid['contactEmail'] = true;\n      }\n    }\n\n    this.setState({ invalid: invalid });\n    return formIsValid;\n  }\n\n  handleChanges = e => {\n    const input = e.target;\n    const name = input.name;\n    const value = input.value;\n    this.setState({ [name]: value });\n  };\n\n  async customerPost(customer) {\n    const { keycloak } = this.props;\n    const authenticated = keycloak.initialized && keycloak.authenticated;\n    if (authenticated) {\n      return await apiCustomerPost(this.props.serviceUrl, customer);\n    }\n  }\n\n  handleFormSubmit = () => {\n    const formIsValid = this.handleValidation();\n\n    if (formIsValid) {\n      const customer = {\n        name: this.state.name,\n        customerNumber: this.state.customerNumber,\n        contactName: this.state.contactName,\n        contactPhone: this.state.contactPhone,\n        contactEmail: this.state.contactEmail,\n        notes: this.state.notes,\n      };\n\n      this.customerPost(customer)\n        .then(() => {\n          this.setState({\n            submitMsg: i18n.t('submitMessages.added'),\n            submitColour: '#24a148',\n          });\n          this.props.updateCustomerList();\n        })\n        .catch(() => {\n          this.setState({\n            submitMsg: i18n.t('submitMessages.error'),\n            submitColour: '#da1e28',\n          });\n        });\n    }\n  };\n\n  clearValues = () => {\n    const customerModalElement = document.querySelector('#modal-form-customer');\n    if (!customerModalElement.className.includes('is-visible')) {\n      this.setState(this.baseState);\n    }\n  };\n\n  componentDidMount() {\n    const modalOpenButton = document.querySelector('.add-customer-button');\n    modalOpenButton.addEventListener('click', this.clearValues, false);\n  }\n\n  render() {\n    const modalConfirmation = (\n      <div className=\"bx--modal-header\">\n        <p style={{color: this.state.submitColour}}>{this.state.submitMsg}</p>\n      </div>\n    );\n    const modalId = 'modal-form-customer';\n    return (\n      <ModalWrapper\n        buttonTriggerText={i18n.t('buttons.addCustomer')}\n        modalHeading={i18n.t('adminDashboard.addCustomer.title')}\n        buttonTriggerClassName=\"add-customer bx--btn bx--btn--tertiary add-customer-button\"\n        className=\"modal-form\"\n        id={modalId}\n        handleSubmit={this.handleFormSubmit}\n        primaryButtonText={i18n.t('modalText.save')}\n        secondaryButtonText={i18n.t('modalText.cancel')}\n      >\n        {modalConfirmation}\n        <div className=\"form-container\">\n          <Form onSubmit={this.handleFormSubmit}>\n            <TextInput\n              id={'name' + modalId}\n              name=\"name\"\n              labelText={i18n.t('adminDashboard.addCustomer.customerName') + ' *'}\n              value={this.state.name}\n              onChange={this.handleChanges}\n              invalidText={i18n.t('validation.invalid.required')}\n              invalid={this.state.invalid['name']}\n            />\n            <TextInput\n              id={'customerNumber' + modalId}\n              name=\"customerNumber\"\n              labelText={i18n.t('adminDashboard.addCustomer.customerNumber') + ' *'}\n              value={this.state.customerNumber}\n              onChange={this.handleChanges}\n              invalidText={i18n.t('validation.invalid.required')}\n              invalid={this.state.invalid['customerNumber']}\n            />\n            <TextInput\n              id={'contactName' + modalId}\n              name=\"contactName\"\n              labelText={i18n.t('adminDashboard.addCustomer.contactName')}\n              value={this.state.contactName}\n              onChange={this.handleChanges}\n            />\n            <TextInput\n              id={'contactPhone' + modalId}\n              name=\"contactPhone\"\n              labelText={i18n.t('adminDashboard.addCustomer.contactPhone')}\n              value={this.state.contactPhone}\n              onChange={this.handleChanges}\n            />\n            <TextInput\n              id={'contactEmail' + modalId}\n              name=\"contactEmail\"\n              labelText={i18n.t('adminDashboard.addCustomer.contactEmail') + ' *'}\n              value={this.state.contactEmail}\n              onChange={this.handleChanges}\n              invalidText={i18n.t('validation.invalid.email')}\n              invalid={this.state.invalid['contactEmail']}\n            />\n            <TextArea\n              id={'notes' + modalId}\n              name=\"notes\"\n              labelText={i18n.t('adminDashboard.addCustomer.notes')}\n              value={this.state.notes}\n              onChange={this.handleChanges}\n            />\n          </Form>\n        </div>\n        {modalConfirmation}\n      </ModalWrapper>\n    );\n  }\n}\n\nexport default withKeycloak(AddCustomerModal);\n","export const publishWidgetEvent = (eventId, payload) => {\n  const widgetEvent = new CustomEvent(eventId, {\n    detail: {\n      payload,\n    },\n  });\n  window.dispatchEvent(widgetEvent);\n};\n\nexport const createWidgetEventPublisher = eventType => payload => publishWidgetEvent(eventType, payload);\n\nexport const subscribeToWidgetEvent = (eventType, eventHandler) => {\n  window.addEventListener(eventType, eventHandler);\n\n  return () => {\n    window.removeEventListener(eventType, eventHandler);\n  };\n};\n\nexport const subscribeToWidgetEvents = (widgetEvents, eventHandler) => {\n  widgetEvents.forEach(eventType => window.addEventListener(eventType, eventHandler));\n\n  return () => {\n    widgetEvents.forEach(eventType => window.removeEventListener(eventType, eventHandler));\n  };\n};\n\nexport const widgetEventToFSA = widgetEvent => {\n  // for info about Flux Standard Action (FSA) see https://github.com/redux-utilities/flux-standard-action\n  const {\n    type,\n    detail: { payload, error, meta },\n  } = widgetEvent;\n  return { type, payload, error, meta };\n};\n","export const INPUT_EVENT_TYPES = {\n  formUpdate: 'customer.form.update',\n  formCreate: 'customer.form.create',\n  formDelete: 'customer.form.delete',\n};\n\nexport const OUTPUT_EVENT_TYPES = {\n  select: 'customer.table.select',\n  add: 'customer.table.add',\n  error: 'customer.table.error',\n  delete: 'customer.table.delete',\n};\n\nexport const KEYCLOAK_EVENT_TYPE = 'keycloak';\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport AddCustomerModal from '../components/Admin/AddCustomerModal';\nimport '../index.scss';\n\nimport KeycloakContext from '../auth/KeycloakContext';\n\nimport {subscribeToWidgetEvent} from '../helpers/widgetEvents';\nimport {KEYCLOAK_EVENT_TYPE} from '../custom-elements/widgetEventTypes';\nimport * as Locale from '../i18n';\n\nconst getKeycloakInstance = () =>\n  (window && window.entando && window.entando.keycloak && {...window.entando.keycloak, initialized: true}) || {\n    initialized: false,\n  };\n\nconst ATTRIBUTES = {\n  hidden: 'hidden',\n  locale: 'locale',\n  paginationMode: 'pagination-mode',\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\n  serviceUrl: 'service-url',\n};\n\nclass AdminAddCustomerElement extends HTMLElement {\n  container;\n\n  mountPoint;\n\n  unsubscribeFromKeycloakEvent;\n\n  keycloak = getKeycloakInstance();\n\n  connectedCallback() {\n    this.mountPoint = document.createElement('div');\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\n\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\n      this.render();\n    });\n\n    this.render();\n\n    //retargetEvents(shadowRoot);\n    this.appendChild(this.mountPoint);\n  }\n\n  render() {\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\n    const locale = this.getAttribute(ATTRIBUTES.locale) || '';\n    Locale.setLocale(locale);\n\n    ReactDOM.render(\n      <KeycloakContext.Provider value={this.keycloak}>\n        <AddCustomerModal serviceUrl={serviceUrl} locale={locale}/>\n      </KeycloakContext.Provider>,\n      this.mountPoint\n    );\n  }\n}\n\ncustomElements.define('admin-add-customer-widget', AdminAddCustomerElement);\n","import {getDefaultOptions, request} from './helpers';\n\nconst resource = 'api/ticketing-systems';\n\nexport const apiTicketingSystemDelete = async (serviceUrl, id) => {\n  const url = `${serviceUrl}/${resource}/${id}`;\n  const options = {\n    ...getDefaultOptions(),\n    method: 'DELETE',\n  };\n  return request(url, options);\n};\n\nexport const apiCurrentTicketingSystemGet = async serviceUrl => {\n  const ticketingSystems = (await apiTicketingSystemsGet(serviceUrl)).data;\n  //Simplifying assumption to take the latest ticketing system as the current config. There should be only 1.\n  return ticketingSystems && ticketingSystems.length ? ticketingSystems[ticketingSystems.length - 1] : null;\n};\n\nexport const apiTicketingSystemsGet = async serviceUrl => {\n  const url = `${serviceUrl}/${resource}`;\n  const options = {\n    ...getDefaultOptions(),\n    method: 'GET',\n  };\n\n  return request(url, options);\n};\n\n//Note: post and put both use a ticketingsystemrequest\nexport const apiTicketingSystemPost = async (serviceUrl, ticketingSystem, secret) => {\n  const url = `${serviceUrl}/${resource}`;\n  const tsRequest = {\n    \"ticketingSystem\": ticketingSystem,\n    \"secret\": secret\n  }\n  const options = {\n    ...getDefaultOptions(),\n    method: 'POST',\n    body: JSON.stringify(tsRequest),\n  };\n  return request(url, options);\n};\n\nexport const apiTicketingSystemPut = async (serviceUrl, ticketingSystem, secret) => {\n  const url = `${serviceUrl}/${resource}`;\n  const tsRequest = {\n    \"ticketingSystem\": ticketingSystem,\n    \"secret\": secret\n  }\n  const options = {\n    ...getDefaultOptions(),\n    method: 'PUT',\n    body: JSON.stringify(tsRequest),\n  };\n  return request(url, options);\n};\n","import React, { Component } from 'react';\nimport i18n from '../../../i18n';\nimport { Form, TextInput, Select, SelectItem, Button } from 'carbon-components-react';\nimport {\n  apiCurrentTicketingSystemGet,\n  apiTicketingSystemDelete,\n  apiTicketingSystemPost,\n  apiTicketingSystemPut,\n} from '../../../api/ticketingsystem';\nimport {authenticationChanged, isAuthenticated, isPortalAdmin} from '../../../api/helpers';\nimport withKeycloak from '../../../auth/withKeycloak';\n\nclass TicketingSystem extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ticketingSystem: {},\n      ticketingSystemType: 'Jira',\n      url: '',\n      serviceAccount: '',\n      serviceAccountSecret: '',\n      systemId: '',\n      submitMsg: '',\n      submitColour: 'black',\n    };\n  }\n\n  handleChanges = e => {\n    const input = e.target;\n    const name = input.name;\n    const value = input.value;\n    this.setState({ [name]: value });\n  };\n\n  async createTicketingSystem() {\n    const ticketingSystem = {\n      url: this.state.url,\n      serviceAccount: this.state.serviceAccount,\n      systemId: this.state.systemId,\n    };\n    const response = (await apiTicketingSystemPost(this.props.serviceUrl, ticketingSystem, this.state.serviceAccountSecret)).data;\n    this.setState({\n      ticketingSystem: response,\n    });\n  }\n\n  async updateTicketingSystem() {\n    const ticketingSystem = {\n      id: this.state.ticketingSystem.id,\n      url: this.state.url,\n      serviceAccount: this.state.serviceAccount,\n      systemId: this.state.systemId,\n    };\n    return await apiTicketingSystemPut(this.props.serviceUrl, ticketingSystem, this.state.serviceAccountSecret);\n  }\n\n  async fetchData() {\n    const ticketingSystem = await apiCurrentTicketingSystemGet(this.props.serviceUrl);\n    this.setState({\n      ticketingSystem: ticketingSystem,\n      url: ticketingSystem ? ticketingSystem.url : '',\n      serviceAccount: ticketingSystem ? ticketingSystem.serviceAccount : '',\n      //Secret needs to be entered each time\n      systemId: ticketingSystem ? ticketingSystem.systemId : '',\n    });\n  }\n\n  componentDidMount() {\n    if (isAuthenticated(this.props)) {\n      this.fetchData();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (authenticationChanged(this.props, prevProps)) {\n      this.fetchData();\n    }\n  }\n\n  async deleteTicketingSystem() {\n    return await apiTicketingSystemDelete(this.props.serviceUrl, this.state.ticketingSystem.id);\n  }\n\n  handleDelete() {\n    if (window.confirm('Are you sure you want to delete this ticketing system?')) {\n      this.deleteTicketingSystem()\n        .then(() => {\n          this.setState({\n            submitMsg: i18n.t('submitMessages.deleted'),\n            submitColour: '#24a148',\n          });\n          this.fetchData();\n        })\n        .catch(() => {\n          this.setState({\n            submitMsg: i18n.t('submitMessages.error'),\n            submitColour: '#da1e28',\n          });\n        });\n    }\n  }\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    if (!this.state.ticketingSystem) {\n      this.createTicketingSystem()\n        .then(() => {\n          this.setState({\n            submitMsg: i18n.t('submitMessages.created'),\n            submitColour: '#24a148',\n          });\n        })\n        .catch(() => {\n          this.setState({\n            submitMsg: i18n.t('submitMessages.error'),\n            submitColour: '#da1e28',\n          });\n        });\n    } else {\n      this.updateTicketingSystem()\n        .then(() => {\n          this.setState({\n            submitMsg: i18n.t('submitMessages.updated'),\n            submitColour: '#24a148',\n          });\n        })\n        .catch(() => {\n          this.setState({\n            submitMsg: i18n.t('submitMessages.error'),\n            submitColour: '#da1e28',\n          });\n        });\n    }\n  };\n\n  render() {\n    const ticketingSystemTypes = ['Jira'];\n    if (isPortalAdmin()) {\n      return (\n        <div className=\"cp-form\">\n          <p style={{ color: this.state.submitColour }}>{this.state.submitMsg}</p>\n          <Form onSubmit={this.handleFormSubmit}>\n            <div className=\"bx--grid\">\n              <div className=\"bx--row\">\n                <div className=\"bx--col\">\n                  <Select\n                    id=\"ticketingSystemType\"\n                    name=\"ticketingSystemType\"\n                    labelText={i18n.t('adminConfig.integrationTicketingSystem.selectBackendTicketingSystem')}\n                    value={this.state.ticketingSystemType}\n                    onChange={this.handleChanges}\n                  >\n                    <SelectItem text={i18n.t('adminConfig.integrationTicketingSystem.select')}\n                                value=\"ticketing-system\"/>\n                    {ticketingSystemTypes.map((type, i) => (\n                      <SelectItem key={i} text={type} value={type}>\n                        {type}\n                      </SelectItem>\n                    ))}\n                  </Select>\n                  <TextInput\n                    id=\"serviceAccount\"\n                    name=\"serviceAccount\"\n                    labelText={i18n.t('adminConfig.integrationTicketingSystem.userName')}\n                    value={this.state.serviceAccount}\n                    onChange={this.handleChanges}\n                  />\n                  <TextInput\n                    id=\"systemId\"\n                    name=\"systemId\"\n                    labelText={i18n.t('adminConfig.integrationTicketingSystem.projectName')}\n                    value={this.state.systemId}\n                    onChange={this.handleChanges}\n                  />\n                </div>\n                <div className=\"bx--col\">\n                  <TextInput\n                    id=\"url\"\n                    name=\"url\"\n                    labelText={i18n.t('adminConfig.integrationTicketingSystem.url')}\n                    value={this.state.url}\n                    onChange={this.handleChanges}\n                  />\n                  <TextInput\n                    id=\"serviceAccountSecret\"\n                    name=\"serviceAccountSecret\"\n                    type=\"password\"\n                    labelText={i18n.t('adminConfig.integrationTicketingSystem.password')}\n                    value={this.state.serviceAccountSecret}\n                    onChange={this.handleChanges}\n                  />\n                </div>\n              </div>\n              <Button kind=\"primary\" tabIndex={0} type=\"submit\">\n                {' '}\n                {i18n.t('buttons.submit')}{' '}\n              </Button>\n              {this.state.ticketingSystem ? (\n                <Button kind=\"danger\" onClick={() => this.handleDelete()}>\n                  {' '}\n                  Delete{' '}\n                </Button>\n              ) : null}\n            </div>\n          </Form>\n        </div>\n      );\n    }\n    // Unauthorized\n    else {\n      return <p>{i18n.t('userMessages.unauthorized')}</p>;\n    }\n  }\n}\n\nexport default withKeycloak(TicketingSystem);\n","import { getDefaultOptions, request } from './helpers';\n\nconst resource = 'api/entando-versions';\n\nexport const apiProductVersionsGet = async serviceUrl => {\n  const url = `${serviceUrl}/${resource}`;\n  const options = {\n    ...getDefaultOptions(),\n    method: 'GET',\n  };\n\n  return request(url, options);\n};\n\nexport const apiProductVersionGet = async (serviceUrl, versionId) => {\n  const url = `${serviceUrl}/${resource}/${versionId}`;\n  const options = {\n    ...getDefaultOptions(),\n    method: 'GET',\n  };\n\n  return request(url, options);\n};\n\nexport const apiUpdateProductVersionsStatus = async (serviceUrl, id) => {\n  const url = `${serviceUrl}/${resource}/${id}`;\n  const options = {\n    ...getDefaultOptions(),\n    method: 'PUT',\n  };\n  return request(url, options);\n};\n\nexport const apiProductVersionPost = async (serviceUrl, productVersion) => {\n  const url = `${serviceUrl}/${resource}`;\n  const options = {\n    ...getDefaultOptions(),\n    method: 'POST',\n    body: productVersion ? JSON.stringify(productVersion) : null,\n  };\n  return request(url, options);\n};\n\nexport const apiProductVersionPut = async (serviceUrl, productVersion) => {\n  const url = `${serviceUrl}/${resource}`;\n  const options = {\n    ...getDefaultOptions(),\n    method: 'PUT',\n    body: productVersion ? JSON.stringify(productVersion) : null,\n  };\n  return request(url, options);\n};\n\nexport const apiProductVersionDelete = async (serviceUrl, id) => {\n  const url = `${serviceUrl}/${resource}/${id}`;\n  const options = {\n    ...getDefaultOptions(),\n    method: 'DELETE',\n  };\n  return request(url, options);\n};\n","import React, { Component } from 'react';\nimport i18n from '../../i18n';\nimport { ModalWrapper, Form, TextInput, DatePicker, DatePickerInput } from 'carbon-components-react';\nimport withKeycloak from '../../auth/withKeycloak';\nimport { apiProductVersionPost } from '../../api/productVersion';\nimport moment from 'moment';\n\nclass AddProductVersionModal extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      name: '',\n      startDate: '',\n      endDate: '',\n      invalid: {},\n      submitMsg: '',\n      submitColour: 'black',\n    };\n\n    this.baseState = this.state;\n  }\n\n  handleValidation() {\n    let invalid = {};\n    let formIsValid = true;\n\n    //name\n    if (this.state.name === '') {\n      formIsValid = false;\n      invalid['name'] = true;\n    }\n\n    if (typeof this.state.startDate !== 'undefined') {\n      if (!this.state.startDate.match(/^(0[1-9]|1[0-2])\\/(0[1-9]|1\\d|2\\d|3[01])\\/(19|20)\\d{2}$/)) {\n        formIsValid = false;\n        invalid['startDate'] = true;\n      }\n    }\n\n    if (typeof this.state.endDate !== 'undefined') {\n      if (!this.state.endDate.match(/^(0[1-9]|1[0-2])\\/(0[1-9]|1\\d|2\\d|3[01])\\/(19|20)\\d{2}$/)) {\n        formIsValid = false;\n        invalid['endDate'] = true;\n      }\n    }\n\n    this.setState({ invalid: invalid });\n    return formIsValid;\n  }\n\n  handleChanges = e => {\n    const input = e.target;\n    const name = input.name;\n    const value = input.value;\n    this.setState({ [name]: value });\n  };\n\n  async addProductVersion() {\n    const { keycloak } = this.props;\n    const authenticated = keycloak.initialized && keycloak.authenticated;\n    if (authenticated) {\n      return await apiProductVersionPost(this.props.serviceUrl, this.state);\n    }\n  }\n\n  handleFormSubmit = () => {\n    const formIsValid = this.handleValidation();\n\n    if (formIsValid) {\n      this.addProductVersion()\n        .then(() => {\n          this.setState({\n            submitMsg: i18n.t('submitMessages.added'),\n            submitColour: '#24a148',\n          });\n          this.props.updateProductVersions();\n        })\n        .catch(() => {\n          this.setState({\n            submitMsg: i18n.t('submitMessages.error'),\n            submitColour: '#da1e28',\n          });\n        });\n    }\n  };\n\n  clearValues = () => {\n    const customerModalElement = document.querySelector('#modal-form-product-version');\n    if (!customerModalElement.className.includes('is-visible')) {\n      this.setState(this.baseState);\n    }\n  };\n\n  handleStartDateChange = date => {\n    this.setState({\n      startDate: moment(date[0].toISOString()).format('MM/DD/YYYY'),\n    });\n  };\n\n  handleEndDateChange = date => {\n    this.setState({\n      endDate: moment(date[0].toISOString()).format('MM/DD/YYYY'),\n    });\n  };\n\n  componentDidMount() {\n    const modalOpenButton = document.querySelector('.add-product-version-button');\n    modalOpenButton.addEventListener('click', this.clearValues, false);\n  }\n\n  render() {\n    const modalConfirmation = (\n      <div className=\"bx--modal-header\">\n        <p style={{color: this.state.submitColour}}>{this.state.submitMsg}</p>\n      </div>\n    );\n    const modalId = 'modal-form-product-version';\n    return (\n      <ModalWrapper\n        buttonTriggerText={i18n.t('buttons.addProductVersion')}\n        modalHeading={i18n.t('adminDashboard.addProductVersion.title')}\n        buttonTriggerClassName=\"add-product-version bx--btn bx--btn--tertiary add-product-version-button\"\n        className=\"modal-form\"\n        id={modalId}\n        handleSubmit={this.handleFormSubmit}\n      >\n        {modalConfirmation}\n        <div className=\"form-container\">\n          <Form onSubmit={this.handleFormSubmit}>\n            <TextInput\n              id={'name' + modalId}\n              name=\"name\"\n              labelText={i18n.t('adminDashboard.addProductVersion.productVersion')}\n              value={this.state.name}\n              onChange={this.handleChanges}\n              invalidText={i18n.t('validation.invalid.required')}\n              invalid={this.state.invalid['name']}\n            />\n            <DatePicker dateFormat=\"m/d/Y\" datePickerType=\"single\" onChange={this.handleStartDateChange}>\n              <DatePickerInput\n                id={'startDate' + modalId}\n                name=\"startDate\"\n                placeholder=\"mm/dd/yyyy\"\n                labelText={i18n.t('adminDashboard.addProductVersion.productVersionStartDate')}\n                value={this.state.startDate}\n                //onChange={this.handleChanges}\n                type=\"text\"\n                invalidText={i18n.t('validation.invalid.date')}\n                invalid={this.state.invalid['startDate']}\n              />\n            </DatePicker>\n            <DatePicker dateFormat=\"m/d/Y\" datePickerType=\"single\" onChange={this.handleEndDateChange}>\n              <DatePickerInput\n                id={'endDate' + modalId}\n                name=\"endDate\"\n                placeholder=\"mm/dd/yyyy\"\n                labelText={i18n.t('adminDashboard.addProductVersion.productVersionEndDate')}\n                value={this.state.endDate}\n                type=\"text\"\n                invalidText={i18n.t('validation.invalid.date')}\n                invalid={this.state.invalid['endDate']}\n              />\n            </DatePicker>\n          </Form>\n        </div>\n        {modalConfirmation}\n      </ModalWrapper>\n    );\n  }\n}\n\nexport default withKeycloak(AddProductVersionModal);\n","import React, { Component } from 'react';\nimport i18n from '../../i18n';\nimport { ModalWrapper, Form, TextInput, DatePicker, DatePickerInput } from 'carbon-components-react';\nimport withKeycloak from '../../auth/withKeycloak';\nimport { apiProductVersionGet, apiProductVersionPut } from '../../api/productVersion';\nimport moment from 'moment';\nimport {authenticationChanged} from '../../api/helpers';\n\nclass EditVersionModal extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      name: '',\n      startDate: '',\n      endDate: '',\n      invalid: {},\n      modalId: '',\n      buttonId: '',\n      submitMsg: '',\n      submitColour: 'black',\n    };\n  }\n\n  handleValidation() {\n    let invalid = {};\n    let formIsValid = true;\n\n    //name\n    if (this.state.name === '') {\n      formIsValid = false;\n      invalid['name'] = true;\n    }\n\n    if (typeof this.state.startDate !== 'undefined') {\n      if (!this.state.startDate.match(/^(0[1-9]|1[0-2])\\/(0[1-9]|1\\d|2\\d|3[01])\\/(19|20)\\d{2}$/)) {\n        formIsValid = false;\n        invalid['startDate'] = true;\n      }\n    }\n\n    if (typeof this.state.endDate !== 'undefined') {\n      if (!this.state.endDate.match(/^(0[1-9]|1[0-2])\\/(0[1-9]|1\\d|2\\d|3[01])\\/(19|20)\\d{2}$/)) {\n        formIsValid = false;\n        invalid['endDate'] = true;\n      }\n    }\n\n    this.setState({ invalid: invalid });\n    return formIsValid;\n  }\n\n  componentDidUpdate(prevProps) {\n    if (authenticationChanged(this.props, prevProps)) {\n      this.getVersionDetails();\n    }\n  }\n\n  handleChanges = e => {\n    const input = e.target;\n    const name = input.name;\n    const value = input.value;\n    this.setState({ [name]: value });\n  };\n\n  handleStartDateChange = date => {\n    this.setState({\n      startDate: moment(date[0].toISOString()).format('MM/DD/YYYY'),\n    });\n  };\n\n  handleEndDateChange = date => {\n    this.setState({\n      endDate: moment(date[0].toISOString()).format('MM/DD/YYYY'),\n    });\n  };\n\n  async getVersionDetails() {\n    const { keycloak } = this.props;\n    const authenticated = keycloak.initialized && keycloak.authenticated;\n    if (authenticated) {\n      const version = await apiProductVersionGet(this.props.serviceUrl, this.props.version.id);\n      this.setState({\n        name: version.data.name,\n        startDate: moment(version.data.startDate).format('MM/DD/YYYY'),\n        endDate: moment(version.data.endDate).format('MM/DD/YYYY'),\n        modalId: 'modal-form-version-edit-' + version.data.id,\n        buttonId: 'edit-version-button-' + version.data.id,\n      });\n    }\n  }\n\n  async versionPut(version) {\n    const { keycloak } = this.props;\n    const authenticated = keycloak.initialized && keycloak.authenticated;\n    if (authenticated) {\n      return await apiProductVersionPut(this.props.serviceUrl, version);\n    }\n  }\n\n  handleFormSubmit = () => {\n    const formIsValid = this.handleValidation();\n\n    if (formIsValid) {\n      const version = {\n        id: this.props.version.id,\n        name: this.state.name,\n        startDate: moment(this.state.startDate).format(),\n        endDate: moment(this.state.endDate).format(),\n      };\n      this.versionPut(version)\n        .then(() => {\n          this.setState({\n            submitMsg: i18n.t('submitMessages.updated'),\n            submitColour: '#24a148',\n          });\n          this.props.updateProductVersions();\n        })\n        .catch(() => {\n          this.setState({\n            submitMsg: i18n.t('submitMessages.error'),\n            submitColour: '#da1e28',\n          });\n        });\n    }\n  };\n\n  componentDidMount() {\n    const { keycloak } = this.props;\n    const authenticated = keycloak.initialized && keycloak.authenticated;\n\n    if (authenticated) {\n      this.getVersionDetails();\n      const modalOpenButton = document.querySelector('.edit-version-button-' + this.props.version.id);\n      modalOpenButton.addEventListener('click', this.clearValues, false);\n    }\n  }\n\n  render() {\n    const modalConfirmation = (\n      <div className=\"bx--modal-header\">\n        <p style={{color: this.state.submitColour}}>{this.state.submitMsg}</p>\n      </div>\n    );\n    const buttonClassName = 'bx--btn bx--btn--ghost edit-version-button-' + this.props.version.id;\n    const modalId = this.state.modalId;\n    return (\n      <ModalWrapper\n        buttonTriggerText={i18n.t('buttons.edit')}\n        modalHeading={i18n.t('adminDashboard.addProject.editTitle')}\n        buttonTriggerClassName={buttonClassName}\n        className=\"modal-form\"\n        id={this.state.modalId}\n        handleSubmit={this.handleFormSubmit}\n        primaryButtonText={i18n.t('modalText.save')}\n        secondaryButtonText={i18n.t('modalText.cancel')}\n      >\n        {modalConfirmation}\n        <div className=\"form-container\">\n          <Form onSubmit={this.handleFormSubmit} id={'form' + modalId}>\n            <TextInput\n              id={'name' + modalId}\n              name=\"name\"\n              labelText={i18n.t('adminDashboard.addProject.projectName') + ' *'}\n              value={this.state.name}\n              onChange={this.handleChanges}\n              invalidText={i18n.t('validation.invalid.required')}\n              invalid={this.state.invalid['name']}\n            />\n            <DatePicker dateFormat=\"m/d/Y\" datePickerType=\"single\" onChange={this.handleStartDateChange}\n                        value={this.state.startDate}>\n              <DatePickerInput\n                id={'startDate' + modalId}\n                name=\"startDate\"\n                placeholder=\"mm/dd/yyyy\"\n                labelText={i18n.t('subscriptionDetails.startDate') + ' *'}\n                onChange={this.handleChanges}\n                type=\"text\"\n                invalidText={i18n.t('validation.invalid.date')}\n                invalid={this.state.invalid['startDate']}\n              />\n            </DatePicker>\n            <DatePicker\n              dateFormat=\"m/d/Y\"\n              datePickerType=\"single\"\n              onChange={this.handleEndDateChange}\n              id={'endDate' + modalId}\n              name=\"endDate\"\n              value={this.state.endDate}\n            >\n              <DatePickerInput\n                id={'endDate' + modalId}\n                name=\"endDate\"\n                placeholder=\"mm/dd/yyyy\"\n                labelText={i18n.t('subscriptionDetails.endDate') + ' *'}\n                onChange={this.handleChanges}\n                type=\"text\"\n                invalidText={i18n.t('validation.invalid.date')}\n                invalid={this.state.invalid['endDate']}\n              />\n            </DatePicker>\n          </Form>\n        </div>\n        {modalConfirmation}\n      </ModalWrapper>\n    );\n  }\n}\n\nexport default withKeycloak(EditVersionModal);\n","import React, { Component } from 'react';\nimport i18n from '../../../i18n';\nimport {\n  DataTable,\n  TableContainer,\n  Table,\n  TableHead,\n  TableRow,\n  TableHeader,\n  TableBody,\n  TableCell,\n  Toggle,\n  Button,\n} from 'carbon-components-react';\nimport { apiProductVersionDelete, apiProductVersionsGet, apiUpdateProductVersionsStatus } from '../../../api/productVersion';\nimport withKeycloak from '../../../auth/withKeycloak';\nimport AddProductVersionModal from '../AddProductVersionModal';\nimport {authenticationChanged, isAuthenticated, isPortalAdminOrSupport} from '../../../api/helpers';\nimport EditVersionModal from '../EditVersionModal';\n\nclass ProductVersion extends Component {\n  constructor() {\n    super();\n    this.state = {\n      versions: '',\n    };\n  }\n\n  componentDidMount() {\n    if (isPortalAdminOrSupport()) {\n      this.getProductVersions();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (authenticationChanged(this.props, prevProps)) {\n      if (isPortalAdminOrSupport()) {\n        this.getProductVersions();\n      }\n    }\n  }\n\n  async getProductVersions() {\n    if (isAuthenticated(this.props)) {\n      const productVersions = await apiProductVersionsGet(this.props.serviceUrl);\n\n      this.setState({\n        versions: productVersions.data,\n      });\n    }\n  }\n\n  async deleteVersion(id) {\n    if (isAuthenticated(this.props)) {\n      return await apiProductVersionDelete(this.props.serviceUrl, id);\n    }\n  }\n\n  handleDeleteVersion = (e, id) => {\n    e.preventDefault();\n    if (window.confirm('Are you sure you want to delete this Entando version?')) {\n      this.deleteVersion(id)\n        .then(() => {\n          this.setState({\n            submitMsg: i18n.t('submitMessages.deleted'),\n            submitColour: '#24a148',\n          });\n          this.updateProductVersions();\n        })\n        .catch(() => {\n          this.setState({\n            submitMsg: i18n.t('submitMessages.error'),\n            submitColour: '#da1e28',\n          });\n        });\n    }\n  };\n\n  updateProductVersions = () => {\n    this.getProductVersions();\n  };\n\n  async handleToggleChange(id) {\n    return await apiUpdateProductVersionsStatus(this.props.serviceUrl, id);\n  }\n\n  render() {\n    if (isPortalAdminOrSupport()) {\n      return (\n        <div>\n          <DataTable rows={rowData} headers={headerData}>\n            {({rows, headers, getHeaderProps, getTableProps}) => (\n              <TableContainer>\n                <Table {...getTableProps()}>\n                  <TableHead>\n                    <TableRow>\n                      {headers.map(header => (\n                        <TableHeader {...getHeaderProps({header})}>{header.header}</TableHeader>\n                      ))}\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {Object.keys(this.state.versions).length !== 0\n                      ? this.state.versions.map((productVersion, index) => (\n                        <TableRow key={index}>\n                          <TableCell>{productVersion.name}</TableCell>\n                          <TableCell>\n                            <Toggle\n                              size=\"sm\"\n                              onClick={() => this.handleToggleChange(productVersion.id)}\n                              aria-label=\"toggle button\"\n                              id={'toggle' + productVersion.id}\n                              defaultToggled={productVersion.status}\n                            />\n                          </TableCell>\n                          <TableCell>{productVersion.startDate}</TableCell>\n                          <TableCell>{productVersion.endDate}</TableCell>\n                          <TableCell>\n                            <div style={{display: 'flex'}}>\n                              <EditVersionModal\n                                key={productVersion.id}\n                                version={productVersion}\n                                serviceUrl={this.props.serviceUrl}\n                                updateProductVersions={this.updateProductVersions}\n                              />\n                                <Button\n                                  kind=\"ghost\"\n                                  onClick={e => this.handleDeleteVersion(e, productVersion.id)}\n                                  style={{ display: 'flex', width: '100%', color: 'red' }}\n                                >\n                                  {i18n.t('buttons.delete')}\n                                </Button>\n                              </div>\n                            </TableCell>\n                          </TableRow>\n                        ))\n                      : null}\n                  </TableBody>\n                </Table>\n              </TableContainer>\n            )}\n          </DataTable>\n          <br />\n          <AddProductVersionModal serviceUrl={this.props.serviceUrl} updateProductVersions={this.updateProductVersions} />\n        </div>\n      );\n    } else {\n      return <p>{i18n.t('userMessages.unauthorized')}</p>;\n    }\n  }\n}\n\nconst headerData = [\n  {\n    header: i18n.t('adminConfig.manageProductVersion.entandoVersion'),\n    key: 'entVersion',\n  },\n  {\n    header: i18n.t('adminConfig.manageProductVersion.status'),\n    key: 'status',\n  },\n  {\n    header: i18n.t('adminConfig.manageProductVersion.startDate'),\n    key: 'startDate',\n  },\n  {\n    header: i18n.t('adminConfig.manageProductVersion.supportEndDate'),\n    key: 'endDate',\n  },\n  {\n    header: i18n.t('customerDashboard.action'),\n    key: 'action',\n  },\n];\n\nconst rowData = [\n  {\n    id: 'a',\n    entVersion: '5.2',\n    status: <Toggle size=\"sm\" aria-label=\"toggle button\" defaultToggled id=\"status-1\" />,\n    startDate: 'April, 2018',\n    endDate: 'April, 2022',\n  },\n  {\n    id: 'b',\n    entVersion: '6.3',\n    status: <Toggle size=\"sm\" aria-label=\"toggle button\" id=\"status-2\"/>,\n    startDate: 'Jile, 2019',\n    endDate: 'April, 2023',\n  },\n  {\n    id: 'c',\n    entVersion: '6.2',\n    status: <Toggle size=\"sm\" aria-label=\"toggle button\" defaultToggled id=\"status-3\"/>,\n    startDate: 'September, 2020',\n    endDate: 'April, 2024',\n  },\n];\n\nexport default withKeycloak(ProductVersion);\n","import React from 'react';\nimport i18n from '../../../i18n';\nimport { Accordion, AccordionItem, Tile } from 'carbon-components-react';\nimport TicketingSystem from './TicketingSystem';\nimport ProductVersion from './ProductVersion';\nimport { isPortalAdmin } from '../../../api/helpers';\nimport withKeycloak from '../../../auth/withKeycloak';\n\nclass AdminConfiguration extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n    };\n    this.adminConfig = [\n      {\n        label: (\n          <div>\n            <p className=\"title\">{i18n.t('adminConfig.integrationTicketingSystem.title')}</p>\n            <p className=\"desc\">{i18n.t('adminConfig.integrationTicketingSystem.desc')}</p>\n          </div>\n        ),\n        content: <TicketingSystem serviceUrl={this.props.serviceUrl} />,\n      },\n      {\n        label: (\n          <div>\n            <p className=\"title\">{i18n.t('adminConfig.manageProductVersion.title')}</p>\n            <p className=\"desc\">{i18n.t('adminConfig.manageProductVersion.desc')}</p>\n          </div>\n        ),\n        content: <ProductVersion serviceUrl={this.props.serviceUrl} />,\n      },\n    ];\n  }\n\n  componentDidMount() {\n    const { keycloak } = this.props;\n    const authenticated = keycloak.initialized && keycloak.authenticated;\n\n    if (authenticated) {\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { keycloak } = this.props;\n    const authenticated = keycloak.initialized && keycloak.authenticated;\n\n    const changedAuth = prevProps.keycloak.authenticated !== authenticated;\n\n    if (authenticated && changedAuth) {\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n\n  render() {\n    if (!this.state.loading) {\n      // Authorized\n      if (isPortalAdmin()) {\n        return (\n          <div>\n            <h3 className=\"pageTitle\">{i18n.t('adminDashboard.adminTitle')}</h3>\n            <div className=\"form-container\">\n              <Tile>\n                <p className=\"title\">{i18n.t('adminConfig.title')}</p>\n                <p className=\"desc\">{i18n.t('adminConfig.desc')}</p>\n              </Tile>\n              <Accordion>\n                {this.adminConfig.map((item, index) => (\n                  <AccordionItem key={index.toString()} index={index} title={item.label} description={item.description}>\n                    <div>{item.content}</div>\n                  </AccordionItem>\n                ))}\n              </Accordion>\n            </div>\n          </div>\n        );\n      }\n      // Unauthorized\n      else {\n        return <p>{i18n.t('userMessages.unauthorized')}</p>;\n      }\n    }\n    // Loading\n    else {\n      return null;\n    }\n  }\n}\nexport default withKeycloak(AdminConfiguration);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport AdminConfiguration from '../components/Admin/Configuration/AdminConfiguration';\nimport '../index.scss';\nimport * as Locale from '../i18n';\n\nimport KeycloakContext from '../auth/KeycloakContext';\n\nimport { subscribeToWidgetEvent } from '../helpers/widgetEvents';\nimport { KEYCLOAK_EVENT_TYPE } from './widgetEventTypes';\n\nconst getKeycloakInstance = () =>\n  (window && window.entando && window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\n    initialized: false,\n  };\n\nconst ATTRIBUTES = {\n  hidden: 'hidden',\n  locale: 'locale',\n  paginationMode: 'pagination-mode',\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\n  serviceUrl: 'service-url',\n};\n\nclass AdminConfigurationElement extends HTMLElement {\n  container;\n\n  mountPoint;\n\n  unsubscribeFromKeycloakEvent;\n\n  keycloak = getKeycloakInstance();\n\n  connectedCallback() {\n    this.mountPoint = document.createElement('div');\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\n\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\n      this.render();\n    });\n\n    this.render();\n\n    //retargetEvents(shadowRoot);\n    this.appendChild(this.mountPoint);\n  }\n\n  render() {\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\n    const locale = this.getAttribute(ATTRIBUTES.locale) || '';\n    Locale.setLocale(locale);\n\n    ReactDOM.render(\n      <KeycloakContext.Provider value={this.keycloak}>\n        <AdminConfiguration serviceUrl={serviceUrl} locale={locale}/>\n      </KeycloakContext.Provider>,\n      this.mountPoint\n    );\n  }\n}\n\ncustomElements.define('admin-configuration-widget', AdminConfigurationElement);\n","import { getDefaultOptions, request, getUrl } from './helpers';\n\nconst resource = 'api/partners';\n\nexport const apiPartnerDelete = async (serviceUrl, id) => {\n  const url = `${serviceUrl}/${resource}/${id}`;\n  const options = {\n    ...getDefaultOptions(),\n    method: 'DELETE',\n  };\n  return request(url, options);\n};\n\nexport const apiPartnersGet = async serviceUrl => {\n  const url = getUrl(`${serviceUrl}/${resource}`);\n  const options = {\n    ...getDefaultOptions(),\n    method: 'GET',\n  };\n\n  return request(url, options);\n};\n\nexport const apiPartnerPost = async (serviceUrl, partner) => {\n  const url = `${serviceUrl}/${resource}`;\n  const options = {\n    ...getDefaultOptions(),\n    method: 'POST',\n    body: partner ? JSON.stringify(partner) : null,\n  };\n  return request(url, options);\n};\n","import { getDefaultOptions, request, getUrl } from './helpers';\n\nconst resource = 'api/projects';\n\nexport const apiProjectsDelete = async (serviceUrl, id) => {\n  const url = `${serviceUrl}/${resource}/${id}`;\n  const options = {\n    ...getDefaultOptions(),\n    method: 'DELETE',\n  };\n  return request(url, options);\n};\n\nexport const apiProjectsGet = async serviceUrl => {\n  const url = getUrl(`${serviceUrl}/${resource}`);\n  const options = {\n    ...getDefaultOptions(),\n    method: 'GET',\n  };\n\n  return request(url, options);\n};\n\nexport const apiProjectGet = async (serviceUrl, id) => {\n  const url = getUrl(`${serviceUrl}/${resource}/${id}`);\n  const options = {\n    ...getDefaultOptions(),\n    method: 'GET',\n  };\n\n  return request(url, options);\n};\n\nexport const apiProjectPost = async (serviceUrl, project) => {\n  const url = `${serviceUrl}/${resource}`;\n  const options = {\n    ...getDefaultOptions(),\n    method: 'POST',\n    body: project ? JSON.stringify(project) : null,\n  };\n  return request(url, options);\n};\n\nexport const apiProjectPut = async (serviceUrl, project) => {\n  const url = `${serviceUrl}/${resource}`;\n  const options = {\n    ...getDefaultOptions(),\n    method: 'PUT',\n    body: project ? JSON.stringify(project) : null,\n  };\n  return request(url, options);\n};\n\nexport const apiAddTicketToProject = async (serviceUrl, projectId, ticketId) => {\n  const url = `${serviceUrl}/${resource}/${projectId}/tickets/${ticketId}`;\n  const options = {\n    ...getDefaultOptions(),\n    method: 'POST',\n  };\n  return request(url, options);\n};\n\nexport const apiAddSubscriptionToProject = async (serviceUrl, projectId, subscriptionId) => {\n  const url = `${serviceUrl}/${resource}/${projectId}/subscriptions/${subscriptionId}`;\n  const options = {\n    ...getDefaultOptions(),\n    method: 'POST',\n  };\n  return request(url, options);\n};\n\nexport const apiAddUserToProject = async (serviceUrl, projectId, userId) => {\n  const url = `${serviceUrl}/${resource}/${projectId}/users/${userId}`;\n  const options = {\n    ...getDefaultOptions(),\n    method: 'POST',\n  };\n  return request(url, options);\n};\n\nexport const apiDeletePartnerFromProject = async (serviceUrl, projectId, partnerId) => {\n  const url = `${serviceUrl}/${resource}/${projectId}/partners/${partnerId}`;\n  const options = {\n    ...getDefaultOptions(),\n    method: 'DELETE',\n  };\n  return request(url, options);\n};\n\nexport const apiDeleteSubscriptionFromProject = async (serviceUrl, projectId, subscriptionId) => {\n  const url = `${serviceUrl}/${resource}/${projectId}/subscriptions/${subscriptionId}`;\n  const options = {\n    ...getDefaultOptions(),\n    method: 'DELETE',\n  };\n  return request(url, options);\n};\n\nexport const apiDeleteUserFromProject = async (serviceUrl, projectId, userId) => {\n  const url = `${serviceUrl}/${resource}/${projectId}/users/${userId}`;\n  const options = {\n    ...getDefaultOptions(),\n    method: 'DELETE',\n  };\n  return request(url, options);\n};\n\nexport const apiAddPartnerToProject = async (serviceUrl, projectId, partnerId) => {\n  const url = `${serviceUrl}/${resource}/${projectId}/partners/${partnerId}`;\n  const options = {\n    ...getDefaultOptions(),\n    method: 'POST',\n  };\n  return request(url, options);\n};\n\nexport const apiGetProjectUsers = async (serviceUrl, projectId) => {\n  const url = `${serviceUrl}/${resource}/${projectId}/users/`;\n  const options = {\n    ...getDefaultOptions(),\n    method: 'GET',\n  };\n  return request(url, options);\n};\n\nexport const apiGetProjectSubscriptions = async (serviceUrl, projectId) => {\n  const url = `${serviceUrl}/${resource}/${projectId}/subscriptions/`;\n  const options = {\n    ...getDefaultOptions(),\n    method: 'GET',\n  };\n  return request(url, options);\n};\n\nexport const apiGetProjectIdsAndNames = async serviceUrl => {\n  const url = `${serviceUrl}/${resource}/nameId/`;\n  const options = {\n    ...getDefaultOptions(),\n    method: 'GET',\n  };\n  return request(url, options);\n};\n\n//TODO: remove the my and admin-specific functions\nexport const apiGetMyProject = async (serviceUrl, projectId) => {\n  const url = `${serviceUrl}/${resource}/myproject/${projectId}/`;\n  const options = {\n    ...getDefaultOptions(),\n    method: 'GET',\n  };\n  return request(url, options);\n};\n\nexport const apiGetMyProjectUsers = async (serviceUrl, projectId) => {\n  const url = `${serviceUrl}/${resource}/myproject/${projectId}/users`;\n  const options = {\n    ...getDefaultOptions(),\n    method: 'GET',\n  };\n  return request(url, options);\n};\n\n// Endpoints for backend security\nconst adminResource = 'api/projects/admin';\nexport const apiAdminProjectsGet = async serviceUrl => {\n  const url = getUrl(`${serviceUrl}/${adminResource}`);\n  const options = {\n    ...getDefaultOptions(),\n    method: 'GET',\n  };\n\n  return request(url, options);\n};\n\nconst myResource = 'api/projects/myprojects';\nexport const apiMyProjectsGet = async serviceUrl => {\n  const url = getUrl(`${serviceUrl}/${myResource}`);\n  const options = {\n    ...getDefaultOptions(),\n    method: 'GET',\n  };\n\n  return request(url, options);\n};\n","export const AuthenticatedView = ({ children, keycloak }) => {\n  const authenticated = keycloak && keycloak.initialized && keycloak.authenticated;\n  return authenticated ? children : null;\n};\n\nexport const UnauthenticatedView = ({ children, keycloak }) => {\n  const authenticated = keycloak && keycloak.initialized && keycloak.authenticated;\n  return !authenticated ? children : null;\n};\n","import React, {Component} from 'react';\nimport i18n from '../../i18n';\nimport {ModalWrapper, Form, TextInput, Select, SelectItem, TextArea} from 'carbon-components-react';\nimport withKeycloak from '../../auth/withKeycloak';\nimport {apiPartnerPost} from '../../api/partners';\nimport {apiProjectsGet, apiAddPartnerToProject} from '../../api/projects';\nimport {authenticationChanged, isAuthenticated} from '../../api/helpers';\nimport {AuthenticatedView} from '../../auth/KeycloakViews';\n\nclass AddPartnerModal extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      projectList: {},\n      projectId: '',\n      name: '',\n      partnerNumber: '',\n      notes: '',\n      invalid: {},\n      submitMsg: '',\n      submitColour: 'black',\n    };\n  }\n\n  componentDidMount() {\n    if (isAuthenticated(this.props)) {\n      this.fetchData();\n\n      const modalOpenButton = document.querySelector('.add-partner-button');\n      modalOpenButton.addEventListener('click', this.clearValues, false);\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (authenticationChanged(this.props, prevProps)) {\n      this.fetchData();\n    }\n  }\n\n  handleValidation() {\n    let invalid = {};\n    let formIsValid = true;\n\n    //project\n    if (this.state.projectId === '' || this.state.projectId === 'project-list') {\n      formIsValid = false;\n      invalid['projectId'] = true;\n    }\n\n    if (this.state.name === '') {\n      formIsValid = false;\n      invalid['name'] = true;\n    }\n\n    if (this.state.partnerNumber === '') {\n      formIsValid = false;\n      invalid['partnerNumber'] = true;\n    }\n\n    this.setState({ invalid: invalid });\n    return formIsValid;\n  }\n\n  handleChanges = e => {\n    const input = e.target;\n    const name = input.name;\n    const value = input.value;\n    this.setState({ [name]: value });\n  };\n\n  async fetchData() {\n    if (isAuthenticated(this.props)) {\n      const projects = await apiProjectsGet(this.props.serviceUrl);\n      this.setState({\n        projectList: projects.data,\n      });\n    }\n  }\n\n  async partnerPost(partner) {\n    if (isAuthenticated(this.props)) {\n      const result = await apiPartnerPost(this.props.serviceUrl, partner);\n      return await apiAddPartnerToProject(this.props.serviceUrl, this.state.projectId, result.data.id);\n    }\n  }\n\n  handleFormSubmit = () => {\n    const formIsValid = this.handleValidation();\n\n    if (formIsValid) {\n      const partner = {\n        name: this.state.name,\n        partnerNumber: this.state.partnerNumber,\n        notes: this.state.notes,\n      };\n      this.partnerPost(partner)\n        .then(() => {\n          this.setState({\n            submitMsg: i18n.t('submitMessages.added'),\n            submitColour: '#24a148',\n          });\n          this.props.updateCustomerList();\n        })\n        .catch(() => {\n          this.setState({\n            submitMsg: i18n.t('submitMessages.error'),\n            submitColour: '#da1e28',\n          });\n        });\n    }\n  };\n\n  clearValues = () => {\n    const partnerModalElement = document.querySelector('#modal-form-partner');\n    if (!partnerModalElement.className.includes('is-visible')) {\n      this.setState({\n        projectId: '',\n        name: '',\n        partnerNumber: '',\n        notes: '',\n        invalid: {},\n        submitMsg: '',\n        submitColour: 'black',\n      });\n    }\n  };\n\n  render() {\n    const modalConfirmation = (\n      <div className=\"bx--modal-header\">\n        <p style={{color: this.state.submitColour}}>{this.state.submitMsg}</p>\n      </div>\n    );\n    const {keycloak} = this.props;\n    const modalId = 'modal-form-partner';\n    return (\n      <AuthenticatedView keycloak={keycloak}>\n        <ModalWrapper\n          buttonTriggerText={i18n.t('buttons.addPartner')}\n          modalHeading={i18n.t('adminDashboard.addPartner.title')}\n          buttonTriggerClassName=\"add-partner bx--btn bx--btn--tertiary add-partner-button\"\n          className=\"modal-form\"\n          id={modalId}\n          handleSubmit={this.handleFormSubmit}\n          primaryButtonText={i18n.t('modalText.save')}\n          secondaryButtonText={i18n.t('modalText.cancel')}\n        >\n          {modalConfirmation}\n          <div className=\"form-container\">\n            <Form onSubmit={this.handleFormSubmit}>\n              <Select\n                id={'projectId' + modalId}\n                name=\"projectId\"\n                labelText={i18n.t('adminDashboard.addPartner.projectList') + ' *'}\n                value={this.state.projectId}\n                onChange={this.handleChanges}\n                invalidText={i18n.t('validation.invalid.required')}\n                invalid={this.state.invalid['projectId']}\n              >\n                <SelectItem text={i18n.t('adminDashboard.addPartner.selectProject')} value=\"project-list\"/>\n                {Object.keys(this.state.projectList).length !== 0\n                  ? this.state.projectList.map((project, i) => (\n                    <SelectItem key={i} text={project.name} value={project.id}>\n                      {project.name}\n                    </SelectItem>\n                  ))\n                  : null}\n              </Select>\n\n              <TextInput\n                id={'name' + modalId}\n                name=\"name\"\n                labelText={i18n.t('adminDashboard.addPartner.partnerName') + ' *'}\n                value={this.state.name}\n                onChange={this.handleChanges}\n                invalidText={i18n.t('validation.invalid.required')}\n                invalid={this.state.invalid['name']}\n              />\n              <TextInput\n                id={'partnerNumber' + modalId}\n                name=\"partnerNumber\"\n                labelText={i18n.t('adminDashboard.addPartner.partnerNumber') + ' *'}\n                value={this.state.partnerNumber}\n                onChange={this.handleChanges}\n                invalidText={i18n.t('validation.invalid.required')}\n                invalid={this.state.invalid['partnerNumber']}\n              />\n              <TextArea\n                name=\"notes\"\n                labelText={i18n.t('adminDashboard.addPartner.notes')}\n                value={this.state.notes}\n                onChange={this.handleChanges}\n              />\n            </Form>\n          </div>\n          {modalConfirmation}\n        </ModalWrapper>\n      </AuthenticatedView>\n    );\n  }\n}\n\nexport default withKeycloak(AddPartnerModal);\n","import React, { Component } from 'react';\nimport i18n from '../../i18n';\nimport { ModalWrapper, Form, TextInput, Select, SelectItem, TextArea } from 'carbon-components-react';\nimport withKeycloak from '../../auth/withKeycloak';\nimport { apiCustomersGet, apiAddProjectToCustomer } from '../../api/customers';\nimport { apiProjectPost, apiProjectsGet } from '../../api/projects';\n\nclass AddProjectModal extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      projects: {},\n      customerList: {},\n      customerId: '',\n      name: '',\n      description: '',\n      systemId: '',\n      contactName: '',\n      contactPhone: '',\n      contactEmail: '',\n      notes: '',\n      invalid: {},\n      submitMsg: '',\n      submitColour: 'black',\n    };\n  }\n\n  handleValidation() {\n    let invalid = {};\n    let formIsValid = true;\n\n    //customer\n    if (this.state.customerId === '' || this.state.customerId === 'customer-list') {\n      formIsValid = false;\n      invalid['customerId'] = true;\n    }\n\n    //name\n    if (this.state.name === '') {\n      formIsValid = false;\n      invalid['name'] = true;\n    }\n\n    //description\n    if (this.state.description === '') {\n      formIsValid = false;\n      invalid['description'] = true;\n    }\n\n    //contactEmail\n    if (typeof this.state.contactEmail !== 'undefined') {\n      let lastAtPos = this.state.contactEmail.lastIndexOf('@');\n      let lastDotPos = this.state.contactEmail.lastIndexOf('.');\n\n      if (\n        !(\n          lastAtPos < lastDotPos &&\n          lastAtPos > 0 &&\n          this.state.contactEmail.indexOf('@@') === -1 &&\n          lastDotPos > 2 &&\n          this.state.contactEmail.length - lastDotPos > 2\n        )\n      ) {\n        formIsValid = false;\n        invalid['contactEmail'] = true;\n      }\n    }\n\n    this.setState({ invalid: invalid });\n    return formIsValid;\n  }\n\n  async getAllProjects() {\n    const projects = await apiProjectsGet(this.props.serviceUrl);\n    this.setState({\n      projects: projects.data,\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    const { keycloak } = this.props;\n    const authenticated = keycloak.initialized && keycloak.authenticated;\n\n    const changedAuth = prevProps.keycloak.authenticated !== authenticated;\n\n    if (authenticated && changedAuth) {\n      this.getCustomers();\n      this.getAllProjects();\n    }\n  }\n\n  handleChanges = e => {\n    const input = e.target;\n    const name = input.name;\n    const value = input.value;\n    this.setState({ [name]: value });\n  };\n\n  async getCustomers() {\n    const { keycloak } = this.props;\n    const authenticated = keycloak.initialized && keycloak.authenticated;\n    if (authenticated) {\n      const customers = await apiCustomersGet(this.props.serviceUrl);\n      this.setState({ customerList: customers });\n    }\n  }\n\n  async projectPost(project) {\n    const { keycloak } = this.props;\n    const authenticated = keycloak.initialized && keycloak.authenticated;\n    if (authenticated) {\n      const result = await apiProjectPost(this.props.serviceUrl, project);\n      return await apiAddProjectToCustomer(this.props.serviceUrl, this.state.customerId, result.data.id);\n    }\n  }\n\n  handleFormSubmit = () => {\n    const formIsValid = this.handleValidation();\n\n    if (formIsValid) {\n      const project = {\n        name: this.state.name,\n        description: this.state.description,\n        systemId: this.state.systemId,\n        contactName: this.state.contactName,\n        contactPhone: this.state.contactPhone,\n        contactEmail: this.state.contactEmail,\n        notes: this.state.notes,\n      };\n      for (var i = 0; i < this.state.projects.length; i++) {\n        if (project.systemId === this.state.projects[i].systemId && project.systemId.trim() !== '') {\n          window.alert('That system id is already in use in another project');\n          return;\n        }\n      }\n      this.projectPost(project)\n        .then(() => {\n          this.setState({\n            submitMsg: i18n.t('submitMessages.added'),\n            submitColour: '#24a148',\n          });\n          this.props.updateCustomerList();\n          this.getAllProjects();\n        })\n        .catch(() => {\n          this.setState({\n            submitMsg: i18n.t('submitMessages.error'),\n            submitColour: '#da1e28',\n          });\n        });\n    }\n  };\n\n  clearValues = () => {\n    const projectModalElement = document.querySelector('#modal-form-project');\n    if (!projectModalElement.className.includes('is-visible')) {\n      this.setState({\n        customerId: '',\n        name: '',\n        description: '',\n        systemId: '',\n        contactName: '',\n        contactPhone: '',\n        contactEmail: '',\n        notes: '',\n        invalid: {},\n      });\n    }\n  };\n\n  componentDidMount() {\n    this.getCustomers();\n    this.getAllProjects();\n\n    const modalOpenButton = document.querySelector('.add-project-button');\n    modalOpenButton.addEventListener('click', this.clearValues, false);\n  }\n\n  render() {\n    const modalConfirmation = (\n      <div className=\"bx--modal-header\">\n        <p style={{color: this.state.submitColour}}>{this.state.submitMsg}</p>\n      </div>\n    );\n    const modalId = 'modal-form-project';\n    return (\n      <ModalWrapper\n        buttonTriggerText={i18n.t('buttons.addProject')}\n        modalHeading={i18n.t('adminDashboard.addProject.title')}\n        buttonTriggerClassName=\"add-project bx--btn bx--btn--tertiary add-project-button\"\n        className=\"modal-form\"\n        id={modalId}\n        handleSubmit={this.handleFormSubmit}\n        primaryButtonText={i18n.t('modalText.save')}\n        secondaryButtonText={i18n.t('modalText.cancel')}\n      >\n        {modalConfirmation}\n        <div className=\"form-container\">\n          <Form onSubmit={this.handleFormSubmit}>\n            <Select\n              id={'customerId' + modalId}\n              name=\"customerId\"\n              labelText={i18n.t('adminDashboard.addProject.customerList') + ' *'}\n              value={this.state.customerId}\n              onChange={this.handleChanges}\n              invalidText={i18n.t('validation.invalid.required')}\n              invalid={this.state.invalid['customerId']}\n            >\n              <SelectItem text={i18n.t('adminDashboard.addProject.selectCustomer')} value=\"customer-list\" />\n              {Object.keys(this.props.allCustomers).length !== 0\n                ? this.props.allCustomers.map((customerList, i) => (\n                    <SelectItem key={i} text={customerList.name} value={customerList.id}>\n                      {customerList.name}\n                    </SelectItem>\n                  ))\n                : null}\n            </Select>\n\n            <TextInput\n              id={'name' + modalId}\n              name=\"name\"\n              labelText={i18n.t('adminDashboard.addProject.projectName') + ' *'}\n              value={this.state.name}\n              onChange={this.handleChanges}\n              invalidText={i18n.t('validation.invalid.required')}\n              invalid={this.state.invalid['name']}\n            />\n            <TextInput\n              id={'description' + modalId}\n              name=\"description\"\n              labelText={i18n.t('adminDashboard.addProject.projectDesc') + ' *'}\n              value={this.state.description}\n              onChange={this.handleChanges}\n              invalidText={i18n.t('validation.invalid.required')}\n              invalid={this.state.invalid['description']}\n            />\n            <TextInput\n              id={'systemId' + modalId}\n              name=\"systemId\"\n              labelText={i18n.t('adminDashboard.addProject.systemId')}\n              value={this.state.systemId}\n              onChange={this.handleChanges}\n            />\n            <TextInput\n              id={'contactName' + modalId}\n              name=\"contactName\"\n              labelText={i18n.t('adminDashboard.addProject.contactName')}\n              value={this.state.contactName}\n              onChange={this.handleChanges}\n            />\n            <TextInput\n              id={'contactPhone' + modalId}\n              name=\"contactPhone\"\n              labelText={i18n.t('adminDashboard.addProject.contactPhone')}\n              value={this.state.contactPhone}\n              onChange={this.handleChanges}\n            />\n            <TextInput\n              id={'contactEmail' + modalId}\n              name=\"contactEmail\"\n              labelText={i18n.t('adminDashboard.addProject.contactEmail') + ' *'}\n              value={this.state.contactEmail}\n              onChange={this.handleChanges}\n              invalidText={i18n.t('validation.invalid.email')}\n              invalid={this.state.invalid['contactEmail']}\n            />\n            <TextArea\n              id={'notes' + modalId}\n              name=\"notes\"\n              labelText={i18n.t('adminDashboard.addProject.notes')}\n              value={this.state.notes}\n              onChange={this.handleChanges}\n            />\n          </Form>\n        </div>\n        {modalConfirmation}\n      </ModalWrapper>\n    );\n  }\n}\n\nexport default withKeycloak(AddProjectModal);\n","import React, { Component } from 'react';\nimport i18n from '../../i18n';\nimport { ModalWrapper, Form, TextInput, TextArea } from 'carbon-components-react';\nimport withKeycloak from '../../auth/withKeycloak';\nimport { apiCustomersGet } from '../../api/customers';\nimport { apiProjectGet, apiProjectPut, apiProjectsGet } from '../../api/projects';\n\nclass EditProjectModal extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      projects: {},\n      customerList: {},\n      customerId: '',\n      name: '',\n      description: '',\n      systemId: '',\n      contactName: '',\n      contactPhone: '',\n      contactEmail: '',\n      notes: '',\n      invalid: {},\n      modalId: '',\n      buttonId: '',\n      submitMsg: '',\n      submitColour: 'black',\n    };\n  }\n\n  handleValidation() {\n    let invalid = {};\n    let formIsValid = true;\n\n    //name\n    if (this.state.name === '') {\n      formIsValid = false;\n      invalid['name'] = true;\n    }\n\n    //description\n    if (this.state.description === '') {\n      formIsValid = false;\n      invalid['description'] = true;\n    }\n\n    //contactEmail\n    if (typeof this.state.contactEmail !== 'undefined') {\n      let lastAtPos = this.state.contactEmail.lastIndexOf('@');\n      let lastDotPos = this.state.contactEmail.lastIndexOf('.');\n\n      if (\n        !(\n          lastAtPos < lastDotPos &&\n          lastAtPos > 0 &&\n          this.state.contactEmail.indexOf('@@') === -1 &&\n          lastDotPos > 2 &&\n          this.state.contactEmail.length - lastDotPos > 2\n        )\n      ) {\n        formIsValid = false;\n        invalid['contactEmail'] = true;\n      }\n    }\n\n    this.setState({ invalid: invalid });\n    return formIsValid;\n  }\n\n  componentDidUpdate(prevProps) {\n    const { keycloak } = this.props;\n    const authenticated = keycloak.initialized && keycloak.authenticated;\n\n    const changedAuth = prevProps.keycloak.authenticated !== authenticated;\n\n    if (authenticated && changedAuth) {\n      this.getCustomers();\n      this.getAllProjects();\n      this.getProjectDetails();\n    }\n  }\n\n  handleChanges = e => {\n    const input = e.target;\n    const name = input.name;\n    const value = input.value;\n    this.setState({ [name]: value });\n  };\n\n  async getCustomers() {\n    const { keycloak } = this.props;\n    const authenticated = keycloak.initialized && keycloak.authenticated;\n    if (authenticated) {\n      const customers = await apiCustomersGet(this.props.serviceUrl);\n      this.setState({ customerList: customers });\n    }\n  }\n\n  async getProjectDetails() {\n    const { keycloak } = this.props;\n    const authenticated = keycloak.initialized && keycloak.authenticated;\n    if (authenticated) {\n      const project = await apiProjectGet(this.props.serviceUrl, this.props.project.id);\n      this.setState({\n        name: project.data.name,\n        description: project.data.description,\n        systemId: project.data.systemId,\n        contactName: project.data.contactName,\n        contactPhone: project.data.contactPhone,\n        contactEmail: project.data.contactEmail,\n        notes: project.data.notes,\n        modalId: 'modal-form-project-edit-' + project.data.id,\n        buttonId: 'edit-project-button-' + project.data.id,\n      });\n    }\n  }\n\n  async getAllProjects() {\n    const projects = await apiProjectsGet(this.props.serviceUrl);\n    this.setState({\n      projects: projects.data,\n    });\n  }\n\n  async projectPut(project) {\n    const { keycloak } = this.props;\n    const authenticated = keycloak.initialized && keycloak.authenticated;\n    if (authenticated) {\n      return await apiProjectPut(this.props.serviceUrl, project);\n    }\n  }\n\n  handleFormSubmit = () => {\n    const formIsValid = this.handleValidation();\n\n    if (formIsValid) {\n      const project = {\n        id: this.props.project.id,\n        customer: this.props.project.customer,\n        name: this.state.name,\n        description: this.state.description,\n        systemId: this.state.systemId,\n        contactName: this.state.contactName,\n        contactPhone: this.state.contactPhone,\n        contactEmail: this.state.contactEmail,\n        notes: this.state.notes,\n      };\n      for (var i = 0; i < this.props.allProjects.length; i++) {\n        if (\n          project.systemId === this.props.allProjects[i].systemId &&\n          project.id !== this.props.allProjects[i].id &&\n          project.systemId.trim() !== ''\n        ) {\n          window.alert('That system id is already in use in another project');\n          return;\n        }\n      }\n      this.projectPut(project)\n        .then(() => {\n          this.setState({\n            submitMsg: i18n.t('submitMessages.updated'),\n            submitColour: '#24a148',\n          });\n          this.props.updateProjectList();\n        })\n        .catch(() => {\n          this.setState({\n            submitMsg: i18n.t('submitMessages.error'),\n            submitColour: '#da1e28',\n          });\n        });\n    }\n  };\n\n  clearValues = () => {\n    const { keycloak } = this.props;\n    const authenticated = keycloak.initialized && keycloak.authenticated;\n\n    const customerModalElement = document.querySelector('#' + this.state.modalId);\n    if (!customerModalElement.className.includes('is-visible') && authenticated) {\n      this.setState({\n        name: this.props.project.name,\n        description: this.props.project.description,\n        systemId: this.props.project.systemId,\n        contactName: this.props.project.contactName,\n        contactPhone: this.props.project.contactPhone,\n        contactEmail: this.props.project.contactEmail,\n        notes: this.props.project.notes,\n        invalid: {},\n      });\n    }\n  };\n\n  componentDidMount() {\n    const { keycloak } = this.props;\n    const authenticated = keycloak.initialized && keycloak.authenticated;\n\n    if (authenticated) {\n      this.getCustomers();\n      this.getAllProjects();\n      this.getProjectDetails();\n\n      const modalOpenButton = document.querySelector('.edit-project-button-' + this.props.project.id);\n      modalOpenButton.addEventListener('click', this.clearValues, false);\n    }\n  }\n\n  render() {\n    const modalConfirmation = (\n      <div className=\"bx--modal-header\">\n        <p style={{color: this.state.submitColour}}>{this.state.submitMsg}</p>\n      </div>\n    );\n    const buttonClassName = 'dropdown-button-button bx--btn bx--btn--ghost edit-project-button-' + this.props.project.id;\n    const modalId = this.state.modalId;\n    return (\n      <ModalWrapper\n        buttonTriggerText={i18n.t('buttons.edit')}\n        modalHeading={i18n.t('adminDashboard.addProject.editTitle')}\n        buttonTriggerClassName={buttonClassName}\n        className=\"modal-form\"\n        id={this.state.modalId}\n        handleSubmit={this.handleFormSubmit}\n        primaryButtonText={i18n.t('modalText.save')}\n        secondaryButtonText={i18n.t('modalText.cancel')}\n      >\n        {modalConfirmation}\n        <div className=\"form-container\">\n          <Form onSubmit={this.handleFormSubmit}>\n            <TextInput\n              id={'name' + modalId}\n              name=\"name\"\n              labelText={i18n.t('adminDashboard.addProject.projectName') + ' *'}\n              value={this.state.name}\n              onChange={this.handleChanges}\n              invalidText={i18n.t('validation.invalid.required')}\n              invalid={this.state.invalid['name']}\n            />\n            <TextInput\n              id={'description' + modalId}\n              name=\"description\"\n              labelText={i18n.t('adminDashboard.addProject.projectDesc') + ' *'}\n              value={this.state.description}\n              onChange={this.handleChanges}\n              invalidText={i18n.t('validation.invalid.required')}\n              invalid={this.state.invalid['description']}\n            />\n            <TextInput\n              id={'systemId' + modalId}\n              name=\"systemId\"\n              labelText={i18n.t('adminDashboard.addProject.systemId')}\n              value={this.state.systemId}\n              onChange={this.handleChanges}\n            />\n            <TextInput\n              id={'contactName' + modalId}\n              name=\"contactName\"\n              labelText={i18n.t('adminDashboard.addProject.contactName')}\n              value={this.state.contactName}\n              onChange={this.handleChanges}\n            />\n            <TextInput\n              id={'contactPhone' + modalId}\n              name=\"contactPhone\"\n              labelText={i18n.t('adminDashboard.addProject.contactPhone')}\n              value={this.state.contactPhone}\n              onChange={this.handleChanges}\n            />\n            <TextInput\n              id={'contactEmail' + modalId}\n              name=\"contactEmail\"\n              labelText={i18n.t('adminDashboard.addProject.contactEmail') + ' *'}\n              value={this.state.contactEmail}\n              onChange={this.handleChanges}\n              invalidText={i18n.t('validation.invalid.email')}\n              invalid={this.state.invalid['contactEmail']}\n            />\n            <TextArea\n              name=\"notes\"\n              labelText={i18n.t('adminDashboard.addProject.notes')}\n              value={this.state.notes}\n              onChange={this.handleChanges}\n            />\n          </Form>\n        </div>\n        {modalConfirmation}\n      </ModalWrapper>\n    );\n  }\n}\n\nexport default withKeycloak(EditProjectModal);\n","import React, {Component} from 'react';\nimport i18n from '../../i18n';\nimport {\n  Button,\n  DataTable,\n  ModalWrapper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from 'carbon-components-react';\nimport withKeycloak from '../../auth/withKeycloak';\nimport {isPortalAdminOrSupport} from '../../api/helpers';\nimport {apiDeletePartnerFromProject} from '../../api/projects';\n\nclass ManagePartnersModal extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      projectId: this.props.project.id,\n      project: this.props.project,\n    };\n\n    this.headerData = [\n      {\n        header: i18n.t('adminDashboard.addPartner.partnerName'),\n        key: 'partner',\n      },\n      {\n        header: i18n.t('adminDashboard.addPartner.partnerNumber'),\n        key: 'partnerNumber',\n      },\n      {\n        header: i18n.t('adminDashboard.addPartner.notes'),\n        key: 'notes',\n      },\n      {\n        header: i18n.t('customerDashboard.action'),\n        key: 'action',\n      },\n    ];\n  }\n\n  async removePartner(projectId, partnerId) {\n    if (isPortalAdminOrSupport()) {\n      return await apiDeletePartnerFromProject(this.props.serviceUrl, projectId, partnerId);\n    }\n  }\n\n  handleRemovePartner = (e, projectId, partnerId) => {\n    e.preventDefault();\n    if (window.confirm('Are you sure you want to remove this partner from the project?')) {\n      this.removePartner(projectId, partnerId)\n        .then(result => {\n          this.setState({\n            project: result.data,\n            submitMsg: i18n.t('submitMessages.deleted'),\n            submitColour: '#24a148',\n          });\n          this.props.updateProjectList();\n        })\n        .catch(err => {\n          console.log(err);\n          this.setState({\n            submitMsg: i18n.t('submitMessages.error'),\n            submitColour: '#da1e28',\n          });\n        });\n    }\n  };\n\n  render() {\n    const modalConfirmation = (\n      <div className=\"bx--modal-header\">\n        <p style={{color: this.state.submitColour}}>{this.state.submitMsg}</p>\n      </div>\n    );\n    const modalId = 'modal-form-manage-partners';\n    return (\n      <ModalWrapper\n        buttonTriggerText={i18n.t('buttons.managePartners')}\n        modalHeading={i18n.t('adminDashboard.managePartners.title')}\n        buttonTriggerClassName=\"add-partner bx--btn bx--btn--tertiary add-partner-button\"\n        className=\"modal-form\"\n        id={modalId}\n        hasForm={false}\n        primaryButtonText={i18n.t('modalText.done')}\n        secondaryButtonText={null}\n      >\n        {modalConfirmation}\n        <div>\n          <DataTable rows={rowData} headers={this.headerData}>\n            {({rows, headers, getHeaderProps, getTableProps}) => (\n              <TableContainer description={i18n.t('customerDashboard.tableDesc')}>\n                <Table {...getTableProps()}>\n                  <TableHead>\n                    <TableRow key=\"headerRow\">\n                      {headers.map(header => {\n                        return <TableHeader {...getHeaderProps({header})}>{header.header}</TableHeader>;\n                      })}\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {this.state.project.partners.map((partner, index) => {\n                      return (\n                        <TableRow key={'partner' + index}>\n                          <TableCell>{partner.name}</TableCell>\n                          <TableCell>{partner.partnerNumber}</TableCell>\n                          <TableCell>{partner.notes}</TableCell>\n                          <TableCell>\n                            <div>\n                              <Button\n                                kind=\"ghost\"\n                                onClick={e => this.handleRemovePartner(e, this.state.projectId, partner.id)}\n                                style={{display: 'block', width: '100%', color: 'red'}}\n                              >\n                                {i18n.t('buttons.delete')}\n                              </Button>\n                              <hr style={{margin: '0', border: 'none', borderTop: '1px solid lightgrey'}}/>\n                            </div>\n                          </TableCell>\n                        </TableRow>\n                      );\n                    })}\n                  </TableBody>\n                </Table>\n              </TableContainer>\n            )}\n          </DataTable>\n        </div>\n        {modalConfirmation}\n      </ModalWrapper>\n    );\n  }\n}\n\nconst rowData = [\n  {\n    id: 'a',\n    name: 'Partner 1',\n    partnerNumber: '123',\n  },\n  {\n    id: 'b',\n    name: 'Partner 2',\n    partnerNumber: '456',\n  },\n];\n\nexport default withKeycloak(ManagePartnersModal);\n","import React from 'react';\nimport i18n from '../../i18n';\nimport withKeycloak from '../../auth/withKeycloak';\nimport { Button } from 'carbon-components-react';\nimport EditProjectModal from '../Admin/EditProjectModal';\nimport ManagePartnersModal from '../Admin/ManagePartnersModal';\nimport {isPortalAdmin} from '../../api/helpers';\nimport {Link} from 'react-router-dom';\n\nclass ProjectActionItems extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      showMenu: false,\n    };\n  }\n\n  handleClick = () => {\n    if (!this.state.showMenu) {\n      document.addEventListener('mousedown', this.handleOutsideClick, false);\n    } else {\n      document.removeEventListener('mousedown', this.handleOutsideClick, false);\n    }\n\n    this.setState(prevState => ({\n      showMenu: !prevState.showMenu,\n    }));\n  };\n\n  handleOutsideClick = e => {\n    if (this.node && !this.node.contains(e.target)) {\n      this.handleClick();\n    }\n  };\n\n  render() {\n    const isAdmin = isPortalAdmin();\n    const actionDivider = <hr style={{margin: '0', border: 'none', borderTop: '1px solid lightgrey'}}/>;\n    const topButton = (\n      <Button onClick={this.handleClick} style={{padding: '10px 20px'}} kind=\"tertiary\">\n        +\n      </Button>\n    );\n    const editProjectSubscription = (\n      <>\n        <EditProjectModal\n          key={this.props.project.id}\n          allProjects={this.props.allProjects}\n          project={this.props.project}\n          serviceUrl={this.props.serviceUrl}\n          updateProjectList={this.props.updateProjectList}\n        />\n        {actionDivider}\n      </>\n    );\n    const subscriptionParam = this.props.subscription ? '&subscription=' + this.props.subscription.id : '';\n    const newOrRenewSubscription = (\n      <>\n        <a\n          href={`/entando-de-app/${this.props.locale}/new_or_renew_subscription.page?project=${this.props.project.id}${subscriptionParam}`}\n          style={{textDecoration: 'none'}}\n        >\n          <Button kind=\"ghost\" style={{display: 'block', width: '100%'}} value=\"Subscription Request\">\n            {i18n.t('buttons.subscriptionRequest')}\n          </Button>\n        </a>\n        {actionDivider}\n      </>\n    );\n    const managePartners = (\n      <>\n        <ManagePartnersModal\n          key={this.props.project.id}\n          project={this.props.project}\n          serviceUrl={this.props.serviceUrl}\n          updateProjectList={this.props.updateProjectList}\n        />\n        {actionDivider}\n      </>\n    );\n    const manageUsers = (\n      <>\n        <a\n          href={`/entando-de-app/${this.props.locale}/manage_users.page?project=${this.props.project.id}`}\n          style={{textDecoration: 'none'}}\n        >\n          <Button kind=\"ghost\" style={{display: 'block', width: '100%'}} value=\"Manage Users\">\n            {i18n.t('buttons.manageUsers')}\n          </Button>\n        </a>\n        {actionDivider}\n      </>\n    );\n    const manageSubscriptions = (\n      <>\n        <a\n          href={`/entando-de-app/${this.props.locale}/manage_subscriptions.page?project=${this.props.project.id}`}\n          style={{textDecoration: 'none'}}\n        >\n          <Button kind=\"ghost\" style={{display: 'block', width: '100%'}} value=\"Manage Subscriptions\">\n            {i18n.t('buttons.manageSubscriptions')}\n          </Button>\n        </a>\n        {actionDivider}\n      </>\n    );\n    const openTicket = (\n      <>\n        <a\n          href={`/entando-de-app/${this.props.locale}/open_service_ticket.page?project=${this.props.project.id}`}\n          style={{textDecoration: 'none'}}\n        >\n          <Button kind=\"ghost\" style={{display: 'block', width: '100%'}} value=\"Open Ticket\">\n            {i18n.t('buttons.openTicket')}\n          </Button>\n        </a>\n        {actionDivider}\n      </>\n    );\n    const viewAllTickets = (\n      <>\n        <a\n          href={\n            this.props.ticketingSystem.url.substr(0, this.props.ticketingSystem.url.indexOf('/rest')) +\n            '/issues/?jql=Organizations=' +\n            this.props.project.systemId\n          }\n          style={{textDecoration: 'none'}}\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          <Button kind=\"ghost\" style={{display: 'block', width: '100%'}} value=\"View All Tickets\">\n            {i18n.t('buttons.viewAllTickets')}\n          </Button>\n        </a>\n        {actionDivider}\n      </>\n    );\n    const deleteProject = (\n      <>\n        <Button\n          kind=\"ghost\"\n          onClick={e => this.props.handleDeleteProject(e, this.props.project.id)}\n          style={{display: 'block', width: '100%', color: 'red'}}\n        >\n          {i18n.t('buttons.delete')}\n        </Button>\n        {actionDivider}\n      </>\n    );\n    if (!this.props.subscription) {\n      return (\n        <>\n          {topButton}\n          {this.state.showMenu && (\n            <div\n              className=\"menu\"\n              style={{zIndex: '100', position: 'absolute', backgroundColor: 'white'}}\n              ref={node => {\n                this.node = node;\n              }}\n            >\n              {actionDivider}\n              {isAdmin && editProjectSubscription}\n              {newOrRenewSubscription}\n              {isAdmin && (\n                <>\n                  {openTicket}\n                  {viewAllTickets}\n                  {manageSubscriptions}\n                  {manageUsers}\n                  {managePartners}\n                  {deleteProject}\n                </>\n              )}\n            </div>\n          )}\n        </>\n      );\n    } else {\n      return (\n        <>\n          {topButton}\n          {this.state.showMenu && (\n            <div\n              className=\"menu\"\n              style={{zIndex: '100', position: 'absolute', backgroundColor: 'white'}}\n              ref={node => {\n                this.node = node;\n              }}\n            >\n              {actionDivider}\n              {/*View Project Subscription*/}\n              <Link to={`/subscription-details/${this.props.subscription.id}`} style={{textDecoration: 'none'}}>\n                <Button kind=\"ghost\" style={{display: 'block', width: '100%'}} value=\"View\">\n                  {i18n.t('buttons.view')}\n                </Button>\n              </Link>\n              {actionDivider}\n              {isAdmin && editProjectSubscription}\n              {openTicket}\n              {viewAllTickets}\n              {!isAdmin && newOrRenewSubscription}\n              {isAdmin && (\n                <>\n                  {manageSubscriptions}\n                  {manageUsers}\n                  {managePartners}\n                  {deleteProject}\n                </>\n              )}\n            </div>\n          )}\n        </>\n      );\n    }\n  }\n}\n\nexport default withKeycloak(ProjectActionItems);\n","import {getDefaultOptions, request} from './helpers';\nimport moment from 'moment';\n\nconst resource = 'api/project-subscriptions';\n\nexport const formatStartDate = startDate => {\n  return String(new Date(startDate).toDateString());\n};\n\nexport const formatEndDate = (startDate, lengthInMonths) => {\n  const endDate = new Date(startDate).setMonth(new Date(startDate).getMonth() + lengthInMonths);\n  return String(new Date(endDate).toDateString());\n};\n\nexport const stripTime = date => {\n  return moment(date).format('MM/DD/YYYY');\n};\n\nexport const apiSubscriptionGet = async (serviceUrl, id) => {\n  const url = `${serviceUrl}/${resource}/${id}`;\n  const options = {\n    ...getDefaultOptions(),\n    method: 'GET',\n  };\n  return request(url, options);\n};\n\n// Project Subscription creation consists of an object containing a projectSubscription, an entandoVersionId, and a\n// project id, see SubscriptionCreationRequest.\n/**\n * Called to create a new project subscription\n *\n * @param {string} serviceUrl\n * @param {ProjectSubscriptionCreation} projectSubscriptionCreation\n * @returns\n */\nexport const apiProjectSubscriptionPost = async (serviceUrl, projectSubscriptionCreation) => {\n  const url = `${serviceUrl}/${resource}`;\n  const options = {\n    ...getDefaultOptions(),\n    method: 'POST',\n    body: projectSubscriptionCreation ? JSON.stringify(projectSubscriptionCreation) : null,\n  };\n  return request(url, options);\n};\n\nexport const apiProjectSubscriptionPut = async (serviceUrl, projectSubscriptionCreation) => {\n  const url = `${serviceUrl}/${resource}`;\n  const options = {\n    ...getDefaultOptions(),\n    method: 'PUT',\n    body: projectSubscriptionCreation ? JSON.stringify(projectSubscriptionCreation) : null,\n  };\n  return request(url, options);\n};\n\n// Same format as {projectSubscriptionCreation}\nexport const apiRenewSubscription = async (serviceUrl, projectSubscriptionRenew) => {\n  const url = `${serviceUrl}/${resource}/renew`;\n\n  const options = {\n    ...getDefaultOptions(),\n    method: 'PUT',\n    body: projectSubscriptionRenew ? JSON.stringify(projectSubscriptionRenew) : null,\n  };\n\n  return request(url, options);\n};\n","import {Component} from 'react';\nimport {\n  DataTable,\n  TableContainer,\n  Table,\n  TableHead,\n  TableRow,\n  TableHeader,\n  TableBody,\n  TableCell\n} from 'carbon-components-react';\nimport '../../index.scss';\nimport {apiDeleteProjectFromCustomer, apiCustomerGet} from '../../api/customers';\nimport withKeycloak from '../../auth/withKeycloak';\nimport {Link} from 'react-router-dom';\nimport i18n from '../../i18n';\nimport {authenticationChanged, getActiveSubscription, isAuthenticated, isPortalAdminOrSupport} from '../../api/helpers';\nimport {apiCurrentTicketingSystemGet} from '../../api/ticketingsystem';\nimport ProjectActionItems from '../Admin/ProjectActionItems';\nimport {formatEndDate, formatStartDate} from '../../api/subscriptions';\n\nclass CustomerDataTable extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      projects: {},\n      ticketingSystem: {},\n      action: 'Edit',\n      showMenu: {},\n    };\n    this.headerData = [\n      {\n        header: i18n.t('customerDashboard.projectName'),\n        key: 'projectName',\n      },\n      {\n        header: i18n.t('customerDashboard.partners'),\n        key: 'partners',\n      },\n      {\n        header: i18n.t('customerDashboard.entandoVersion'),\n        key: 'entandoVersion',\n      },\n      {\n        header: i18n.t('customerDashboard.status'),\n        key: 'status',\n      },\n      {\n        header: i18n.t('customerDashboard.startDate'),\n        key: 'startDate',\n      },\n      {\n        header: i18n.t('customerDashboard.endDate'),\n        key: 'endDate',\n      },\n      {\n        header: i18n.t('customerDashboard.openTickets'),\n        key: 'openTickets',\n      },\n      {\n        header: i18n.t('customerDetails.notes'),\n        key: 'notes',\n      },\n      {\n        header: i18n.t('customerDashboard.action'),\n        key: 'action',\n      },\n    ];\n  }\n\n  async fetchData() {\n    if (isAuthenticated(this.props)) {\n      try {\n        const customer = await apiCustomerGet(this.props.serviceUrl, this.props.customerId);\n        const projects = customer.data.projects;\n        const ticketingSystem = await apiCurrentTicketingSystemGet(this.props.serviceUrl);\n        this.setState({\n          projects: projects,\n          ticketingSystem: ticketingSystem,\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    this.render();\n  }\n\n  componentDidMount() {\n    if (isAuthenticated(this.props)) {\n      this.fetchData();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (authenticationChanged(this.props, prevProps)) {\n      this.fetchData();\n    }\n  }\n\n  // fix warning: Can't perform a React state update on an unmounted component\n  componentWillUnmount() {\n    this.setState = (state, callback) => {\n      //no-op\n    };\n  }\n\n  updateProjectList = () => {\n    this.fetchData();\n  };\n\n  async deleteProject(id) {\n    if (isAuthenticated(this.props)) {\n      return await apiDeleteProjectFromCustomer(this.props.serviceUrl, this.props.customerId, id);\n    }\n  }\n\n  handleDeleteProject = (e, id) => {\n    e.preventDefault();\n    if (window.confirm('Are you sure you want to delete this project?')) {\n      this.deleteProject(id)\n        .then(() => {\n          this.setState({\n            submitMsg: i18n.t('submitMessages.deleted'),\n            submitColour: '#24a148',\n          });\n          this.props.updateCustomerList();\n        })\n        .catch(() => {\n          this.setState({\n            submitMsg: i18n.t('submitMessages.error'),\n            submitColour: '#da1e28',\n          });\n        });\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <DataTable rows={[{id: '1'}]} headers={this.headerData}>\n          {({rows, headers, getHeaderProps, getTableProps}) => (\n            <TableContainer description={i18n.t('customerDashboard.tableDesc')}>\n              <Table {...getTableProps()}>\n                <TableHead>\n                  <TableRow key=\"headerRow\">\n                    {headers.map(header => {\n                      let result;\n                      if (header.header === i18n.t('customerDetails.notes')) {\n                        if (isPortalAdminOrSupport()) {\n                          result = <TableHeader {...getHeaderProps({header})}>{header.header}</TableHeader>;\n                        }\n                      } else {\n                        result = <TableHeader {...getHeaderProps({ header })}>{header.header}</TableHeader>;\n                      }\n                      return result;\n                    })}\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {Object.keys(this.state.projects).length !== 0\n                    ? this.state.projects.map((project, index) => {\n                      const subscription = getActiveSubscription(project);\n                      if (!subscription) {\n                        return (\n                          <TableRow key={index}>\n                            <TableCell>{project.name}</TableCell>\n                            {project.partners.length !== 0 ? (\n                              <TableCell>\n                                {project.partners.map((partner, partnerIndex) => (\n                                  <div key={partnerIndex}>{partner.name}</div>\n                                ))}\n                              </TableCell>\n                            ) : (\n                              <TableCell>{i18n.t('userMessages.none')}</TableCell>\n                            )}\n                            <TableCell>{i18n.t('userMessages.none')}</TableCell>\n                            <TableCell>{i18n.t('userMessages.none')}</TableCell>\n                            <TableCell>{i18n.t('userMessages.none')}</TableCell>\n                            <TableCell>{i18n.t('userMessages.none')}</TableCell>\n                            <TableCell>{project.tickets && project.tickets.length}</TableCell>\n                            {isPortalAdminOrSupport() ?\n                              <TableCell style={{width: '250px'}}>{project.notes}</TableCell> : null}\n                            <TableCell>\n                              <ProjectActionItems\n                                serviceUrl={this.props.serviceUrl}\n                                ticketingSystem={this.state.ticketingSystem}\n                                locale={this.props.locale}\n                                project={project}\n                                allProjects={this.state.projects}\n                                handleDeleteProject={this.handleDeleteProject}\n                                updateProjectList={this.updateProjectList}\n                                />\n                              </TableCell>\n                            </TableRow>\n                          );\n                        } else {\n                          return (\n                            <TableRow key={index}>\n                              <TableCell>\n                                <Link to={`/subscription-details/${subscription.id}`}>{project.name}</Link>\n                              </TableCell>\n                              {project.partners.length !== 0 ? (\n                                <TableCell>\n                                  {project.partners.map((partner, partnerIndex) => (\n                                    <div key={partnerIndex}>{partner.name}</div>\n                                  ))}\n                                </TableCell>\n                              ) : (\n                                <TableCell>{i18n.t('userMessages.none')}</TableCell>\n                              )}\n                              {subscription.entandoVersion ? (\n                                <TableCell>{subscription.entandoVersion.name}</TableCell>\n                              ) : (\n                                <TableCell>{i18n.t('userMessages.none')}</TableCell>\n                              )}\n                              <TableCell>{subscription.status}</TableCell>\n                              <TableCell>{formatStartDate(subscription.startDate)}</TableCell>\n                              <TableCell>{formatEndDate(subscription.startDate, subscription.lengthInMonths)}</TableCell>\n                              <TableCell>{project.tickets && project.tickets.length}</TableCell>\n                              {isPortalAdminOrSupport() ?\n                                <TableCell style={{width: '250px'}}>{project.notes}</TableCell> : null}\n                              <TableCell>\n                                <ProjectActionItems\n                                  serviceUrl={this.props.serviceUrl}\n                                  ticketingSystem={this.state.ticketingSystem}\n                                  locale={this.props.locale}\n                                  subscription={subscription}\n                                  project={project}\n                                  allProjects={this.state.projects}\n                                  handleDeleteProject={this.handleDeleteProject}\n                                  updateProjectList={this.updateProjectList}\n                                />\n                              </TableCell>\n                            </TableRow>\n                          );\n                        }\n                      })\n                    : null}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          )}\n        </DataTable>\n      </div>\n    );\n  }\n}\n\nexport default withKeycloak(CustomerDataTable);\n","import {Component} from 'react';\nimport i18n from '../../i18n';\nimport { Tile } from 'carbon-components-react';\nimport withKeycloak from '../../auth/withKeycloak';\n\nclass CustomerDetails extends Component {\n  constructor() {\n    super();\n    this.state = {\n      customer: {},\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"customer-details\">\n        <Tile style={{margin: '2em 0', minHeight: '0', paddingBottom: '0'}}>\n          <div>\n            <strong>{i18n.t('customerDashboard.customerId')}</strong> {this.props.customer.id}\n          </div>\n          <div>\n            <strong>{i18n.t('customerDashboard.customerName')}</strong> {this.props.customer.name}\n          </div>\n        </Tile>\n      </div>\n    );\n  }\n}\n\nexport default withKeycloak(CustomerDetails);\n","import React, {Component} from 'react';\nimport i18n from '../../i18n';\nimport {ModalWrapper, Form, TextInput, TextArea} from 'carbon-components-react';\nimport withKeycloak from '../../auth/withKeycloak';\nimport {apiCustomerGet, apiCustomerPut} from '../../api/customers';\nimport {authenticationChanged, isAuthenticated} from '../../api/helpers';\n\nclass EditCustomerModal extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      name: '',\n      customerNumber: '',\n      contactName: '',\n      contactPhone: '',\n      contactEmail: '',\n      notes: '',\n      invalid: {},\n      modalId: '',\n      buttonId: '',\n      submitMsg: '',\n      submitColour: 'black',\n    };\n  }\n\n  handleValidation() {\n    let invalid = {};\n    let formIsValid = true;\n\n    //name\n    if (this.state.name === '') {\n      formIsValid = false;\n      invalid['name'] = true;\n    }\n\n    //customerNumber\n    if (this.state.customerNumber === '') {\n      formIsValid = false;\n      invalid['customerNumber'] = true;\n    }\n\n    //contactEmail\n    if (typeof this.state.contactEmail !== 'undefined') {\n      let lastAtPos = this.state.contactEmail.lastIndexOf('@');\n      let lastDotPos = this.state.contactEmail.lastIndexOf('.');\n\n      if (\n        !(\n          lastAtPos < lastDotPos &&\n          lastAtPos > 0 &&\n          this.state.contactEmail.indexOf('@@') === -1 &&\n          lastDotPos > 2 &&\n          this.state.contactEmail.length - lastDotPos > 2\n        )\n      ) {\n        formIsValid = false;\n        invalid['contactEmail'] = true;\n      }\n    }\n\n    this.setState({ invalid: invalid });\n    return formIsValid;\n  }\n\n  handleChanges = e => {\n    const input = e.target;\n    const name = input.name;\n    const value = input.value;\n    this.setState({ [name]: value });\n  };\n\n  async updateCustomer(customer) {\n    if (isAuthenticated(this.props)) {\n      return await apiCustomerPut(this.props.serviceUrl, customer);\n    }\n  }\n\n  getCustomerDetails = customerId => {\n    this.getCustomer(customerId);\n  };\n\n  async getCustomer(customerId) {\n    if (isAuthenticated(this.props)) {\n      const customer = (await apiCustomerGet(this.props.serviceUrl, customerId)).data;\n      this.setState({\n        name: customer.name,\n        customerNumber: customer.customerNumber,\n        contactName: customer.contactName,\n        contactPhone: customer.contactPhone,\n        contactEmail: customer.contactEmail,\n        notes: customer.notes,\n        modalId: 'modal-form-customer-edit-' + customer.id,\n        buttonId: 'edit-customer-button-' + customer.id,\n      });\n    }\n  }\n\n  handleFormSubmit = () => {\n    const formIsValid = this.handleValidation();\n\n    if (formIsValid) {\n      const customer = {\n        id: this.props.customer.id,\n        name: this.state.name,\n        customerNumber: this.state.customerNumber,\n        contactName: this.state.contactName,\n        contactPhone: this.state.contactPhone,\n        contactEmail: this.state.contactEmail,\n        notes: this.state.notes,\n      };\n      this.updateCustomer(customer)\n        .then(() => {\n          this.setState({\n            submitMsg: i18n.t('submitMessages.updated'),\n            submitColour: '#24a148',\n          });\n          this.props.updateCustomerList();\n          this.getCustomerDetails(this.props.customer.id);\n        })\n        .catch(() => {\n          this.setState({\n            submitMsg: i18n.t('submitMessages.error'),\n            submitColour: '#da1e28',\n          });\n        });\n    }\n  };\n\n  clearValues = () => {\n    const { keycloak } = this.props;\n    const authenticated = keycloak.initialized && keycloak.authenticated;\n\n    const customerModalElement = document.querySelector('#' + this.state.modalId);\n    if (!customerModalElement.className.includes('is-visible') && authenticated) {\n      this.setState({\n        name: this.props.customer.name,\n        customerNumber: this.props.customer.customerNumber,\n        contactName: this.props.customer.contactName,\n        contactPhone: this.props.customer.contactPhone,\n        contactEmail: this.props.customer.contactEmail,\n        notes: this.props.customer.notes,\n        invalid: {},\n      });\n    }\n  };\n\n  componentDidMount() {\n    if (isAuthenticated(this.props)) {\n      if (this.props.customerId) {\n        this.getCustomerDetails(this.props.customerId);\n      }\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (authenticationChanged(this.props, prevProps)) {\n      this.getCustomerDetails(this.props.customerId);\n    }\n  }\n\n  render() {\n    const modalConfirmation = (\n      <div className=\"bx--modal-header\">\n        <p style={{color: this.state.submitColour}}>{this.state.submitMsg}</p>\n      </div>\n    );\n    const modalId = this.state.modalId;\n    const buttonClassName = 'bx--btn bx--btn--ghost edit-customer-button-' + this.props.customerId;\n    return (\n      modalId && (\n        <ModalWrapper\n          buttonTriggerText={i18n.t('buttons.edit')}\n          modalHeading={i18n.t('adminDashboard.editCustomer.title')}\n          buttonTriggerClassName={buttonClassName}\n          className=\"modal-form\"\n          id={modalId}\n          handleSubmit={this.handleFormSubmit}\n          primaryButtonText={i18n.t('modalText.save')}\n          secondaryButtonText={i18n.t('modalText.cancel')}\n        >\n          {modalConfirmation}\n          <div className=\"form-container\">\n            <Form onSubmit={this.handleFormSubmit} id={'form-' + modalId}>\n              <TextInput\n                id={'name' + modalId}\n                name=\"name\"\n                labelText={i18n.t('adminDashboard.addCustomer.customerName') + ' *'}\n                value={this.state.name}\n                onChange={this.handleChanges}\n                invalidText={i18n.t('validation.invalid.required')}\n                invalid={this.state.invalid['name']}\n              />\n              <TextInput\n                id={'customerNumber' + modalId}\n                name=\"customerNumber\"\n                labelText={i18n.t('adminDashboard.addCustomer.customerNumber') + ' *'}\n                value={this.state.customerNumber}\n                onChange={this.handleChanges}\n                invalidText={i18n.t('validation.invalid.required')}\n                invalid={this.state.invalid['customerNumber']}\n              />\n              <TextInput\n                id={'contactName' + modalId}\n                name=\"contactName\"\n                labelText={i18n.t('adminDashboard.addCustomer.contactName')}\n                value={this.state.contactName}\n                onChange={this.handleChanges}\n              />\n              <TextInput\n                id={'contactPhone' + modalId}\n                name=\"contactPhone\"\n                labelText={i18n.t('adminDashboard.addCustomer.contactPhone')}\n                value={this.state.contactPhone}\n                onChange={this.handleChanges}\n              />\n              <TextInput\n                id={'contactEmail' + modalId}\n                name=\"contactEmail\"\n                labelText={i18n.t('adminDashboard.addCustomer.contactEmail') + ' *'}\n                value={this.state.contactEmail}\n                onChange={this.handleChanges}\n                invalidText={i18n.t('validation.invalid.email')}\n                invalid={this.state.invalid['contactEmail']}\n              />\n              <TextArea\n                name=\"notes\"\n                labelText={i18n.t('adminDashboard.addCustomer.notes')}\n                value={this.state.notes}\n                onChange={this.handleChanges}\n              />\n            </Form>\n          </div>\n          {modalConfirmation}\n        </ModalWrapper>\n      )\n    );\n  }\n}\n\nexport default withKeycloak(EditCustomerModal);\n","import {Component} from 'react';\nimport {Link} from 'react-router-dom';\nimport {AccordionItem, Button} from 'carbon-components-react';\nimport withKeycloak from '../../auth/withKeycloak';\nimport {apiCustomerGet, apiCustomerDelete} from '../../api/customers';\nimport CustomerDataTable from './CustomerDataTable';\nimport CustomerDetails from './CustomerDetails';\nimport {\n  isPortalAdminOrSupport,\n  isPortalAdmin,\n  isPortalCustomer,\n  isAuthenticated,\n  authenticationChanged\n} from '../../api/helpers';\nimport EditCustomerModal from '../Admin/EditCustomerModal';\nimport i18n from '../../i18n';\n\nclass CustomerAccordian extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      projects: {},\n      customer: {},\n      authenticated: false,\n    };\n  }\n\n  componentDidMount() {\n    if (isAuthenticated(this.props)) {\n      this.fetchData();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (authenticationChanged(this.props, prevProps)) {\n      this.fetchData();\n    }\n  }\n\n  async fetchData() {\n    const customerId = this.props.customerId;\n    try {\n      const customer = await apiCustomerGet(this.props.serviceUrl, customerId);\n      this.setState({\n        customer: customer.data,\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async deleteCustomer() {\n    return await apiCustomerDelete(this.props.serviceUrl, this.state.customer.id);\n  }\n\n  handleDelete() {\n    if (window.confirm('Are you sure you want to delete this customer?')) {\n      this.deleteCustomer().then(() => {\n        this.props.updateCustomerList();\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <div>\n          {isPortalCustomer() && <CustomerDetails serviceUrl={this.props.serviceUrl} customer={this.state.customer}/>}\n          <AccordionItem title={this.props.title} open={this.props.accordionOpened}>\n            <div style={{display: 'flex'}}>\n              {isPortalAdminOrSupport() && (\n                <Link style={{textDecoration: 'none'}} to={`/customer-details/${this.state.customer.id}`}>\n                  <Button kind=\"ghost\">{i18n.t('buttons.viewDetails')}</Button>\n                </Link>\n              )}\n              {isPortalAdmin() && (\n                <div style={{display: 'flex'}}>\n                  <EditCustomerModal\n                    serviceUrl={this.props.serviceUrl}\n                    customer={this.state.customer}\n                    key={this.state.customer.id}\n                    updateCustomerList={this.props.updateCustomerList}\n                    customerId={this.state.customer.id}\n                  />\n                  <Button kind=\"ghost\" style={{color: 'red'}} onClick={() => this.handleDelete()}>\n                    {i18n.t('buttons.delete')}\n                  </Button>\n                </div>\n              )}\n            </div>\n            <CustomerDataTable\n              key={new Date().getTime()}\n              serviceUrl={this.props.serviceUrl}\n              customerId={this.props.customerId}\n              locale={this.props.locale}\n              updateCustomerList={this.props.updateCustomerList}\n            />\n          </AccordionItem>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withKeycloak(CustomerAccordian);\n","import React from 'react';\nimport i18n from '../../i18n';\nimport { Accordion, PaginationNav, Search, Tile } from 'carbon-components-react';\nimport AddCustomerModal from './AddCustomerModal';\nimport AddPartnerModal from './AddPartnerModal';\nimport AddProjectModal from './AddProjectModal';\nimport withKeycloak from '../../auth/withKeycloak';\nimport {apiCustomersGet} from '../../api/customers';\nimport CustomerAccordian from '../Customer/CustomerAccordian';\nimport {\n  authenticationChanged,\n  isPortalAdmin,\n  isPortalSupport,\n  isPortalPartner,\n  isPortalCustomer,\n  isPortalUser,\n  isAuthenticated,\n} from '../../api/helpers';\n\nclass AdminDashboard extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      customers: {},\n      role: '',\n      filteredCustomers: {},\n      currentPage: 0,\n      test: '',\n    };\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (authenticationChanged(this.props, prevProps)) {\n      this.fetchData();\n    }\n  }\n\n  async fetchData() {\n    if (isAuthenticated(this.props)) {\n      const customers = await apiCustomersGet(this.props.serviceUrl);\n      this.setState({\n        customers: customers.data,\n        filteredCustomers: customers.data,\n      });\n    }\n  }\n\n  handleSearch = event => {\n    if (event.key === 'Enter') {\n      //Note: should refactor this to preform filtering in db\n      const newFilteredState = this.state.customers.filter(customer =>\n        customer.name.toLowerCase().includes(event.target.value.toLowerCase())\n      );\n      this.setState({\n        filteredCustomers: newFilteredState,\n        currentPage: 0,\n      });\n    } else {\n      if (event.target.value === '' || event.target.value === undefined) {\n        this.setState({\n          filteredCustomers: this.state.customers,\n        });\n      }\n    }\n    this.forceUpdate();\n  };\n\n  updateCustomerList = () => {\n    this.fetchData();\n  };\n\n  render() {\n    var numberOfPages = 1;\n    if (Object.keys(this.state.filteredCustomers).length !== 0) {\n      numberOfPages = Math.ceil(this.state.filteredCustomers.length / 5);\n    } else {\n      numberOfPages = 1;\n    }\n\n    const props = () => ({\n      loop: Boolean(false),\n      page: Number(this.state.currentPage),\n      totalItems: Number(numberOfPages),\n      itemsShown: Number(1),\n      onChange: event => this.setState({ currentPage: event }),\n    });\n\n    return (\n      <div className=\"admin-dashboard\">\n        {isPortalAdmin() ? (\n          <h3 className=\"pageTitle\">{i18n.t('adminDashboard.adminTitle')}</h3>\n        ) : isPortalSupport() ? (\n          <h3 className=\"pageTitle\">{i18n.t('adminDashboard.supportTitle')}</h3>\n        ) : isPortalCustomer() ? (\n          <h3 className=\"pageTitle\">{i18n.t('adminDashboard.customerTitle')}</h3>\n        ) : isPortalPartner() ? (\n          <h3 className=\"pageTitle\">{i18n.t('adminDashboard.partnerTitle')}</h3>\n        ) : null}\n        {isPortalAdmin() || isPortalSupport() || isPortalPartner() ? (\n          <Tile>\n            <p className=\"title\">{i18n.t('adminDashboard.allCustomers')}</p>\n            <div className=\"bx--row\">\n              <div className=\"bx--col\">\n                <Search\n                  onChange={this.handleSearch}\n                  id=\"search\"\n                  placeholder={i18n.t('adminDashboard.searchText')}\n                  labelText={i18n.t('adminDashboard.searchLabel')}\n                  onKeyPress={this.handleSearch}\n                />\n              </div>\n              {isPortalAdmin() ? (\n                <div className=\"bx--col\">\n                  <div>\n                    <AddPartnerModal serviceUrl={this.props.serviceUrl} updateCustomerList={this.updateCustomerList}/>\n                    <AddCustomerModal serviceUrl={this.props.serviceUrl} updateCustomerList={this.updateCustomerList}/>\n                    <AddProjectModal\n                      serviceUrl={this.props.serviceUrl}\n                      updateCustomerList={this.updateCustomerList}\n                      allCustomers={this.state.customers}\n                    />\n                  </div>\n                </div>\n              ) : null}\n            </div>\n          </Tile>\n        ) : null}\n\n        <div className=\"form-container\">\n          <Accordion>\n            {Object.keys(this.state.customers).length !== 0\n              ? this.state.filteredCustomers.map((customer, index) => {\n                  // Pagination for Admin and Support roles (5 items per page)\n                  var indexOfLastItem = (this.state.currentPage + 1) * 5 - 1;\n                  var firstIndexOfCurrentPage = this.state.currentPage * 5;\n                  var accordionOpened = this.state.customers.length === 1;\n\n                  if (isPortalUser()) {\n                    if (index >= firstIndexOfCurrentPage && index <= indexOfLastItem) {\n                      return (\n                        <CustomerAccordian\n                          key={customer.id}\n                          serviceUrl={this.props.serviceUrl}\n                          customerId={customer.id}\n                          title={customer.name}\n                          updateCustomerList={this.updateCustomerList}\n                          locale={this.props.locale}\n                          accordionOpened={accordionOpened}\n                        />\n                      );\n                    } else {\n                      return null;\n                    }\n                  } else {\n                    return null;\n                  }\n                })\n              : null}\n          </Accordion>\n          <PaginationNav {...props()} className=\"pagination-right\" />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withKeycloak(AdminDashboard);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport AdminDashboard from '../components/Admin/AdminDashboard';\nimport '../index.scss';\n\nimport KeycloakContext from '../auth/KeycloakContext';\n\nimport {subscribeToWidgetEvent} from '../helpers/widgetEvents';\nimport {KEYCLOAK_EVENT_TYPE} from '../custom-elements/widgetEventTypes';\nimport * as Locale from '../i18n';\n\nconst getKeycloakInstance = () =>\n  (window && window.entando && window.entando.keycloak && {...window.entando.keycloak, initialized: true}) || {\n    initialized: false,\n  };\n\nconst ATTRIBUTES = {\n  hidden: 'hidden',\n  locale: 'locale',\n  paginationMode: 'pagination-mode',\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\n  serviceUrl: 'service-url',\n};\n\nclass AdminDashboardElement extends HTMLElement {\n  container;\n\n  mountPoint;\n\n  unsubscribeFromKeycloakEvent;\n\n  keycloak = getKeycloakInstance();\n\n  connectedCallback() {\n    this.mountPoint = document.createElement('div');\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\n\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\n      this.render();\n    });\n\n    this.render();\n\n    //retargetEvents(shadowRoot);\n    this.appendChild(this.mountPoint);\n  }\n\n  render() {\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\n    const locale = this.getAttribute(ATTRIBUTES.locale) || '';\n    Locale.setLocale(locale);\n\n    ReactDOM.render(\n      <KeycloakContext.Provider value={this.keycloak}>\n        <AdminDashboard serviceUrl={serviceUrl} locale={locale}/>\n      </KeycloakContext.Provider>,\n      this.mountPoint\n    );\n  }\n}\n\ncustomElements.define('admin-dashboard-widget', AdminDashboardElement);\n","import { getDefaultOptions, request, getUrl } from './helpers';\n\nconst resource = 'api/tickets';\n\nexport const apiTicketDelete = async (serviceUrl, id) => {\n  const url = `${serviceUrl}/${resource}/${id}`;\n  const options = {\n    ...getDefaultOptions(),\n    method: 'DELETE',\n  };\n  return request(url, options);\n};\n\nexport const apiTicketsGet = async serviceUrl => {\n  const url = getUrl(`${serviceUrl}/${resource}`);\n  const options = {\n    ...getDefaultOptions(),\n    method: 'GET',\n  };\n\n  return request(url, options);\n};\n\nexport const apiTicketPost = async (serviceUrl, ticket) => {\n  const url = `${serviceUrl}/${resource}`;\n  const options = {\n    ...getDefaultOptions(),\n    method: 'POST',\n    body: ticket ? JSON.stringify(ticket) : null,\n  };\n  return request(url, options);\n};\n\nconst jiraResource = 'api/tickets/ticketingsystem';\n\nexport const apiJiraTicketsGet = async (serviceUrl, projectId) => {\n  const url = `${serviceUrl}/${jiraResource}/${projectId}`;\n  const options = {\n    ...getDefaultOptions(),\n    method: 'GET',\n  };\n\n  return request(url, options);\n};\n\nexport const apiJiraTicketPost = async (serviceUrl, projectId, ticket) => {\n  const url = `${serviceUrl}/${jiraResource}/${projectId}`;\n  const options = {\n    ...getDefaultOptions(),\n    method: 'POST',\n    body: ticket ? JSON.stringify(ticket) : null,\n  };\n  return request(url, options);\n};\n","import React, { Component } from 'react';\nimport {\n  DataTable,\n  TableContainer,\n  Table,\n  TableHead,\n  TableRow,\n  TableHeader,\n  TableBody,\n  TableCell,\n  PaginationNav,\n  Button,\n} from 'carbon-components-react';\nimport {apiJiraTicketsGet} from '../../api/tickets';\nimport {apiCurrentTicketingSystemGet} from '../../api/ticketingsystem';\nimport withKeycloak from '../../auth/withKeycloak';\nimport {apiProjectGet} from '../../api/projects';\nimport {authenticationChanged, isAuthenticated, isPortalUser} from '../../api/helpers';\nimport i18n from '../../i18n';\n\nclass TicketList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tickets: {},\n      project: {},\n      ticketingSystem: {},\n      currentPage: 0,\n    };\n    this.headerData = [\n      {\n        header: i18n.t('ticketDetails.issue'),\n        key: 'issue',\n      },\n      {\n        header: i18n.t('ticketDetails.summary'),\n        key: 'summary',\n      },\n      {\n        header: i18n.t('ticketDetails.status'),\n        key: 'status',\n      },\n      {\n        header: i18n.t('ticketDetails.type'),\n        key: 'type',\n      },\n      {\n        header: i18n.t('ticketDetails.priority'),\n        key: 'priority',\n      },\n      {\n        header: i18n.t('ticketDetails.created'),\n        key: 'created',\n      },\n      {\n        header: i18n.t('ticketDetails.updated'),\n        key: 'updated',\n      },\n      {\n        header: i18n.t('ticketDetails.link'),\n        key: 'link',\n      },\n    ];\n  }\n\n  async fetchData() {\n    if (isPortalUser()) {\n      try {\n        const project = (await apiProjectGet(this.props.serviceUrl, this.props.projectId)).data;\n        const ticketingSystem = await apiCurrentTicketingSystemGet(this.props.serviceUrl);\n        const tickets = await apiJiraTicketsGet(this.props.serviceUrl, project.id);\n        this.setState({\n          tickets: tickets,\n          project: project,\n          ticketingSystem: ticketingSystem,\n        });\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  }\n\n  componentDidMount() {\n    if (isAuthenticated(this.props)) {\n      this.fetchData();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (authenticationChanged(this.props, prevProps)) {\n      this.fetchData();\n    }\n  }\n\n  render() {\n    var numberOfPages = 1;\n    if (Object.keys(this.state.tickets).length !== 0) {\n      numberOfPages = Math.ceil(this.state.tickets.data.length / 10);\n    }\n\n    const paginationProps = () => ({\n      loop: Boolean(false),\n      page: Number(this.state.currentPage),\n      totalItems: Number(numberOfPages),\n      itemsShown: Number(1),\n      onChange: event => this.setState({currentPage: event}),\n    });\n    const ticketSystemUrl = this.state.ticketingSystem.url;\n    const ticketingSystemBaseUrl = ticketSystemUrl != null ? ticketSystemUrl.substr(0, ticketSystemUrl.indexOf('/rest')) : null;\n\n    return (\n      <div>\n        {this.state.project.id && (\n          <div>\n            {/*View All Ticket*/}\n            <a\n              href={ticketingSystemBaseUrl + '/issues/?jql=Organizations=' + this.state.project.systemId}\n              style={{textDecoration: 'none'}}\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              <Button kind=\"ghost\" style={{display: 'block', width: '100%'}} value=\"Open Ticket\">\n                {i18n.t('buttons.viewAllTickets')}\n              </Button>\n            </a>\n            {/*Open Ticket*/}\n            <a\n              href={`/entando-de-app/${this.props.locale}/open_service_ticket.page?project=${this.state.project.id}`}\n              style={{textDecoration: 'none'}}\n            >\n              <Button kind=\"ghost\" style={{display: 'block', width: '100%'}} value=\"Open Ticket\">\n                {i18n.t('buttons.openTicket')}\n              </Button>\n            </a>\n          </div>\n        )}\n        <DataTable rows={[{id: '1'}]} headers={this.headerData}>\n          {({rows, headers, getHeaderProps, getTableProps}) => (\n            <TableContainer title={i18n.t('ticketDetails.listOfTickets')}>\n              <Table {...getTableProps()}>\n                <TableHead>\n                  <TableRow>\n                    {headers.map(header => (\n                      <TableHeader {...getHeaderProps({header})}>{header.header}</TableHeader>\n                    ))}\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {Object.keys(this.state.tickets).length !== 0 ? (\n                    this.state.tickets.data.map((ticket, index) => {\n                      const indexOfLastItem = (this.state.currentPage + 1) * 10 - 1;\n                      const firstIndexOfCurrentPage = this.state.currentPage * 10;\n                      const ticketUrl = ticketingSystemBaseUrl + '/browse/' + ticket.systemId;\n\n                      if (index >= firstIndexOfCurrentPage && index <= indexOfLastItem) {\n                        return (\n                          <TableRow key={ticket.id}>\n                            <TableCell>\n                              <a href={ticketUrl} target=\"_blank\" rel=\"noreferrer\">\n                                {ticket.systemId}\n                              </a>\n                            </TableCell>\n                            <TableCell>{ticket.summary}</TableCell>\n                            <TableCell>{ticket.status}</TableCell>\n                            <TableCell>{ticket.type}</TableCell>\n                            <TableCell>{ticket.priority}</TableCell>\n                            <TableCell>{new Date(ticket.createDate).toDateString()}</TableCell>\n                            <TableCell>{new Date(ticket.updateDate).toDateString()}</TableCell>\n                            <TableCell>\n                              <a href={ticketUrl} target=\"_blank\" rel=\"noreferrer\">\n                                {i18n.t('ticketDetails.viewTicket')}\n                              </a>\n                            </TableCell>\n                          </TableRow>\n                        );\n                      } else {\n                        return null;\n                      }\n                    })\n                  ) : (\n                    <TableRow/>\n                  )}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          )}\n        </DataTable>\n        <PaginationNav {...paginationProps()} className=\"pagination-right\"/>\n      </div>\n    );\n  }\n}\n\nexport default withKeycloak(TicketList);\n","import React, { Component } from 'react';\nimport i18n from '../../i18n';\nimport { ModalWrapper, Form, TextInput, TextArea, Select, SelectItem, DatePicker, DatePickerInput } from 'carbon-components-react';\nimport withKeycloak from '../../auth/withKeycloak';\nimport { apiProjectSubscriptionPut, apiSubscriptionGet } from '../../api/subscriptions';\nimport moment from 'moment';\n\nclass EditSubscriptionModal extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      level: '',\n      status: '',\n      lengthInMonths: '',\n      startDate: '',\n      notes: '',\n      invalid: {},\n      submitMsg: '',\n      submitColour: 'black',\n    };\n  }\n\n  handleValidation() {\n    let invalid = {};\n    let formIsValid = true;\n\n    if (this.state.level === 'level') {\n      formIsValid = false;\n      invalid['level'] = true;\n    }\n\n    if (this.state.status === 'status') {\n      formIsValid = false;\n      invalid['status'] = true;\n    }\n\n    if (this.state.lengthInMonths === '' || !this.isNumeric(String(this.state.lengthInMonths))) {\n      formIsValid = false;\n      invalid['lengthInMonths'] = true;\n    }\n\n    if (typeof this.state.startDate !== 'undefined') {\n      if (!this.state.startDate.match(/^(0[1-9]|1[0-2])\\/(0[1-9]|1\\d|2\\d|3[01])\\/(19|20)\\d{2}$/)) {\n        formIsValid = false;\n        invalid['startDate'] = true;\n      }\n    }\n\n    this.setState({ invalid: invalid });\n    return formIsValid;\n  }\n\n  isNumeric(str) {\n    if (typeof str != 'string') return false;\n    return !isNaN(str) && !isNaN(parseFloat(str));\n  }\n\n  handleChanges = e => {\n    const input = e.target;\n    const name = input.name;\n    const value = input.value;\n    this.setState({ [name]: value });\n  };\n\n  handleFormSubmit = e => {\n    const formIsValid = this.handleValidation();\n\n    if (formIsValid) {\n      const subscriptionRequest = {\n        projectSubscription: {\n          id: this.props.subscription.id,\n          level: this.state.level,\n          status: this.state.status,\n          lengthInMonths: this.state.lengthInMonths,\n          startDate: moment(this.state.startDate).format(),\n          notes: this.state.notes,\n          project: this.props.project,\n          entandoVersion: this.props.subscription.entandoVersion,\n        },\n      };\n      this.subscriptionPut(subscriptionRequest)\n        .then(result => {\n          this.setState({\n            submitMsg: i18n.t('submitMessages.updated'),\n            submitColour: '#24a148',\n          });\n          this.props.updateSubscription();\n        })\n        .catch(err => {\n          this.setState({\n            submitMsg: i18n.t('submitMessages.error'),\n            submitColour: '#da1e28',\n          });\n        });\n    }\n  };\n\n  componentDidMount() {\n    const { keycloak } = this.props;\n    const authenticated = keycloak.initialized && keycloak.authenticated;\n\n    if (authenticated) {\n      this.getSubscriptionDetails();\n    }\n  }\n\n  handleStartDateChange = date => {\n    this.setState({\n      startDate: moment(date[0].toISOString()).format('MM/DD/YYYY'),\n    });\n  };\n\n  async getSubscriptionDetails() {\n    const { keycloak } = this.props;\n    const authenticated = keycloak.initialized && keycloak.authenticated;\n    if (authenticated) {\n      const subscription = await apiSubscriptionGet(this.props.serviceUrl, this.props.subscription.id);\n      this.setState({\n        level: subscription.data.level,\n        status: subscription.data.status,\n        lengthInMonths: subscription.data.lengthInMonths,\n        startDate: moment(subscription.data.startDate).format('MM/DD/YYYY'),\n        notes: subscription.data.notes ? subscription.data.notes : '',\n        submitMsg: '',\n      });\n    }\n  }\n\n  async subscriptionPut(subscription) {\n    const { keycloak } = this.props;\n    const authenticated = keycloak.initialized && keycloak.authenticated;\n    if (authenticated) {\n      return await apiProjectSubscriptionPut(this.props.serviceUrl, subscription);\n    }\n  }\n  render() {\n    const levelList = ['GOLD', 'PLATINUM'];\n    const statusList = ['REQUESTED', 'PENDING', 'ACTIVE', 'EXPIRED'];\n    const modalId = 'modal-form-sub-edit';\n    const modalConfirmation = (\n      <div className=\"bx--modal-header\">\n        <p style={{color: this.state.submitColour}}>{this.state.submitMsg}</p>\n      </div>\n    );\n    return (\n      <ModalWrapper\n        buttonTriggerText={i18n.t('buttons.edit')}\n        modalHeading={i18n.t('editSubscription.title')}\n        buttonTriggerClassName=\"add-project bx--btn bx--btn--tertiary edit-sub-button\"\n        className=\"modal-form\"\n        id={modalId}\n        handleSubmit={this.handleFormSubmit}\n        primaryButtonText={i18n.t('modalText.save')}\n        secondaryButtonText={i18n.t('modalText.cancel')}\n      >\n        {modalConfirmation}\n        <div className=\"form-container\">\n          <Form onSubmit={this.handleFormSubmit}>\n            <Select\n              id={'level' + modalId}\n              name=\"level\"\n              labelText={i18n.t('subscriptionDetails.level') + ' *'}\n              value={this.state.level}\n              onChange={this.handleChanges}\n              invalidText={i18n.t('validation.invalid.required')}\n              invalid={this.state.invalid['level']}\n            >\n              <SelectItem disabled text=\"Select Level\" value=\"level\" />\n              {levelList.map((level, i) => (\n                <SelectItem key={i} text={level} value={level}>\n                  {level}\n                </SelectItem>\n              ))}\n            </Select>\n            <Select\n              id={'status' + modalId}\n              name=\"status\"\n              labelText={i18n.t('subscriptionDetails.status') + ' *'}\n              value={this.state.status}\n              onChange={this.handleChanges}\n              invalidText={i18n.t('validation.invalid.required')}\n              invalid={this.state.invalid['status']}\n            >\n              <SelectItem disabled text=\"Select Status\" value=\"status\" />\n              {statusList.map((status, i) => (\n                <SelectItem key={i} text={status} value={status}>\n                  {status}\n                </SelectItem>\n              ))}\n            </Select>\n            <DatePicker dateFormat=\"m/d/Y\" datePickerType=\"single\" onChange={this.handleStartDateChange} value={this.state.startDate}>\n              <DatePickerInput\n                id={'startDate' + modalId}\n                name=\"startDate\"\n                placeholder=\"mm/dd/yyyy\"\n                labelText={i18n.t('subscriptionDetails.startDate') + ' *'}\n                //onChange={this.handleChanges}\n                type=\"text\"\n                invalidText={i18n.t('validation.invalid.date')}\n                invalid={this.state.invalid['startDate']}\n              />\n            </DatePicker>\n            <TextInput\n              id={'lengthInMonths' + modalId}\n              name=\"lengthInMonths\"\n              labelText={i18n.t('subscriptionDetails.lengthInMonths') + ' *'}\n              value={this.state.lengthInMonths}\n              onChange={this.handleChanges}\n              invalidText={i18n.t('validation.invalid.number')}\n              invalid={this.state.invalid['lengthInMonths']}\n            />\n            <TextArea\n              id={'notes' + modalId}\n              name=\"notes\"\n              labelText={i18n.t('adminDashboard.addProject.notes')}\n              value={this.state.notes}\n              onChange={this.handleChanges}\n            />\n          </Form>\n        </div>\n        {modalConfirmation}\n      </ModalWrapper>\n    );\n  }\n}\n\nexport default withKeycloak(EditSubscriptionModal);\n","import React from 'react';\nimport TicketList from './TicketList';\nimport {Tile} from 'carbon-components-react';\nimport {apiSubscriptionGet, formatStartDate, formatEndDate} from '../../api/subscriptions';\nimport withKeycloak from '../../auth/withKeycloak';\nimport {apiGetProjectUsers, apiProjectGet} from '../../api/projects';\nimport {isPortalAdminOrSupport, isPortalUser, isPortalAdmin, authenticationChanged} from '../../api/helpers';\nimport EditSubscriptionModal from '../Admin/EditSubscriptionModal';\nimport i18n from '../../i18n';\n\nconst subscriptionData = {\n  type: 'Product Support Subscription Entando Platform',\n  license: 'Free Commercial Open Source',\n};\n\nclass Subscription extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      subscription: {},\n      users: {},\n      project: {},\n      customer: {},\n    };\n  }\n\n  async fetchData() {\n    if (isPortalUser()) {\n      try {\n        let users = {};\n        let project = {};\n        const subscription = await apiSubscriptionGet(this.props.serviceUrl, this.props.match.params.id);\n        if (subscription.data.project) {\n          project = await apiProjectGet(this.props.serviceUrl, subscription.data.project.id);\n          users = await apiGetProjectUsers(this.props.serviceUrl, project.data.id);\n        }\n        this.setState({\n          subscription: subscription,\n          project: project,\n          customer: project.customer,\n          users: users,\n          loading: false,\n        });\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  }\n\n  updateSubscription = () => {\n    this.fetchData();\n  };\n\n  componentDidMount() {\n    if (isPortalUser()) {\n      this.fetchData();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (authenticationChanged(this.props, prevProps) && isPortalUser()) {\n      this.fetchData();\n    }\n  }\n\n  render() {\n    const { type, license } = subscriptionData;\n\n    if (!this.state.loading) {\n      if (isPortalUser()) {\n        if (Object.keys(this.state.subscription).length !== 0 && Object.keys(this.state.project).length !== 0) {\n          return (\n            <div className=\"subscription-details\">\n              <div>\n                <Tile>\n                  <div className=\"bx--grid\">\n                    <div className=\"bx--row\">\n                      <div className=\"bx--col\">\n                        <div>\n                          <strong>{i18n.t('customerDashboard.customerName')}:</strong> {this.state.project.data.customer.name}\n                        </div>\n                        <div>\n                          <strong>{i18n.t('customerDashboard.projectName')}:</strong> {this.state.project.data.name}\n                        </div>\n                        <div>\n                          <strong>{i18n.t('subscriptionDetails.description')}:</strong> {this.state.subscription.data.project.description}\n                        </div>\n                        <div>\n                          <strong>{i18n.t('subscriptionDetails.partners')}:</strong>\n                          {this.state.project.data !== '' && Object.keys(this.state.project.data.partners).length !== 0 ? (\n                            <>\n                              {this.state.project.data.partners.map((partner, index) => (\n                                <div key={index}>\n                                  {' '}\n                                  {index === this.state.project.data.partners.length - 1 ? partner.name : partner.name + ', '}{' '}\n                                </div>\n                              ))}\n                            </>\n                          ) : (\n                            <> {i18n.t('userMessages.none')} </>\n                          )}\n                        </div>\n                        <div>\n                          <strong>{i18n.t('subscriptionDetails.type')}:</strong> {type}\n                        </div>\n                        {isPortalAdminOrSupport() ? (\n                          <div>\n                            <strong>{i18n.t('subscriptionDetails.notes')}:</strong> {this.state.subscription.data.notes}\n                          </div>\n                        ) : null}\n                      </div>\n                      <div className=\"bx--col\">\n                        <div>\n                          <strong>{i18n.t('subscriptionDetails.status')}:</strong> {this.state.subscription.data.status}\n                        </div>\n                        <div>\n                          <strong>{i18n.t('subscriptionDetails.level')}:</strong> {this.state.subscription.data.level}\n                        </div>\n                        <div>\n                          <strong>{i18n.t('subscriptionDetails.startDate')}:</strong>{' '}\n                          {formatStartDate(this.state.subscription.data.startDate)}\n                        </div>\n                        <div>\n                          <strong>{i18n.t('subscriptionDetails.endDate')}:</strong>{' '}\n                          {formatEndDate(this.state.subscription.data.startDate, this.state.subscription.data.lengthInMonths)}\n                        </div>\n                        <div>\n                          <strong>{i18n.t('subscriptionDetails.license')}:</strong> {license}\n                        </div>\n                        <div>\n                          <strong>{i18n.t('subscriptionDetails.assignedUsers')}:</strong>\n                          {this.state.project.data !== '' && Object.keys(this.state.users.data).length !== 0 ? (\n                            <>\n                              {this.state.users.data.map((user, index) => (\n                                <div\n                                  key={index}> {index === this.state.users.data.length - 1 ? user.username : user.username + ', '} </div>\n                              ))}\n                            </>\n                          ) : (\n                            <> {i18n.t('userMessages.none')} </>\n                          )}\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  {isPortalAdmin() ? (\n                    <EditSubscriptionModal\n                      project={this.state.project.data}\n                      subscription={this.state.subscription.data}\n                      serviceUrl={this.props.serviceUrl}\n                      updateSubscription={this.updateSubscription}\n                    />\n                  ) : null}\n                </Tile>\n                <br/>\n                <TicketList projectId={this.state.project.data.id} serviceUrl={this.props.serviceUrl}\n                            locale={this.props.locale}/>\n              </div>\n            </div>\n          );\n        } else {\n          return <div>{i18n.t('userMessages.unauthorized')}</div>;\n        }\n      } else {\n        return <div>{i18n.t('userMessages.unauthorized')}</div>;\n      }\n    } else {\n      return null;\n    }\n  }\n}\n\nexport default withKeycloak(Subscription);\n","import React from 'react';\nimport {Tile} from 'carbon-components-react';\nimport withKeycloak from '../../auth/withKeycloak';\nimport {apiCustomerGet} from '../../api/customers';\nimport {authenticationChanged, isAuthenticated, isPortalAdminOrSupport} from '../../api/helpers';\nimport i18n from '../../i18n';\nimport CustomerDataTable from './CustomerDataTable';\n\nclass CustomerProjectList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      customer: {},\n    };\n  }\n\n  async fetchData() {\n    if (isAuthenticated(this.props)) {\n      try {\n        const customer = await apiCustomerGet(this.props.serviceUrl, this.props.match.params.id);\n        this.setState({\n          customer: customer.data,\n          loading: false,\n        });\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  }\n\n  componentDidMount() {\n    if (isPortalAdminOrSupport()) {\n      this.fetchData();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (authenticationChanged(this.props, prevProps)) {\n      if (isPortalAdminOrSupport()) {\n        this.fetchData();\n      }\n    }\n  }\n\n  render() {\n    if (!this.state.loading) {\n      if (isPortalAdminOrSupport()) {\n        const customer = this.state.customer;\n        if (customer) {\n          return (\n            <div>\n              <Tile>\n                <div className=\"bx--grid\">\n                  <div className=\"bx--row\">\n                    <div className=\"bx--col\">\n                      <p>\n                        <strong>{i18n.t('customerDetails.id')}: </strong> {customer.id}\n                      </p>\n                      <p>\n                        <strong>{i18n.t('customerDetails.name')}: </strong> {customer.name}\n                      </p>\n                      <p>\n                        <strong>{i18n.t('customerDetails.notes')}: </strong> {customer.notes}\n                      </p>\n                    </div>\n                    <div className=\"bx--col\">\n                      <p>\n                        <strong>{i18n.t('customerDetails.contactName')}: </strong> {customer.contactName}\n                      </p>\n                      <p>\n                        <strong>{i18n.t('customerDetails.contactPhone')}: </strong> {customer.contactPhone}\n                      </p>\n                      <p>\n                        <strong>{i18n.t('customerDetails.contactEmail')}: </strong> {customer.contactEmail}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n              </Tile>\n              <CustomerDataTable serviceUrl={this.props.serviceUrl} customerId={customer.id}\n                                 locale={this.props.locale}/>\n            </div>\n          );\n        } else {\n          return <p>{i18n.t('userMessages.loading')}...</p>;\n        }\n      } else {\n        return <p>{i18n.t('userMessages.unauthorized')}</p>;\n      }\n    } else {\n      return null;\n    }\n  }\n}\n\nexport default withKeycloak(CustomerProjectList);\n","import React, {Component} from 'react';\nimport {HashRouter, Route, Switch} from 'react-router-dom';\nimport AdminDashboard from './Admin/AdminDashboard';\nimport Subscription from './SubscriptionDetails/Subscription';\nimport withKeycloak from '../auth/withKeycloak';\nimport {AuthenticatedView, UnauthenticatedView} from '../auth/KeycloakViews';\nimport {authenticationChanged, isAuthenticated, isPortalUser} from '../api/helpers';\nimport CustomerProjectList from './Customer/CustomerProjectList';\nimport i18n from '../i18n';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n    };\n  }\n\n  componentDidMount() {\n    if (isAuthenticated(this.props)) {\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (authenticationChanged(this.props, prevProps)) {\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n\n  render() {\n    var { keycloak } = this.props;\n\n    if (!this.state.loading) {\n      if (isPortalUser()) {\n        return (\n          <div id=\"entando-customer-portal\">\n            <AuthenticatedView keycloak={keycloak}>\n              <HashRouter>\n                <Switch>\n                  <Route\n                    path={'**/customer-details/:id'}\n                    render={props => <CustomerProjectList {...props} serviceUrl={this.props.serviceUrl} locale={this.props.locale} />}\n                  />\n                  <Route\n                    path={'**/subscription-details/:id'}\n                    render={props => <Subscription {...props} serviceUrl={this.props.serviceUrl} locale={this.props.locale} />}\n                  />\n                  <Route\n                    path=\"**/\"\n                    render={props => <AdminDashboard {...props} serviceUrl={this.props.serviceUrl} locale={this.props.locale} />}\n                  />\n                </Switch>\n              </HashRouter>\n            </AuthenticatedView>\n            <UnauthenticatedView keycloak={keycloak}>\n              <p>{i18n.t('userMessages.unauthorized')}</p>\n            </UnauthenticatedView>\n          </div>\n        );\n      } else {\n        return <p>{i18n.t('userMessages.unauthorized')}</p>;\n      }\n    } else {\n      return null;\n    }\n  }\n}\n\nexport default withKeycloak(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '../index.scss';\nimport * as Locale from '../i18n';\n\nimport KeycloakContext from '../auth/KeycloakContext';\nimport App from '../components/App';\n\nimport { subscribeToWidgetEvent } from '../helpers/widgetEvents';\nimport { KEYCLOAK_EVENT_TYPE } from './widgetEventTypes';\n\nconst getKeycloakInstance = () =>\n  (window && window.entando && window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\n    initialized: false,\n  };\n\nconst ATTRIBUTES = {\n  hidden: 'hidden',\n  locale: 'locale',\n  paginationMode: 'pagination-mode',\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\n  serviceUrl: 'service-url',\n};\n\nclass AppElement extends HTMLElement {\n  container;\n\n  mountPoint;\n\n  unsubscribeFromKeycloakEvent;\n\n  keycloak = getKeycloakInstance();\n\n  connectedCallback() {\n    this.mountPoint = document.createElement('div');\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\n\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\n      this.render();\n    });\n\n    this.render();\n\n    //retargetEvents(shadowRoot);\n    this.appendChild(this.mountPoint);\n  }\n\n  render() {\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\n    const locale = this.getAttribute(ATTRIBUTES.locale) || '';\n    Locale.setLocale(locale);\n\n    ReactDOM.render(\n      <KeycloakContext.Provider value={this.keycloak}>\n        <App serviceUrl={serviceUrl} locale={locale} />\n      </KeycloakContext.Provider>,\n      this.mountPoint\n    );\n  }\n}\n\ncustomElements.define('app-element', AppElement);\n","import { getDefaultOptions, request, getUrl } from './helpers';\n\nconst resource = 'api/portal-users';\n\nexport const apiUserDelete = async (serviceUrl, id) => {\n  const url = `${serviceUrl}/${resource}/${id}`;\n  const options = {\n    ...getDefaultOptions(),\n    method: 'DELETE',\n  };\n  return await request(url, options);\n};\n\nexport const apiUsersPut = async (serviceUrl, user) => {\n  const url = `${serviceUrl}/${resource}`;\n  const options = {\n    ...getDefaultOptions(),\n    method: 'PUT',\n    body: user ? JSON.stringify(user) : null,\n  };\n  return await request(url, options);\n};\n\nexport const apiUsersGet = async serviceUrl => {\n  const url = getUrl(`${serviceUrl}/${resource}`);\n  const options = {\n    ...getDefaultOptions(),\n    method: 'GET',\n  };\n\n  return await request(url, options);\n};\n\nexport const apiUserGet = async (serviceUrl, userId) => {\n  const url = getUrl(`${serviceUrl}/${resource}/${userId}`);\n  const options = {\n    ...getDefaultOptions(),\n    method: 'GET',\n  };\n\n  return await request(url, options);\n};\n\nexport const apiUserPost = async (serviceUrl, user) => {\n  const url = `${serviceUrl}/${resource}`;\n  const options = {\n    ...getDefaultOptions(),\n    method: 'POST',\n    body: user ? JSON.stringify(user) : null,\n  };\n  return await request(url, options);\n};\n\nexport const apiUserGetByUsername = async (serviceUrl, username) => {\n  const url = getUrl(`${serviceUrl}/${resource}/username/${username}`);\n  const options = {\n    ...getDefaultOptions(),\n    method: 'GET',\n  };\n\n  return await request(url, options);\n};\n","import { getDefaultKeycloakOptions, request, getUrl } from './helpers';\n\nexport const apiKeycloakUserGet = async (serviceUrl, realm) => {\n  const usersResource = `admin/realms/${realm}/users`;\n  const url = `${serviceUrl}/${usersResource}`;\n  const options = {\n    ...getDefaultKeycloakOptions(),\n    method: 'GET',\n  };\n  return await request(url, options);\n};\n\nexport const apiKeycloakToken = async (serviceUrl, realm) => {\n  const tokenResource = `realms/${realm}/protocol/openid-connect/token`;\n  const url = getUrl(`${serviceUrl}/${tokenResource}`);\n  const keycloakBody = {\n    client_id: 'web_app',\n    username: 'admin',\n    password: 'admin',\n    grant_type: 'password',\n  };\n  const options = {\n    ...getDefaultKeycloakOptions(),\n    method: 'POST',\n    body: keycloakBody ? serialize(keycloakBody) : null,\n  };\n  return await request(url, options);\n};\n\nfunction serialize(obj) {\n  var str = [];\n  for (var p in obj)\n    if (obj.hasOwnProperty(p)) {\n      str.push(encodeURIComponent(p) + '=' + encodeURIComponent(obj[p]));\n    }\n  return str.join('&');\n}\n","import React, { Component } from 'react';\nimport { Form, Select, SelectItem, Button } from 'carbon-components-react';\nimport * as portalUserApi from '../../../api/portalusers';\nimport {apiAddUserToProject, apiProjectGet} from '../../../api/projects';\nimport withKeycloak from '../../../auth/withKeycloak';\nimport { apiKeycloakUserGet } from '../../../api/keycloak';\nimport i18n from '../../../i18n';\nclass AssignUser extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      project: null,\n      projectId: '',\n      assignUser: '',\n      users: new Map(),\n      invalid: {},\n      submitMsg: '',\n      submitColour: 'black',\n    };\n  }\n\n  componentDidMount() {\n    const { keycloak } = this.props;\n\n    const authenticated = keycloak.initialized && keycloak.authenticated;\n    if (authenticated) {\n      this.fetchData(keycloak.authServerUrl);\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { keycloak } = this.props;\n    const authenticated = keycloak.initialized && keycloak.authenticated;\n\n    const changedAuth = prevProps.keycloak.authenticated !== authenticated;\n\n    if (authenticated && changedAuth) {\n      this.fetchData(keycloak.authServerUrl);\n    }\n  }\n\n  async fetchData(keycloakUrl) {\n    const {keycloak} = this.props;\n    const users = this.mapKeycloakUserEmails((await apiKeycloakUserGet(keycloakUrl, keycloak.realm)).data);\n    const search = window.location.search;\n    const params = new URLSearchParams(search);\n    let projectId = params.get('project');\n    let project = null;\n    if (projectId != null) {\n      project = (await apiProjectGet(this.props.serviceUrl, projectId)).data;\n    } else {\n      projectId = '';\n    }\n\n    this.setState({\n      projectId: projectId,\n      project: project,\n      users: users,\n    });\n  }\n\n  mapKeycloakUserEmails = keycloakUsers => {\n    const usernameEmailMap = new Map();\n    keycloakUsers.forEach(keycloakUser => usernameEmailMap.set(keycloakUser.username, keycloakUser.email));\n    return usernameEmailMap;\n  };\n\n  handleChanges = e => {\n    const input = e.target;\n    const name = input.name;\n    const value = input.value;\n    this.setState({ [name]: value });\n  };\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    const { projectId, assignUser } = this.state;\n    const formIsValid = this.handleFormValidation();\n\n    if (formIsValid) {\n      this.assignUserToProject(projectId, assignUser).then(res => {\n        if (res.status === 201) {\n          this.setState({\n            submitMsg: i18n.t('submitMessages.updated'),\n            submitColour: '#24a148',\n          });\n          window.dispatchEvent(new CustomEvent('cp-user-assigned'));\n        } else {\n          this.setState({\n            submitMsg: i18n.t('submitMessages.error'),\n            submitColour: '#da1e28',\n          });\n        }\n      });\n    }\n  };\n\n  handleFormValidation() {\n    let invalid = {};\n    let formIsValid = true;\n    const { projectId, assignUser } = this.state;\n\n    //name\n    if (projectId === '') {\n      formIsValid = false;\n      invalid['projectId'] = true;\n    }\n\n    //customerNumber\n    if (assignUser === '') {\n      formIsValid = false;\n      invalid['assignUser'] = true;\n    }\n\n    this.setState({ invalid: invalid });\n    return formIsValid;\n  }\n\n  assignUserToProject = async (projectId, username) => {\n    const portalUserId = await this.getPortalUserId({ username, email: this.state.users.get(username) });\n    return await apiAddUserToProject(this.props.serviceUrl, projectId, portalUserId);\n  };\n\n  getPortalUserId = async keycloakUser => {\n    let portalUserId = null;\n    try {\n      const portalUser = await portalUserApi.apiUserGetByUsername(this.props.serviceUrl, keycloakUser.username);\n      portalUserId = portalUser.data.id;\n    } catch (e) {\n      if (e.message.toLowerCase().includes('not found')) {\n        const portalUser = await this.createPortalUser(keycloakUser);\n        portalUserId = portalUser.data.id;\n      }\n    }\n\n    return portalUserId;\n  };\n\n  createPortalUser = async keycloakUser => {\n    return await portalUserApi.apiUserPost(this.props.serviceUrl, { username: keycloakUser.username, email: keycloakUser.email });\n  };\n\n  setupFormComponents() {\n    const users = this.state.users;\n    const project = this.state.project;\n    let userList = null;\n    let projectList = null;\n\n    if (users.size > 0) {\n      userList = [...users.keys()].map((assignUser, i) => (\n        <SelectItem key={i} text={assignUser} value={assignUser}>\n          {assignUser}\n        </SelectItem>\n      ));\n      userList.unshift(<SelectItem key=\"-1\" text={i18n.t('manageUsers.assign.userList')} value=\"\"/>);\n    } else {\n      userList = <SelectItem text={i18n.t('manageUsers.assign.noUsers')} value=\"\"/>;\n    }\n\n    if (project != null) {\n      projectList = <SelectItem key={project.id} text={project.name} value={project.id}/>;\n    } else {\n      projectList = <SelectItem text={i18n.t('manageUsers.assign.noProjects')} value=\"\"/>;\n    }\n\n    return {userList, projectList};\n  }\n\n  render() {\n    const { userList, projectList } = this.setupFormComponents();\n\n    return (\n      <div>\n        <p style={{ color: this.state.submitColour }}>{this.state.submitMsg}</p>\n        <Form onSubmit={this.handleFormSubmit}>\n          <div className=\"bx--grid\">\n            <div className=\"bx--row\">\n              <div className=\"bx--col\">\n                <Select\n                  id=\"projectId\"\n                  name=\"projectId\"\n                  labelText={i18n.t('manageUsers.assign.projectName')}\n                  value={this.state.projectId}\n                  onChange={this.handleChanges}\n                  invalidText={i18n.t('validation.invalid.required')}\n                  invalid={this.state.invalid['projectId']}\n                >\n                  {projectList}\n                </Select>\n              </div>\n            </div>\n            <div className=\"bx--row\">\n              <div className=\"bx--col\">\n                <Select\n                  id=\"assignUser\"\n                  name=\"assignUser\"\n                  labelText={i18n.t('manageUsers.assign.assignUser')}\n                  value={this.state.assignUser}\n                  onChange={this.handleChanges}\n                  invalidText={i18n.t('validation.invalid.required')}\n                  invalid={this.state.invalid['assignUser']}\n                >\n                  {userList}\n                </Select>\n              </div>\n            </div>\n            <Button kind=\"primary\" tabIndex={0} type=\"submit\">\n              {' '}\n              {i18n.t('buttons.submit')}{' '}\n            </Button>\n          </div>\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default withKeycloak(AssignUser);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport AssignUser from '../components/Admin/ManageUser/AssignUser';\nimport '../index.scss';\n\nimport KeycloakContext from '../auth/KeycloakContext';\n\nimport { subscribeToWidgetEvent } from '../helpers/widgetEvents';\nimport { KEYCLOAK_EVENT_TYPE } from '../custom-elements/widgetEventTypes';\n\nconst getKeycloakInstance = () =>\n  (window && window.entando && window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\n    initialized: false,\n  };\n\nconst ATTRIBUTES = {\n  hidden: 'hidden',\n  locale: 'locale',\n  paginationMode: 'pagination-mode',\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\n  serviceUrl: 'service-url',\n};\n\nclass AssignUserElement extends HTMLElement {\n  container;\n\n  mountPoint;\n\n  unsubscribeFromKeycloakEvent;\n\n  keycloak = getKeycloakInstance();\n\n  connectedCallback() {\n    this.mountPoint = document.createElement('div');\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\n\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\n      this.render();\n    });\n\n    this.render();\n\n    //retargetEvents(shadowRoot);\n    this.appendChild(this.mountPoint);\n  }\n\n  render() {\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\n\n    ReactDOM.render(\n      <KeycloakContext.Provider value={this.keycloak}>\n        <AssignUser serviceUrl={serviceUrl} />\n      </KeycloakContext.Provider>,\n      this.mountPoint\n    );\n  }\n}\n\ncustomElements.define('assign-user-widget', AssignUserElement);\n","import React, {Component} from 'react';\nimport {\n  DataTable,\n  TableContainer,\n  Table,\n  TableHead,\n  TableRow,\n  TableHeader,\n  TableBody,\n  TableCell,\n  Button\n} from 'carbon-components-react';\nimport withKeycloak from '../../../auth/withKeycloak';\nimport i18n from '../../../i18n';\nimport {apiGetProjectUsers, apiDeleteUserFromProject} from '../../../api/projects';\n\nclass DeleteUser extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      users: [],\n      displayUsers: [],\n      projectId: '',\n    };\n    this.headerData = [\n      {\n        header: i18n.t('manageUsers.delete.userName'),\n        key: 'username',\n      },\n      {\n        header: i18n.t('manageUsers.delete.userEmail'),\n        key: 'email',\n      },\n      {\n        header: i18n.t('manageUsers.delete.userAccess'),\n        key: 'userAccess',\n      },\n    ];\n    window.addEventListener('cp-user-assigned', event => {\n      this.fetchData();\n    });\n  }\n\n  componentDidMount() {\n    const { keycloak } = this.props;\n    const authenticated = keycloak.initialized && keycloak.authenticated;\n\n    if (authenticated) {\n      this.fetchData();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { keycloak } = this.props;\n    const authenticated = keycloak.initialized && keycloak.authenticated;\n\n    const changedAuth = prevProps.keycloak.authenticated !== authenticated;\n\n    if (authenticated && changedAuth) {\n      this.fetchData();\n    }\n  }\n\n  async fetchData() {\n    const {keycloak} = this.props;\n\n    const authenticated = keycloak.initialized && keycloak.authenticated;\n    if (authenticated) {\n      let search = window.location.search;\n      const params = new URLSearchParams(search);\n      const projectId = params.get('project');\n      let users = [];\n      if (projectId != null) {\n        users = (await apiGetProjectUsers(this.props.serviceUrl, projectId)).data;\n      }\n\n      this.setState({\n        users,\n        projectId,\n      });\n\n      this.handleUserDisplay();\n    }\n  }\n\n  handleUserDisplay() {\n    const users = this.state.users;\n    const projectId = this.state.projectId;\n\n    const displayUsers = users.map(user => ({\n      id: user.username,\n      username: user.username,\n      email: user.email,\n      userAccess: (\n        <Button kind=\"ghost\" onClick={event => this.handleRemoveUser(user.id, projectId, event)}\n                className=\"button-warning\">\n          {i18n.t('manageUsers.delete.removeUser')}\n        </Button>\n      ),\n    }));\n\n    this.setState({\n      displayUsers,\n    });\n  }\n\n  handleRemoveUser = (userId, projectId, event) => {\n    event.preventDefault();\n\n    apiDeleteUserFromProject(this.props.serviceUrl, projectId, userId).then(res => {\n      if (res.status === 201) {\n        this.fetchData();\n      } else {\n        console.warn('Failed to delete user', res);\n      }\n    });\n  };\n\n  render() {\n    return (\n      <DataTable rows={this.state.displayUsers} headers={this.headerData}>\n        {({ rows, headers, getHeaderProps, getTableProps }) => (\n          <TableContainer>\n            <Table {...getTableProps()}>\n              <TableHead>\n                <TableRow>\n                  {headers.map(header => (\n                    <TableHeader {...getHeaderProps({ header })}>{header.header}</TableHeader>\n                  ))}\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {rows.map(row => (\n                  <TableRow key={row.id}>\n                    {row.cells.map(cell => (\n                      <TableCell key={cell.id}>{cell.value}</TableCell>\n                    ))}\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        )}\n      </DataTable>\n    );\n  }\n}\n\nexport default withKeycloak(DeleteUser);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport DeleteUser from '../components/Admin/ManageUser/DeleteUser';\nimport '../index.scss';\n\nimport KeycloakContext from '../auth/KeycloakContext';\n\nimport { subscribeToWidgetEvent } from '../helpers/widgetEvents';\nimport { KEYCLOAK_EVENT_TYPE } from '../custom-elements/widgetEventTypes';\n\nconst getKeycloakInstance = () =>\n  (window && window.entando && window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\n    initialized: false,\n  };\n\nconst ATTRIBUTES = {\n  hidden: 'hidden',\n  locale: 'locale',\n  paginationMode: 'pagination-mode',\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\n  serviceUrl: 'service-url',\n};\n\nclass DeleteUserElement extends HTMLElement {\n  container;\n\n  mountPoint;\n\n  unsubscribeFromKeycloakEvent;\n\n  keycloak = getKeycloakInstance();\n\n  connectedCallback() {\n    this.mountPoint = document.createElement('div');\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\n\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\n      this.render();\n    });\n\n    this.render();\n\n    //retargetEvents(shadowRoot);\n    this.appendChild(this.mountPoint);\n  }\n\n  render() {\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\n\n    ReactDOM.render(\n      <KeycloakContext.Provider value={this.keycloak}>\n        <DeleteUser serviceUrl={serviceUrl} />\n      </KeycloakContext.Provider>,\n      this.mountPoint\n    );\n  }\n}\n\ncustomElements.define('delete-user-widget', DeleteUserElement);\n","import React, {Component} from 'react';\nimport i18n from '../../i18n';\nimport {Form, Select, SelectItem, Button, TextArea, TextInput} from 'carbon-components-react';\nimport withKeycloak from '../../auth/withKeycloak';\nimport {apiProjectGet} from '../../api/projects';\nimport {apiJiraTicketPost} from '../../api/tickets';\nimport {authenticationChanged, getActiveSubscription, isAuthenticated, isPortalUser} from '../../api/helpers';\n\nclass OpenTicketForm extends Component {\n  constructor() {\n    super();\n    this.state = {\n      loading: true,\n      project: {},\n      role: '',\n      invalid: {},\n      submitMsg: '',\n      submitColour: 'black',\n      //form fields\n      type: 'Support',\n      priority: 'Medium',\n      status: 'To Do',\n      summary: '',\n      description: '',\n    };\n    this.types = ['Support', 'Feature Request'];\n    this.priorities = ['Critical', 'High', 'Medium', 'Low'];\n  }\n\n  componentDidMount() {\n    if (isAuthenticated(this.props)) {\n      this.fetchData();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (authenticationChanged(this.props, prevProps)) {\n      this.fetchData();\n    }\n  }\n\n  async fetchData() {\n    if (!isPortalUser()) {\n      return;\n    }\n\n    let search = window.location.search;\n    let params = new URLSearchParams(search);\n    let projectId = params.get('project');\n    let project = (await apiProjectGet(this.props.serviceUrl, projectId)).data;\n\n    if (!project) {\n      console.error('Unable to retrieve projectId ', projectId);\n      project = {};\n    }\n\n    this.setState({\n      project: project,\n      loading: false,\n    });\n  }\n\n  handleValidation() {\n    let invalid = {};\n    let formIsValid = true;\n\n    if (this.state.type === '') {\n      formIsValid = false;\n      invalid['type'] = true;\n    }\n\n    if (this.state.summary === '') {\n      formIsValid = false;\n      invalid['summary'] = true;\n    }\n\n    if (this.state.description === '') {\n      formIsValid = false;\n      invalid['description'] = true;\n    }\n\n    if (this.state.priority === '') {\n      formIsValid = false;\n      invalid['priority'] = true;\n    }\n\n    this.setState({\n      invalid: invalid,\n    });\n    return formIsValid;\n  }\n\n  handleChanges = e => {\n    const input = e.target;\n    const name = input.name;\n    const value = input.value;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n\n    const formIsValid = this.handleValidation();\n\n    if (formIsValid) {\n      const subscription = getActiveSubscription(this.state.project);\n      if (subscription) {\n        this.createTicket()\n          .then(() => {\n            this.setState({\n              submitMsg: i18n.t('submitMessages.created'),\n              submitColour: '#24a148',\n            });\n          })\n          .catch(() => {\n            this.setState({\n              submitMsg: i18n.t('submitMessages.ticketError'),\n              submitColour: '#da1e28',\n            });\n          });\n      }\n      // if no subscriptions, don't create ticket\n      else {\n        this.setState({\n          submitMsg: i18n.t('submitMessages.subscriptionRequired'),\n          submitColour: '#da1e28',\n        });\n      }\n    } else {\n      this.setState({\n        submitMsg: i18n.t('submitMessages.error'),\n        submitColour: '#da1e28',\n      });\n    }\n  };\n\n  async createTicket() {\n    if (isPortalUser()) {\n      const ticket = {\n        type: this.state.type,\n        summary: this.state.summary,\n        description: this.state.description,\n        priority: this.state.priority,\n        // these fields are just placeholders to validate the POST request (fields will be set in the backend)\n        systemId: '999',\n        status: 'To Do',\n        createDate: '2021-02-22T14:14:09-05:00',\n        updateDate: '2021-02-22T14:14:09-05:00',\n      };\n      return await apiJiraTicketPost(this.props.serviceUrl, this.state.project.id, ticket);\n    }\n  }\n\n  render() {\n    if (!this.state.loading) {\n      if (isPortalUser()) {\n        return (\n          <div>\n            <div className=\"form-container\">\n              <p style={{color: this.state.submitColour}}>{this.state.submitMsg}</p>\n              <Form onSubmit={this.handleFormSubmit}>\n                <div className=\"bx--grid\">\n                  <div className=\"bx--row\" style={{padding: '1em 0'}}>\n                    <div className=\"bx--col\">\n                      <div className=\"form-desc\">\n                        <h4>{i18n.t('supportTicketForm.formTitle')}</h4>\n                        <div>{i18n.t('supportTicketForm.desc')}</div>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"bx--row\">\n                    <div className=\"bx--col\">\n                      <div>\n                        <strong>{i18n.t('projectDetails.project')}:</strong> {this.state.project.name}\n                      </div>\n                      <Select\n                        id=\"type\"\n                        name=\"type\"\n                        labelText={i18n.t('supportTicketForm.type') + ' *'}\n                        value={this.state.type}\n                        onChange={this.handleChanges}\n                        invalidText={i18n.t('validation.invalid.required')}\n                        invalid={this.state.invalid['type']}\n                      >\n                        {this.types.map((type, i) => (\n                          <SelectItem key={i} text={type} value={type}>\n                            {type}\n                          </SelectItem>\n                        ))}\n                      </Select>\n                      <Select\n                        id=\"priority\"\n                        name=\"priority\"\n                        labelText={i18n.t('supportTicketForm.priority') + ' *'}\n                        value={this.state.priority}\n                        onChange={this.handleChanges}\n                        invalidText={i18n.t('validation.invalid.required')}\n                        invalid={this.state.invalid['priority']}\n                      >\n                        {this.priorities.map((priority, i) => (\n                          <SelectItem key={i} text={priority} value={priority}>\n                            {priority}\n                          </SelectItem>\n                        ))}\n                      </Select>\n                    </div>\n                  </div>\n                  <div className=\"bx--row\">\n                    <div className=\"bx--col\">\n                      <TextInput\n                        labelText={i18n.t('supportTicketForm.ticketSummary') + ' *'}\n                        placeholder={i18n.t('supportTicketForm.addticketSummary')}\n                        id=\"summary\"\n                        name=\"summary\"\n                        value={this.state.summary}\n                        onChange={this.handleChanges}\n                        invalidText={i18n.t('validation.invalid.required')}\n                        invalid={this.state.invalid['summary']}\n                      />\n                    </div>\n                  </div>\n                  <div className=\"bx--row\">\n                    <div className=\"bx--col\">\n                      <TextArea\n                        labelText={i18n.t('supportTicketForm.ticketDescription') + ' *'}\n                        placeholder={i18n.t('supportTicketForm.addticketDescription')}\n                        name=\"description\"\n                        value={this.state.description}\n                        onChange={this.handleChanges}\n                        invalidText={i18n.t('validation.invalid.required')}\n                        invalid={this.state.invalid['description']}\n                      />\n                      <Button kind=\"primary\" tabIndex={0} type=\"submit\">\n                        {' '}\n                        {i18n.t('buttons.submit')}{' '}\n                      </Button>\n                    </div>\n                  </div>\n                </div>\n              </Form>\n            </div>\n          </div>\n        );\n      } else {\n        return <p>{i18n.t('userMessages.unauthorized')}</p>;\n      }\n    } else {\n      return null;\n    }\n  }\n}\n\nexport default withKeycloak(OpenTicketForm);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport OpenTicketForm from '../components/Forms/OpenTicketForm';\nimport KeycloakContext from '../auth/KeycloakContext';\n\nimport {subscribeToWidgetEvent} from '../helpers/widgetEvents';\nimport {KEYCLOAK_EVENT_TYPE} from '../custom-elements/widgetEventTypes';\nimport * as Locale from '../i18n';\n\nconst getKeycloakInstance = () =>\n  (window && window.entando && window.entando.keycloak && {...window.entando.keycloak, initialized: true}) || {\n    initialized: false,\n  };\n\nconst ATTRIBUTES = {\n  hidden: 'hidden',\n  locale: 'locale',\n  paginationMode: 'pagination-mode',\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\n  serviceUrl: 'service-url',\n};\n\nclass FormsOpenTicketElement extends HTMLElement {\n  container;\n\n  mountPoint;\n\n  unsubscribeFromKeycloakEvent;\n\n  keycloak = getKeycloakInstance();\n\n  connectedCallback() {\n    this.mountPoint = document.createElement('div');\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\n\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\n      this.render();\n    });\n\n    this.render();\n\n    //retargetEvents(shadowRoot);\n    this.appendChild(this.mountPoint);\n  }\n\n  render() {\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\n    const locale = this.getAttribute(ATTRIBUTES.locale) || '';\n    Locale.setLocale(locale);\n\n    ReactDOM.render(\n      <KeycloakContext.Provider value={this.keycloak}>\n        <OpenTicketForm serviceUrl={serviceUrl} locale={locale}/>\n      </KeycloakContext.Provider>,\n      this.mountPoint\n    );\n  }\n}\n\ncustomElements.define('forms-openticket-widget', FormsOpenTicketElement);\n","import React, {Component} from 'react';\nimport {\n  DataTable,\n  TableContainer,\n  Table,\n  TableHead,\n  TableRow,\n  TableHeader,\n  TableBody,\n  TableCell,\n  Button\n} from 'carbon-components-react';\nimport '../../../index.scss';\nimport withKeycloak from '../../../auth/withKeycloak';\nimport i18n from '../../../i18n';\nimport {isAuthenticated, authenticationChanged} from '../../../api/helpers';\nimport {apiDeleteSubscriptionFromProject, apiGetProjectSubscriptions, apiProjectGet} from '../../../api/projects';\nimport {formatEndDate, formatStartDate} from '../../../api/subscriptions';\n\nclass ManageSubscriptions extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      projectId: '',\n      project: {},\n      subscriptions: [],\n    };\n    this.headerData = [\n      {\n        header: i18n.t('projectDetails.id'),\n        key: 'id',\n      },\n      {\n        header: i18n.t('projectDetails.status'),\n        key: 'status',\n      },\n      {\n        header: i18n.t('projectDetails.entandoVersion'),\n        key: 'entandoVersion',\n      },\n      {\n        header: i18n.t('projectDetails.level'),\n        key: 'level',\n      },\n      {\n        header: i18n.t('projectDetails.startDate'),\n        key: 'startDate',\n      },\n      {\n        header: i18n.t('projectDetails.endDate'),\n        key: 'endDate',\n      },\n      {\n        header: i18n.t('projectDetails.lengthInMonths'),\n        key: 'lengthInMonths',\n      },\n      {\n        header: i18n.t('customerDashboard.action'),\n        key: 'action',\n      },\n    ];\n  }\n\n  componentDidMount() {\n    if (isAuthenticated(this.props)) {\n      this.fetchData();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (authenticationChanged(this.props, prevProps)) {\n      this.fetchData();\n    }\n  }\n\n  async fetchData() {\n    if (isAuthenticated(this.props)) {\n      let search = window.location.search;\n      const params = new URLSearchParams(search);\n      const projectId = params.get('project');\n\n      let project = {};\n      let subscriptions = {};\n      if (projectId != null) {\n        project = (await apiProjectGet(this.props.serviceUrl, projectId)).data;\n        subscriptions = (await apiGetProjectSubscriptions(this.props.serviceUrl, projectId)).data;\n      }\n\n      this.setState({\n        projectId: projectId,\n        project: project,\n        subscriptions: subscriptions,\n      });\n    }\n  }\n\n  async deleteSubscription(subscriptionId) {\n    if (isAuthenticated(this.props)) {\n      return await apiDeleteSubscriptionFromProject(this.props.serviceUrl, this.state.projectId, subscriptionId);\n    }\n  }\n\n  handleDeleteSubscription = (e, id) => {\n    e.preventDefault();\n    if (window.confirm(i18n.t('submitMessages.confirmDelete'))) {\n      console.log('confirmed to delete', id);\n      this.deleteSubscription(id)\n        .then(() => {\n          this.setState({\n            submitMsg: i18n.t('submitMessages.deleted'),\n            submitColour: '#24a148',\n          });\n          this.fetchData();\n        })\n        .catch(() => {\n          this.setState({\n            submitMsg: i18n.t('submitMessages.error'),\n            submitColour: '#da1e28',\n          });\n        });\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <h5>{this.state.project !== null && this.state.project.name}</h5>\n        <a\n          href={`/entando-de-app/${this.props.locale}/new_or_renew_subscription.page?project=${this.state.projectId}`}\n          style={{textDecoration: 'none'}}\n        >\n          <Button kind=\"ghost\" style={{display: 'block', width: '100%'}} value=\"Add Subscription\">\n            {i18n.t('buttons.addSubscription')}\n          </Button>\n        </a>\n\n        <DataTable rows={[{id: '1'}]} headers={this.headerData}>\n          {({headers, getHeaderProps, getTableProps}) => (\n            <TableContainer>\n              <Table {...getTableProps()}>\n                <TableHead>\n                  <TableRow>\n                    {headers.map(header => (\n                      <TableHeader {...getHeaderProps({header})}>{header.header}</TableHeader>\n                    ))}\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {Object.keys(this.state.subscriptions).length !== 0 &&\n                  this.state.subscriptions.map((subscription, index) => (\n                    <TableRow key={index}>\n                      <TableCell>{subscription.id}</TableCell>\n                      <TableCell>{subscription.status}</TableCell>\n                      <TableCell>{subscription.entandoVersion.name}</TableCell>\n                      <TableCell>{subscription.level}</TableCell>\n                      <TableCell>{formatStartDate(subscription.startDate)}</TableCell>\n                      <TableCell>{formatEndDate(subscription.startDate, subscription.lengthInMonths)}</TableCell>\n                      <TableCell>{subscription.lengthInMonths}</TableCell>\n                      <TableCell>\n                        <a\n                          href={`/entando-de-app/${this.props.locale}/new_or_renew_subscription.page?project=${this.state.projectId}&subscription=${subscription.id}`}\n                          style={{textDecoration: 'none'}}\n                        >\n                          <Button kind=\"ghost\" style={{display: 'block', width: '100%'}} value=\"Edit\">\n                            {i18n.t('buttons.edit')}\n                          </Button>\n                        </a>\n                        <Button\n                          kind=\"ghost\"\n                          onClick={event => this.handleDeleteSubscription(event, subscription.id)}\n                          className=\"button-warning\"\n                        >\n                          {i18n.t('buttons.delete')}\n                        </Button>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          )}\n        </DataTable>\n      </div>\n    );\n  }\n}\n\nexport default withKeycloak(ManageSubscriptions);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ManageSubscriptions from '../components/Admin/ManageSubscriptions/ManageSubscriptions';\nimport * as Locale from '../i18n';\n\nimport KeycloakContext from '../auth/KeycloakContext';\n\nimport {subscribeToWidgetEvent} from '../helpers/widgetEvents';\nimport {KEYCLOAK_EVENT_TYPE} from './widgetEventTypes';\n\nconst getKeycloakInstance = () =>\n  (window && window.entando && window.entando.keycloak && {...window.entando.keycloak, initialized: true}) || {\n    initialized: false,\n  };\n\nconst ATTRIBUTES = {\n  hidden: 'hidden',\n  locale: 'locale',\n  paginationMode: 'pagination-mode',\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\n  serviceUrl: 'service-url',\n};\n\nclass ManageSubscriptionsElement extends HTMLElement {\n  container;\n\n  mountPoint;\n\n  unsubscribeFromKeycloakEvent;\n\n  keycloak = getKeycloakInstance();\n\n  connectedCallback() {\n    this.mountPoint = document.createElement('div');\n    this.keycloak = {...getKeycloakInstance(), initialized: true};\n\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\n      this.keycloak = {...getKeycloakInstance(), initialized: true};\n      this.render();\n    });\n\n    this.render();\n\n    //retargetEvents(shadowRoot);\n    this.appendChild(this.mountPoint);\n  }\n\n  render() {\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\n    const locale = this.getAttribute(ATTRIBUTES.locale) || '';\n    Locale.setLocale(locale);\n\n    ReactDOM.render(\n      <KeycloakContext.Provider value={this.keycloak}>\n        <ManageSubscriptions serviceUrl={serviceUrl} locale={locale}/>\n      </KeycloakContext.Provider>,\n      this.mountPoint\n    );\n  }\n}\n\ncustomElements.define('manage-subscriptions-widget', ManageSubscriptionsElement);\n","import React, { Component } from 'react';\nimport i18n from '../../../i18n';\nimport { Accordion, AccordionItem } from 'carbon-components-react';\nimport AssignUser from './AssignUser';\nimport DeleteUser from './DeleteUser';\nimport { isPortalAdmin } from '../../../api/helpers';\nimport withKeycloak from '../../../auth/withKeycloak';\n\nclass ManageUser extends Component {\n  userFunctionality;\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n    };\n    this.userFunctionality = [\n      {\n        label: (\n          <div>\n            <p className=\"title\">{i18n.t('manageUsers.manage.title')}</p>\n            <p className=\"desc\">{i18n.t('manageUsers.manage.desc')}</p>\n          </div>\n        ),\n        content: <DeleteUser serviceUrl={this.props.serviceUrl}/>,\n        open: true,\n      },\n      {\n        label: (\n          <div>\n            <p className=\"title\">{i18n.t('manageUsers.assign.title')}</p>\n            <p className=\"desc\">{i18n.t('manageUsers.assign.desc')}</p>\n          </div>\n        ),\n        content: <AssignUser serviceUrl={this.props.serviceUrl}/>,\n        open: true,\n      },\n    ];\n  }\n\n  componentDidMount() {\n    const { keycloak } = this.props;\n    const authenticated = keycloak.initialized && keycloak.authenticated;\n\n    if (authenticated) {\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { keycloak } = this.props;\n    const authenticated = keycloak.initialized && keycloak.authenticated;\n\n    const changedAuth = prevProps.keycloak.authenticated !== authenticated;\n\n    if (authenticated && changedAuth) {\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n\n  render() {\n    if (!this.state.loading) {\n      if (isPortalAdmin()) {\n        return (\n          <div>\n            <h3 className=\"pageTitle\">{i18n.t('adminDashboard.adminTitle')}</h3>\n            <div className=\"form-container\">\n              <Accordion>\n                {this.userFunctionality.map((item, index) => (\n                  <AccordionItem key={index.toString()} index={index} title={item.label} description={item.description} open={item.open}>\n                    {item.content}\n                  </AccordionItem>\n                ))}\n              </Accordion>\n            </div>\n          </div>\n        );\n      }\n      // Unauthorized\n      else {\n        return <p>{i18n.t('userMessages.unauthorized')}</p>;\n      }\n    }\n    // Loading\n    else {\n      return null;\n    }\n  }\n}\n\nexport default withKeycloak(ManageUser);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ManageUser from '../components/Admin/ManageUser/ManageUser';\nimport '../index.scss';\nimport * as Locale from '../i18n';\n\nimport KeycloakContext from '../auth/KeycloakContext';\n\nimport { subscribeToWidgetEvent } from '../helpers/widgetEvents';\nimport { KEYCLOAK_EVENT_TYPE } from './widgetEventTypes';\n\nconst getKeycloakInstance = () =>\n  (window && window.entando && window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\n    initialized: false,\n  };\n\nconst ATTRIBUTES = {\n  hidden: 'hidden',\n  locale: 'locale',\n  paginationMode: 'pagination-mode',\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\n  serviceUrl: 'service-url',\n};\n\nclass ManageUserElement extends HTMLElement {\n  container;\n\n  mountPoint;\n\n  unsubscribeFromKeycloakEvent;\n\n  keycloak = getKeycloakInstance();\n\n  connectedCallback() {\n    this.mountPoint = document.createElement('div');\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\n\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\n      this.render();\n    });\n\n    this.render();\n\n    //retargetEvents(shadowRoot);\n    this.appendChild(this.mountPoint);\n  }\n\n  render() {\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\n    const locale = this.getAttribute(ATTRIBUTES.locale) || '';\n    Locale.setLocale(locale);\n\n    ReactDOM.render(\n      <KeycloakContext.Provider value={this.keycloak}>\n        <ManageUser serviceUrl={serviceUrl} locale={locale}/>\n      </KeycloakContext.Provider>,\n      this.mountPoint\n    );\n  }\n}\n\ncustomElements.define('manage-user-widget', ManageUserElement);\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst Navigation = () => {\n  return (\n    <ul id=\"navigation\">\n      <li>\n        <NavLink to=\"/\">Home</NavLink>\n      </li>\n      <li>\n        <NavLink to=\"/subscription-details\">Subscription Details</NavLink>\n      </li>\n      <li>\n        <NavLink to=\"/subscription\">New or Renew Subscription</NavLink>\n      </li>\n      <li>\n        <NavLink to=\"/service-ticket\">Open Service Ticket</NavLink>\n      </li>\n      <li>\n        <NavLink to=\"/enhancement\">Request for Enhancement Process</NavLink>\n      </li>\n      <li>\n        <NavLink to=\"/manage-users\">Manage Users</NavLink>\n      </li>\n      <li>\n        <NavLink to=\"/configuration-settings\">Configuration Settings</NavLink>\n      </li>\n    </ul>\n  );\n};\n\nexport default Navigation;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Navigation from '../components/Navigation/Navigation';\nimport KeycloakContext from '../auth/KeycloakContext';\n\nimport { subscribeToWidgetEvent } from '../helpers/widgetEvents';\nimport { KEYCLOAK_EVENT_TYPE } from '../custom-elements/widgetEventTypes';\n\nconst getKeycloakInstance = () =>\n  (window && window.entando && window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\n    initialized: false,\n  };\n\nconst ATTRIBUTES = {\n  hidden: 'hidden',\n  locale: 'locale',\n  paginationMode: 'pagination-mode',\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\n  serviceUrl: 'service-url',\n};\n\nclass NavigationElement extends HTMLElement {\n  container;\n\n  mountPoint;\n\n  unsubscribeFromKeycloakEvent;\n\n  keycloak = getKeycloakInstance();\n\n  connectedCallback() {\n    this.mountPoint = document.createElement('div');\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\n\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\n      this.render();\n    });\n\n    this.render();\n\n    //retargetEvents(shadowRoot);\n    this.appendChild(this.mountPoint);\n  }\n\n  render() {\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\n\n    ReactDOM.render(\n      <KeycloakContext.Provider value={this.keycloak}>\n        <Navigation serviceUrl={serviceUrl} />\n      </KeycloakContext.Provider>,\n      this.mountPoint\n    );\n  }\n}\n\ncustomElements.define('navigation-widget', NavigationElement);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport OpenTicketForm from '../components/Forms/OpenTicketForm';\nimport '../index.scss';\nimport * as Locale from '../i18n';\n\nimport KeycloakContext from '../auth/KeycloakContext';\n\nimport {subscribeToWidgetEvent} from '../helpers/widgetEvents';\nimport {KEYCLOAK_EVENT_TYPE} from './widgetEventTypes';\n\nconst getKeycloakInstance = () =>\n  (window && window.entando && window.entando.keycloak && {...window.entando.keycloak, initialized: true}) || {\n    initialized: false,\n  };\n\nconst ATTRIBUTES = {\n  hidden: 'hidden',\n  locale: 'locale',\n  paginationMode: 'pagination-mode',\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\n  serviceUrl: 'service-url',\n};\n\nclass OpenTicketElement extends HTMLElement {\n  container;\n\n  mountPoint;\n\n  unsubscribeFromKeycloakEvent;\n\n  keycloak = getKeycloakInstance();\n\n  connectedCallback() {\n    this.mountPoint = document.createElement('div');\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\n\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\n      this.render();\n    });\n\n    this.render();\n\n    //retargetEvents(shadowRoot);\n    this.appendChild(this.mountPoint);\n  }\n\n  render() {\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\n    const locale = this.getAttribute(ATTRIBUTES.locale) || '';\n    Locale.setLocale(locale);\n\n    ReactDOM.render(\n      <KeycloakContext.Provider value={this.keycloak}>\n        <OpenTicketForm serviceUrl={serviceUrl} locale={locale}/>\n      </KeycloakContext.Provider>,\n      this.mountPoint\n    );\n  }\n}\n\ncustomElements.define('open-ticket-widget', OpenTicketElement);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ProductVersion from '../components/Admin/Configuration/ProductVersion';\nimport '../index.scss';\n\nimport KeycloakContext from '../auth/KeycloakContext';\n\nimport { subscribeToWidgetEvent } from '../helpers/widgetEvents';\nimport { KEYCLOAK_EVENT_TYPE } from './widgetEventTypes';\n\nconst getKeycloakInstance = () =>\n  (window && window.entando && window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\n    initialized: false,\n  };\n\nconst ATTRIBUTES = {\n  hidden: 'hidden',\n  locale: 'locale',\n  paginationMode: 'pagination-mode',\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\n  serviceUrl: 'service-url',\n};\n\nclass ProductVersionElement extends HTMLElement {\n  container;\n\n  mountPoint;\n\n  unsubscribeFromKeycloakEvent;\n\n  keycloak = getKeycloakInstance();\n\n  connectedCallback() {\n    this.mountPoint = document.createElement('div');\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\n\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\n      this.render();\n    });\n\n    this.render();\n\n    //retargetEvents(shadowRoot);\n    this.appendChild(this.mountPoint);\n  }\n\n  render() {\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\n\n    ReactDOM.render(\n      <KeycloakContext.Provider value={this.keycloak}>\n        <ProductVersion serviceUrl={serviceUrl} />\n      </KeycloakContext.Provider>,\n      this.mountPoint\n    );\n  }\n}\n\ncustomElements.define('product-version-widget', ProductVersionElement);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Subscription from '../components/SubscriptionDetails/Subscription';\nimport KeycloakContext from '../auth/KeycloakContext';\n\nimport {subscribeToWidgetEvent} from '../helpers/widgetEvents';\nimport {KEYCLOAK_EVENT_TYPE} from './widgetEventTypes';\n\nconst getKeycloakInstance = () =>\n  (window && window.entando && window.entando.keycloak && {...window.entando.keycloak, initialized: true}) || {\n    initialized: false,\n  };\n\nconst ATTRIBUTES = {\n  hidden: 'hidden',\n  locale: 'locale',\n  paginationMode: 'pagination-mode',\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\n  serviceUrl: 'service-url',\n};\n\nclass SubscriptionElement extends HTMLElement {\n  container;\n\n  mountPoint;\n\n  unsubscribeFromKeycloakEvent;\n\n  keycloak = getKeycloakInstance();\n\n  connectedCallback() {\n    this.mountPoint = document.createElement('div');\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\n\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\n      this.render();\n    });\n\n    this.render();\n\n    //retargetEvents(shadowRoot);\n    this.appendChild(this.mountPoint);\n  }\n\n  render() {\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\n\n    ReactDOM.render(\n      <KeycloakContext.Provider value={this.keycloak}>\n        <Subscription serviceUrl={serviceUrl} />\n      </KeycloakContext.Provider>,\n      this.mountPoint\n    );\n  }\n}\n\ncustomElements.define('subscription-widget', SubscriptionElement);\n","import React, {Component} from 'react';\nimport i18n from '../../i18n';\nimport {Form, TextInput, Select, SelectItem, Button, DatePicker, DatePickerInput} from 'carbon-components-react';\nimport withKeycloak from '../../auth/withKeycloak';\nimport {apiProjectGet} from '../../api/projects';\nimport {\n  apiProjectSubscriptionPost,\n  apiProjectSubscriptionPut,\n  apiRenewSubscription,\n  apiSubscriptionGet,\n  stripTime,\n} from '../../api/subscriptions';\nimport {apiProductVersionsGet} from '../../api/productVersion';\nimport {authenticationChanged, isAuthenticated, isPortalAdmin, isPortalUser} from '../../api/helpers';\nimport {apiAddSubscriptionToProject} from '../../api/projects';\nimport moment from 'moment';\n\nconst FORM_TYPE = {\n  new: 'new',\n  renewal: 'renewal',\n  edit: 'edit',\n};\n\nconst SUBSCRIPTION_LEVEL = {\n  GOLD: 'GOLD',\n  PLATINUM: 'PLATINUM',\n};\n\nconst SUBSCRIPTION_STATUS = {\n  requested: 'REQUESTED',\n  pending: 'PENDING',\n  active: 'ACTIVE',\n  expired: 'EXPIRED',\n};\n\nclass SubscriptionForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      project: {},\n      projectId: '',\n      subscription: {},\n      startDate: '',\n      level: 'PLATINUM',\n      lengthInMonths: '',\n      entandoVersionId: '',\n      status: '',\n      formType: 'new',\n      invalid: {},\n      productVersions: [],\n      submitSuccess: false,\n      submitError: false,\n      submitColour: 'black',\n    };\n  }\n\n  componentDidMount() {\n    if (isAuthenticated(this.props)) {\n      this.fetchData();\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (authenticationChanged(this.props, prevProps)) {\n      this.fetchData();\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n\n  async fetchData() {\n    if (!isPortalUser()) {\n      return;\n    }\n\n    const serviceUrl = this.props.serviceUrl;\n\n    const search = window.location.search;\n    const params = new URLSearchParams(search);\n\n    const subscriptionId = params.get('subscription');\n    let projectId = params.get('project');\n\n    let subscription = {};\n    let project = {};\n    let formType = FORM_TYPE.new;\n    let status = '';\n    const isAdmin = isPortalAdmin();\n\n    if (subscriptionId !== null) {\n      subscription = (await apiSubscriptionGet(serviceUrl, subscriptionId)).data;\n      status = isAdmin ? subscription.status : SUBSCRIPTION_STATUS.requested;\n      formType = isAdmin ? FORM_TYPE.edit : FORM_TYPE.renewal;\n      project = subscription.project;\n    } else if (projectId !== null) {\n      project = (await apiProjectGet(serviceUrl, projectId)).data;\n      status = isAdmin ? SUBSCRIPTION_STATUS.pending : SUBSCRIPTION_STATUS.requested;\n    } else {\n      console.log('Unable to load project and/or subscription');\n      return;\n    }\n\n    const productVersions = (await apiProductVersionsGet(serviceUrl)).data;\n\n    this.setState({\n      subscription: subscription,\n      level: subscription.level ? subscription.level : '',\n      entandoVersionId: subscription.entandoVersion ? subscription.entandoVersion.id : '',\n      startDate: stripTime(subscription.startDate),\n      lengthInMonths: subscription.lengthInMonths ? subscription.lengthInMonths : '',\n      status: status,\n      formType: formType,\n      project: project,\n      projectId: projectId,\n      productVersions: productVersions,\n    });\n  }\n\n  isNumeric(str) {\n    return !isNaN(str) && !isNaN(parseInt(str));\n  }\n\n  handleValidation() {\n    let invalid = {};\n\n    if (!this.state.startDate || !this.state.startDate.match(/^(0[1-9]|1[0-2])\\/(0[1-9]|1\\d|2\\d|3[01])\\/(19|20)\\d{2}$/)) {\n      invalid['startDate'] = true;\n    }\n\n    if (!this.state.lengthInMonths || !this.isNumeric(this.state.lengthInMonths)) {\n      invalid['lengthInMonths'] = true;\n    }\n\n    if (!this.state.level) {\n      invalid['level'] = true;\n    }\n\n    if (this.state.entandoVersionId === '') {\n      invalid['entandoVersionId'] = true;\n    }\n\n    this.setState({ invalid: invalid });\n    return Object.keys(invalid).length === 0;\n  }\n\n  handleChanges = e => {\n    const input = e.target;\n    const name = input.name;\n    const value = input.value;\n    this.setState({ [name]: value });\n    this.setState({\n      submitSuccess: false,\n      submitError: false,\n    });\n  };\n\n  handleStartDateChange = date => {\n    let formatted = '';\n    if (date && date[0]) {\n      formatted = moment(date[0].toISOString()).format('MM/DD/YYYY');\n    }\n    this.setState({\n      startDate: formatted,\n    });\n  };\n\n  updateStateForSuccess(success) {\n    if (success) {\n      this.setState({\n        submitSuccess: true,\n        submitError: false,\n        submitColour: '#24a148',\n      });\n    } else {\n      this.setState({\n        submitSuccess: false,\n        submitError: true,\n        submitColour: '#da1e28',\n      });\n    }\n  }\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    this.setState({\n      submitSuccess: false,\n      submitError: false,\n    });\n    const formIsValid = this.handleValidation();\n\n    if (formIsValid) {\n      const formType = this.state.formType;\n      const serviceUrl = this.props.serviceUrl;\n      const subscriptionRequest = this.stateToSubscription();\n\n      if (formType === FORM_TYPE.edit) {\n        apiProjectSubscriptionPut(serviceUrl, subscriptionRequest)\n          .then(() => {\n            this.updateStateForSuccess(true);\n          })\n          .catch(() => {\n            this.updateStateForSuccess(false);\n          });\n      } else if (formType === FORM_TYPE.new) {\n        this.newSubscription(subscriptionRequest)\n          .then(res => {\n            apiAddSubscriptionToProject(serviceUrl, this.state.projectId, res.data.id);\n            this.updateStateForSuccess(true);\n          })\n          .catch(() => {\n            this.updateStateForSuccess(false);\n          });\n      } else if (formType === FORM_TYPE.renewal) {\n        this.renewSubscription(subscriptionRequest)\n          .then(res => {\n            apiAddSubscriptionToProject(serviceUrl, this.state.projectId, res.data.id);\n            this.updateStateForSuccess(true);\n          })\n          .catch(() => {\n            this.updateStateForSuccess(false);\n          });\n      } else {\n        console.log('Illegal operation');\n      }\n    }\n  };\n\n  stateToSubscription() {\n    return {\n      entandoVersionId: this.state.entandoVersionId,\n      projectId: this.state.projectId,\n      renewal: this.state.formType === FORM_TYPE.renewal,\n      projectSubscription: {\n        id: this.state.subscription.id,\n        startDate: new Date(this.state.startDate),\n        lengthInMonths: this.state.lengthInMonths,\n        level: this.state.level,\n        status: this.state.status.toUpperCase(),\n      },\n    };\n  }\n\n  async newSubscription(request) {\n    return await apiProjectSubscriptionPost(this.props.serviceUrl, request);\n  }\n\n  async renewSubscription(request) {\n    return await apiRenewSubscription(this.props.serviceUrl, request);\n  }\n\n  setupFormComponents() {\n    const subscriptionLevelList = Object.entries(SUBSCRIPTION_LEVEL).map(([key, value]) => (\n      <SelectItem key={key} text={value} value={key}>\n        {value}\n      </SelectItem>\n    ));\n    subscriptionLevelList.unshift(<SelectItem key=\"-1\" text={i18n.t('subscriptionForm.chooseLevel')} value=\"\"/>);\n\n    const versionList = this.state.productVersions.map(version => {\n      // only allow the user to choose from active entando versions\n      if (version.status) {\n        return (\n          <SelectItem key={version.id} text={version.name} value={version.id}>\n            {version.name}\n          </SelectItem>\n        );\n      } else {\n        return null;\n      }\n    });\n    versionList.unshift(<SelectItem key=\"-1\" text={i18n.t('subscriptionForm.chooseVersion')} value=\"\"/>);\n\n    const statusList = Object.entries(SUBSCRIPTION_STATUS).map(([key, value]) => (\n      <SelectItem key={key} text={value} value={value}>\n        {value}\n      </SelectItem>\n    ));\n\n    return {subscriptionLevelList, versionList, statusList};\n  }\n\n  renderForm() {\n    const {subscriptionLevelList, versionList, statusList} = this.setupFormComponents();\n    return (\n      <div>\n        <div className=\"bx--row\">\n          <div className=\"bx--col\">\n            <div>\n              <span>{i18n.t('subscriptionForm.projectName')}:</span> {this.state.project.name}\n            </div>\n            <Select\n              id=\"status\"\n              name=\"status\"\n              labelText={i18n.t('subscriptionForm.subscriptionStatus')}\n              value={this.state.status}\n              onChange={this.handleChanges}\n              invalidText={i18n.t('validation.invalid.required')}\n              invalid={this.state.invalid['status']}\n              disabled={!isPortalAdmin()}\n            >\n              {statusList}\n            </Select>\n            <Select\n              id=\"level\"\n              name=\"level\"\n              labelText={i18n.t('subscriptionForm.subscriptionLevel') + ' *'}\n              value={this.state.level || ''}\n              onChange={this.handleChanges}\n              invalidText={i18n.t('validation.invalid.required')}\n              invalid={this.state.invalid['level']}\n            >\n              {subscriptionLevelList}\n            </Select>\n            <Select\n              id=\"entandoVersionId\"\n              name=\"entandoVersionId\"\n              labelText={i18n.t('subscriptionForm.entandoVersion') + ' *'}\n              value={this.state.entandoVersionId}\n              onChange={this.handleChanges}\n              invalidText={i18n.t('validation.invalid.required')}\n              invalid={this.state.invalid['entandoVersionId']}\n            >\n              {versionList}\n            </Select>\n          </div>\n          <div className=\"bx--col\">\n            <DatePicker dateFormat=\"m/d/Y\" datePickerType=\"single\" value={this.state.startDate}\n                        onChange={this.handleStartDateChange}>\n              <DatePickerInput\n                id=\"startDate\"\n                name=\"startDate\"\n                placeholder=\"mm/dd/yyyy\"\n                labelText={i18n.t('subscriptionForm.subscriptionStartDate')}\n                type=\"text\"\n                invalidText={i18n.t('validation.invalid.date')}\n                invalid={this.state.invalid['startDate']}\n              />\n            </DatePicker>\n            <TextInput\n              id=\"lengthInMonths\"\n              name=\"lengthInMonths\"\n              labelText={i18n.t('subscriptionForm.subscriptionLength') + ' *'}\n              value={this.state.lengthInMonths}\n              onChange={this.handleChanges}\n              invalidText={i18n.t('validation.invalid.number')}\n              invalid={this.state.invalid['lengthInMonths']}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  successErrorMessage() {\n    const isAdmin = isPortalAdmin();\n    const { subscriptionType, submitSuccess, submitError } = this.state;\n\n    if (subscriptionType === 'new') {\n      if (submitSuccess) {\n        return isAdmin ? this.createFormMessage('adminSubmitNewSuccess') : this.createFormMessage('customerSubmitSuccess');\n      } else if (submitError) {\n        return this.createFormMessage('newSubError');\n      }\n    } else {\n      if (submitSuccess) {\n        return isAdmin ? this.createFormMessage('adminRenewNewSuccess') : this.createFormMessage('customerSubmitSuccess');\n      } else if (submitError) {\n        return this.createFormMessage('renewSubError');\n      }\n    }\n  }\n\n  createFormMessage(subMessageKey) {\n    return <p style={{ color: this.state.submitColour }}>{i18n.t(`subscriptionForm.${subMessageKey}`)}</p>;\n  }\n\n  render() {\n    const titleKey = isPortalAdmin() ? 'subscriptionForm.adminTitle' : 'subscriptionForm.formTitle';\n    const formType = this.state.formType;\n    let formLabelKey = 'subscriptionForm.newSubscription';\n    if (formType !== 'new') {\n      formLabelKey = isPortalAdmin() ? 'subscriptionForm.editSubscription' : 'subscriptionForm.renewSubscription';\n    }\n\n    if (!this.state.loading) {\n      if (isPortalUser()) {\n        return (\n          <div>\n            <h3 className=\"pageTitle\">{i18n.t(titleKey)}</h3>\n            <div className=\"form-container\">\n              {this.successErrorMessage()}\n              <Form onSubmit={this.handleFormSubmit}>\n                <div className=\"bx--grid\">\n                  <div className=\"bx--row\">\n                    <div className=\"bx--col\">\n                      <strong>{i18n.t(formLabelKey)}</strong>\n                    </div>\n                  </div>\n                  {this.renderForm()}\n                  <Button kind=\"primary\" tabIndex={0} type=\"submit\">\n                    {' '}\n                    {i18n.t('buttons.submit')}\n                  </Button>\n                </div>\n              </Form>\n            </div>\n          </div>\n        );\n      } else {\n        return <p>{i18n.t('userMessages.unauthorized')}</p>;\n      }\n    }\n    // Loading\n    else {\n      return null;\n    }\n  }\n}\n\nexport default withKeycloak(SubscriptionForm);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport SubscriptionForm from '../components/Forms/SubscriptionForm';\nimport '../index.scss';\nimport * as Locale from '../i18n';\n\nimport KeycloakContext from '../auth/KeycloakContext';\n\nimport { subscribeToWidgetEvent } from '../helpers/widgetEvents';\nimport { KEYCLOAK_EVENT_TYPE } from './widgetEventTypes';\n\nconst getKeycloakInstance = () =>\n  (window && window.entando && window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\n    initialized: false,\n  };\n\nconst ATTRIBUTES = {\n  hidden: 'hidden',\n  locale: 'locale',\n  paginationMode: 'pagination-mode',\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\n  serviceUrl: 'service-url',\n};\n\nclass SubscriptionFormElement extends HTMLElement {\n  container;\n\n  mountPoint;\n\n  unsubscribeFromKeycloakEvent;\n\n  keycloak = getKeycloakInstance();\n\n  connectedCallback() {\n    this.mountPoint = document.createElement('div');\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\n\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\n      this.render();\n    });\n\n    this.render();\n\n    //retargetEvents(shadowRoot);\n    this.appendChild(this.mountPoint);\n  }\n\n  render() {\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\n    const locale = this.getAttribute(ATTRIBUTES.locale) || '';\n    Locale.setLocale(locale);\n\n    ReactDOM.render(\n      <KeycloakContext.Provider value={this.keycloak}>\n        <SubscriptionForm serviceUrl={serviceUrl} />\n      </KeycloakContext.Provider>,\n      this.mountPoint\n    );\n  }\n}\n\ncustomElements.define('subscription-form-widget', SubscriptionFormElement);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport TicketList from '../components/SubscriptionDetails/TicketList';\nimport '../index.scss';\n\nimport KeycloakContext from '../auth/KeycloakContext';\n\nimport { subscribeToWidgetEvent } from '../helpers/widgetEvents';\nimport { KEYCLOAK_EVENT_TYPE } from '../custom-elements/widgetEventTypes';\n\nconst getKeycloakInstance = () =>\n  (window && window.entando && window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\n    initialized: false,\n  };\n\nconst ATTRIBUTES = {\n  hidden: 'hidden',\n  locale: 'locale',\n  paginationMode: 'pagination-mode',\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\n  serviceUrl: 'service-url',\n};\n\nclass TicketListCustomerElement extends HTMLElement {\n  container;\n\n  mountPoint;\n\n  unsubscribeFromKeycloakEvent;\n\n  keycloak = getKeycloakInstance();\n\n  connectedCallback() {\n    this.mountPoint = document.createElement('div');\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\n\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\n      this.render();\n    });\n\n    this.render();\n\n    //retargetEvents(shadowRoot);\n    this.appendChild(this.mountPoint);\n  }\n\n  render() {\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\n\n    ReactDOM.render(\n      <KeycloakContext.Provider value={this.keycloak}>\n        <TicketList serviceUrl={serviceUrl} />\n      </KeycloakContext.Provider>,\n      this.mountPoint\n    );\n  }\n}\n\ncustomElements.define('ticket-list-widget', TicketListCustomerElement);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport TicketingSystem from '../components/Admin/Configuration/TicketingSystem';\nimport '../index.scss';\n\nimport KeycloakContext from '../auth/KeycloakContext';\n\nimport { subscribeToWidgetEvent } from '../helpers/widgetEvents';\nimport { KEYCLOAK_EVENT_TYPE } from './widgetEventTypes';\n\nconst getKeycloakInstance = () =>\n  (window && window.entando && window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\n    initialized: false,\n  };\n\nconst ATTRIBUTES = {\n  hidden: 'hidden',\n  locale: 'locale',\n  paginationMode: 'pagination-mode',\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\n  serviceUrl: 'service-url',\n};\n\nclass TicketingSystemElement extends HTMLElement {\n  container;\n\n  mountPoint;\n\n  unsubscribeFromKeycloakEvent;\n\n  keycloak = getKeycloakInstance();\n\n  connectedCallback() {\n    this.mountPoint = document.createElement('div');\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\n\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\n      this.render();\n    });\n\n    this.render();\n\n    //retargetEvents(shadowRoot);\n    this.appendChild(this.mountPoint);\n  }\n\n  render() {\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\n\n    ReactDOM.render(\n      <KeycloakContext.Provider value={this.keycloak}>\n        <TicketingSystem serviceUrl={serviceUrl} />\n      </KeycloakContext.Provider>,\n      this.mountPoint\n    );\n  }\n}\n\ncustomElements.define('ticketing-system-widget', TicketingSystemElement);\n","import React, {Component} from 'react';\nimport {BrowserRouter, Route, Switch, Link} from 'react-router-dom';\nimport App from '../components/App';\nimport withKeycloak from '../auth/withKeycloak';\nimport SubscriptionForm from '../components/Forms/SubscriptionForm';\nimport AdminConfiguration from '../components/Admin/Configuration/AdminConfiguration';\nimport OpenTicketForm from '../components/Forms/OpenTicketForm';\nimport ManageUser from '../components/Admin/ManageUser/ManageUser';\nimport ManageSubscriptions from '../components/Admin/ManageSubscriptions/ManageSubscriptions';\nimport {authenticationChanged, isAuthenticated, isPortalAdmin} from '../api/helpers';\n\nclass LocalApp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n    };\n  }\n\n  componentDidMount() {\n    if (isAuthenticated(this.props)) {\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (authenticationChanged(this.props, prevProps)) {\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n\n  logout() {\n    window.entando.keycloak.logout();\n  }\n\n  render() {\n    if (!this.state.loading) {\n      return (\n        <div>\n          <BrowserRouter forceRefresh={true}>\n            {/*Simple Menu for switching to page-based elements*/}\n            <div>\n              <ul>\n                <li>\n                  <Link to={'/'}>Home</Link>\n                </li>\n                {/*TODO: rework the entando-de-app-based paths so the application name and locale are more general*/}\n                {isPortalAdmin() && (\n                  <li>\n                    <Link to={'/entando-de-app/en/admin.page'}>Admin</Link>\n                  </li>\n                )}\n                <li>\n                  <a href=\"/\" onClick={this.logout}>\n                    Logout\n                  </a>\n                </li>\n              </ul>\n            </div>\n            <Switch>\n              <Route path=\"/entando-de-app/en/admin.page\">\n                <AdminConfiguration serviceUrl={this.props.serviceUrl} locale={this.props.locale}/>\n              </Route>\n              <Route path=\"/entando-de-app/en/manage_subscriptions.page\">\n                <ManageSubscriptions serviceUrl={this.props.serviceUrl} locale={this.props.locale}/>\n              </Route>\n              <Route path=\"/entando-de-app/en/manage_users.page\">\n                <ManageUser serviceUrl={this.props.serviceUrl} locale={this.props.locale}/>\n              </Route>\n              <Route path=\"/entando-de-app/en/new_or_renew_subscription.page\">\n                <SubscriptionForm serviceUrl={this.props.serviceUrl} locale={this.props.locale}/>\n              </Route>\n              <Route path=\"/entando-de-app/en/open_service_ticket.page\">\n                <OpenTicketForm serviceUrl={this.props.serviceUrl} locale={this.props.locale}/>\n              </Route>\n              <Route path=\"/\" exact={true}>\n                <App serviceUrl={this.props.serviceUrl} locale={this.props.locale}/>\n              </Route>\n            </Switch>\n          </BrowserRouter>\n        </div>\n      );\n    } else {\n      return null;\n    }\n  }\n}\n\nexport default withKeycloak(LocalApp);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '../index.scss';\nimport * as Locale from '../i18n';\n\nimport KeycloakContext from '../auth/KeycloakContext';\nimport LocalApp from '../local/LocalApp';\n\nimport {subscribeToWidgetEvent} from '../helpers/widgetEvents';\nimport {KEYCLOAK_EVENT_TYPE} from '../custom-elements/widgetEventTypes';\n\nconst getKeycloakInstance = () =>\n  (window && window.entando && window.entando.keycloak && {...window.entando.keycloak, initialized: true}) || {\n    initialized: false,\n  };\n\nconst ATTRIBUTES = {\n  hidden: 'hidden',\n  locale: 'locale',\n  paginationMode: 'pagination-mode',\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\n  serviceUrl: 'service-url',\n};\n\nclass LocalAppElement extends HTMLElement {\n  container;\n\n  mountPoint;\n\n  unsubscribeFromKeycloakEvent;\n\n  keycloak = getKeycloakInstance();\n\n  connectedCallback() {\n    this.mountPoint = document.createElement('div');\n    this.keycloak = {...getKeycloakInstance(), initialized: true};\n\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\n      this.keycloak = {...getKeycloakInstance(), initialized: true};\n      this.render();\n    });\n\n    this.render();\n\n    //retargetEvents(shadowRoot);\n    this.appendChild(this.mountPoint);\n  }\n\n  render() {\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\n    const locale = this.getAttribute(ATTRIBUTES.locale) || '';\n    Locale.setLocale(locale);\n\n    ReactDOM.render(\n      <KeycloakContext.Provider value={this.keycloak}>\n        <LocalApp serviceUrl={serviceUrl} locale={locale}/>\n      </KeycloakContext.Provider>,\n      this.mountPoint\n    );\n  }\n}\n\ncustomElements.define('local-app-element', LocalAppElement);\n"],"sourceRoot":""}