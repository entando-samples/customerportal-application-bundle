{"version":3,"sources":["i18n.js","api/constants.js","api/helpers.js","api/ticketingsystem.js","auth/KeycloakContext.js","components/__types__/ref.js","auth/withKeycloak.js","components/Admin/Configuration/TicketingSystem.js","api/productVersion.js","components/Admin/AddProductVersionModal.js","components/Admin/EditVersionModal.js","components/Admin/Configuration/ProductVersion.js","components/Breadcrumbs/Breadcrumbs.js","components/Admin/Configuration/AdminConfiguration.js","helpers/widgetEvents.js","custom-elements/widgetEventTypes.js","custom-elements/AdminConfigurationElement.js","api/customers.js","components/Admin/AddCustomerModal.js","api/partners.js","api/projects.js","auth/KeycloakViews.js","components/Admin/AddPartnerModal.js","components/Admin/AddProjectModal.js","components/Admin/EditProjectModal.js","components/Admin/ManagePartnersModal.js","components/Admin/ProjectActionItems.js","api/subscriptions.js","components/Customer/CustomerDataTable.js","components/Customer/CustomerDetails.js","components/Admin/EditCustomerModal.js","components/Customer/CustomerAccordian.js","components/Admin/AdminDashboard.js","api/tickets.js","components/SubscriptionDetails/TicketList.js","components/SubscriptionDetails/Subscription.js","components/Customer/CustomerProjectList.js","components/App.js","custom-elements/AppElement.js","components/Login/Login.js","custom-elements/LoginElement.js","components/Admin/ManageSubscriptions/ManageSubscriptions.js","custom-elements/ManageSubscriptionsElement.js","api/portalusers.js","api/keycloak.js","components/Admin/ManageUsers/AssignUsers.js","components/Admin/ManageUsers/DeleteUsers.js","components/Admin/ManageUsers/ManageUsers.js","custom-elements/ManageUsersElement.js","components/Forms/OpenTicketForm.js","custom-elements/OpenTicketElement.js","components/Forms/SubscriptionForm.js","custom-elements/SubscriptionFormElement.js","local/LocalApp.js","local/LocalAppElement.js"],"names":["i18n","defaultLocale","locale","fallbacks","translations","en","it","setLocale","PAGE_CUSTOMER_PORTAL","PAGE_ADMIN_CONFIG","PAGE_MANAGE_SUBSCRIPTIONS","PAGE_MANAGE_USERS","PAGE_SUBSCRIPTION_FORM","PAGE_TICKET_FORM","getKeycloakToken","window","entando","keycloak","authenticated","token","isAuthenticated","props","initialized","authenticationChanged","prevProps","changedAuth","isPortalAdmin","hasKeycloakClientRole","isPortalSupport","isPortalPartner","isPortalCustomer","isPortalAdminOrSupport","isPortalUser","clientRole","resourceAccess","client","item","roles","includes","getDefaultOptions","headers","Headers","Authorization","getDefaultKeycloakOptions","getActiveSubscription","project","projectSubscriptions","find","status","getPageUrl","pageCode","url","getUrl","request","options","a","fetch","response","has","parseInt","get","data","json","Promise","reject","Error","statusText","resource","apiTicketingSystemDelete","serviceUrl","id","method","apiCurrentTicketingSystemGet","apiTicketingSystemsGet","ticketingSystems","length","apiTicketingSystemPost","ticketingSystem","secret","tsRequest","body","JSON","stringify","apiTicketingSystemPut","KeycloakContext","PropTypes","oneOfType","func","shape","current","elementType","React","createContext","withKeycloak","WrappedComponent","WithKeycloakComponent","renderWrappedComponent","value","forwardedRef","rest","ref","Consumer","this","Component","defaultProps","forwardRef","handleChanges","e","input","target","name","setState","handleFormSubmit","event","preventDefault","state","updateTicketingSystem","then","submitMsg","t","submitColour","catch","createTicketingSystem","ticketingSystemType","serviceAccount","serviceAccountSecret","systemId","fetchData","confirm","deleteTicketingSystem","className","style","color","Form","onSubmit","Select","labelText","onChange","SelectItem","text","map","type","i","TextInput","Button","kind","tabIndex","onClick","handleDelete","apiProductVersionsGet","apiProductVersionGet","versionId","apiUpdateProductVersionsStatus","apiProductVersionPost","productVersion","apiProductVersionPut","apiProductVersionDelete","handleValidation","addProductVersion","updateProductVersions","clearValues","document","querySelector","baseState","handleStartDateChange","date","startDate","moment","toISOString","format","handleEndDateChange","endDate","invalid","formIsValid","match","addEventListener","modalConfirmation","modalId","ModalWrapper","buttonTriggerText","modalHeading","buttonTriggerClassName","handleSubmit","invalidText","DatePicker","dateFormat","datePickerType","DatePickerInput","placeholder","version","versionPut","buttonId","getVersionDetails","buttonClassName","primaryButtonText","secondaryButtonText","ProductVersion","handleDeleteVersion","deleteVersion","getProductVersions","versions","productVersions","DataTable","rows","rowData","headerData","getHeaderProps","getTableProps","TableContainer","Table","TableHead","TableRow","header","TableHeader","TableBody","Object","keys","index","TableCell","Toggle","size","handleToggleChange","aria-label","defaultToggled","display","width","key","entVersion","homeUrl","customer","subscription","Breadcrumb","margin","BreadcrumbItem","href","loading","adminConfig","label","content","Tile","Accordion","AccordionItem","title","description","toString","subscribeToWidgetEvent","eventType","eventHandler","removeEventListener","KEYCLOAK_EVENT_TYPE","getKeycloakInstance","ATTRIBUTES","AdminConfigurationElement","mountPoint","createElement","unsubscribeFromKeycloakEvent","render","appendChild","getAttribute","Locale","ReactDOM","Provider","HTMLElement","customElements","define","apiCustomerDelete","apiCustomersGet","apiCustomerGet","apiCustomerPost","apiCustomerPut","apiAddProjectToCustomer","customerId","projectId","apiDeleteProjectFromCustomer","customerNumber","contactName","contactPhone","contactEmail","notes","customerPost","updateCustomerList","lastAtPos","lastIndexOf","lastDotPos","indexOf","TextArea","apiPartnerPost","partner","apiProjectsGet","apiProjectGet","apiProjectPost","apiProjectPut","apiAddSubscriptionToProject","subscriptionId","apiAddUserToProject","userId","apiDeletePartnerFromProject","partnerId","apiDeleteSubscriptionFromProject","apiDeleteUserFromProject","apiAddPartnerToProject","apiGetProjectUsers","apiGetProjectSubscriptions","AuthenticatedView","children","UnauthenticatedView","partnerNumber","partnerPost","projectList","projects","console","log","result","trim","alert","projectPost","getAllProjects","customerList","getCustomers","customers","allCustomers","allProjects","projectPut","updateProjectList","getProjectDetails","ManagePartnersModal","handleRemovePartner","removePartner","err","hasForm","partners","border","borderTop","handleClick","showMenu","handleOutsideClick","prevState","node","contains","isAdmin","actionDivider","topButton","padding","editProject","subscriptionParam","newOrRenewSubscription","textDecoration","managePartners","manageUsers","manageSubscriptions","openTicket","viewAllTickets","substr","rel","deleteProject","handleDeleteProject","zIndex","position","backgroundColor","to","formatStartDate","String","Date","toDateString","formatEndDate","lengthInMonths","setMonth","getMonth","apiSubscriptionGet","apiProjectSubscriptionPost","projectSubscriptionCreation","apiProjectSubscriptionPut","apiRenewSubscription","projectSubscriptionRenew","action","callback","partnerIndex","entandoVersion","minHeight","paddingBottom","getCustomerDetails","getCustomer","updateCustomer","deleteCustomer","open","accordionOpened","getTime","handleSearch","newFilteredState","filter","toLowerCase","filteredCustomers","currentPage","undefined","forceUpdate","role","test","numberOfPages","Math","ceil","Search","onKeyPress","indexOfLastItem","firstIndexOfCurrentPage","PaginationNav","loop","Boolean","page","Number","totalItems","itemsShown","jiraResource","apiJiraTicketsGet","apiJiraTicketPost","ticket","tickets","ticketSystemUrl","ticketingSystemBaseUrl","ticketUrl","summary","priority","createDate","updateDate","subscriptionData","updateSubscription","users","params","license","level","user","username","path","AppElement","KEYCLOAK_EVENT_ID","keycloakEventHandler","bind","keycloakEvent","detail","logout","loginUrl","location","redirectUri","origin","login","LoginElement","handleDeleteSubscription","deleteSubscription","subscriptions","search","URLSearchParams","ManageSubscriptionsElement","apiUserGetByUsernameAndEmail","email","apiKeycloakUserGet","realm","usersResource","mapKeycloakUserEmails","keycloakUsers","usernameEmailMap","Map","forEach","keycloakUser","set","assignUser","handleFormValidation","assignUserToProject","res","dispatchEvent","CustomEvent","getPortalUserId","portalUserId","portalUserApi","portalUser","warn","authServerUrl","userList","unshift","setupFormComponents","handleRemoveUser","displayUsers","handleUserDisplay","userAccess","row","cells","cell","userFunctionality","ManageUsersElement","createTicket","types","priorities","error","OpenTicketElement","FORM_TYPE","SUBSCRIPTION_LEVEL","GOLD","PLATINUM","SUBSCRIPTION_STATUS","requested","pending","active","expired","submitSuccess","submitError","formatted","formType","subscriptionRequest","stateToSubscription","updateStateForSuccess","newSubscription","renewSubscription","entandoVersionId","str","isNaN","isNumeric","success","renewal","projectSubscription","toUpperCase","subscriptionLevelList","entries","versionList","statusList","disabled","subscriptionType","createFormMessage","subMessageKey","formLabelKey","successErrorMessage","renderForm","SubscriptionFormElement","forceRefresh","exact","LocalAppElement"],"mappings":"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","file":"static/js/main.d6164a7f.chunk.js","sourcesContent":["import i18n from 'i18n-js';\r\n\r\nimport en from './i18n/locales/en.json';\r\nimport it from './i18n/locales/it.json';\r\n\r\ni18n.defaultLocale = 'en';\r\ni18n.locale = 'en';\r\ni18n.fallbacks = true;\r\ni18n.translations = { en, it };\r\n\r\nexport const setLocale = locale => {\r\n  i18n.locale = locale;\r\n};\r\n\r\nexport default i18n;\r\n","export const DOMAIN = process.env.REACT_APP_PATH || ''; // eslint-disable-line import/prefer-default-export\r\n\r\n//Customer Portal roles\r\nexport const ADMIN = 'cp-admin';\r\nexport const SUPPORT = 'cp-support';\r\nexport const PARTNER = 'cp-partner';\r\nexport const CUSTOMER = 'cp-customer';\r\n\r\n//Page codes\r\nexport const PAGE_CUSTOMER_PORTAL = 'customer_portal.page'\r\nexport const PAGE_ADMIN_CONFIG = 'cp_admin_config.page'\r\nexport const PAGE_MANAGE_SUBSCRIPTIONS = 'cp_manage_subscriptions.page'\r\nexport const PAGE_MANAGE_USERS = 'cp_manage_users.page'\r\nexport const PAGE_SUBSCRIPTION_FORM = 'cp_subscription.page'\r\nexport const PAGE_TICKET_FORM = 'cp_ticket.page'\r\n","import {ADMIN, SUPPORT, CUSTOMER, PARTNER, DOMAIN} from './constants';\r\n\r\nexport const getKeycloakToken = () => {\r\n  if (window && window.entando && window.entando.keycloak && window.entando.keycloak.authenticated) {\r\n    return window.entando.keycloak.token;\r\n  }\r\n  return '';\r\n};\r\n\r\nexport const isAuthenticated = props => {\r\n  const {keycloak} = props;\r\n  return keycloak.initialized && keycloak.authenticated;\r\n};\r\n\r\nexport const authenticationChanged = (props, prevProps) => {\r\n  const authenticated = isAuthenticated(props);\r\n  const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n  return authenticated && changedAuth;\r\n};\r\n\r\nexport const isPortalAdmin = () => {\r\n  return hasKeycloakClientRole(ADMIN);\r\n};\r\n\r\nexport const isPortalSupport = () => {\r\n  return hasKeycloakClientRole(SUPPORT);\r\n};\r\n\r\nexport const isPortalPartner = () => {\r\n  return hasKeycloakClientRole(PARTNER);\r\n};\r\n\r\nexport const isPortalCustomer = () => {\r\n  return hasKeycloakClientRole(CUSTOMER);\r\n};\r\n\r\nexport const isPortalAdminOrSupport = () => {\r\n  return isPortalAdmin() || isPortalSupport();\r\n};\r\n\r\nexport const isPortalCustomerOrPartner = () => {\r\n  return isPortalCustomer() || isPortalPartner();\r\n};\r\n\r\nexport const isPortalUser = () => {\r\n  return isPortalAdminOrSupport() || isPortalCustomerOrPartner();\r\n};\r\n\r\nexport const hasKeycloakClientRole = clientRole => {\r\n  if (getKeycloakToken()) {\r\n    const { resourceAccess } = window.entando.keycloak;\r\n    if (resourceAccess) {\r\n      for (const client in resourceAccess) {\r\n        const item = resourceAccess[client];\r\n        if (item.roles && item.roles.includes(clientRole)) {\r\n          // console.debug(\"Found role {} with client {} \", clientRole, client);\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return false;\r\n};\r\n\r\nexport const getDefaultOptions = () => ({\r\n  headers: new Headers({\r\n    Authorization: `Bearer ${getKeycloakToken()}`,\r\n    'Content-Type': 'application/json',\r\n  }),\r\n});\r\n\r\nexport const getDefaultKeycloakOptions = () => ({\r\n  headers: new Headers({\r\n    Authorization: `Bearer ${getKeycloakToken()}`,\r\n    'Content-Type': 'application/x-www-form-urlencoded',\r\n  }),\r\n});\r\n\r\nexport const getActiveSubscription = project => {\r\n  return (\r\n    project &&\r\n    project.projectSubscriptions &&\r\n    project.projectSubscriptions.find(item => {\r\n      return item.status === 'ACTIVE' ? item : null;\r\n    })\r\n  );\r\n};\r\n\r\nexport const getPageUrl = (pageCode, locale) => {\r\n  const url = `${DOMAIN}/${locale}/${pageCode}`;\r\n  return getUrl(url);\r\n}\r\n\r\nexport const getUrl = url => {\r\n  return `${url}`;\r\n};\r\n\r\nexport const request = async (url, options) => {\r\n  const response = await fetch(url, options);\r\n\r\n  const headers = {\r\n    ...(response.headers.has('X-Total-Count') ? {'X-Total-Count': parseInt(response.headers.get('X-Total-Count'), 10)} : {}),\r\n  };\r\n\r\n  if (response.status === 204) {\r\n    return { data: '', status: response.status };\r\n  }\r\n\r\n  return response.status >= 200 && response.status < 300\r\n    ? { data: await response.json(), headers, status: response.status }\r\n    : Promise.reject(new Error(response.statusText || response.status));\r\n};\r\n","import {getDefaultOptions, request} from './helpers';\r\n\r\nconst resource = 'api/ticketing-systems';\r\n\r\nexport const apiTicketingSystemDelete = async (serviceUrl, id) => {\r\n  const url = `${serviceUrl}/${resource}/${id}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiCurrentTicketingSystemGet = async serviceUrl => {\r\n  const ticketingSystems = (await apiTicketingSystemsGet(serviceUrl)).data;\r\n  //Simplifying assumption to take the latest ticketing system as the current config. There should be only 1.\r\n  return ticketingSystems && ticketingSystems.length ? ticketingSystems[ticketingSystems.length - 1] : null;\r\n};\r\n\r\nexport const apiTicketingSystemsGet = async serviceUrl => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\n//Note: post and put both use a ticketingsystemrequest\r\nexport const apiTicketingSystemPost = async (serviceUrl, ticketingSystem, secret) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const tsRequest = {\r\n    \"ticketingSystem\": ticketingSystem,\r\n    \"secret\": secret\r\n  }\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n    body: JSON.stringify(tsRequest),\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiTicketingSystemPut = async (serviceUrl, ticketingSystem, secret) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const tsRequest = {\r\n    \"ticketingSystem\": ticketingSystem,\r\n    \"secret\": secret\r\n  }\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'PUT',\r\n    body: JSON.stringify(tsRequest),\r\n  };\r\n  return request(url, options);\r\n};\r\n","import React from 'react';\r\n\r\nconst KeycloakContext = React.createContext(null);\r\n\r\nexport default KeycloakContext;\r\n","import PropTypes from 'prop-types';\r\n\r\nexport default PropTypes.oneOfType([PropTypes.func, PropTypes.shape({ current: PropTypes.elementType }), PropTypes.shape(null)]);\r\n","/* eslint-disable react/jsx-props-no-spreading */\r\nimport React, { forwardRef, Component } from 'react';\r\nimport refType from '../components/__types__/ref';\r\nimport KeycloakContext from './KeycloakContext';\r\n\r\nexport default function withKeycloak(WrappedComponent) {\r\n  class WithKeycloakComponent extends Component {\r\n    renderWrappedComponent = value => {\r\n      const { forwardedRef, ...rest } = this.props;\r\n      return <WrappedComponent {...rest} ref={forwardedRef} keycloak={value} />;\r\n    };\r\n\r\n    render() {\r\n      return <KeycloakContext.Consumer>{this.renderWrappedComponent}</KeycloakContext.Consumer>;\r\n    }\r\n  }\r\n\r\n  WithKeycloakComponent.propTypes = {\r\n    forwardedRef: refType,\r\n  };\r\n\r\n  WithKeycloakComponent.defaultProps = {\r\n    forwardedRef: () => {},\r\n  };\r\n\r\n  return forwardRef((props, ref) => <WithKeycloakComponent {...props} forwardedRef={ref} />);\r\n}\r\n","import React, { Component } from 'react';\r\nimport i18n from '../../../i18n';\r\nimport { Form, TextInput, Select, SelectItem, Button } from 'carbon-components-react';\r\nimport {\r\n  apiCurrentTicketingSystemGet,\r\n  apiTicketingSystemDelete,\r\n  apiTicketingSystemPost,\r\n  apiTicketingSystemPut,\r\n} from '../../../api/ticketingsystem';\r\nimport {authenticationChanged, isAuthenticated, isPortalAdmin} from '../../../api/helpers';\r\nimport withKeycloak from '../../../auth/withKeycloak';\r\n\r\nclass TicketingSystem extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      ticketingSystem: {},\r\n      ticketingSystemType: 'Jira',\r\n      url: '',\r\n      serviceAccount: '',\r\n      serviceAccountSecret: '',\r\n      systemId: '',\r\n      submitMsg: '',\r\n      submitColour: 'black',\r\n    };\r\n  }\r\n\r\n  handleChanges = e => {\r\n    const input = e.target;\r\n    const name = input.name;\r\n    const value = input.value;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  async createTicketingSystem() {\r\n    const ticketingSystem = {\r\n      url: this.state.url,\r\n      serviceAccount: this.state.serviceAccount,\r\n      systemId: this.state.systemId,\r\n    };\r\n    const response = (await apiTicketingSystemPost(this.props.serviceUrl, ticketingSystem, this.state.serviceAccountSecret)).data;\r\n    this.setState({\r\n      ticketingSystem: response,\r\n    });\r\n  }\r\n\r\n  async updateTicketingSystem() {\r\n    const ticketingSystem = {\r\n      id: this.state.ticketingSystem.id,\r\n      url: this.state.url,\r\n      serviceAccount: this.state.serviceAccount,\r\n      systemId: this.state.systemId,\r\n    };\r\n    return await apiTicketingSystemPut(this.props.serviceUrl, ticketingSystem, this.state.serviceAccountSecret);\r\n  }\r\n\r\n  async fetchData() {\r\n    const ticketingSystem = await apiCurrentTicketingSystemGet(this.props.serviceUrl);\r\n    this.setState({\r\n      ticketingSystem: ticketingSystem,\r\n      url: ticketingSystem ? ticketingSystem.url : '',\r\n      serviceAccount: ticketingSystem ? ticketingSystem.serviceAccount : '',\r\n      //Secret needs to be entered each time\r\n      systemId: ticketingSystem ? ticketingSystem.systemId : '',\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (isAuthenticated(this.props)) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (authenticationChanged(this.props, prevProps)) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n\r\n  async deleteTicketingSystem() {\r\n    return await apiTicketingSystemDelete(this.props.serviceUrl, this.state.ticketingSystem.id);\r\n  }\r\n\r\n  handleDelete() {\r\n    if (window.confirm('Are you sure you want to delete this ticketing system?')) {\r\n      this.deleteTicketingSystem()\r\n        .then(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.deleted'),\r\n            submitColour: '#24a148',\r\n          });\r\n          this.fetchData();\r\n        })\r\n        .catch(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.error'),\r\n            submitColour: '#da1e28',\r\n          });\r\n        });\r\n    }\r\n  }\r\n\r\n  handleFormSubmit = event => {\r\n    event.preventDefault();\r\n    if (!this.state.ticketingSystem) {\r\n      this.createTicketingSystem()\r\n        .then(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.created'),\r\n            submitColour: '#24a148',\r\n          });\r\n        })\r\n        .catch(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.error'),\r\n            submitColour: '#da1e28',\r\n          });\r\n        });\r\n    } else {\r\n      this.updateTicketingSystem()\r\n        .then(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.updated'),\r\n            submitColour: '#24a148',\r\n          });\r\n        })\r\n        .catch(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.error'),\r\n            submitColour: '#da1e28',\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const ticketingSystemTypes = ['Jira'];\r\n    if (isPortalAdmin()) {\r\n      return (\r\n        <div className=\"cp-form\">\r\n          <p style={{ color: this.state.submitColour }}>{this.state.submitMsg}</p>\r\n          <Form onSubmit={this.handleFormSubmit}>\r\n            <div className=\"bx--grid\">\r\n              <div className=\"bx--row\">\r\n                <div className=\"bx--col\">\r\n                  <Select\r\n                    id=\"ticketingSystemType\"\r\n                    name=\"ticketingSystemType\"\r\n                    labelText={i18n.t('adminConfig.integrationTicketingSystem.selectBackendTicketingSystem')}\r\n                    value={this.state.ticketingSystemType}\r\n                    onChange={this.handleChanges}\r\n                  >\r\n                    <SelectItem text={i18n.t('adminConfig.integrationTicketingSystem.select')}\r\n                                value=\"ticketing-system\"/>\r\n                    {ticketingSystemTypes.map((type, i) => (\r\n                      <SelectItem key={i} text={type} value={type}>\r\n                        {type}\r\n                      </SelectItem>\r\n                    ))}\r\n                  </Select>\r\n                  <TextInput\r\n                    id=\"serviceAccount\"\r\n                    name=\"serviceAccount\"\r\n                    labelText={i18n.t('adminConfig.integrationTicketingSystem.userName')}\r\n                    value={this.state.serviceAccount}\r\n                    onChange={this.handleChanges}\r\n                  />\r\n                  <TextInput\r\n                    id=\"systemId\"\r\n                    name=\"systemId\"\r\n                    labelText={i18n.t('adminConfig.integrationTicketingSystem.projectName')}\r\n                    value={this.state.systemId}\r\n                    onChange={this.handleChanges}\r\n                  />\r\n                </div>\r\n                <div className=\"bx--col\">\r\n                  <TextInput\r\n                    id=\"url\"\r\n                    name=\"url\"\r\n                    labelText={i18n.t('adminConfig.integrationTicketingSystem.url')}\r\n                    value={this.state.url}\r\n                    onChange={this.handleChanges}\r\n                  />\r\n                  <TextInput\r\n                    id=\"serviceAccountSecret\"\r\n                    name=\"serviceAccountSecret\"\r\n                    type=\"password\"\r\n                    labelText={i18n.t('adminConfig.integrationTicketingSystem.password')}\r\n                    value={this.state.serviceAccountSecret}\r\n                    onChange={this.handleChanges}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <Button kind=\"primary\" tabIndex={0} type=\"submit\">\r\n                {' '}\r\n                {i18n.t('buttons.submit')}{' '}\r\n              </Button>\r\n              {this.state.ticketingSystem ? (\r\n                <Button kind=\"danger\" onClick={() => this.handleDelete()}>\r\n                  {' '}\r\n                  Delete{' '}\r\n                </Button>\r\n              ) : null}\r\n            </div>\r\n          </Form>\r\n        </div>\r\n      );\r\n    }\r\n    // Unauthorized\r\n    else {\r\n      return <p>{i18n.t('userMessages.unauthorized')}</p>;\r\n    }\r\n  }\r\n}\r\n\r\nexport default withKeycloak(TicketingSystem);\r\n","import { getDefaultOptions, request } from './helpers';\r\n\r\nconst resource = 'api/entando-versions';\r\n\r\nexport const apiProductVersionsGet = async serviceUrl => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiProductVersionGet = async (serviceUrl, versionId) => {\r\n  const url = `${serviceUrl}/${resource}/${versionId}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiUpdateProductVersionsStatus = async (serviceUrl, id) => {\r\n  const url = `${serviceUrl}/${resource}/${id}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'PUT',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiProductVersionPost = async (serviceUrl, productVersion) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n    body: productVersion ? JSON.stringify(productVersion) : null,\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiProductVersionPut = async (serviceUrl, productVersion) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'PUT',\r\n    body: productVersion ? JSON.stringify(productVersion) : null,\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiProductVersionDelete = async (serviceUrl, id) => {\r\n  const url = `${serviceUrl}/${resource}/${id}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE',\r\n  };\r\n  return request(url, options);\r\n};\r\n","import React, { Component } from 'react';\r\nimport i18n from '../../i18n';\r\nimport { ModalWrapper, Form, TextInput, DatePicker, DatePickerInput } from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport { apiProductVersionPost } from '../../api/productVersion';\r\nimport moment from 'moment';\r\nimport {isAuthenticated} from \"../../api/helpers\";\r\n\r\nclass AddProductVersionModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      name: '',\r\n      startDate: '',\r\n      endDate: '',\r\n      invalid: {},\r\n      submitMsg: '',\r\n      submitColour: 'black',\r\n    };\r\n\r\n    this.baseState = this.state;\r\n  }\r\n\r\n  handleValidation() {\r\n    let invalid = {};\r\n    let formIsValid = true;\r\n\r\n    //name\r\n    if (this.state.name === '') {\r\n      formIsValid = false;\r\n      invalid['name'] = true;\r\n    }\r\n\r\n    if (typeof this.state.startDate !== 'undefined') {\r\n      if (!this.state.startDate.match(/^(0[1-9]|1[0-2])\\/(0[1-9]|1\\d|2\\d|3[01])\\/(19|20)\\d{2}$/)) {\r\n        formIsValid = false;\r\n        invalid['startDate'] = true;\r\n      }\r\n    }\r\n\r\n    if (typeof this.state.endDate !== 'undefined') {\r\n      if (!this.state.endDate.match(/^(0[1-9]|1[0-2])\\/(0[1-9]|1\\d|2\\d|3[01])\\/(19|20)\\d{2}$/)) {\r\n        formIsValid = false;\r\n        invalid['endDate'] = true;\r\n      }\r\n    }\r\n\r\n    this.setState({ invalid: invalid });\r\n    return formIsValid;\r\n  }\r\n\r\n  handleChanges = e => {\r\n    const input = e.target;\r\n    const name = input.name;\r\n    const value = input.value;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  async addProductVersion() {\r\n    if (isAuthenticated(this.props)) {\r\n      return await apiProductVersionPost(this.props.serviceUrl, this.state);\r\n    }\r\n  }\r\n\r\n  handleFormSubmit = () => {\r\n    const formIsValid = this.handleValidation();\r\n\r\n    if (formIsValid) {\r\n      this.addProductVersion()\r\n        .then(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.added'),\r\n            submitColour: '#24a148',\r\n          });\r\n          this.props.updateProductVersions();\r\n        })\r\n        .catch(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.error'),\r\n            submitColour: '#da1e28',\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  clearValues = () => {\r\n    const customerModalElement = document.querySelector('#modal-form-product-version');\r\n    if (!customerModalElement.className.includes('is-visible')) {\r\n      this.setState(this.baseState);\r\n    }\r\n  };\r\n\r\n  handleStartDateChange = date => {\r\n    this.setState({\r\n      startDate: moment(date[0].toISOString()).format('MM/DD/YYYY'),\r\n    });\r\n  };\r\n\r\n  handleEndDateChange = date => {\r\n    this.setState({\r\n      endDate: moment(date[0].toISOString()).format('MM/DD/YYYY'),\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    const modalOpenButton = document.querySelector('.add-product-version-button');\r\n    modalOpenButton.addEventListener('click', this.clearValues, false);\r\n  }\r\n\r\n  render() {\r\n    const modalConfirmation = (\r\n      <div className=\"bx--modal-header\">\r\n        <p style={{color: this.state.submitColour}}>{this.state.submitMsg}</p>\r\n      </div>\r\n    );\r\n    const modalId = 'modal-form-product-version';\r\n    return (\r\n      <ModalWrapper\r\n        buttonTriggerText={i18n.t('buttons.addProductVersion')}\r\n        modalHeading={i18n.t('adminDashboard.addProductVersion.title')}\r\n        buttonTriggerClassName=\"add-product-version bx--btn bx--btn--tertiary add-product-version-button\"\r\n        className=\"modal-form\"\r\n        id={modalId}\r\n        handleSubmit={this.handleFormSubmit}\r\n      >\r\n        {modalConfirmation}\r\n        <div className=\"form-container\">\r\n          <Form onSubmit={this.handleFormSubmit}>\r\n            <TextInput\r\n              id={'name' + modalId}\r\n              name=\"name\"\r\n              labelText={i18n.t('adminDashboard.addProductVersion.productVersion')}\r\n              value={this.state.name}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.required')}\r\n              invalid={this.state.invalid['name']}\r\n            />\r\n            <DatePicker dateFormat=\"m/d/Y\" datePickerType=\"single\" onChange={this.handleStartDateChange}>\r\n              <DatePickerInput\r\n                id={'startDate' + modalId}\r\n                name=\"startDate\"\r\n                placeholder=\"mm/dd/yyyy\"\r\n                labelText={i18n.t('adminDashboard.addProductVersion.productVersionStartDate')}\r\n                value={this.state.startDate}\r\n                //onChange={this.handleChanges}\r\n                type=\"text\"\r\n                invalidText={i18n.t('validation.invalid.date')}\r\n                invalid={this.state.invalid['startDate']}\r\n              />\r\n            </DatePicker>\r\n            <DatePicker dateFormat=\"m/d/Y\" datePickerType=\"single\" onChange={this.handleEndDateChange}>\r\n              <DatePickerInput\r\n                id={'endDate' + modalId}\r\n                name=\"endDate\"\r\n                placeholder=\"mm/dd/yyyy\"\r\n                labelText={i18n.t('adminDashboard.addProductVersion.productVersionEndDate')}\r\n                value={this.state.endDate}\r\n                type=\"text\"\r\n                invalidText={i18n.t('validation.invalid.date')}\r\n                invalid={this.state.invalid['endDate']}\r\n              />\r\n            </DatePicker>\r\n          </Form>\r\n        </div>\r\n        {modalConfirmation}\r\n      </ModalWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withKeycloak(AddProductVersionModal);\r\n","import React, { Component } from 'react';\r\nimport i18n from '../../i18n';\r\nimport { ModalWrapper, Form, TextInput, DatePicker, DatePickerInput } from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport { apiProductVersionGet, apiProductVersionPut } from '../../api/productVersion';\r\nimport moment from 'moment';\r\nimport {authenticationChanged, isAuthenticated} from '../../api/helpers';\r\n\r\nclass EditVersionModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      name: '',\r\n      startDate: '',\r\n      endDate: '',\r\n      invalid: {},\r\n      modalId: '',\r\n      buttonId: '',\r\n      submitMsg: '',\r\n      submitColour: 'black',\r\n    };\r\n  }\r\n\r\n  handleValidation() {\r\n    let invalid = {};\r\n    let formIsValid = true;\r\n\r\n    //name\r\n    if (this.state.name === '') {\r\n      formIsValid = false;\r\n      invalid['name'] = true;\r\n    }\r\n\r\n    if (typeof this.state.startDate !== 'undefined') {\r\n      if (!this.state.startDate.match(/^(0[1-9]|1[0-2])\\/(0[1-9]|1\\d|2\\d|3[01])\\/(19|20)\\d{2}$/)) {\r\n        formIsValid = false;\r\n        invalid['startDate'] = true;\r\n      }\r\n    }\r\n\r\n    if (typeof this.state.endDate !== 'undefined') {\r\n      if (!this.state.endDate.match(/^(0[1-9]|1[0-2])\\/(0[1-9]|1\\d|2\\d|3[01])\\/(19|20)\\d{2}$/)) {\r\n        formIsValid = false;\r\n        invalid['endDate'] = true;\r\n      }\r\n    }\r\n\r\n    this.setState({ invalid: invalid });\r\n    return formIsValid;\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (authenticationChanged(this.props, prevProps)) {\r\n      this.getVersionDetails();\r\n    }\r\n  }\r\n\r\n  handleChanges = e => {\r\n    const input = e.target;\r\n    const name = input.name;\r\n    const value = input.value;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleStartDateChange = date => {\r\n    this.setState({\r\n      startDate: moment(date[0].toISOString()).format('MM/DD/YYYY'),\r\n    });\r\n  };\r\n\r\n  handleEndDateChange = date => {\r\n    this.setState({\r\n      endDate: moment(date[0].toISOString()).format('MM/DD/YYYY'),\r\n    });\r\n  };\r\n\r\n  async getVersionDetails() {\r\n    const version = await apiProductVersionGet(this.props.serviceUrl, this.props.version.id);\r\n    this.setState({\r\n      name: version.data.name,\r\n      startDate: moment(version.data.startDate).format('MM/DD/YYYY'),\r\n      endDate: moment(version.data.endDate).format('MM/DD/YYYY'),\r\n      modalId: 'modal-form-version-edit-' + version.data.id,\r\n      buttonId: 'edit-version-button-' + version.data.id,\r\n    });\r\n  }\r\n\r\n  async versionPut(version) {\r\n    return await apiProductVersionPut(this.props.serviceUrl, version);\r\n  }\r\n\r\n  handleFormSubmit = () => {\r\n    const formIsValid = this.handleValidation();\r\n\r\n    if (formIsValid) {\r\n      const version = {\r\n        id: this.props.version.id,\r\n        name: this.state.name,\r\n        startDate: moment(this.state.startDate).format(),\r\n        endDate: moment(this.state.endDate).format(),\r\n      };\r\n      this.versionPut(version)\r\n        .then(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.updated'),\r\n            submitColour: '#24a148',\r\n          });\r\n          this.props.updateProductVersions();\r\n        })\r\n        .catch(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.error'),\r\n            submitColour: '#da1e28',\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (isAuthenticated(this.props)) {\r\n      this.getVersionDetails();\r\n      const modalOpenButton = document.querySelector('.edit-version-button-' + this.props.version.id);\r\n      modalOpenButton.addEventListener('click', this.clearValues, false);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const modalConfirmation = (\r\n      <div className=\"bx--modal-header\">\r\n        <p style={{color: this.state.submitColour}}>{this.state.submitMsg}</p>\r\n      </div>\r\n    );\r\n    const buttonClassName = 'bx--btn bx--btn--ghost edit-version-button-' + this.props.version.id;\r\n    const modalId = this.state.modalId;\r\n    return (\r\n      <ModalWrapper\r\n        buttonTriggerText={i18n.t('buttons.edit')}\r\n        modalHeading={i18n.t('adminDashboard.addProject.editTitle')}\r\n        buttonTriggerClassName={buttonClassName}\r\n        className=\"modal-form\"\r\n        id={this.state.modalId}\r\n        handleSubmit={this.handleFormSubmit}\r\n        primaryButtonText={i18n.t('modalText.save')}\r\n        secondaryButtonText={i18n.t('modalText.cancel')}\r\n      >\r\n        {modalConfirmation}\r\n        <div className=\"form-container\">\r\n          <Form onSubmit={this.handleFormSubmit} id={'form' + modalId}>\r\n            <TextInput\r\n              id={'name' + modalId}\r\n              name=\"name\"\r\n              labelText={i18n.t('adminDashboard.addProject.projectName') + ' *'}\r\n              value={this.state.name}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.required')}\r\n              invalid={this.state.invalid['name']}\r\n            />\r\n            <DatePicker dateFormat=\"m/d/Y\" datePickerType=\"single\" onChange={this.handleStartDateChange}\r\n                        value={this.state.startDate}>\r\n              <DatePickerInput\r\n                id={'startDate' + modalId}\r\n                name=\"startDate\"\r\n                placeholder=\"mm/dd/yyyy\"\r\n                labelText={i18n.t('subscriptionDetails.startDate') + ' *'}\r\n                onChange={this.handleChanges}\r\n                type=\"text\"\r\n                invalidText={i18n.t('validation.invalid.date')}\r\n                invalid={this.state.invalid['startDate']}\r\n              />\r\n            </DatePicker>\r\n            <DatePicker\r\n              dateFormat=\"m/d/Y\"\r\n              datePickerType=\"single\"\r\n              onChange={this.handleEndDateChange}\r\n              id={'endDate' + modalId}\r\n              name=\"endDate\"\r\n              value={this.state.endDate}\r\n            >\r\n              <DatePickerInput\r\n                id={'endDate' + modalId}\r\n                name=\"endDate\"\r\n                placeholder=\"mm/dd/yyyy\"\r\n                labelText={i18n.t('subscriptionDetails.endDate') + ' *'}\r\n                onChange={this.handleChanges}\r\n                type=\"text\"\r\n                invalidText={i18n.t('validation.invalid.date')}\r\n                invalid={this.state.invalid['endDate']}\r\n              />\r\n            </DatePicker>\r\n          </Form>\r\n        </div>\r\n        {modalConfirmation}\r\n      </ModalWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withKeycloak(EditVersionModal);\r\n","import React, { Component } from 'react';\r\nimport i18n from '../../../i18n';\r\nimport {\r\n  DataTable,\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableHeader,\r\n  TableBody,\r\n  TableCell,\r\n  Toggle,\r\n  Button,\r\n} from 'carbon-components-react';\r\nimport { apiProductVersionDelete, apiProductVersionsGet, apiUpdateProductVersionsStatus } from '../../../api/productVersion';\r\nimport withKeycloak from '../../../auth/withKeycloak';\r\nimport AddProductVersionModal from '../AddProductVersionModal';\r\nimport {authenticationChanged, isAuthenticated, isPortalAdminOrSupport} from '../../../api/helpers';\r\nimport EditVersionModal from '../EditVersionModal';\r\n\r\nclass ProductVersion extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      versions: '',\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (isPortalAdminOrSupport()) {\r\n      this.getProductVersions();\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (authenticationChanged(this.props, prevProps)) {\r\n      if (isPortalAdminOrSupport()) {\r\n        this.getProductVersions();\r\n      }\r\n    }\r\n  }\r\n\r\n  async getProductVersions() {\r\n    if (isAuthenticated(this.props)) {\r\n      const productVersions = await apiProductVersionsGet(this.props.serviceUrl);\r\n\r\n      this.setState({\r\n        versions: productVersions.data,\r\n      });\r\n    }\r\n  }\r\n\r\n  async deleteVersion(id) {\r\n    if (isAuthenticated(this.props)) {\r\n      return await apiProductVersionDelete(this.props.serviceUrl, id);\r\n    }\r\n  }\r\n\r\n  handleDeleteVersion = (e, id) => {\r\n    e.preventDefault();\r\n    if (window.confirm('Are you sure you want to delete this Entando version?')) {\r\n      this.deleteVersion(id)\r\n        .then(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.deleted'),\r\n            submitColour: '#24a148',\r\n          });\r\n          this.updateProductVersions();\r\n        })\r\n        .catch(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.error'),\r\n            submitColour: '#da1e28',\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  updateProductVersions = () => {\r\n    this.getProductVersions();\r\n  };\r\n\r\n  async handleToggleChange(id) {\r\n    return await apiUpdateProductVersionsStatus(this.props.serviceUrl, id);\r\n  }\r\n\r\n  render() {\r\n    if (isPortalAdminOrSupport()) {\r\n      return (\r\n        <div>\r\n          <DataTable rows={rowData} headers={headerData}>\r\n            {({rows, headers, getHeaderProps, getTableProps}) => (\r\n              <TableContainer>\r\n                <Table {...getTableProps()}>\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      {headers.map(header => (\r\n                        <TableHeader {...getHeaderProps({header})}>{header.header}</TableHeader>\r\n                      ))}\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {Object.keys(this.state.versions).length !== 0\r\n                      ? this.state.versions.map((productVersion, index) => (\r\n                        <TableRow key={index}>\r\n                          <TableCell>{productVersion.name}</TableCell>\r\n                          <TableCell>\r\n                            <Toggle\r\n                              size=\"sm\"\r\n                              onClick={() => this.handleToggleChange(productVersion.id)}\r\n                              aria-label=\"toggle button\"\r\n                              id={'toggle' + productVersion.id}\r\n                              defaultToggled={productVersion.status}\r\n                            />\r\n                          </TableCell>\r\n                          <TableCell>{productVersion.startDate}</TableCell>\r\n                          <TableCell>{productVersion.endDate}</TableCell>\r\n                          <TableCell>\r\n                            <div style={{display: 'flex'}}>\r\n                              <EditVersionModal\r\n                                key={productVersion.id}\r\n                                version={productVersion}\r\n                                serviceUrl={this.props.serviceUrl}\r\n                                updateProductVersions={this.updateProductVersions}\r\n                              />\r\n                                <Button\r\n                                  kind=\"ghost\"\r\n                                  onClick={e => this.handleDeleteVersion(e, productVersion.id)}\r\n                                  style={{ display: 'flex', width: '100%', color: 'red' }}\r\n                                >\r\n                                  {i18n.t('buttons.delete')}\r\n                                </Button>\r\n                              </div>\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        ))\r\n                      : null}\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            )}\r\n          </DataTable>\r\n          <br />\r\n          <AddProductVersionModal serviceUrl={this.props.serviceUrl} updateProductVersions={this.updateProductVersions} />\r\n        </div>\r\n      );\r\n    } else {\r\n      return <p>{i18n.t('userMessages.unauthorized')}</p>;\r\n    }\r\n  }\r\n}\r\n\r\nconst headerData = [\r\n  {\r\n    header: i18n.t('adminConfig.manageProductVersion.entandoVersion'),\r\n    key: 'entVersion',\r\n  },\r\n  {\r\n    header: i18n.t('adminConfig.manageProductVersion.status'),\r\n    key: 'status',\r\n  },\r\n  {\r\n    header: i18n.t('adminConfig.manageProductVersion.startDate'),\r\n    key: 'startDate',\r\n  },\r\n  {\r\n    header: i18n.t('adminConfig.manageProductVersion.supportEndDate'),\r\n    key: 'endDate',\r\n  },\r\n  {\r\n    header: i18n.t('customerDashboard.action'),\r\n    key: 'action',\r\n  },\r\n];\r\n\r\nconst rowData = [\r\n  {\r\n    id: 'a',\r\n    entVersion: '5.2',\r\n    status: <Toggle size=\"sm\" aria-label=\"toggle button\" defaultToggled id=\"status-1\" />,\r\n    startDate: 'April, 2018',\r\n    endDate: 'April, 2022',\r\n  },\r\n  {\r\n    id: 'b',\r\n    entVersion: '6.3',\r\n    status: <Toggle size=\"sm\" aria-label=\"toggle button\" id=\"status-2\"/>,\r\n    startDate: 'Jile, 2019',\r\n    endDate: 'April, 2023',\r\n  },\r\n  {\r\n    id: 'c',\r\n    entVersion: '6.2',\r\n    status: <Toggle size=\"sm\" aria-label=\"toggle button\" defaultToggled id=\"status-3\"/>,\r\n    startDate: 'September, 2020',\r\n    endDate: 'April, 2024',\r\n  },\r\n];\r\n\r\nexport default withKeycloak(ProductVersion);\r\n","import {Component} from 'react';\r\nimport withKeycloak from \"../../auth/withKeycloak\";\r\nimport {Breadcrumb, BreadcrumbItem} from \"carbon-components-react\";\r\nimport {getActiveSubscription, getPageUrl} from \"../../api/helpers\";\r\nimport {PAGE_CUSTOMER_PORTAL} from \"../../api/constants\";\r\nimport i18n from \"../../i18n\";\r\n\r\nclass Breadcrumbs extends Component {\r\n\r\n  render() {\r\n    const homeUrl = getPageUrl(PAGE_CUSTOMER_PORTAL, this.props.locale);\r\n\r\n    let customer = this.props.customer || {};\r\n    const project = this.props.project;\r\n    if (project) {\r\n      customer = project.customer || {};\r\n    }\r\n    const subscription = this.props.subscription ? this.props.subscription : getActiveSubscription(project);\r\n\r\n    return (\r\n      <Breadcrumb style={{margin: \"1em 0\"}}>\r\n        <BreadcrumbItem href={homeUrl}>{i18n.t('customerDashboard.customerPortal')}</BreadcrumbItem>\r\n        {customer && customer.name && (\r\n          <BreadcrumbItem href={`${homeUrl}#/customer-details/${customer.id}`}>\r\n            {customer.name}\r\n          </BreadcrumbItem>\r\n        )}\r\n        {project && project.name && subscription && subscription.id && (\r\n          <BreadcrumbItem href={`${homeUrl}#/subscription-details/${subscription.id}`}>\r\n            {project.name}\r\n          </BreadcrumbItem>\r\n        )}\r\n      </Breadcrumb>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withKeycloak(Breadcrumbs);\r\n","import React from 'react';\nimport i18n from '../../../i18n';\nimport { Accordion, AccordionItem, Tile } from 'carbon-components-react';\nimport TicketingSystem from './TicketingSystem';\nimport ProductVersion from './ProductVersion';\nimport {authenticationChanged, isAuthenticated, isPortalAdmin} from '../../../api/helpers';\nimport withKeycloak from '../../../auth/withKeycloak';\nimport Breadcrumbs from \"../../Breadcrumbs/Breadcrumbs\";\n\nclass AdminConfiguration extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n    };\n    this.adminConfig = [\n      {\n        label: (\n          <div>\n            <p className=\"title\">{i18n.t('adminConfig.integrationTicketingSystem.title')}</p>\n            <p className=\"desc\">{i18n.t('adminConfig.integrationTicketingSystem.desc')}</p>\n          </div>\n        ),\n        content: <TicketingSystem serviceUrl={this.props.serviceUrl} />,\n      },\n      {\n        label: (\n          <div>\n            <p className=\"title\">{i18n.t('adminConfig.manageProductVersion.title')}</p>\n            <p className=\"desc\">{i18n.t('adminConfig.manageProductVersion.desc')}</p>\n          </div>\n        ),\n        content: <ProductVersion serviceUrl={this.props.serviceUrl} />,\n      },\n    ];\n  }\n\n  componentDidMount() {\n    if (isAuthenticated(this.props)) {\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (authenticationChanged(this.props, prevProps)) {\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n\n  render() {\n    if (!this.state.loading) {\n      // Authorized\n      if (isPortalAdmin()) {\n        return (\n          <div id=\"entando-customer-portal\">\n            <Breadcrumbs locale={this.props.locale}/>\n            <div className=\"form-container\">\n              <Tile>\n                <p className=\"title\">{i18n.t('adminConfig.title')}</p>\n                <p className=\"desc\">{i18n.t('adminConfig.desc')}</p>\n              </Tile>\n              <Accordion>\n                {this.adminConfig.map((item, index) => (\n                  <AccordionItem key={index.toString()} index={index} title={item.label} description={item.description}>\n                    <div>{item.content}</div>\n                  </AccordionItem>\n                ))}\n              </Accordion>\n            </div>\n          </div>\n        );\n      }\n      // Unauthorized\n      else {\n        return <p>{i18n.t('userMessages.unauthorized')}</p>;\n      }\n    }\n    // Loading\n    else {\n      return null;\n    }\n  }\n}\nexport default withKeycloak(AdminConfiguration);\n","export const publishWidgetEvent = (eventId, payload) => {\r\n  const widgetEvent = new CustomEvent(eventId, {\r\n    detail: {\r\n      payload,\r\n    },\r\n  });\r\n  window.dispatchEvent(widgetEvent);\r\n};\r\n\r\nexport const createWidgetEventPublisher = eventType => payload => publishWidgetEvent(eventType, payload);\r\n\r\nexport const subscribeToWidgetEvent = (eventType, eventHandler) => {\r\n  window.addEventListener(eventType, eventHandler);\r\n\r\n  return () => {\r\n    window.removeEventListener(eventType, eventHandler);\r\n  };\r\n};\r\n\r\nexport const subscribeToWidgetEvents = (widgetEvents, eventHandler) => {\r\n  widgetEvents.forEach(eventType => window.addEventListener(eventType, eventHandler));\r\n\r\n  return () => {\r\n    widgetEvents.forEach(eventType => window.removeEventListener(eventType, eventHandler));\r\n  };\r\n};\r\n\r\nexport const widgetEventToFSA = widgetEvent => {\r\n  // for info about Flux Standard Action (FSA) see https://github.com/redux-utilities/flux-standard-action\r\n  const {\r\n    type,\r\n    detail: { payload, error, meta },\r\n  } = widgetEvent;\r\n  return { type, payload, error, meta };\r\n};\r\n","export const INPUT_EVENT_TYPES = {\r\n  formUpdate: 'customer.form.update',\r\n  formCreate: 'customer.form.create',\r\n  formDelete: 'customer.form.delete',\r\n};\r\n\r\nexport const OUTPUT_EVENT_TYPES = {\r\n  select: 'customer.table.select',\r\n  add: 'customer.table.add',\r\n  error: 'customer.table.error',\r\n  delete: 'customer.table.delete',\r\n};\r\n\r\nexport const KEYCLOAK_EVENT_TYPE = 'keycloak';\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport AdminConfiguration from '../components/Admin/Configuration/AdminConfiguration';\nimport '../index.scss';\nimport * as Locale from '../i18n';\n\nimport KeycloakContext from '../auth/KeycloakContext';\n\nimport { subscribeToWidgetEvent } from '../helpers/widgetEvents';\nimport { KEYCLOAK_EVENT_TYPE } from './widgetEventTypes';\n\nconst getKeycloakInstance = () =>\n  (window && window.entando && window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\n    initialized: false,\n  };\n\nconst ATTRIBUTES = {\n  hidden: 'hidden',\n  locale: 'locale',\n  paginationMode: 'pagination-mode',\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\n  serviceUrl: 'service-url',\n};\n\nclass AdminConfigurationElement extends HTMLElement {\n  container;\n\n  mountPoint;\n\n  unsubscribeFromKeycloakEvent;\n\n  keycloak = getKeycloakInstance();\n\n  connectedCallback() {\n    this.mountPoint = document.createElement('div');\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\n\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\n      this.render();\n    });\n\n    this.render();\n\n    //retargetEvents(shadowRoot);\n    this.appendChild(this.mountPoint);\n  }\n\n  render() {\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\n    const locale = this.getAttribute(ATTRIBUTES.locale) || '';\n    Locale.setLocale(locale);\n\n    ReactDOM.render(\n      <KeycloakContext.Provider value={this.keycloak}>\n        <AdminConfiguration serviceUrl={serviceUrl} locale={locale}/>\n      </KeycloakContext.Provider>,\n      this.mountPoint\n    );\n  }\n}\n\ncustomElements.get('cp-admin-configuration') || customElements.define('cp-admin-configuration', AdminConfigurationElement);\n","import { getDefaultOptions, request, getUrl } from './helpers';\r\n\r\nconst resource = 'api/customers';\r\n\r\nexport const apiCustomerDelete = async (serviceUrl, id) => {\r\n  const url = `${serviceUrl}/${resource}/${id}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiCustomersGet = async serviceUrl => {\r\n  const url = getUrl(`${serviceUrl}/${resource}`);\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiCustomerGet = async (serviceUrl, id) => {\r\n  const url = getUrl(`${serviceUrl}/${resource}/${id}`);\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiCustomerPost = async (serviceUrl, customer) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n    body: customer ? JSON.stringify(customer) : null,\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiCustomerPut = async (serviceUrl, customer) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'PUT',\r\n    body: customer ? JSON.stringify(customer) : null,\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiAddProjectToCustomer = async (serviceUrl, customerId, projectId) => {\r\n  const url = `${serviceUrl}/${resource}/${customerId}/projects/${projectId}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiDeleteProjectFromCustomer = async (serviceUrl, customerId, projectId) => {\r\n  const url = `${serviceUrl}/${resource}/${customerId}/projects/${projectId}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE',\r\n  };\r\n  return request(url, options);\r\n};\r\n","import React, { Component } from 'react';\r\nimport i18n from '../../i18n';\r\nimport { ModalWrapper, Form, TextInput, TextArea } from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport {apiCustomerPost} from '../../api/customers';\r\nimport {isAuthenticated} from \"../../api/helpers\";\r\n\r\nclass AddCustomerModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      name: '',\r\n      customerNumber: '',\r\n      contactName: '',\r\n      contactPhone: '',\r\n      contactEmail: '',\r\n      notes: '',\r\n      invalid: {},\r\n      submitMsg: '',\r\n      submitColour: 'black',\r\n    };\r\n\r\n    this.baseState = this.state;\r\n  }\r\n\r\n  handleValidation() {\r\n    let invalid = {};\r\n    let formIsValid = true;\r\n\r\n    if (this.state.name === '') {\r\n      formIsValid = false;\r\n      invalid['name'] = true;\r\n    }\r\n\r\n    if (this.state.customerNumber === '') {\r\n      formIsValid = false;\r\n      invalid['customerNumber'] = true;\r\n    }\r\n\r\n    if (typeof this.state.contactEmail !== 'undefined') {\r\n      let lastAtPos = this.state.contactEmail.lastIndexOf('@');\r\n      let lastDotPos = this.state.contactEmail.lastIndexOf('.');\r\n\r\n      if (\r\n        !(\r\n          lastAtPos < lastDotPos &&\r\n          lastAtPos > 0 &&\r\n          this.state.contactEmail.indexOf('@@') === -1 &&\r\n          lastDotPos > 2 &&\r\n          this.state.contactEmail.length - lastDotPos > 2\r\n        )\r\n      ) {\r\n        formIsValid = false;\r\n        invalid['contactEmail'] = true;\r\n      }\r\n    }\r\n\r\n    this.setState({ invalid: invalid });\r\n    return formIsValid;\r\n  }\r\n\r\n  handleChanges = e => {\r\n    const input = e.target;\r\n    const name = input.name;\r\n    const value = input.value;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  async customerPost(customer) {\r\n    if (isAuthenticated(this.props)) {\r\n      return await apiCustomerPost(this.props.serviceUrl, customer);\r\n    }\r\n  }\r\n\r\n  handleFormSubmit = () => {\r\n    const formIsValid = this.handleValidation();\r\n\r\n    if (formIsValid) {\r\n      const customer = {\r\n        name: this.state.name,\r\n        customerNumber: this.state.customerNumber,\r\n        contactName: this.state.contactName,\r\n        contactPhone: this.state.contactPhone,\r\n        contactEmail: this.state.contactEmail,\r\n        notes: this.state.notes,\r\n      };\r\n\r\n      this.customerPost(customer)\r\n        .then(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.added'),\r\n            submitColour: '#24a148',\r\n          });\r\n          this.props.updateCustomerList();\r\n        })\r\n        .catch(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.error'),\r\n            submitColour: '#da1e28',\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  clearValues = () => {\r\n    const customerModalElement = document.querySelector('#modal-form-customer');\r\n    if (!customerModalElement.className.includes('is-visible')) {\r\n      this.setState(this.baseState);\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    const modalOpenButton = document.querySelector('.add-customer-button');\r\n    modalOpenButton.addEventListener('click', this.clearValues, false);\r\n  }\r\n\r\n  render() {\r\n    const modalConfirmation = (\r\n      <div className=\"bx--modal-header\">\r\n        <p style={{color: this.state.submitColour}}>{this.state.submitMsg}</p>\r\n      </div>\r\n    );\r\n    const modalId = 'modal-form-customer';\r\n    return (\r\n      <ModalWrapper\r\n        buttonTriggerText={i18n.t('buttons.addCustomer')}\r\n        modalHeading={i18n.t('adminDashboard.addCustomer.title')}\r\n        buttonTriggerClassName=\"add-customer bx--btn bx--btn--tertiary add-customer-button\"\r\n        className=\"modal-form\"\r\n        id={modalId}\r\n        handleSubmit={this.handleFormSubmit}\r\n        primaryButtonText={i18n.t('modalText.save')}\r\n        secondaryButtonText={i18n.t('modalText.cancel')}\r\n      >\r\n        {modalConfirmation}\r\n        <div className=\"form-container\">\r\n          <Form onSubmit={this.handleFormSubmit}>\r\n            <TextInput\r\n              id={'name' + modalId}\r\n              name=\"name\"\r\n              labelText={i18n.t('adminDashboard.addCustomer.customerName') + ' *'}\r\n              value={this.state.name}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.required')}\r\n              invalid={this.state.invalid['name']}\r\n            />\r\n            <TextInput\r\n              id={'customerNumber' + modalId}\r\n              name=\"customerNumber\"\r\n              labelText={i18n.t('adminDashboard.addCustomer.customerNumber') + ' *'}\r\n              value={this.state.customerNumber}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.required')}\r\n              invalid={this.state.invalid['customerNumber']}\r\n            />\r\n            <TextInput\r\n              id={'contactName' + modalId}\r\n              name=\"contactName\"\r\n              labelText={i18n.t('adminDashboard.addCustomer.contactName')}\r\n              value={this.state.contactName}\r\n              onChange={this.handleChanges}\r\n            />\r\n            <TextInput\r\n              id={'contactPhone' + modalId}\r\n              name=\"contactPhone\"\r\n              labelText={i18n.t('adminDashboard.addCustomer.contactPhone')}\r\n              value={this.state.contactPhone}\r\n              onChange={this.handleChanges}\r\n            />\r\n            <TextInput\r\n              id={'contactEmail' + modalId}\r\n              name=\"contactEmail\"\r\n              labelText={i18n.t('adminDashboard.addCustomer.contactEmail') + ' *'}\r\n              value={this.state.contactEmail}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.email')}\r\n              invalid={this.state.invalid['contactEmail']}\r\n            />\r\n            <TextArea\r\n              id={'notes' + modalId}\r\n              name=\"notes\"\r\n              labelText={i18n.t('adminDashboard.addCustomer.notes')}\r\n              value={this.state.notes}\r\n              onChange={this.handleChanges}\r\n            />\r\n          </Form>\r\n        </div>\r\n        {modalConfirmation}\r\n      </ModalWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withKeycloak(AddCustomerModal);\r\n","import { getDefaultOptions, request, getUrl } from './helpers';\r\n\r\nconst resource = 'api/partners';\r\n\r\nexport const apiPartnerDelete = async (serviceUrl, id) => {\r\n  const url = `${serviceUrl}/${resource}/${id}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiPartnersGet = async serviceUrl => {\r\n  const url = getUrl(`${serviceUrl}/${resource}`);\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiPartnerPost = async (serviceUrl, partner) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n    body: partner ? JSON.stringify(partner) : null,\r\n  };\r\n  return request(url, options);\r\n};\r\n","import { getDefaultOptions, request, getUrl } from './helpers';\r\n\r\nconst resource = 'api/projects';\r\n\r\nexport const apiProjectsDelete = async (serviceUrl, id) => {\r\n  const url = `${serviceUrl}/${resource}/${id}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiProjectsGet = async serviceUrl => {\r\n  const url = getUrl(`${serviceUrl}/${resource}`);\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiProjectGet = async (serviceUrl, id) => {\r\n  const url = getUrl(`${serviceUrl}/${resource}/${id}`);\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiProjectPost = async (serviceUrl, project) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n    body: project ? JSON.stringify(project) : null,\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiProjectPut = async (serviceUrl, project) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'PUT',\r\n    body: project ? JSON.stringify(project) : null,\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiAddTicketToProject = async (serviceUrl, projectId, ticketId) => {\r\n  const url = `${serviceUrl}/${resource}/${projectId}/tickets/${ticketId}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiAddSubscriptionToProject = async (serviceUrl, projectId, subscriptionId) => {\r\n  const url = `${serviceUrl}/${resource}/${projectId}/subscriptions/${subscriptionId}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiAddUserToProject = async (serviceUrl, projectId, userId) => {\r\n  const url = `${serviceUrl}/${resource}/${projectId}/users/${userId}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiDeletePartnerFromProject = async (serviceUrl, projectId, partnerId) => {\r\n  const url = `${serviceUrl}/${resource}/${projectId}/partners/${partnerId}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiDeleteSubscriptionFromProject = async (serviceUrl, projectId, subscriptionId) => {\r\n  const url = `${serviceUrl}/${resource}/${projectId}/subscriptions/${subscriptionId}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiDeleteUserFromProject = async (serviceUrl, projectId, userId) => {\r\n  const url = `${serviceUrl}/${resource}/${projectId}/users/${userId}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiAddPartnerToProject = async (serviceUrl, projectId, partnerId) => {\r\n  const url = `${serviceUrl}/${resource}/${projectId}/partners/${partnerId}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiGetProjectUsers = async (serviceUrl, projectId) => {\r\n  const url = `${serviceUrl}/${resource}/${projectId}/users/`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiGetProjectSubscriptions = async (serviceUrl, projectId) => {\r\n  const url = `${serviceUrl}/${resource}/${projectId}/subscriptions/`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n  return request(url, options);\r\n};\r\n","export const AuthenticatedView = ({ children, keycloak }) => {\r\n  const authenticated = keycloak && keycloak.initialized && keycloak.authenticated;\r\n  return authenticated ? children : null;\r\n};\r\n\r\nexport const UnauthenticatedView = ({ children, keycloak }) => {\r\n  const authenticated = keycloak && keycloak.initialized && keycloak.authenticated;\r\n  return !authenticated ? children : null;\r\n};\r\n","import React, {Component} from 'react';\r\nimport i18n from '../../i18n';\r\nimport {ModalWrapper, Form, TextInput, Select, SelectItem, TextArea} from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport {apiPartnerPost} from '../../api/partners';\r\nimport {apiProjectsGet, apiAddPartnerToProject} from '../../api/projects';\r\nimport {authenticationChanged, isAuthenticated} from '../../api/helpers';\r\nimport {AuthenticatedView} from '../../auth/KeycloakViews';\r\n\r\nclass AddPartnerModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      projectList: {},\r\n      projectId: '',\r\n      name: '',\r\n      partnerNumber: '',\r\n      notes: '',\r\n      invalid: {},\r\n      submitMsg: '',\r\n      submitColour: 'black',\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (isAuthenticated(this.props)) {\r\n      this.fetchData();\r\n\r\n      const modalOpenButton = document.querySelector('.add-partner-button');\r\n      modalOpenButton.addEventListener('click', this.clearValues, false);\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (authenticationChanged(this.props, prevProps)) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n\r\n  handleValidation() {\r\n    let invalid = {};\r\n    let formIsValid = true;\r\n\r\n    //project\r\n    if (this.state.projectId === '' || this.state.projectId === 'project-list') {\r\n      formIsValid = false;\r\n      invalid['projectId'] = true;\r\n    }\r\n\r\n    if (this.state.name === '') {\r\n      formIsValid = false;\r\n      invalid['name'] = true;\r\n    }\r\n\r\n    if (this.state.partnerNumber === '') {\r\n      formIsValid = false;\r\n      invalid['partnerNumber'] = true;\r\n    }\r\n\r\n    this.setState({ invalid: invalid });\r\n    return formIsValid;\r\n  }\r\n\r\n  handleChanges = e => {\r\n    const input = e.target;\r\n    const name = input.name;\r\n    const value = input.value;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  async fetchData() {\r\n    if (isAuthenticated(this.props)) {\r\n      let projects = {};\r\n      try {\r\n        projects = (await apiProjectsGet(this.props.serviceUrl)).data;\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n      this.setState({\r\n        projectList: projects ? projects : {},\r\n      });\r\n    }\r\n  }\r\n\r\n  async partnerPost(partner) {\r\n    if (isAuthenticated(this.props)) {\r\n      const result = await apiPartnerPost(this.props.serviceUrl, partner);\r\n      return await apiAddPartnerToProject(this.props.serviceUrl, this.state.projectId, result.data.id);\r\n    }\r\n  }\r\n\r\n  handleFormSubmit = () => {\r\n    const formIsValid = this.handleValidation();\r\n\r\n    if (formIsValid) {\r\n      const partner = {\r\n        name: this.state.name,\r\n        partnerNumber: this.state.partnerNumber,\r\n        notes: this.state.notes,\r\n      };\r\n      this.partnerPost(partner)\r\n        .then(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.added'),\r\n            submitColour: '#24a148',\r\n          });\r\n          this.props.updateCustomerList();\r\n        })\r\n        .catch(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.error'),\r\n            submitColour: '#da1e28',\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  clearValues = () => {\r\n    const partnerModalElement = document.querySelector('#modal-form-partner');\r\n    if (!partnerModalElement.className.includes('is-visible')) {\r\n      this.setState({\r\n        projectId: '',\r\n        name: '',\r\n        partnerNumber: '',\r\n        notes: '',\r\n        invalid: {},\r\n        submitMsg: '',\r\n        submitColour: 'black',\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const modalConfirmation = (\r\n      <div className=\"bx--modal-header\">\r\n        <p style={{color: this.state.submitColour}}>{this.state.submitMsg}</p>\r\n      </div>\r\n    );\r\n    const {keycloak} = this.props;\r\n    const modalId = 'modal-form-partner';\r\n    return (\r\n      <AuthenticatedView keycloak={keycloak}>\r\n        <ModalWrapper\r\n          buttonTriggerText={i18n.t('buttons.addPartner')}\r\n          modalHeading={i18n.t('adminDashboard.addPartner.title')}\r\n          buttonTriggerClassName=\"add-partner bx--btn bx--btn--tertiary add-partner-button\"\r\n          className=\"modal-form\"\r\n          id={modalId}\r\n          handleSubmit={this.handleFormSubmit}\r\n          primaryButtonText={i18n.t('modalText.save')}\r\n          secondaryButtonText={i18n.t('modalText.cancel')}\r\n        >\r\n          {modalConfirmation}\r\n          <div className=\"form-container\">\r\n            <Form onSubmit={this.handleFormSubmit}>\r\n              <Select\r\n                id={'projectId' + modalId}\r\n                name=\"projectId\"\r\n                labelText={i18n.t('adminDashboard.addPartner.projectList') + ' *'}\r\n                value={this.state.projectId}\r\n                onChange={this.handleChanges}\r\n                invalidText={i18n.t('validation.invalid.required')}\r\n                invalid={this.state.invalid['projectId']}\r\n              >\r\n                <SelectItem text={i18n.t('adminDashboard.addPartner.selectProject')} value=\"project-list\"/>\r\n                {Object.keys(this.state.projectList).length !== 0\r\n                  ? this.state.projectList.map((project, i) => (\r\n                    <SelectItem key={i} text={project.name} value={project.id}>\r\n                      {project.name}\r\n                    </SelectItem>\r\n                  ))\r\n                  : null}\r\n              </Select>\r\n\r\n              <TextInput\r\n                id={'name' + modalId}\r\n                name=\"name\"\r\n                labelText={i18n.t('adminDashboard.addPartner.partnerName') + ' *'}\r\n                value={this.state.name}\r\n                onChange={this.handleChanges}\r\n                invalidText={i18n.t('validation.invalid.required')}\r\n                invalid={this.state.invalid['name']}\r\n              />\r\n              <TextInput\r\n                id={'partnerNumber' + modalId}\r\n                name=\"partnerNumber\"\r\n                labelText={i18n.t('adminDashboard.addPartner.partnerNumber') + ' *'}\r\n                value={this.state.partnerNumber}\r\n                onChange={this.handleChanges}\r\n                invalidText={i18n.t('validation.invalid.required')}\r\n                invalid={this.state.invalid['partnerNumber']}\r\n              />\r\n              <TextArea\r\n                name=\"notes\"\r\n                labelText={i18n.t('adminDashboard.addPartner.notes')}\r\n                value={this.state.notes}\r\n                onChange={this.handleChanges}\r\n              />\r\n            </Form>\r\n          </div>\r\n          {modalConfirmation}\r\n        </ModalWrapper>\r\n      </AuthenticatedView>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withKeycloak(AddPartnerModal);\r\n","import React, { Component } from 'react';\r\nimport i18n from '../../i18n';\r\nimport { ModalWrapper, Form, TextInput, Select, SelectItem, TextArea } from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport { apiCustomersGet, apiAddProjectToCustomer } from '../../api/customers';\r\nimport {apiProjectPost, apiProjectsGet} from '../../api/projects';\r\nimport {authenticationChanged, isAuthenticated} from \"../../api/helpers\";\r\n\r\nclass AddProjectModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      projects: {},\r\n      customerList: {},\r\n      customerId: '',\r\n      name: '',\r\n      description: '',\r\n      systemId: '',\r\n      contactName: '',\r\n      contactPhone: '',\r\n      contactEmail: '',\r\n      notes: '',\r\n      invalid: {},\r\n      submitMsg: '',\r\n      submitColour: 'black',\r\n    };\r\n  }\r\n\r\n  handleValidation() {\r\n    let invalid = {};\r\n    let formIsValid = true;\r\n\r\n    //customer\r\n    if (this.state.customerId === '' || this.state.customerId === 'customer-list') {\r\n      formIsValid = false;\r\n      invalid['customerId'] = true;\r\n    }\r\n\r\n    //name\r\n    if (this.state.name === '') {\r\n      formIsValid = false;\r\n      invalid['name'] = true;\r\n    }\r\n\r\n    //description\r\n    if (this.state.description === '') {\r\n      formIsValid = false;\r\n      invalid['description'] = true;\r\n    }\r\n\r\n    //contactEmail\r\n    if (typeof this.state.contactEmail !== 'undefined') {\r\n      let lastAtPos = this.state.contactEmail.lastIndexOf('@');\r\n      let lastDotPos = this.state.contactEmail.lastIndexOf('.');\r\n\r\n      if (\r\n        !(\r\n          lastAtPos < lastDotPos &&\r\n          lastAtPos > 0 &&\r\n          this.state.contactEmail.indexOf('@@') === -1 &&\r\n          lastDotPos > 2 &&\r\n          this.state.contactEmail.length - lastDotPos > 2\r\n        )\r\n      ) {\r\n        formIsValid = false;\r\n        invalid['contactEmail'] = true;\r\n      }\r\n    }\r\n\r\n    this.setState({ invalid: invalid });\r\n    return formIsValid;\r\n  }\r\n\r\n  async getAllProjects() {\r\n    let projects = {}\r\n    try {\r\n      projects = await apiProjectsGet(this.props.serviceUrl);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n    this.setState({\r\n      projects: projects.data ? projects.data : {},\r\n    });\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (authenticationChanged(this.props, prevProps)) {\r\n      this.getCustomers();\r\n      this.getAllProjects();\r\n    }\r\n  }\r\n\r\n  handleChanges = e => {\r\n    const input = e.target;\r\n    const name = input.name;\r\n    const value = input.value;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  async getCustomers() {\r\n    if (isAuthenticated(this.props)) {\r\n      let customers = {};\r\n      try {\r\n        customers = await apiCustomersGet(this.props.serviceUrl);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n      this.setState({customerList: customers});\r\n    }\r\n  }\r\n\r\n  async projectPost(project) {\r\n    if (isAuthenticated(this.props)) {\r\n      const result = await apiProjectPost(this.props.serviceUrl, project);\r\n      return await apiAddProjectToCustomer(this.props.serviceUrl, this.state.customerId, result.data.id);\r\n    }\r\n  }\r\n\r\n  handleFormSubmit = () => {\r\n    const formIsValid = this.handleValidation();\r\n\r\n    if (formIsValid) {\r\n      const project = {\r\n        name: this.state.name,\r\n        description: this.state.description,\r\n        systemId: this.state.systemId,\r\n        contactName: this.state.contactName,\r\n        contactPhone: this.state.contactPhone,\r\n        contactEmail: this.state.contactEmail,\r\n        notes: this.state.notes,\r\n      };\r\n      for (var i = 0; i < this.state.projects.length; i++) {\r\n        if (project.systemId === this.state.projects[i].systemId && project.systemId.trim() !== '') {\r\n          window.alert('That system id is already in use in another project');\r\n          return;\r\n        }\r\n      }\r\n      this.projectPost(project)\r\n        .then(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.added'),\r\n            submitColour: '#24a148',\r\n          });\r\n          this.props.updateCustomerList();\r\n          this.getAllProjects();\r\n        })\r\n        .catch(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.error'),\r\n            submitColour: '#da1e28',\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  clearValues = () => {\r\n    const projectModalElement = document.querySelector('#modal-form-project');\r\n    if (!projectModalElement.className.includes('is-visible')) {\r\n      this.setState({\r\n        customerId: '',\r\n        name: '',\r\n        description: '',\r\n        systemId: '',\r\n        contactName: '',\r\n        contactPhone: '',\r\n        contactEmail: '',\r\n        notes: '',\r\n        invalid: {},\r\n      });\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getCustomers();\r\n    this.getAllProjects();\r\n\r\n    const modalOpenButton = document.querySelector('.add-project-button');\r\n    modalOpenButton.addEventListener('click', this.clearValues, false);\r\n  }\r\n\r\n  render() {\r\n    const modalConfirmation = (\r\n      <div className=\"bx--modal-header\">\r\n        <p style={{color: this.state.submitColour}}>{this.state.submitMsg}</p>\r\n      </div>\r\n    );\r\n    const modalId = 'modal-form-project';\r\n    return (\r\n      <ModalWrapper\r\n        buttonTriggerText={i18n.t('buttons.addProject')}\r\n        modalHeading={i18n.t('adminDashboard.addProject.title')}\r\n        buttonTriggerClassName=\"add-project bx--btn bx--btn--tertiary add-project-button\"\r\n        className=\"modal-form\"\r\n        id={modalId}\r\n        handleSubmit={this.handleFormSubmit}\r\n        primaryButtonText={i18n.t('modalText.save')}\r\n        secondaryButtonText={i18n.t('modalText.cancel')}\r\n      >\r\n        {modalConfirmation}\r\n        <div className=\"form-container\">\r\n          <Form onSubmit={this.handleFormSubmit}>\r\n            <Select\r\n              id={'customerId' + modalId}\r\n              name=\"customerId\"\r\n              labelText={i18n.t('adminDashboard.addProject.customerList') + ' *'}\r\n              value={this.state.customerId}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.required')}\r\n              invalid={this.state.invalid['customerId']}\r\n            >\r\n              <SelectItem text={i18n.t('adminDashboard.addProject.selectCustomer')} value=\"customer-list\" />\r\n              {Object.keys(this.props.allCustomers).length !== 0\r\n                ? this.props.allCustomers.map((customerList, i) => (\r\n                    <SelectItem key={i} text={customerList.name} value={customerList.id}>\r\n                      {customerList.name}\r\n                    </SelectItem>\r\n                  ))\r\n                : null}\r\n            </Select>\r\n\r\n            <TextInput\r\n              id={'name' + modalId}\r\n              name=\"name\"\r\n              labelText={i18n.t('adminDashboard.addProject.projectName') + ' *'}\r\n              value={this.state.name}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.required')}\r\n              invalid={this.state.invalid['name']}\r\n            />\r\n            <TextInput\r\n              id={'description' + modalId}\r\n              name=\"description\"\r\n              labelText={i18n.t('adminDashboard.addProject.projectDesc') + ' *'}\r\n              value={this.state.description}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.required')}\r\n              invalid={this.state.invalid['description']}\r\n            />\r\n            <TextInput\r\n              id={'systemId' + modalId}\r\n              name=\"systemId\"\r\n              labelText={i18n.t('adminDashboard.addProject.systemId')}\r\n              value={this.state.systemId}\r\n              onChange={this.handleChanges}\r\n            />\r\n            <TextInput\r\n              id={'contactName' + modalId}\r\n              name=\"contactName\"\r\n              labelText={i18n.t('adminDashboard.addProject.contactName')}\r\n              value={this.state.contactName}\r\n              onChange={this.handleChanges}\r\n            />\r\n            <TextInput\r\n              id={'contactPhone' + modalId}\r\n              name=\"contactPhone\"\r\n              labelText={i18n.t('adminDashboard.addProject.contactPhone')}\r\n              value={this.state.contactPhone}\r\n              onChange={this.handleChanges}\r\n            />\r\n            <TextInput\r\n              id={'contactEmail' + modalId}\r\n              name=\"contactEmail\"\r\n              labelText={i18n.t('adminDashboard.addProject.contactEmail') + ' *'}\r\n              value={this.state.contactEmail}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.email')}\r\n              invalid={this.state.invalid['contactEmail']}\r\n            />\r\n            <TextArea\r\n              id={'notes' + modalId}\r\n              name=\"notes\"\r\n              labelText={i18n.t('adminDashboard.addProject.notes')}\r\n              value={this.state.notes}\r\n              onChange={this.handleChanges}\r\n            />\r\n          </Form>\r\n        </div>\r\n        {modalConfirmation}\r\n      </ModalWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withKeycloak(AddProjectModal);\r\n","import React, { Component } from 'react';\r\nimport i18n from '../../i18n';\r\nimport { ModalWrapper, Form, TextInput, TextArea } from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport { apiCustomersGet } from '../../api/customers';\r\nimport {apiProjectGet, apiProjectPut, apiProjectsGet} from '../../api/projects';\r\nimport {authenticationChanged, isAuthenticated} from \"../../api/helpers\";\r\n\r\nclass EditProjectModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      projects: {},\r\n      customerList: {},\r\n      customerId: '',\r\n      name: '',\r\n      description: '',\r\n      systemId: '',\r\n      contactName: '',\r\n      contactPhone: '',\r\n      contactEmail: '',\r\n      notes: '',\r\n      invalid: {},\r\n      modalId: '',\r\n      buttonId: '',\r\n      submitMsg: '',\r\n      submitColour: 'black',\r\n    };\r\n  }\r\n\r\n  handleValidation() {\r\n    let invalid = {};\r\n    let formIsValid = true;\r\n\r\n    //name\r\n    if (this.state.name === '') {\r\n      formIsValid = false;\r\n      invalid['name'] = true;\r\n    }\r\n\r\n    //description\r\n    if (this.state.description === '') {\r\n      formIsValid = false;\r\n      invalid['description'] = true;\r\n    }\r\n\r\n    //contactEmail\r\n    if (typeof this.state.contactEmail !== 'undefined') {\r\n      let lastAtPos = this.state.contactEmail.lastIndexOf('@');\r\n      let lastDotPos = this.state.contactEmail.lastIndexOf('.');\r\n\r\n      if (\r\n        !(\r\n          lastAtPos < lastDotPos &&\r\n          lastAtPos > 0 &&\r\n          this.state.contactEmail.indexOf('@@') === -1 &&\r\n          lastDotPos > 2 &&\r\n          this.state.contactEmail.length - lastDotPos > 2\r\n        )\r\n      ) {\r\n        formIsValid = false;\r\n        invalid['contactEmail'] = true;\r\n      }\r\n    }\r\n\r\n    this.setState({ invalid: invalid });\r\n    return formIsValid;\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (authenticationChanged(this.props, prevProps)) {\r\n      this.getCustomers();\r\n      this.getAllProjects();\r\n      this.getProjectDetails();\r\n    }\r\n  }\r\n\r\n  handleChanges = e => {\r\n    const input = e.target;\r\n    const name = input.name;\r\n    const value = input.value;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  async getCustomers() {\r\n    if (isAuthenticated(this.props)) {\r\n      const customers = await apiCustomersGet(this.props.serviceUrl);\r\n      this.setState({customerList: customers});\r\n    }\r\n  }\r\n\r\n  async getProjectDetails() {\r\n    if (isAuthenticated(this.props)) {\r\n      const project = await apiProjectGet(this.props.serviceUrl, this.props.project.id);\r\n      this.setState({\r\n        name: project.data.name,\r\n        description: project.data.description,\r\n        systemId: project.data.systemId,\r\n        contactName: project.data.contactName,\r\n        contactPhone: project.data.contactPhone,\r\n        contactEmail: project.data.contactEmail,\r\n        notes: project.data.notes,\r\n        modalId: 'modal-form-project-edit-' + project.data.id,\r\n        buttonId: 'edit-project-button-' + project.data.id,\r\n      });\r\n    }\r\n  }\r\n\r\n  async getAllProjects() {\r\n    const projects = await apiProjectsGet(this.props.serviceUrl);\r\n    this.setState({\r\n      projects: projects.data,\r\n    });\r\n  }\r\n\r\n  async projectPut(project) {\r\n    if (isAuthenticated(this.props)) {\r\n      return await apiProjectPut(this.props.serviceUrl, project);\r\n    }\r\n  }\r\n\r\n  handleFormSubmit = () => {\r\n    const formIsValid = this.handleValidation();\r\n\r\n    if (formIsValid) {\r\n      const project = {\r\n        id: this.props.project.id,\r\n        customer: this.props.project.customer,\r\n        name: this.state.name,\r\n        description: this.state.description,\r\n        systemId: this.state.systemId,\r\n        contactName: this.state.contactName,\r\n        contactPhone: this.state.contactPhone,\r\n        contactEmail: this.state.contactEmail,\r\n        notes: this.state.notes,\r\n      };\r\n      for (var i = 0; i < this.props.allProjects.length; i++) {\r\n        if (\r\n          project.systemId === this.props.allProjects[i].systemId &&\r\n          project.id !== this.props.allProjects[i].id &&\r\n          project.systemId.trim() !== ''\r\n        ) {\r\n          window.alert('That system id is already in use in another project');\r\n          return;\r\n        }\r\n      }\r\n      this.projectPut(project)\r\n        .then(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.updated'),\r\n            submitColour: '#24a148',\r\n          });\r\n          this.props.updateProjectList();\r\n        })\r\n        .catch(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.error'),\r\n            submitColour: '#da1e28',\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  clearValues = () => {\r\n    const customerModalElement = document.querySelector('#' + this.state.modalId);\r\n    if (!customerModalElement.className.includes('is-visible')) {\r\n      this.setState({\r\n        name: this.props.project.name,\r\n        description: this.props.project.description,\r\n        systemId: this.props.project.systemId,\r\n        contactName: this.props.project.contactName,\r\n        contactPhone: this.props.project.contactPhone,\r\n        contactEmail: this.props.project.contactEmail,\r\n        notes: this.props.project.notes,\r\n        invalid: {},\r\n      });\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (isAuthenticated(this.props)) {\r\n      this.getCustomers();\r\n      this.getAllProjects();\r\n      this.getProjectDetails();\r\n\r\n      const modalOpenButton = document.querySelector('.edit-project-button-' + this.props.project.id);\r\n      modalOpenButton.addEventListener('click', this.clearValues, false);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const modalConfirmation = (\r\n      <div className=\"bx--modal-header\">\r\n        <p style={{color: this.state.submitColour}}>{this.state.submitMsg}</p>\r\n      </div>\r\n    );\r\n    const buttonClassName = 'dropdown-button-button bx--btn bx--btn--ghost edit-project-button-' + this.props.project.id;\r\n    const modalId = this.state.modalId;\r\n    return (\r\n      <ModalWrapper\r\n        buttonTriggerText={i18n.t('buttons.edit')}\r\n        modalHeading={i18n.t('adminDashboard.addProject.editTitle')}\r\n        buttonTriggerClassName={buttonClassName}\r\n        className=\"modal-form\"\r\n        id={this.state.modalId}\r\n        handleSubmit={this.handleFormSubmit}\r\n        primaryButtonText={i18n.t('modalText.save')}\r\n        secondaryButtonText={i18n.t('modalText.cancel')}\r\n      >\r\n        {modalConfirmation}\r\n        <div className=\"form-container\">\r\n          <Form onSubmit={this.handleFormSubmit}>\r\n            <TextInput\r\n              id={'name' + modalId}\r\n              name=\"name\"\r\n              labelText={i18n.t('adminDashboard.addProject.projectName') + ' *'}\r\n              value={this.state.name}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.required')}\r\n              invalid={this.state.invalid['name']}\r\n            />\r\n            <TextInput\r\n              id={'description' + modalId}\r\n              name=\"description\"\r\n              labelText={i18n.t('adminDashboard.addProject.projectDesc') + ' *'}\r\n              value={this.state.description}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.required')}\r\n              invalid={this.state.invalid['description']}\r\n            />\r\n            <TextInput\r\n              id={'systemId' + modalId}\r\n              name=\"systemId\"\r\n              labelText={i18n.t('adminDashboard.addProject.systemId')}\r\n              value={this.state.systemId}\r\n              onChange={this.handleChanges}\r\n            />\r\n            <TextInput\r\n              id={'contactName' + modalId}\r\n              name=\"contactName\"\r\n              labelText={i18n.t('adminDashboard.addProject.contactName')}\r\n              value={this.state.contactName}\r\n              onChange={this.handleChanges}\r\n            />\r\n            <TextInput\r\n              id={'contactPhone' + modalId}\r\n              name=\"contactPhone\"\r\n              labelText={i18n.t('adminDashboard.addProject.contactPhone')}\r\n              value={this.state.contactPhone}\r\n              onChange={this.handleChanges}\r\n            />\r\n            <TextInput\r\n              id={'contactEmail' + modalId}\r\n              name=\"contactEmail\"\r\n              labelText={i18n.t('adminDashboard.addProject.contactEmail') + ' *'}\r\n              value={this.state.contactEmail}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.email')}\r\n              invalid={this.state.invalid['contactEmail']}\r\n            />\r\n            <TextArea\r\n              name=\"notes\"\r\n              labelText={i18n.t('adminDashboard.addProject.notes')}\r\n              value={this.state.notes}\r\n              onChange={this.handleChanges}\r\n            />\r\n          </Form>\r\n        </div>\r\n        {modalConfirmation}\r\n      </ModalWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withKeycloak(EditProjectModal);\r\n","import React, {Component} from 'react';\r\nimport i18n from '../../i18n';\r\nimport {\r\n  Button,\r\n  DataTable,\r\n  ModalWrapper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableHeader,\r\n  TableRow,\r\n} from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport {isPortalAdminOrSupport} from '../../api/helpers';\r\nimport {apiDeletePartnerFromProject} from '../../api/projects';\r\n\r\nclass ManagePartnersModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      projectId: this.props.project.id,\r\n      project: this.props.project,\r\n    };\r\n\r\n    this.headerData = [\r\n      {\r\n        header: i18n.t('adminDashboard.addPartner.partnerName'),\r\n        key: 'partner',\r\n      },\r\n      {\r\n        header: i18n.t('adminDashboard.addPartner.partnerNumber'),\r\n        key: 'partnerNumber',\r\n      },\r\n      {\r\n        header: i18n.t('adminDashboard.addPartner.notes'),\r\n        key: 'notes',\r\n      },\r\n      {\r\n        header: i18n.t('customerDashboard.action'),\r\n        key: 'action',\r\n      },\r\n    ];\r\n  }\r\n\r\n  async removePartner(projectId, partnerId) {\r\n    if (isPortalAdminOrSupport()) {\r\n      return await apiDeletePartnerFromProject(this.props.serviceUrl, projectId, partnerId);\r\n    }\r\n  }\r\n\r\n  handleRemovePartner = (e, projectId, partnerId) => {\r\n    e.preventDefault();\r\n    if (window.confirm('Are you sure you want to remove this partner from the project?')) {\r\n      this.removePartner(projectId, partnerId)\r\n        .then(result => {\r\n          this.setState({\r\n            project: result.data,\r\n            submitMsg: i18n.t('submitMessages.deleted'),\r\n            submitColour: '#24a148',\r\n          });\r\n          this.props.updateProjectList();\r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.error'),\r\n            submitColour: '#da1e28',\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const modalConfirmation = (\r\n      <div className=\"bx--modal-header\">\r\n        <p style={{color: this.state.submitColour}}>{this.state.submitMsg}</p>\r\n      </div>\r\n    );\r\n    const modalId = 'modal-form-manage-partners';\r\n    return (\r\n      <ModalWrapper\r\n        buttonTriggerText={i18n.t('buttons.managePartners')}\r\n        modalHeading={i18n.t('adminDashboard.managePartners.title')}\r\n        buttonTriggerClassName=\"add-partner bx--btn bx--btn--tertiary add-partner-button\"\r\n        className=\"modal-form\"\r\n        id={modalId}\r\n        hasForm={false}\r\n        primaryButtonText={i18n.t('modalText.done')}\r\n        secondaryButtonText={null}\r\n      >\r\n        {modalConfirmation}\r\n        <div>\r\n          <DataTable rows={rowData} headers={this.headerData}>\r\n            {({rows, headers, getHeaderProps, getTableProps}) => (\r\n              <TableContainer description={i18n.t('customerDashboard.tableDesc')}>\r\n                <Table {...getTableProps()}>\r\n                  <TableHead>\r\n                    <TableRow key=\"headerRow\">\r\n                      {headers.map(header => {\r\n                        return <TableHeader {...getHeaderProps({header})}>{header.header}</TableHeader>;\r\n                      })}\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {this.state.project.partners.map((partner, index) => {\r\n                      return (\r\n                        <TableRow key={'partner' + index}>\r\n                          <TableCell>{partner.name}</TableCell>\r\n                          <TableCell>{partner.partnerNumber}</TableCell>\r\n                          <TableCell>{partner.notes}</TableCell>\r\n                          <TableCell>\r\n                            <div>\r\n                              <Button\r\n                                kind=\"ghost\"\r\n                                onClick={e => this.handleRemovePartner(e, this.state.projectId, partner.id)}\r\n                                style={{display: 'block', width: '100%', color: 'red'}}\r\n                              >\r\n                                {i18n.t('buttons.delete')}\r\n                              </Button>\r\n                              <hr style={{margin: '0', border: 'none', borderTop: '1px solid lightgrey'}}/>\r\n                            </div>\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      );\r\n                    })}\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            )}\r\n          </DataTable>\r\n        </div>\r\n        {modalConfirmation}\r\n      </ModalWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nconst rowData = [\r\n  {\r\n    id: 'a',\r\n    name: 'Partner 1',\r\n    partnerNumber: '123',\r\n  },\r\n  {\r\n    id: 'b',\r\n    name: 'Partner 2',\r\n    partnerNumber: '456',\r\n  },\r\n];\r\n\r\nexport default withKeycloak(ManagePartnersModal);\r\n","import React from 'react';\r\nimport i18n from '../../i18n';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport { Button } from 'carbon-components-react';\r\nimport EditProjectModal from '../Admin/EditProjectModal';\r\nimport ManagePartnersModal from '../Admin/ManagePartnersModal';\r\nimport {getPageUrl, isPortalAdmin} from '../../api/helpers';\r\nimport {Link} from 'react-router-dom';\r\nimport {\r\n  PAGE_MANAGE_SUBSCRIPTIONS,\r\n  PAGE_MANAGE_USERS, PAGE_SUBSCRIPTION_FORM,\r\n  PAGE_TICKET_FORM\r\n} from \"../../api/constants\";\r\n\r\nclass ProjectActionItems extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      showMenu: false,\r\n    };\r\n  }\r\n\r\n  handleClick = () => {\r\n    if (!this.state.showMenu) {\r\n      document.addEventListener('mousedown', this.handleOutsideClick, false);\r\n    } else {\r\n      document.removeEventListener('mousedown', this.handleOutsideClick, false);\r\n    }\r\n\r\n    this.setState(prevState => ({\r\n      showMenu: !prevState.showMenu,\r\n    }));\r\n  };\r\n\r\n  handleOutsideClick = e => {\r\n    if (this.node && !this.node.contains(e.target)) {\r\n      this.handleClick();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const isAdmin = isPortalAdmin();\r\n    const actionDivider = <hr style={{margin: '0', border: 'none', borderTop: '1px solid lightgrey'}}/>;\r\n    const topButton = (\r\n      <Button onClick={this.handleClick} style={{padding: '10px 20px'}} kind=\"tertiary\">\r\n        +\r\n      </Button>\r\n    );\r\n    const editProject = (\r\n      <>\r\n        <EditProjectModal\r\n          key={this.props.project.id}\r\n          allProjects={this.props.allProjects}\r\n          project={this.props.project}\r\n          serviceUrl={this.props.serviceUrl}\r\n          updateProjectList={this.props.updateProjectList}\r\n        />\r\n        {actionDivider}\r\n      </>\r\n    );\r\n    const subscriptionParam = this.props.subscription ? '&subscription=' + this.props.subscription.id : '';\r\n    const newOrRenewSubscription = (\r\n      <>\r\n        <a\r\n          href={`${getPageUrl(PAGE_SUBSCRIPTION_FORM, this.props.locale)}?project=${this.props.project.id}${subscriptionParam}`}\r\n          style={{textDecoration: 'none'}}\r\n        >\r\n          <Button kind=\"ghost\" style={{display: 'block', width: '100%'}} value=\"Subscription Request\">\r\n            {i18n.t('buttons.subscriptionRequest')}\r\n          </Button>\r\n        </a>\r\n        {actionDivider}\r\n      </>\r\n    );\r\n    const managePartners = (\r\n      <>\r\n        <ManagePartnersModal\r\n          key={this.props.project.id}\r\n          project={this.props.project}\r\n          serviceUrl={this.props.serviceUrl}\r\n          updateProjectList={this.props.updateProjectList}\r\n        />\r\n        {actionDivider}\r\n      </>\r\n    );\r\n    const manageUsers = (\r\n      <>\r\n        <a\r\n          href={`${getPageUrl(PAGE_MANAGE_USERS, this.props.locale)}?project=${this.props.project.id}`}\r\n          style={{textDecoration: 'none'}}\r\n        >\r\n          <Button kind=\"ghost\" style={{display: 'block', width: '100%'}} value=\"Manage Users\">\r\n            {i18n.t('buttons.manageUsers')}\r\n          </Button>\r\n        </a>\r\n        {actionDivider}\r\n      </>\r\n    );\r\n    const manageSubscriptions = (\r\n      <>\r\n        <a\r\n          href={`${getPageUrl(PAGE_MANAGE_SUBSCRIPTIONS, this.props.locale)}?project=${this.props.project.id}`}\r\n          style={{textDecoration: 'none'}}\r\n        >\r\n          <Button kind=\"ghost\" style={{display: 'block', width: '100%'}} value=\"Manage Subscriptions\">\r\n            {i18n.t('buttons.manageSubscriptions')}\r\n          </Button>\r\n        </a>\r\n        {actionDivider}\r\n      </>\r\n    );\r\n    const openTicket = (\r\n      <>\r\n        <a\r\n          href={`${getPageUrl(PAGE_TICKET_FORM, this.props.locale)}?project=${this.props.project.id}`}\r\n          style={{textDecoration: 'none'}}\r\n        >\r\n          <Button kind=\"ghost\" style={{display: 'block', width: '100%'}} value=\"Open Ticket\">\r\n            {i18n.t('buttons.openTicket')}\r\n          </Button>\r\n        </a>\r\n        {actionDivider}\r\n      </>\r\n    );\r\n    const ticketingSystem = this.props.ticketingSystem;\r\n    const viewAllTickets = ticketingSystem && ticketingSystem.url && (\r\n      <>\r\n        <a\r\n          href={\r\n            ticketingSystem.url.substr(0, ticketingSystem.url.indexOf('/rest')) +\r\n            '/issues/?jql=Organizations=' +\r\n            this.props.project.systemId\r\n          }\r\n          style={{textDecoration: 'none'}}\r\n          target=\"_blank\"\r\n          rel=\"noreferrer\"\r\n        >\r\n          <Button kind=\"ghost\" style={{display: 'block', width: '100%'}} value=\"View All Tickets\">\r\n            {i18n.t('buttons.viewAllTickets')}\r\n          </Button>\r\n        </a>\r\n        {actionDivider}\r\n      </>\r\n    );\r\n    const deleteProject = (\r\n      <>\r\n        <Button\r\n          kind=\"ghost\"\r\n          onClick={e => this.props.handleDeleteProject(e, this.props.project.id)}\r\n          style={{display: 'block', width: '100%', color: 'red'}}\r\n        >\r\n          {i18n.t('buttons.delete')}\r\n        </Button>\r\n        {actionDivider}\r\n      </>\r\n    );\r\n    if (!this.props.subscription) {\r\n      return (\r\n        <>\r\n          {topButton}\r\n          {this.state.showMenu && (\r\n            <div\r\n              className=\"menu\"\r\n              style={{zIndex: '100', position: 'absolute', backgroundColor: 'white'}}\r\n              ref={node => {\r\n                this.node = node;\r\n              }}\r\n            >\r\n              {actionDivider}\r\n              {isAdmin && editProject}\r\n              {newOrRenewSubscription}\r\n              {isAdmin && (\r\n                <>\r\n                  {openTicket}\r\n                  {viewAllTickets}\r\n                  {manageSubscriptions}\r\n                  {manageUsers}\r\n                  {managePartners}\r\n                  {deleteProject}\r\n                </>\r\n              )}\r\n            </div>\r\n          )}\r\n        </>\r\n      );\r\n    } else {\r\n      return (\r\n        <>\r\n          {topButton}\r\n          {this.state.showMenu && (\r\n            <div\r\n              className=\"menu\"\r\n              style={{zIndex: '100', position: 'absolute', backgroundColor: 'white'}}\r\n              ref={node => {\r\n                this.node = node;\r\n              }}\r\n            >\r\n              {actionDivider}\r\n              {/*View Project Subscription*/}\r\n              <Link to={`/subscription-details/${this.props.subscription.id}`} style={{textDecoration: 'none'}}>\r\n                <Button kind=\"ghost\" style={{display: 'block', width: '100%'}} value=\"View\">\r\n                  {i18n.t('buttons.view')}\r\n                </Button>\r\n              </Link>\r\n              {actionDivider}\r\n              {isAdmin && editProject}\r\n              {openTicket}\r\n              {viewAllTickets}\r\n              {!isAdmin && newOrRenewSubscription}\r\n              {isAdmin && (\r\n                <>\r\n                  {manageSubscriptions}\r\n                  {manageUsers}\r\n                  {managePartners}\r\n                  {deleteProject}\r\n                </>\r\n              )}\r\n            </div>\r\n          )}\r\n        </>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default withKeycloak(ProjectActionItems);\r\n","import {getDefaultOptions, request} from './helpers';\r\nimport moment from 'moment';\r\n\r\nconst resource = 'api/project-subscriptions';\r\n\r\nexport const formatStartDate = startDate => {\r\n  return String(new Date(startDate).toDateString());\r\n};\r\n\r\nexport const formatEndDate = (startDate, lengthInMonths) => {\r\n  const endDate = new Date(startDate).setMonth(new Date(startDate).getMonth() + lengthInMonths);\r\n  return String(new Date(endDate).toDateString());\r\n};\r\n\r\nexport const stripTime = date => {\r\n  return moment(date).format('MM/DD/YYYY');\r\n};\r\n\r\nexport const apiSubscriptionGet = async (serviceUrl, id) => {\r\n  const url = `${serviceUrl}/${resource}/${id}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\n// Project Subscription creation consists of an object containing a projectSubscription, an entandoVersionId, and a\r\n// project id, see SubscriptionCreationRequest.\r\n/**\r\n * Called to create a new project subscription\r\n *\r\n * @param {string} serviceUrl\r\n * @param {ProjectSubscriptionCreation} projectSubscriptionCreation\r\n * @returns\r\n */\r\nexport const apiProjectSubscriptionPost = async (serviceUrl, projectSubscriptionCreation) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n    body: projectSubscriptionCreation ? JSON.stringify(projectSubscriptionCreation) : null,\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiProjectSubscriptionPut = async (serviceUrl, projectSubscriptionCreation) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'PUT',\r\n    body: projectSubscriptionCreation ? JSON.stringify(projectSubscriptionCreation) : null,\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\n// Same format as {projectSubscriptionCreation}\r\nexport const apiRenewSubscription = async (serviceUrl, projectSubscriptionRenew) => {\r\n  const url = `${serviceUrl}/${resource}/renew`;\r\n\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'PUT',\r\n    body: projectSubscriptionRenew ? JSON.stringify(projectSubscriptionRenew) : null,\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n","import {Component} from 'react';\r\nimport {\r\n  DataTable,\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableHeader,\r\n  TableBody,\r\n  TableCell\r\n} from 'carbon-components-react';\r\nimport '../../index.scss';\r\nimport {apiDeleteProjectFromCustomer, apiCustomerGet} from '../../api/customers';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport {Link} from 'react-router-dom';\r\nimport i18n from '../../i18n';\r\nimport {authenticationChanged, getActiveSubscription, isAuthenticated, isPortalAdminOrSupport} from '../../api/helpers';\r\nimport {apiCurrentTicketingSystemGet} from '../../api/ticketingsystem';\r\nimport ProjectActionItems from '../Admin/ProjectActionItems';\r\nimport {formatEndDate, formatStartDate} from '../../api/subscriptions';\r\n\r\nclass CustomerDataTable extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      projects: {},\r\n      ticketingSystem: {},\r\n      action: 'Edit',\r\n      showMenu: {},\r\n    };\r\n    this.headerData = [\r\n      {\r\n        header: i18n.t('customerDashboard.projectName'),\r\n        key: 'projectName',\r\n      },\r\n      {\r\n        header: i18n.t('customerDashboard.partners'),\r\n        key: 'partners',\r\n      },\r\n      {\r\n        header: i18n.t('customerDashboard.entandoVersion'),\r\n        key: 'entandoVersion',\r\n      },\r\n      {\r\n        header: i18n.t('customerDashboard.status'),\r\n        key: 'status',\r\n      },\r\n      {\r\n        header: i18n.t('customerDashboard.startDate'),\r\n        key: 'startDate',\r\n      },\r\n      {\r\n        header: i18n.t('customerDashboard.endDate'),\r\n        key: 'endDate',\r\n      },\r\n      {\r\n        header: i18n.t('customerDetails.notes'),\r\n        key: 'notes',\r\n      },\r\n      {\r\n        header: i18n.t('customerDashboard.action'),\r\n        key: 'action',\r\n      },\r\n    ];\r\n  }\r\n\r\n  async fetchData() {\r\n    if (isAuthenticated(this.props)) {\r\n      try {\r\n        const customer = await apiCustomerGet(this.props.serviceUrl, this.props.customerId);\r\n        const projects = customer.data.projects;\r\n        const ticketingSystem = await apiCurrentTicketingSystemGet(this.props.serviceUrl);\r\n        this.setState({\r\n          projects: projects,\r\n          ticketingSystem: ticketingSystem,\r\n        });\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n    this.render();\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (isAuthenticated(this.props)) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (authenticationChanged(this.props, prevProps)) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n\r\n  // fix warning: Can't perform a React state update on an unmounted component\r\n  componentWillUnmount() {\r\n    this.setState = (state, callback) => {\r\n      //no-op\r\n    };\r\n  }\r\n\r\n  updateProjectList = () => {\r\n    this.fetchData();\r\n  };\r\n\r\n  async deleteProject(id) {\r\n    if (isAuthenticated(this.props)) {\r\n      return await apiDeleteProjectFromCustomer(this.props.serviceUrl, this.props.customerId, id);\r\n    }\r\n  }\r\n\r\n  handleDeleteProject = (e, id) => {\r\n    e.preventDefault();\r\n    if (window.confirm('Are you sure you want to delete this project?')) {\r\n      this.deleteProject(id)\r\n        .then(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.deleted'),\r\n            submitColour: '#24a148',\r\n          });\r\n          this.props.updateCustomerList();\r\n        })\r\n        .catch(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.error'),\r\n            submitColour: '#da1e28',\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <DataTable rows={[{id: '1'}]} headers={this.headerData}>\r\n          {({rows, headers, getHeaderProps, getTableProps}) => (\r\n            <TableContainer description={i18n.t('customerDashboard.tableDesc')}>\r\n              <Table {...getTableProps()}>\r\n                <TableHead>\r\n                  <TableRow key=\"headerRow\">\r\n                    {headers.map(header => {\r\n                      let result;\r\n                      if (header.header === i18n.t('customerDetails.notes')) {\r\n                        if (isPortalAdminOrSupport()) {\r\n                          result = <TableHeader {...getHeaderProps({header})}>{header.header}</TableHeader>;\r\n                        }\r\n                      } else {\r\n                        result = <TableHeader {...getHeaderProps({ header })}>{header.header}</TableHeader>;\r\n                      }\r\n                      return result;\r\n                    })}\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {Object.keys(this.state.projects).length !== 0\r\n                    ? this.state.projects.map((project, index) => {\r\n                      const subscription = getActiveSubscription(project);\r\n                      if (!subscription) {\r\n                        return (\r\n                          <TableRow key={index}>\r\n                            <TableCell>{project.name}</TableCell>\r\n                            {project.partners.length !== 0 ? (\r\n                              <TableCell>\r\n                                {project.partners.map((partner, partnerIndex) => (\r\n                                  <div key={partnerIndex}>{partner.name}</div>\r\n                                ))}\r\n                              </TableCell>\r\n                            ) : (\r\n                              <TableCell>{i18n.t('userMessages.none')}</TableCell>\r\n                            )}\r\n                            <TableCell>{i18n.t('userMessages.none')}</TableCell>\r\n                            <TableCell>{i18n.t('userMessages.none')}</TableCell>\r\n                            <TableCell>{i18n.t('userMessages.none')}</TableCell>\r\n                            <TableCell>{i18n.t('userMessages.none')}</TableCell>\r\n                            {isPortalAdminOrSupport() ?\r\n                              <TableCell style={{width: '250px'}}>{project.notes}</TableCell> : null}\r\n                            <TableCell>\r\n                              <ProjectActionItems\r\n                                serviceUrl={this.props.serviceUrl}\r\n                                ticketingSystem={this.state.ticketingSystem}\r\n                                locale={this.props.locale}\r\n                                project={project}\r\n                                allProjects={this.state.projects}\r\n                                handleDeleteProject={this.handleDeleteProject}\r\n                                updateProjectList={this.updateProjectList}\r\n                                />\r\n                              </TableCell>\r\n                            </TableRow>\r\n                          );\r\n                        } else {\r\n                          return (\r\n                            <TableRow key={index}>\r\n                              <TableCell>\r\n                                <Link to={`/subscription-details/${subscription.id}`}>{project.name}</Link>\r\n                              </TableCell>\r\n                              {project.partners.length !== 0 ? (\r\n                                <TableCell>\r\n                                  {project.partners.map((partner, partnerIndex) => (\r\n                                    <div key={partnerIndex}>{partner.name}</div>\r\n                                  ))}\r\n                                </TableCell>\r\n                              ) : (\r\n                                <TableCell>{i18n.t('userMessages.none')}</TableCell>\r\n                              )}\r\n                              {subscription.entandoVersion ? (\r\n                                <TableCell>{subscription.entandoVersion.name}</TableCell>\r\n                              ) : (\r\n                                <TableCell>{i18n.t('userMessages.none')}</TableCell>\r\n                              )}\r\n                              <TableCell>{subscription.status}</TableCell>\r\n                              <TableCell>{formatStartDate(subscription.startDate)}</TableCell>\r\n                              <TableCell>{formatEndDate(subscription.startDate, subscription.lengthInMonths)}</TableCell>\r\n                              {isPortalAdminOrSupport() ?\r\n                                <TableCell style={{width: '250px'}}>{project.notes}</TableCell> : null}\r\n                              <TableCell>\r\n                                <ProjectActionItems\r\n                                  serviceUrl={this.props.serviceUrl}\r\n                                  ticketingSystem={this.state.ticketingSystem}\r\n                                  locale={this.props.locale}\r\n                                  subscription={subscription}\r\n                                  project={project}\r\n                                  allProjects={this.state.projects}\r\n                                  handleDeleteProject={this.handleDeleteProject}\r\n                                  updateProjectList={this.updateProjectList}\r\n                                />\r\n                              </TableCell>\r\n                            </TableRow>\r\n                          );\r\n                        }\r\n                      })\r\n                    : null}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          )}\r\n        </DataTable>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withKeycloak(CustomerDataTable);\r\n","import {Component} from 'react';\r\nimport i18n from '../../i18n';\r\nimport { Tile } from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\n\r\nclass CustomerDetails extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      customer: {},\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"customer-details\">\r\n        <Tile style={{margin: '2em 0', minHeight: '0', paddingBottom: '0'}}>\r\n          <div>\r\n            <strong>{i18n.t('customerDashboard.customerId')}</strong> {this.props.customer.id}\r\n          </div>\r\n          <div>\r\n            <strong>{i18n.t('customerDashboard.customerName')}</strong> {this.props.customer.name}\r\n          </div>\r\n        </Tile>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withKeycloak(CustomerDetails);\r\n","import React, {Component} from 'react';\r\nimport i18n from '../../i18n';\r\nimport {ModalWrapper, Form, TextInput, TextArea} from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport {apiCustomerGet, apiCustomerPut} from '../../api/customers';\r\nimport {authenticationChanged, isAuthenticated} from '../../api/helpers';\r\n\r\nclass EditCustomerModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      name: '',\r\n      customerNumber: '',\r\n      contactName: '',\r\n      contactPhone: '',\r\n      contactEmail: '',\r\n      notes: '',\r\n      invalid: {},\r\n      modalId: '',\r\n      buttonId: '',\r\n      submitMsg: '',\r\n      submitColour: 'black',\r\n    };\r\n  }\r\n\r\n  handleValidation() {\r\n    let invalid = {};\r\n    let formIsValid = true;\r\n\r\n    //name\r\n    if (this.state.name === '') {\r\n      formIsValid = false;\r\n      invalid['name'] = true;\r\n    }\r\n\r\n    //customerNumber\r\n    if (this.state.customerNumber === '') {\r\n      formIsValid = false;\r\n      invalid['customerNumber'] = true;\r\n    }\r\n\r\n    //contactEmail\r\n    if (typeof this.state.contactEmail !== 'undefined') {\r\n      let lastAtPos = this.state.contactEmail.lastIndexOf('@');\r\n      let lastDotPos = this.state.contactEmail.lastIndexOf('.');\r\n\r\n      if (\r\n        !(\r\n          lastAtPos < lastDotPos &&\r\n          lastAtPos > 0 &&\r\n          this.state.contactEmail.indexOf('@@') === -1 &&\r\n          lastDotPos > 2 &&\r\n          this.state.contactEmail.length - lastDotPos > 2\r\n        )\r\n      ) {\r\n        formIsValid = false;\r\n        invalid['contactEmail'] = true;\r\n      }\r\n    }\r\n\r\n    this.setState({ invalid: invalid });\r\n    return formIsValid;\r\n  }\r\n\r\n  handleChanges = e => {\r\n    const input = e.target;\r\n    const name = input.name;\r\n    const value = input.value;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  async updateCustomer(customer) {\r\n    if (isAuthenticated(this.props)) {\r\n      return await apiCustomerPut(this.props.serviceUrl, customer);\r\n    }\r\n  }\r\n\r\n  getCustomerDetails = customerId => {\r\n    this.getCustomer(customerId);\r\n  };\r\n\r\n  async getCustomer(customerId) {\r\n    if (isAuthenticated(this.props)) {\r\n      const customer = (await apiCustomerGet(this.props.serviceUrl, customerId)).data;\r\n      this.setState({\r\n        name: customer.name,\r\n        customerNumber: customer.customerNumber,\r\n        contactName: customer.contactName,\r\n        contactPhone: customer.contactPhone,\r\n        contactEmail: customer.contactEmail,\r\n        notes: customer.notes,\r\n        modalId: 'modal-form-customer-edit-' + customer.id,\r\n        buttonId: 'edit-customer-button-' + customer.id,\r\n      });\r\n    }\r\n  }\r\n\r\n  handleFormSubmit = () => {\r\n    const formIsValid = this.handleValidation();\r\n\r\n    if (formIsValid) {\r\n      const customer = {\r\n        id: this.props.customer.id,\r\n        name: this.state.name,\r\n        customerNumber: this.state.customerNumber,\r\n        contactName: this.state.contactName,\r\n        contactPhone: this.state.contactPhone,\r\n        contactEmail: this.state.contactEmail,\r\n        notes: this.state.notes,\r\n      };\r\n      this.updateCustomer(customer)\r\n        .then(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.updated'),\r\n            submitColour: '#24a148',\r\n          });\r\n          this.props.updateCustomerList();\r\n          this.getCustomerDetails(this.props.customer.id);\r\n        })\r\n        .catch(() => {\r\n          this.setState({\r\n            submitMsg: i18n.t('submitMessages.error'),\r\n            submitColour: '#da1e28',\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  clearValues = () => {\r\n    const customerModalElement = document.querySelector('#' + this.state.modalId);\r\n    if (!customerModalElement.className.includes('is-visible')) {\r\n      this.setState({\r\n        name: this.props.customer.name,\r\n        customerNumber: this.props.customer.customerNumber,\r\n        contactName: this.props.customer.contactName,\r\n        contactPhone: this.props.customer.contactPhone,\r\n        contactEmail: this.props.customer.contactEmail,\r\n        notes: this.props.customer.notes,\r\n        invalid: {},\r\n      });\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (isAuthenticated(this.props)) {\r\n      if (this.props.customerId) {\r\n        this.getCustomerDetails(this.props.customerId);\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (authenticationChanged(this.props, prevProps)) {\r\n      this.getCustomerDetails(this.props.customerId);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const modalConfirmation = (\r\n      <div className=\"bx--modal-header\">\r\n        <p style={{color: this.state.submitColour}}>{this.state.submitMsg}</p>\r\n      </div>\r\n    );\r\n    const modalId = this.state.modalId;\r\n    const buttonClassName = 'bx--btn bx--btn--ghost edit-customer-button-' + this.props.customerId;\r\n    return (\r\n      modalId && (\r\n        <ModalWrapper\r\n          buttonTriggerText={i18n.t('buttons.edit')}\r\n          modalHeading={i18n.t('adminDashboard.editCustomer.title')}\r\n          buttonTriggerClassName={buttonClassName}\r\n          className=\"modal-form\"\r\n          id={modalId}\r\n          handleSubmit={this.handleFormSubmit}\r\n          primaryButtonText={i18n.t('modalText.save')}\r\n          secondaryButtonText={i18n.t('modalText.cancel')}\r\n        >\r\n          {modalConfirmation}\r\n          <div className=\"form-container\">\r\n            <Form onSubmit={this.handleFormSubmit} id={'form-' + modalId}>\r\n              <TextInput\r\n                id={'name' + modalId}\r\n                name=\"name\"\r\n                labelText={i18n.t('adminDashboard.addCustomer.customerName') + ' *'}\r\n                value={this.state.name}\r\n                onChange={this.handleChanges}\r\n                invalidText={i18n.t('validation.invalid.required')}\r\n                invalid={this.state.invalid['name']}\r\n              />\r\n              <TextInput\r\n                id={'customerNumber' + modalId}\r\n                name=\"customerNumber\"\r\n                labelText={i18n.t('adminDashboard.addCustomer.customerNumber') + ' *'}\r\n                value={this.state.customerNumber}\r\n                onChange={this.handleChanges}\r\n                invalidText={i18n.t('validation.invalid.required')}\r\n                invalid={this.state.invalid['customerNumber']}\r\n              />\r\n              <TextInput\r\n                id={'contactName' + modalId}\r\n                name=\"contactName\"\r\n                labelText={i18n.t('adminDashboard.addCustomer.contactName')}\r\n                value={this.state.contactName}\r\n                onChange={this.handleChanges}\r\n              />\r\n              <TextInput\r\n                id={'contactPhone' + modalId}\r\n                name=\"contactPhone\"\r\n                labelText={i18n.t('adminDashboard.addCustomer.contactPhone')}\r\n                value={this.state.contactPhone}\r\n                onChange={this.handleChanges}\r\n              />\r\n              <TextInput\r\n                id={'contactEmail' + modalId}\r\n                name=\"contactEmail\"\r\n                labelText={i18n.t('adminDashboard.addCustomer.contactEmail') + ' *'}\r\n                value={this.state.contactEmail}\r\n                onChange={this.handleChanges}\r\n                invalidText={i18n.t('validation.invalid.email')}\r\n                invalid={this.state.invalid['contactEmail']}\r\n              />\r\n              <TextArea\r\n                name=\"notes\"\r\n                labelText={i18n.t('adminDashboard.addCustomer.notes')}\r\n                value={this.state.notes}\r\n                onChange={this.handleChanges}\r\n              />\r\n            </Form>\r\n          </div>\r\n          {modalConfirmation}\r\n        </ModalWrapper>\r\n      )\r\n    );\r\n  }\r\n}\r\n\r\nexport default withKeycloak(EditCustomerModal);\r\n","import {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {AccordionItem, Button} from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport {apiCustomerGet, apiCustomerDelete} from '../../api/customers';\r\nimport CustomerDataTable from './CustomerDataTable';\r\nimport CustomerDetails from './CustomerDetails';\r\nimport {\r\n  isPortalAdminOrSupport,\r\n  isPortalAdmin,\r\n  isPortalCustomer,\r\n  isAuthenticated,\r\n  authenticationChanged\r\n} from '../../api/helpers';\r\nimport EditCustomerModal from '../Admin/EditCustomerModal';\r\nimport i18n from '../../i18n';\r\n\r\nclass CustomerAccordian extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      projects: {},\r\n      customer: {},\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (isAuthenticated(this.props)) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (authenticationChanged(this.props, prevProps)) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n\r\n  async fetchData() {\r\n    const customerId = this.props.customerId;\r\n    try {\r\n      const customer = await apiCustomerGet(this.props.serviceUrl, customerId);\r\n      this.setState({\r\n        customer: customer.data,\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  async deleteCustomer() {\r\n    return await apiCustomerDelete(this.props.serviceUrl, this.state.customer.id);\r\n  }\r\n\r\n  handleDelete() {\r\n    if (window.confirm('Are you sure you want to delete this customer?')) {\r\n      this.deleteCustomer().then(() => {\r\n        this.props.updateCustomerList();\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div>\r\n          {isPortalCustomer() && <CustomerDetails serviceUrl={this.props.serviceUrl} customer={this.state.customer}/>}\r\n          <AccordionItem title={this.props.title} open={this.props.accordionOpened}>\r\n            <div style={{display: 'flex'}}>\r\n              {isPortalAdminOrSupport() && (\r\n                <Link style={{textDecoration: 'none'}} to={`/customer-details/${this.state.customer.id}`}>\r\n                  <Button kind=\"ghost\">{i18n.t('buttons.viewDetails')}</Button>\r\n                </Link>\r\n              )}\r\n              {isPortalAdmin() && (\r\n                <div style={{display: 'flex'}}>\r\n                  <EditCustomerModal\r\n                    serviceUrl={this.props.serviceUrl}\r\n                    customer={this.state.customer}\r\n                    key={this.state.customer.id}\r\n                    updateCustomerList={this.props.updateCustomerList}\r\n                    customerId={this.state.customer.id}\r\n                  />\r\n                  <Button kind=\"ghost\" style={{color: 'red'}} onClick={() => this.handleDelete()}>\r\n                    {i18n.t('buttons.delete')}\r\n                  </Button>\r\n                </div>\r\n              )}\r\n            </div>\r\n            <CustomerDataTable\r\n              key={new Date().getTime()}\r\n              serviceUrl={this.props.serviceUrl}\r\n              customerId={this.props.customerId}\r\n              locale={this.props.locale}\r\n              updateCustomerList={this.props.updateCustomerList}\r\n            />\r\n          </AccordionItem>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withKeycloak(CustomerAccordian);\r\n","import React from 'react';\r\nimport i18n from '../../i18n';\r\nimport { Accordion, PaginationNav, Search, Tile } from 'carbon-components-react';\r\nimport AddCustomerModal from './AddCustomerModal';\r\nimport AddPartnerModal from './AddPartnerModal';\r\nimport AddProjectModal from './AddProjectModal';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport {apiCustomersGet} from '../../api/customers';\r\nimport CustomerAccordian from '../Customer/CustomerAccordian';\r\nimport {\r\n  authenticationChanged,\r\n  isPortalAdmin,\r\n  isPortalSupport,\r\n  isPortalPartner,\r\n  isPortalUser,\r\n  isAuthenticated,\r\n} from '../../api/helpers';\r\n\r\nclass AdminDashboard extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      customers: {},\r\n      role: '',\r\n      filteredCustomers: {},\r\n      currentPage: 0,\r\n      test: '',\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchData();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (authenticationChanged(this.props, prevProps)) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n\r\n  async fetchData() {\r\n    if (isAuthenticated(this.props)) {\r\n      let customers = {};\r\n      try {\r\n        customers = await apiCustomersGet(this.props.serviceUrl);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n\r\n      this.setState({\r\n        customers: customers.data ? customers.data : {},\r\n        filteredCustomers: customers.data ? customers.data : {},\r\n      });\r\n    }\r\n  }\r\n\r\n  handleSearch = event => {\r\n    if (event.key === 'Enter') {\r\n      //Note: should refactor this to preform filtering in db\r\n      const newFilteredState = this.state.customers.filter(customer =>\r\n        customer.name.toLowerCase().includes(event.target.value.toLowerCase())\r\n      );\r\n      this.setState({\r\n        filteredCustomers: newFilteredState,\r\n        currentPage: 0,\r\n      });\r\n    } else {\r\n      if (event.target.value === '' || event.target.value === undefined) {\r\n        this.setState({\r\n          filteredCustomers: this.state.customers,\r\n        });\r\n      }\r\n    }\r\n    this.forceUpdate();\r\n  };\r\n\r\n  updateCustomerList = () => {\r\n    this.fetchData();\r\n  };\r\n\r\n  render() {\r\n    var numberOfPages = 1;\r\n    if (Object.keys(this.state.filteredCustomers).length !== 0) {\r\n      numberOfPages = Math.ceil(this.state.filteredCustomers.length / 5);\r\n    } else {\r\n      numberOfPages = 1;\r\n    }\r\n\r\n    const props = () => ({\r\n      loop: Boolean(false),\r\n      page: Number(this.state.currentPage),\r\n      totalItems: Number(numberOfPages),\r\n      itemsShown: Number(1),\r\n      onChange: event => this.setState({ currentPage: event }),\r\n    });\r\n\r\n    return (\r\n      <div className=\"admin-dashboard\">\r\n        {isPortalAdmin() || isPortalSupport() || isPortalPartner() ? (\r\n          <Tile>\r\n            <p className=\"title\">{i18n.t('adminDashboard.allCustomers')}</p>\r\n            <div className=\"bx--row\">\r\n              <div className=\"bx--col\">\r\n                <Search\r\n                  onChange={this.handleSearch}\r\n                  id=\"search\"\r\n                  placeholder={i18n.t('adminDashboard.searchText')}\r\n                  labelText={i18n.t('adminDashboard.searchLabel')}\r\n                  onKeyPress={this.handleSearch}\r\n                />\r\n              </div>\r\n              {isPortalAdmin() ? (\r\n                <div className=\"bx--col\">\r\n                  <div>\r\n                    <AddPartnerModal serviceUrl={this.props.serviceUrl} updateCustomerList={this.updateCustomerList}/>\r\n                    <AddCustomerModal serviceUrl={this.props.serviceUrl} updateCustomerList={this.updateCustomerList}/>\r\n                    <AddProjectModal serviceUrl={this.props.serviceUrl} updateCustomerList={this.updateCustomerList}\r\n                                     allCustomers={this.state.customers}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n          </Tile>\r\n        ) : null}\r\n\r\n        <div className=\"form-container\">\r\n          <Accordion>\r\n            {Object.keys(this.state.customers).length !== 0\r\n              ? this.state.filteredCustomers.map((customer, index) => {\r\n                //Pagination for Admin and Support roles (5 items per page)\r\n                //Note: eventually this should be pushed down into paginated microservice calls\r\n                var indexOfLastItem = (this.state.currentPage + 1) * 5 - 1;\r\n                var firstIndexOfCurrentPage = this.state.currentPage * 5;\r\n                var accordionOpened = this.state.customers.length === 1;\r\n\r\n                if (isPortalUser()) {\r\n                  if (index >= firstIndexOfCurrentPage && index <= indexOfLastItem) {\r\n                    return (\r\n                      <CustomerAccordian\r\n                        key={customer.id}\r\n                        serviceUrl={this.props.serviceUrl}\r\n                          customerId={customer.id}\r\n                          title={customer.name}\r\n                          updateCustomerList={this.updateCustomerList}\r\n                          locale={this.props.locale}\r\n                          accordionOpened={accordionOpened}\r\n                        />\r\n                      );\r\n                    } else {\r\n                      return null;\r\n                    }\r\n                  } else {\r\n                    return null;\r\n                  }\r\n                })\r\n              : null}\r\n          </Accordion>\r\n          <PaginationNav {...props()} className=\"pagination-right\" />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withKeycloak(AdminDashboard);\r\n","import { getDefaultOptions, request, getUrl } from './helpers';\r\n\r\nconst resource = 'api/tickets';\r\n\r\nexport const apiTicketDelete = async (serviceUrl, id) => {\r\n  const url = `${serviceUrl}/${resource}/${id}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiTicketsGet = async serviceUrl => {\r\n  const url = getUrl(`${serviceUrl}/${resource}`);\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiTicketPost = async (serviceUrl, ticket) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n    body: ticket ? JSON.stringify(ticket) : null,\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nconst jiraResource = 'api/tickets/ticketingsystem';\r\n\r\nexport const apiJiraTicketsGet = async (serviceUrl, projectId) => {\r\n  const url = `${serviceUrl}/${jiraResource}/${projectId}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiJiraTicketPost = async (serviceUrl, projectId, ticket) => {\r\n  const url = `${serviceUrl}/${jiraResource}/${projectId}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n    body: ticket ? JSON.stringify(ticket) : null,\r\n  };\r\n  return request(url, options);\r\n};\r\n","import React, { Component } from 'react';\r\nimport {\r\n  DataTable,\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableHeader,\r\n  TableBody,\r\n  TableCell,\r\n  PaginationNav,\r\n  Button,\r\n} from 'carbon-components-react';\r\nimport {apiJiraTicketsGet} from '../../api/tickets';\r\nimport {apiCurrentTicketingSystemGet} from '../../api/ticketingsystem';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport {apiProjectGet} from '../../api/projects';\r\nimport {authenticationChanged, getPageUrl, isAuthenticated, isPortalUser} from '../../api/helpers';\r\nimport i18n from '../../i18n';\r\nimport {PAGE_TICKET_FORM} from \"../../api/constants\";\r\n\r\nclass TicketList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      tickets: {},\r\n      project: {},\r\n      ticketingSystem: {},\r\n      currentPage: 0,\r\n    };\r\n    this.headerData = [\r\n      {\r\n        header: i18n.t('ticketDetails.issue'),\r\n        key: 'issue',\r\n      },\r\n      {\r\n        header: i18n.t('ticketDetails.summary'),\r\n        key: 'summary',\r\n      },\r\n      {\r\n        header: i18n.t('ticketDetails.status'),\r\n        key: 'status',\r\n      },\r\n      {\r\n        header: i18n.t('ticketDetails.type'),\r\n        key: 'type',\r\n      },\r\n      {\r\n        header: i18n.t('ticketDetails.priority'),\r\n        key: 'priority',\r\n      },\r\n      {\r\n        header: i18n.t('ticketDetails.created'),\r\n        key: 'created',\r\n      },\r\n      {\r\n        header: i18n.t('ticketDetails.updated'),\r\n        key: 'updated',\r\n      },\r\n      {\r\n        header: i18n.t('ticketDetails.link'),\r\n        key: 'link',\r\n      },\r\n    ];\r\n  }\r\n\r\n  async fetchData() {\r\n    if (isPortalUser()) {\r\n      try {\r\n        const project = (await apiProjectGet(this.props.serviceUrl, this.props.projectId)).data;\r\n        const ticketingSystem = await apiCurrentTicketingSystemGet(this.props.serviceUrl);\r\n        const tickets = await apiJiraTicketsGet(this.props.serviceUrl, project.id);\r\n        this.setState({\r\n          tickets: tickets,\r\n          project: project,\r\n          ticketingSystem: ticketingSystem,\r\n        });\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (isAuthenticated(this.props)) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (authenticationChanged(this.props, prevProps)) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var numberOfPages = 1;\r\n    if (Object.keys(this.state.tickets).length !== 0) {\r\n      numberOfPages = Math.ceil(this.state.tickets.data.length / 10);\r\n    }\r\n\r\n    const paginationProps = () => ({\r\n      loop: Boolean(false),\r\n      page: Number(this.state.currentPage),\r\n      totalItems: Number(numberOfPages),\r\n      itemsShown: Number(1),\r\n      onChange: event => this.setState({currentPage: event}),\r\n    });\r\n    const ticketSystemUrl = this.state.ticketingSystem.url;\r\n    const ticketingSystemBaseUrl = ticketSystemUrl != null ? ticketSystemUrl.substr(0, ticketSystemUrl.indexOf('/rest')) : null;\r\n\r\n    return (\r\n      <div>\r\n        {this.state.project.id && (\r\n          <div>\r\n            {/*View All Ticket*/}\r\n            <a\r\n              href={ticketingSystemBaseUrl + '/issues/?jql=Organizations=' + this.state.project.systemId}\r\n              style={{textDecoration: 'none'}}\r\n              target=\"_blank\"\r\n              rel=\"noreferrer\"\r\n            >\r\n              <Button kind=\"ghost\" style={{display: 'block', width: '100%'}} value=\"Open Ticket\">\r\n                {i18n.t('buttons.viewAllTickets')}\r\n              </Button>\r\n            </a>\r\n            {/*Open Ticket*/}\r\n            <a\r\n              href={`${getPageUrl(PAGE_TICKET_FORM, this.props.locale)}?project=${this.state.project.id}`}\r\n              style={{textDecoration: 'none'}}\r\n            >\r\n              <Button kind=\"ghost\" style={{display: 'block', width: '100%'}} value=\"Open Ticket\">\r\n                {i18n.t('buttons.openTicket')}\r\n              </Button>\r\n            </a>\r\n          </div>\r\n        )}\r\n        <DataTable rows={[{id: '1'}]} headers={this.headerData}>\r\n          {({rows, headers, getHeaderProps, getTableProps}) => (\r\n            <TableContainer title={i18n.t('ticketDetails.listOfTickets')}>\r\n              <Table {...getTableProps()}>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    {headers.map(header => (\r\n                      <TableHeader {...getHeaderProps({header})}>{header.header}</TableHeader>\r\n                    ))}\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {Object.keys(this.state.tickets).length !== 0 ? (\r\n                    this.state.tickets.data.map((ticket, index) => {\r\n                      const indexOfLastItem = (this.state.currentPage + 1) * 10 - 1;\r\n                      const firstIndexOfCurrentPage = this.state.currentPage * 10;\r\n                      const ticketUrl = ticketingSystemBaseUrl + '/browse/' + ticket.systemId;\r\n\r\n                      if (index >= firstIndexOfCurrentPage && index <= indexOfLastItem) {\r\n                        return (\r\n                          <TableRow key={ticket.id}>\r\n                            <TableCell>\r\n                              <a href={ticketUrl} target=\"_blank\" rel=\"noreferrer\">\r\n                                {ticket.systemId}\r\n                              </a>\r\n                            </TableCell>\r\n                            <TableCell>{ticket.summary}</TableCell>\r\n                            <TableCell>{ticket.status}</TableCell>\r\n                            <TableCell>{ticket.type}</TableCell>\r\n                            <TableCell>{ticket.priority}</TableCell>\r\n                            <TableCell>{new Date(ticket.createDate).toDateString()}</TableCell>\r\n                            <TableCell>{new Date(ticket.updateDate).toDateString()}</TableCell>\r\n                            <TableCell>\r\n                              <a href={ticketUrl} target=\"_blank\" rel=\"noreferrer\">\r\n                                {i18n.t('ticketDetails.viewTicket')}\r\n                              </a>\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        );\r\n                      } else {\r\n                        return null;\r\n                      }\r\n                    })\r\n                  ) : (\r\n                    <TableRow/>\r\n                  )}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          )}\r\n        </DataTable>\r\n        <PaginationNav {...paginationProps()} className=\"pagination-right\"/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withKeycloak(TicketList);\r\n","import React from 'react';\r\nimport TicketList from './TicketList';\r\nimport {Tile} from 'carbon-components-react';\r\nimport {apiSubscriptionGet, formatStartDate, formatEndDate} from '../../api/subscriptions';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport {apiGetProjectUsers, apiProjectGet} from '../../api/projects';\r\nimport {isPortalAdminOrSupport, isPortalUser, authenticationChanged} from '../../api/helpers';\r\nimport i18n from '../../i18n';\r\nimport Breadcrumbs from \"../Breadcrumbs/Breadcrumbs\";\r\n\r\nconst subscriptionData = {\r\n  type: 'Product Support Subscription Entando Platform',\r\n  license: 'Free Commercial Open Source',\r\n};\r\n\r\nclass Subscription extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: true,\r\n      subscription: {},\r\n      users: {},\r\n      project: {},\r\n      customer: {},\r\n    };\r\n  }\r\n\r\n  async fetchData() {\r\n    if (isPortalUser()) {\r\n      try {\r\n        let users = {};\r\n        let project = {};\r\n        const subscription = await apiSubscriptionGet(this.props.serviceUrl, this.props.match.params.id);\r\n        if (subscription.data.project) {\r\n          project = await apiProjectGet(this.props.serviceUrl, subscription.data.project.id);\r\n          users = await apiGetProjectUsers(this.props.serviceUrl, project.data.id);\r\n        }\r\n        this.setState({\r\n          subscription: subscription,\r\n          project: project,\r\n          customer: project.customer,\r\n          users: users,\r\n          loading: false,\r\n        });\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n  }\r\n\r\n  updateSubscription = () => {\r\n    this.fetchData();\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (isPortalUser()) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (authenticationChanged(this.props, prevProps) && isPortalUser()) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { type, license } = subscriptionData;\r\n\r\n    if (!this.state.loading) {\r\n      if (isPortalUser()) {\r\n        if (Object.keys(this.state.subscription).length !== 0 && Object.keys(this.state.project).length !== 0) {\r\n          const project = this.state.project.data;\r\n          const subscription = this.state.subscription.data;\r\n          return (\r\n            <div className=\"subscription-details\">\r\n              <div>\r\n                <Breadcrumbs project={project} subscription={subscription} locale={this.props.locale}/>\r\n                <Tile>\r\n                  <div className=\"bx--grid\">\r\n                    <div className=\"bx--row\">\r\n                      <div className=\"bx--col\">\r\n                        <div>\r\n                          <strong>{i18n.t('customerDashboard.customerName')}:</strong> {project.customer.name}\r\n                        </div>\r\n                        <div>\r\n                          <strong>{i18n.t('customerDashboard.projectName')}:</strong> {project.name}\r\n                        </div>\r\n                        <div>\r\n                          <strong>{i18n.t('subscriptionDetails.description')}:</strong> {subscription.project.description}\r\n                        </div>\r\n                        <div>\r\n                          <strong>{i18n.t('subscriptionDetails.partners')}:</strong>\r\n                          {project !== '' && Object.keys(project.partners).length !== 0 ? (\r\n                            <>\r\n                              {project.partners.map((partner, index) => (\r\n                                <div key={index}>\r\n                                  {' '}\r\n                                  {index === project.partners.length - 1 ? partner.name : partner.name + ', '}{' '}\r\n                                </div>\r\n                              ))}\r\n                            </>\r\n                          ) : (\r\n                            <> {i18n.t('userMessages.none')} </>\r\n                          )}\r\n                        </div>\r\n                        <div>\r\n                          <strong>{i18n.t('subscriptionDetails.type')}:</strong> {type}\r\n                        </div>\r\n                        {isPortalAdminOrSupport() ? (\r\n                          <div>\r\n                            <strong>{i18n.t('subscriptionDetails.notes')}:</strong> {subscription.notes}\r\n                          </div>\r\n                        ) : null}\r\n                      </div>\r\n                      <div className=\"bx--col\">\r\n                        <div>\r\n                          <strong>{i18n.t('subscriptionDetails.status')}:</strong> {subscription.status}\r\n                        </div>\r\n                        <div>\r\n                          <strong>{i18n.t('subscriptionDetails.level')}:</strong> {subscription.level}\r\n                        </div>\r\n                        <div>\r\n                          <strong>{i18n.t('subscriptionDetails.startDate')}:</strong>{' '}\r\n                          {formatStartDate(subscription.startDate)}\r\n                        </div>\r\n                        <div>\r\n                          <strong>{i18n.t('subscriptionDetails.endDate')}:</strong>{' '}\r\n                          {formatEndDate(subscription.startDate, subscription.lengthInMonths)}\r\n                        </div>\r\n                        <div>\r\n                          <strong>{i18n.t('subscriptionDetails.license')}:</strong> {license}\r\n                        </div>\r\n                        <div>\r\n                          <strong>{i18n.t('subscriptionDetails.assignedUsers')}:</strong>\r\n                          {this.state.users.data !== '' && Object.keys(this.state.users.data).length !== 0 ? (\r\n                            <>\r\n                              {this.state.users.data.map((user, index) => (\r\n                                <div\r\n                                  key={index}> {index === this.state.users.data.length - 1 ? user.username : user.username + ', '} </div>\r\n                              ))}\r\n                            </>\r\n                          ) : (\r\n                            <> {i18n.t('userMessages.none')} </>\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </Tile>\r\n                <br/>\r\n                <TicketList projectId={project.id} serviceUrl={this.props.serviceUrl} locale={this.props.locale}/>\r\n              </div>\r\n            </div>\r\n          );\r\n        } else {\r\n          return <div>{i18n.t('userMessages.unauthorized')}</div>;\r\n        }\r\n      } else {\r\n        return <div>{i18n.t('userMessages.unauthorized')}</div>;\r\n      }\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport default withKeycloak(Subscription);\r\n","import React from 'react';\r\nimport {Tile} from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport {apiCustomerGet} from '../../api/customers';\r\nimport {authenticationChanged, isAuthenticated, isPortalAdminOrSupport} from '../../api/helpers';\r\nimport i18n from '../../i18n';\r\nimport Breadcrumbs from '../Breadcrumbs/Breadcrumbs';\r\nimport CustomerDataTable from './CustomerDataTable';\r\n\r\nclass CustomerProjectList extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: true,\r\n      customer: {},\r\n    };\r\n  }\r\n\r\n  async fetchData() {\r\n    if (isAuthenticated(this.props)) {\r\n      try {\r\n        const customer = await apiCustomerGet(this.props.serviceUrl, this.props.match.params.id);\r\n        this.setState({\r\n          customer: customer.data,\r\n          loading: false,\r\n        });\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchData();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (authenticationChanged(this.props, prevProps)) {\r\n      if (isPortalAdminOrSupport()) {\r\n        this.fetchData();\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (!this.state.loading) {\r\n      const customer = this.state.customer;\r\n      if (customer) {\r\n        return (\r\n          <div>\r\n            <Breadcrumbs customer={customer} locale={this.props.locale}/>\r\n            <Tile>\r\n              <div className=\"bx--grid\">\r\n                <div className=\"bx--row\">\r\n                  <div className=\"bx--col\">\r\n                    <p>\r\n                      <strong>{i18n.t('customerDetails.id')}: </strong> {customer.id}\r\n                    </p>\r\n                    <p>\r\n                      <strong>{i18n.t('customerDetails.name')}: </strong> {customer.name}\r\n                    </p>\r\n                    {isPortalAdminOrSupport() &&\r\n                    <p>\r\n                      <strong>{i18n.t('customerDetails.notes')}: </strong> {customer.notes}\r\n                    </p>\r\n                    }\r\n                  </div>\r\n                  <div className=\"bx--col\">\r\n                    <p>\r\n                      <strong>{i18n.t('customerDetails.contactName')}: </strong> {customer.contactName}\r\n                    </p>\r\n                    <p>\r\n                      <strong>{i18n.t('customerDetails.contactPhone')}: </strong> {customer.contactPhone}\r\n                    </p>\r\n                    <p>\r\n                      <strong>{i18n.t('customerDetails.contactEmail')}: </strong> {customer.contactEmail}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </Tile>\r\n            <CustomerDataTable serviceUrl={this.props.serviceUrl} customerId={customer.id}\r\n                               locale={this.props.locale}/>\r\n          </div>\r\n        );\r\n      } else {\r\n        return <p>{i18n.t('userMessages.loading')}...</p>;\r\n      }\r\n    } else {\r\n      return <p>{i18n.t('userMessages.unauthorized')}</p>;\r\n    }\r\n  }\r\n}\r\n\r\nexport default withKeycloak(CustomerProjectList);\r\n","import React, {Component} from 'react';\r\nimport {HashRouter, Route, Switch} from 'react-router-dom';\r\nimport AdminDashboard from './Admin/AdminDashboard';\r\nimport Subscription from './SubscriptionDetails/Subscription';\r\nimport withKeycloak from '../auth/withKeycloak';\r\nimport {AuthenticatedView, UnauthenticatedView} from '../auth/KeycloakViews';\r\nimport {authenticationChanged, isAuthenticated, isPortalUser} from '../api/helpers';\r\nimport CustomerProjectList from './Customer/CustomerProjectList';\r\nimport i18n from '../i18n';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: true,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (isAuthenticated(this.props)) {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (authenticationChanged(this.props, prevProps)) {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var { keycloak } = this.props;\r\n\r\n    if (!this.state.loading) {\r\n      if (isPortalUser()) {\r\n        return (\r\n          <div id=\"entando-customer-portal\">\r\n            <AuthenticatedView keycloak={keycloak}>\r\n              <HashRouter>\r\n                <Switch>\r\n                  <Route\r\n                    path={'**/customer-details/:id'}\r\n                    render={props => <CustomerProjectList {...props} serviceUrl={this.props.serviceUrl} locale={this.props.locale} />}\r\n                  />\r\n                  <Route\r\n                    path={'**/subscription-details/:id'}\r\n                    render={props => <Subscription {...props} serviceUrl={this.props.serviceUrl} locale={this.props.locale} />}\r\n                  />\r\n                  <Route\r\n                    path=\"**/\"\r\n                    render={props => <AdminDashboard {...props} serviceUrl={this.props.serviceUrl} locale={this.props.locale} />}\r\n                  />\r\n                </Switch>\r\n              </HashRouter>\r\n            </AuthenticatedView>\r\n            <UnauthenticatedView keycloak={keycloak}>\r\n              <p>{i18n.t('userMessages.unauthorized')}</p>\r\n            </UnauthenticatedView>\r\n          </div>\r\n        );\r\n      } else {\r\n        return <p>{i18n.t('userMessages.unauthorized')}</p>;\r\n      }\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport default withKeycloak(App);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '../index.scss';\nimport * as Locale from '../i18n';\n\nimport KeycloakContext from '../auth/KeycloakContext';\nimport App from '../components/App';\n\nimport { subscribeToWidgetEvent } from '../helpers/widgetEvents';\nimport { KEYCLOAK_EVENT_TYPE } from './widgetEventTypes';\n\nconst getKeycloakInstance = () =>\n  (window && window.entando && window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\n    initialized: false,\n  };\n\nconst ATTRIBUTES = {\n  hidden: 'hidden',\n  locale: 'locale',\n  paginationMode: 'pagination-mode',\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\n  serviceUrl: 'service-url',\n};\n\nclass AppElement extends HTMLElement {\n  container;\n\n  mountPoint;\n\n  unsubscribeFromKeycloakEvent;\n\n  keycloak = getKeycloakInstance();\n\n  connectedCallback() {\n    this.mountPoint = document.createElement('div');\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\n\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\n      this.render();\n    });\n\n    this.render();\n\n    //retargetEvents(shadowRoot);\n    this.appendChild(this.mountPoint);\n  }\n\n  render() {\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\n    const locale = this.getAttribute(ATTRIBUTES.locale) || '';\n    Locale.setLocale(locale);\n\n    ReactDOM.render(\n      <KeycloakContext.Provider value={this.keycloak}>\n        <App serviceUrl={serviceUrl} locale={locale} />\n      </KeycloakContext.Provider>,\n      this.mountPoint\n    );\n  }\n}\n\ncustomElements.get('cp-app') || customElements.define('cp-app', AppElement);\n","import React, {Component} from 'react';\nimport {getPageUrl, isAuthenticated, isPortalUser} from \"../../api/helpers\";\nimport i18n from \"../../i18n\";\nimport withKeycloak from \"../../auth/withKeycloak\";\nimport {PAGE_CUSTOMER_PORTAL} from '../../api/constants';\n\nconst KEYCLOAK_EVENT_ID = 'keycloak';\n\nclass Login extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      username: null\n    };\n    this.keycloakEventHandler = this.keycloakEventHandler.bind(this);\n  }\n\n  keycloakEventHandler(event) {\n    const keycloakEvent = event.detail.eventType;\n    const {keycloak} = this.props;\n    switch (keycloakEvent) {\n      case 'onAuthRefreshError':\n        keycloak.logout();\n        break;\n      default:\n        break;\n    }\n  }\n\n  componentDidMount() {\n    window.addEventListener(KEYCLOAK_EVENT_ID, this.keycloakEventHandler);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(KEYCLOAK_EVENT_ID, this.keycloakEventHandler);\n  }\n\n  render() {\n    const {keycloak} = this.props;\n    const loginUrl = window.location;\n    const handleLogin = () => keycloak.login({redirectUri: loginUrl});\n    const handleLogout = () => keycloak.logout({redirectUri: window.location.origin});\n\n    return (\n      <span className=\"entando-login\">\n        {!isAuthenticated(this.props) ? (\n          <>\n            <a className=\"log-in\" href=\"#entando-customer-portal\" onClick={handleLogin}\n               title={i18n.t('userMessages.login')}>\n              {i18n.t('userMessages.login')}<i className=\"fas fa-sign-in-alt\"/>\n            </a>\n          </>\n        ) : (\n          <>\n            {isPortalUser() && (\n              <>\n                <a\n                  href={getPageUrl(PAGE_CUSTOMER_PORTAL, this.props.locale)}>{i18n.t('customerDashboard.customerPortal')}</a>\n                <span className=\"divider\">&nbsp;|&nbsp;</span>\n              </>\n            )}\n            <a className=\"log-out\" href=\"#entando-customer-portal\" onClick={handleLogout}\n               title={i18n.t('userMessages.logout')}>\n              {i18n.t('userMessages.logout')}<i className=\"fas fa-sign-out-alt\"/>\n            </a>\n          </>\n        )}\n      </span>\n    )\n  }\n}\n\nexport default withKeycloak(Login);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '../index.scss';\n\nimport KeycloakContext from '../auth/KeycloakContext';\n\nimport {subscribeToWidgetEvent} from '../helpers/widgetEvents';\nimport {KEYCLOAK_EVENT_TYPE} from './widgetEventTypes';\nimport * as Locale from '../i18n';\nimport Login from '../components/Login/Login';\n\nconst getKeycloakInstance = () =>\n  (window && window.entando && window.entando.keycloak && {...window.entando.keycloak, initialized: true}) || {\n    initialized: false,\n  };\n\nconst ATTRIBUTES = {\n  hidden: 'hidden',\n  locale: 'locale',\n  paginationMode: 'pagination-mode',\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\n  serviceUrl: 'service-url',\n};\n\nclass LoginElement extends HTMLElement {\n  container;\n\n  mountPoint;\n\n  unsubscribeFromKeycloakEvent;\n\n  keycloak = getKeycloakInstance();\n\n  connectedCallback() {\n    this.mountPoint = document.createElement('span');\n    this.keycloak = {...getKeycloakInstance(), initialized: true};\n\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\n      this.keycloak = {...getKeycloakInstance(), initialized: true};\n      this.render();\n    });\n\n    this.render();\n\n    //retargetEvents(shadowRoot);\n    this.appendChild(this.mountPoint);\n  }\n\n  render() {\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\n    const locale = this.getAttribute(ATTRIBUTES.locale) || '';\n    Locale.setLocale(locale);\n\n    ReactDOM.render(\n      <KeycloakContext.Provider value={this.keycloak}>\n        <Login serviceUrl={serviceUrl} locale={locale}/>\n      </KeycloakContext.Provider>,\n      this.mountPoint\n    );\n  }\n}\n\ncustomElements.get('cp-login') || customElements.define('cp-login', LoginElement);\n","import React, {Component} from 'react';\nimport {\n  DataTable,\n  TableContainer,\n  Table,\n  TableHead,\n  TableRow,\n  TableHeader,\n  TableBody,\n  TableCell,\n  Button\n} from 'carbon-components-react';\nimport '../../../index.scss';\nimport withKeycloak from '../../../auth/withKeycloak';\nimport i18n from '../../../i18n';\nimport {isAuthenticated, authenticationChanged, getPageUrl} from '../../../api/helpers';\nimport {apiDeleteSubscriptionFromProject, apiGetProjectSubscriptions, apiProjectGet} from '../../../api/projects';\nimport {formatEndDate, formatStartDate} from '../../../api/subscriptions';\nimport {PAGE_SUBSCRIPTION_FORM} from \"../../../api/constants\";\nimport Breadcrumbs from \"../../Breadcrumbs/Breadcrumbs\";\n\nclass ManageSubscriptions extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      projectId: '',\n      project: {},\n      subscriptions: [],\n    };\n    this.headerData = [\n      {\n        header: i18n.t('projectDetails.id'),\n        key: 'id',\n      },\n      {\n        header: i18n.t('subscriptionDetails.status'),\n        key: 'status',\n      },\n      {\n        header: i18n.t('projectDetails.entandoVersion'),\n        key: 'entandoVersion',\n      },\n      {\n        header: i18n.t('subscriptionDetails.level'),\n        key: 'level',\n      },\n      {\n        header: i18n.t('subscriptionDetails.startDate'),\n        key: 'startDate',\n      },\n      {\n        header: i18n.t('subscriptionDetails.endDate'),\n        key: 'endDate',\n      },\n      {\n        header: i18n.t('subscriptionDetails.lengthInMonths'),\n        key: 'lengthInMonths',\n      },\n      {\n        header: i18n.t('subscriptionDetails.notes'),\n        key: 'notes',\n      },\n      {\n        header: i18n.t('customerDashboard.action'),\n        key: 'action',\n      },\n    ];\n  }\n\n  componentDidMount() {\n    if (isAuthenticated(this.props)) {\n      this.fetchData();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (authenticationChanged(this.props, prevProps)) {\n      this.fetchData();\n    }\n  }\n\n  async fetchData() {\n    if (isAuthenticated(this.props)) {\n      let search = window.location.search;\n      const params = new URLSearchParams(search);\n      const projectId = params.get('project');\n\n      let project = {};\n      let subscriptions = {};\n      if (projectId != null) {\n        project = (await apiProjectGet(this.props.serviceUrl, projectId)).data;\n        subscriptions = (await apiGetProjectSubscriptions(this.props.serviceUrl, projectId)).data;\n      }\n\n      this.setState({\n        projectId: projectId,\n        project: project,\n        subscriptions: subscriptions,\n      });\n    }\n  }\n\n  async deleteSubscription(subscriptionId) {\n    if (isAuthenticated(this.props)) {\n      return await apiDeleteSubscriptionFromProject(this.props.serviceUrl, this.state.projectId, subscriptionId);\n    }\n  }\n\n  handleDeleteSubscription = (e, id) => {\n    e.preventDefault();\n    if (window.confirm(i18n.t('submitMessages.confirmDelete'))) {\n      console.log('confirmed to delete', id);\n      this.deleteSubscription(id)\n        .then(() => {\n          this.setState({\n            submitMsg: i18n.t('submitMessages.deleted'),\n            submitColour: '#24a148',\n          });\n          this.fetchData();\n        })\n        .catch(() => {\n          this.setState({\n            submitMsg: i18n.t('submitMessages.error'),\n            submitColour: '#da1e28',\n          });\n        });\n    }\n  };\n\n  render() {\n    const project = this.state.project;\n    return (\n      <div id=\"entando-customer-portal\">\n        <Breadcrumbs project={project} locale={this.props.locale}/>\n        <h5>{project.name}</h5>\n        <a\n          href={`${getPageUrl(PAGE_SUBSCRIPTION_FORM, this.props.locale)}?project=${this.state.projectId}`}\n          style={{textDecoration: 'none'}}\n        >\n          <Button kind=\"ghost\" style={{display: 'block', width: '100%'}} value=\"Add Subscription\">\n            {i18n.t('buttons.addSubscription')}\n          </Button>\n        </a>\n\n        <DataTable rows={[{id: '1'}]} headers={this.headerData}>\n          {({headers, getHeaderProps, getTableProps}) => (\n            <TableContainer>\n              <Table {...getTableProps()}>\n                <TableHead>\n                  <TableRow>\n                    {headers.map(header => (\n                      <TableHeader {...getHeaderProps({header})}>{header.header}</TableHeader>\n                    ))}\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {Object.keys(this.state.subscriptions).length !== 0 &&\n                  this.state.subscriptions.map((subscription, index) => (\n                    <TableRow key={index}>\n                      <TableCell>{subscription.id}</TableCell>\n                      <TableCell>{subscription.status}</TableCell>\n                      <TableCell>{subscription.entandoVersion.name}</TableCell>\n                      <TableCell>{subscription.level}</TableCell>\n                      <TableCell>{formatStartDate(subscription.startDate)}</TableCell>\n                      <TableCell>{formatEndDate(subscription.startDate, subscription.lengthInMonths)}</TableCell>\n                      <TableCell>{subscription.lengthInMonths}</TableCell>\n                      <TableCell>{subscription.notes}</TableCell>\n                      <TableCell>\n                        <a\n                          href={`${getPageUrl(PAGE_SUBSCRIPTION_FORM, this.props.locale)}?project=${this.state.projectId}&subscription=${subscription.id}`}\n                          style={{textDecoration: 'none'}}\n                        >\n                          <Button kind=\"ghost\" style={{display: 'block', width: '100%'}} value=\"Edit\">\n                            {i18n.t('buttons.edit')}\n                          </Button>\n                        </a>\n                        <Button\n                          kind=\"ghost\"\n                          onClick={event => this.handleDeleteSubscription(event, subscription.id)}\n                          className=\"button-warning\"\n                        >\n                          {i18n.t('buttons.delete')}\n                        </Button>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          )}\n        </DataTable>\n      </div>\n    );\n  }\n}\n\nexport default withKeycloak(ManageSubscriptions);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ManageSubscriptions from '../components/Admin/ManageSubscriptions/ManageSubscriptions';\nimport * as Locale from '../i18n';\n\nimport KeycloakContext from '../auth/KeycloakContext';\n\nimport {subscribeToWidgetEvent} from '../helpers/widgetEvents';\nimport {KEYCLOAK_EVENT_TYPE} from './widgetEventTypes';\n\nconst getKeycloakInstance = () =>\n  (window && window.entando && window.entando.keycloak && {...window.entando.keycloak, initialized: true}) || {\n    initialized: false,\n  };\n\nconst ATTRIBUTES = {\n  hidden: 'hidden',\n  locale: 'locale',\n  paginationMode: 'pagination-mode',\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\n  serviceUrl: 'service-url',\n};\n\nclass ManageSubscriptionsElement extends HTMLElement {\n  container;\n\n  mountPoint;\n\n  unsubscribeFromKeycloakEvent;\n\n  keycloak = getKeycloakInstance();\n\n  connectedCallback() {\n    this.mountPoint = document.createElement('div');\n    this.keycloak = {...getKeycloakInstance(), initialized: true};\n\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\n      this.keycloak = {...getKeycloakInstance(), initialized: true};\n      this.render();\n    });\n\n    this.render();\n\n    //retargetEvents(shadowRoot);\n    this.appendChild(this.mountPoint);\n  }\n\n  render() {\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\n    const locale = this.getAttribute(ATTRIBUTES.locale) || '';\n    Locale.setLocale(locale);\n\n    ReactDOM.render(\n      <KeycloakContext.Provider value={this.keycloak}>\n        <ManageSubscriptions serviceUrl={serviceUrl} locale={locale}/>\n      </KeycloakContext.Provider>,\n      this.mountPoint\n    );\n  }\n}\n\ncustomElements.get('cp-manage-subscriptions') || customElements.define('cp-manage-subscriptions', ManageSubscriptionsElement);\n","import { getDefaultOptions, request, getUrl } from './helpers';\r\n\r\nconst resource = 'api/portal-users';\r\n\r\nexport const apiUserDelete = async (serviceUrl, id) => {\r\n  const url = `${serviceUrl}/${resource}/${id}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE',\r\n  };\r\n  return await request(url, options);\r\n};\r\n\r\nexport const apiUsersPut = async (serviceUrl, user) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'PUT',\r\n    body: user ? JSON.stringify(user) : null,\r\n  };\r\n  return await request(url, options);\r\n};\r\n\r\nexport const apiUsersGet = async serviceUrl => {\r\n  const url = getUrl(`${serviceUrl}/${resource}`);\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return await request(url, options);\r\n};\r\n\r\nexport const apiUserGet = async (serviceUrl, userId) => {\r\n  const url = getUrl(`${serviceUrl}/${resource}/${userId}`);\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return await request(url, options);\r\n};\r\n\r\nexport const apiUserPost = async (serviceUrl, user) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n    body: user ? JSON.stringify(user) : null,\r\n  };\r\n  return await request(url, options);\r\n};\r\n\r\nexport const apiUserGetByUsernameAndEmail = async (serviceUrl, username, email) => {\r\n  const url = getUrl(`${serviceUrl}/${resource}/username/${username}/email/${email}`);\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return await request(url, options);\r\n};\r\n","import { getDefaultKeycloakOptions, request, getUrl } from './helpers';\r\n\r\nexport const apiKeycloakUserGet = async (serviceUrl, realm) => {\r\n  const usersResource = `admin/realms/${realm}/users`;\r\n  const url = `${serviceUrl}/${usersResource}`;\r\n  const options = {\r\n    ...getDefaultKeycloakOptions(),\r\n    method: 'GET',\r\n  };\r\n  return await request(url, options);\r\n};\r\n\r\nexport const apiKeycloakToken = async (serviceUrl, realm) => {\r\n  const tokenResource = `realms/${realm}/protocol/openid-connect/token`;\r\n  const url = getUrl(`${serviceUrl}/${tokenResource}`);\r\n  const keycloakBody = {\r\n    client_id: 'web_app',\r\n    username: 'admin',\r\n    password: 'admin',\r\n    grant_type: 'password',\r\n  };\r\n  const options = {\r\n    ...getDefaultKeycloakOptions(),\r\n    method: 'POST',\r\n    body: keycloakBody ? serialize(keycloakBody) : null,\r\n  };\r\n  return await request(url, options);\r\n};\r\n\r\nfunction serialize(obj) {\r\n  var str = [];\r\n  for (var p in obj)\r\n    if (obj.hasOwnProperty(p)) {\r\n      str.push(encodeURIComponent(p) + '=' + encodeURIComponent(obj[p]));\r\n    }\r\n  return str.join('&');\r\n}\r\n","import React, { Component } from 'react';\nimport { Form, Select, SelectItem, Button } from 'carbon-components-react';\nimport * as portalUserApi from '../../../api/portalusers';\nimport {apiAddUserToProject, apiProjectGet} from '../../../api/projects';\nimport withKeycloak from '../../../auth/withKeycloak';\nimport { apiKeycloakUserGet } from '../../../api/keycloak';\nimport i18n from '../../../i18n';\nimport {authenticationChanged, isAuthenticated} from \"../../../api/helpers\";\nclass AssignUsers extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      project: null,\n      projectId: '',\n      assignUser: '',\n      users: new Map(),\n      invalid: {},\n      submitMsg: '',\n      submitColour: 'black',\n    };\n  }\n\n  componentDidMount() {\n    if (isAuthenticated(this.props)) {\n      this.fetchData();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (authenticationChanged(this.props, prevProps)) {\n      this.fetchData();\n    }\n  }\n\n  async fetchData() {\n    const {keycloak} = this.props;\n    const users = this.mapKeycloakUserEmails((await apiKeycloakUserGet(keycloak.authServerUrl, keycloak.realm)).data);\n    const search = window.location.search;\n    const params = new URLSearchParams(search);\n    let projectId = params.get('project');\n    let project = null;\n    if (projectId != null) {\n      project = (await apiProjectGet(this.props.serviceUrl, projectId)).data;\n    } else {\n      projectId = '';\n    }\n\n    this.setState({\n      projectId: projectId,\n      project: project,\n      users: users,\n    });\n  }\n\n  mapKeycloakUserEmails = keycloakUsers => {\n    const usernameEmailMap = new Map();\n    keycloakUsers.forEach(keycloakUser => usernameEmailMap.set(keycloakUser.username, keycloakUser.email));\n    return usernameEmailMap;\n  };\n\n  handleChanges = e => {\n    const input = e.target;\n    const name = input.name;\n    const value = input.value;\n    this.setState({ [name]: value });\n  };\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    const { projectId, assignUser } = this.state;\n    const formIsValid = this.handleFormValidation();\n\n    if (formIsValid) {\n      this.assignUserToProject(projectId, assignUser).then(res => {\n        if (res && res.status === 201) {\n          this.setState({\n            submitMsg: i18n.t('submitMessages.updated'),\n            submitColour: '#24a148',\n          });\n          window.dispatchEvent(new CustomEvent('cp-user-assigned'));\n        } else {\n          this.setState({\n            submitMsg: i18n.t('submitMessages.error'),\n            submitColour: '#da1e28',\n          });\n        }\n      });\n    }\n  };\n\n  handleFormValidation() {\n    let invalid = {};\n    let formIsValid = true;\n    const { projectId, assignUser } = this.state;\n\n    //name\n    if (projectId === '') {\n      formIsValid = false;\n      invalid['projectId'] = true;\n    }\n\n    //customerNumber\n    if (assignUser === '') {\n      formIsValid = false;\n      invalid['assignUser'] = true;\n    }\n\n    this.setState({ invalid: invalid });\n    return formIsValid;\n  }\n\n  assignUserToProject = async (projectId, username) => {\n    const email = this.state.users.get(username);\n    if (!email) {\n      alert(\"User is missing an email address in keycloak and cannot be assigned.\")\n      return null;\n    }\n    const portalUserId = await this.getPortalUserId({username, email: this.state.users.get(username)});\n    return await apiAddUserToProject(this.props.serviceUrl, projectId, portalUserId);\n  };\n\n  getPortalUserId = async keycloakUser => {\n    let portalUserId = null;\n    try {\n      const portalUser = await portalUserApi.apiUserGetByUsernameAndEmail(this.props.serviceUrl,\n        keycloakUser.username, keycloakUser.email);\n      portalUserId = portalUser.data.id;\n    } catch (e) {\n      console.warn(e);\n    }\n\n    return portalUserId;\n  };\n\n  setupFormComponents() {\n    const users = this.state.users;\n    const project = this.state.project;\n    let userList;\n    let projectList;\n\n    if (users.size > 0) {\n      userList = [...users.keys()].map((assignUser, i) => (\n        <SelectItem key={i} text={assignUser} value={assignUser}>\n          {assignUser}\n        </SelectItem>\n      ));\n      userList.unshift(<SelectItem key=\"-1\" text={i18n.t('manageUsers.assign.userList')} value=\"\"/>);\n    } else {\n      userList = <SelectItem text={i18n.t('manageUsers.assign.noUsers')} value=\"\"/>;\n    }\n\n    if (project != null) {\n      projectList = <SelectItem key={project.id} text={project.name} value={project.id}/>;\n    } else {\n      projectList = <SelectItem text={i18n.t('manageUsers.assign.noProjects')} value=\"\"/>;\n    }\n\n    return {userList, projectList};\n  }\n\n  render() {\n    const { userList, projectList } = this.setupFormComponents();\n\n    return (\n      <div>\n        <p style={{ color: this.state.submitColour }}>{this.state.submitMsg}</p>\n        <Form onSubmit={this.handleFormSubmit}>\n          <div className=\"bx--grid\">\n            <div className=\"bx--row\">\n              <div className=\"bx--col\">\n                <Select\n                  id=\"projectId\"\n                  name=\"projectId\"\n                  labelText={i18n.t('manageUsers.assign.projectName')}\n                  value={this.state.projectId}\n                  onChange={this.handleChanges}\n                  invalidText={i18n.t('validation.invalid.required')}\n                  invalid={this.state.invalid['projectId']}\n                >\n                  {projectList}\n                </Select>\n              </div>\n            </div>\n            <div className=\"bx--row\">\n              <div className=\"bx--col\">\n                <Select\n                  id=\"assignUser\"\n                  name=\"assignUser\"\n                  labelText={i18n.t('manageUsers.assign.assignUser')}\n                  value={this.state.assignUser}\n                  onChange={this.handleChanges}\n                  invalidText={i18n.t('validation.invalid.required')}\n                  invalid={this.state.invalid['assignUser']}\n                >\n                  {userList}\n                </Select>\n              </div>\n            </div>\n            <Button kind=\"primary\" tabIndex={0} type=\"submit\">\n              {' '}\n              {i18n.t('buttons.submit')}{' '}\n            </Button>\n          </div>\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default withKeycloak(AssignUsers);\n","import React, {Component} from 'react';\nimport {\n  DataTable,\n  TableContainer,\n  Table,\n  TableHead,\n  TableRow,\n  TableHeader,\n  TableBody,\n  TableCell,\n  Button\n} from 'carbon-components-react';\nimport withKeycloak from '../../../auth/withKeycloak';\nimport i18n from '../../../i18n';\nimport {apiGetProjectUsers, apiDeleteUserFromProject} from '../../../api/projects';\nimport {authenticationChanged, isAuthenticated} from \"../../../api/helpers\";\n\nclass DeleteUsers extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      users: [],\n      displayUsers: [],\n      projectId: '',\n    };\n    this.headerData = [\n      {\n        header: i18n.t('manageUsers.delete.userName'),\n        key: 'username',\n      },\n      {\n        header: i18n.t('manageUsers.delete.userEmail'),\n        key: 'email',\n      },\n      {\n        header: i18n.t('manageUsers.delete.userAccess'),\n        key: 'userAccess',\n      },\n    ];\n    window.addEventListener('cp-user-assigned', event => {\n      this.fetchData();\n    });\n  }\n\n  componentDidMount() {\n    if (isAuthenticated(this.props)) {\n      this.fetchData();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (authenticationChanged(this.props, prevProps)) {\n      this.fetchData();\n    }\n  }\n\n  async fetchData() {\n    if (isAuthenticated(this.props)) {\n      let search = window.location.search;\n      const params = new URLSearchParams(search);\n      const projectId = params.get('project');\n      let users = [];\n      if (projectId != null) {\n        users = (await apiGetProjectUsers(this.props.serviceUrl, projectId)).data;\n      }\n\n      this.setState({\n        users,\n        projectId,\n      });\n\n      this.handleUserDisplay();\n    }\n  }\n\n  handleUserDisplay() {\n    const users = this.state.users;\n    const projectId = this.state.projectId;\n\n    const displayUsers = users.map(user => ({\n      id: user.username,\n      username: user.username,\n      email: user.email,\n      userAccess: (\n        <Button kind=\"ghost\" onClick={event => this.handleRemoveUser(user.id, projectId, event)}\n                className=\"button-warning\">\n          {i18n.t('manageUsers.delete.removeUser')}\n        </Button>\n      ),\n    }));\n\n    this.setState({\n      displayUsers,\n    });\n  }\n\n  handleRemoveUser = (userId, projectId, event) => {\n    event.preventDefault();\n\n    apiDeleteUserFromProject(this.props.serviceUrl, projectId, userId).then(res => {\n      if (res.status === 201) {\n        this.fetchData();\n      } else {\n        console.warn('Failed to delete user', res);\n      }\n    });\n  };\n\n  render() {\n    return (\n      <DataTable rows={this.state.displayUsers} headers={this.headerData}>\n        {({ rows, headers, getHeaderProps, getTableProps }) => (\n          <TableContainer>\n            <Table {...getTableProps()}>\n              <TableHead>\n                <TableRow>\n                  {headers.map(header => (\n                    <TableHeader {...getHeaderProps({ header })}>{header.header}</TableHeader>\n                  ))}\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {rows.map(row => (\n                  <TableRow key={row.id}>\n                    {row.cells.map(cell => (\n                      <TableCell key={cell.id}>{cell.value}</TableCell>\n                    ))}\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        )}\n      </DataTable>\n    );\n  }\n}\n\nexport default withKeycloak(DeleteUsers);\n","import React, {Component} from 'react';\nimport i18n from '../../../i18n';\nimport {Accordion, AccordionItem} from 'carbon-components-react';\nimport AssignUsers from './AssignUsers';\nimport DeleteUsers from './DeleteUsers';\nimport {authenticationChanged, isAuthenticated, isPortalAdmin} from '../../../api/helpers';\nimport withKeycloak from '../../../auth/withKeycloak';\nimport Breadcrumbs from \"../../Breadcrumbs/Breadcrumbs\";\n\nclass ManageUsers extends Component {\n  userFunctionality;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n    };\n    this.userFunctionality = [\n      {\n        label: (\n          <div>\n            <p className=\"title\">{i18n.t('manageUsers.manage.title')}</p>\n            <p className=\"desc\">{i18n.t('manageUsers.manage.desc')}</p>\n          </div>\n        ),\n        content: <DeleteUsers serviceUrl={this.props.serviceUrl}/>,\n        open: true,\n      },\n      {\n        label: (\n          <div>\n            <p className=\"title\">{i18n.t('manageUsers.assign.title')}</p>\n            <p className=\"desc\">{i18n.t('manageUsers.assign.desc')}</p>\n          </div>\n        ),\n        content: <AssignUsers serviceUrl={this.props.serviceUrl}/>,\n        open: true,\n      },\n    ];\n  }\n\n  componentDidMount() {\n    if (isAuthenticated(this.props)) {\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (authenticationChanged(this.props, prevProps)) {\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n\n  render() {\n    if (!this.state.loading) {\n      if (isPortalAdmin()) {\n        return (\n          <div id=\"entando-customer-portal\">\n            <Breadcrumbs locale={this.props.locale}/>\n            <div className=\"form-container\">\n              <Accordion>\n                {this.userFunctionality.map((item, index) => (\n                  <AccordionItem key={index.toString()} index={index} title={item.label} description={item.description}\n                                 open={item.open}>\n                    {item.content}\n                  </AccordionItem>\n                ))}\n              </Accordion>\n            </div>\n          </div>\n        );\n      }\n      // Unauthorized\n      else {\n        return <p>{i18n.t('userMessages.unauthorized')}</p>;\n      }\n    }\n    // Loading\n    else {\n      return null;\n    }\n  }\n}\n\nexport default withKeycloak(ManageUsers);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ManageUsers from '../components/Admin/ManageUsers/ManageUsers';\nimport '../index.scss';\nimport * as Locale from '../i18n';\n\nimport KeycloakContext from '../auth/KeycloakContext';\n\nimport { subscribeToWidgetEvent } from '../helpers/widgetEvents';\nimport { KEYCLOAK_EVENT_TYPE } from './widgetEventTypes';\n\nconst getKeycloakInstance = () =>\n  (window && window.entando && window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\n    initialized: false,\n  };\n\nconst ATTRIBUTES = {\n  hidden: 'hidden',\n  locale: 'locale',\n  paginationMode: 'pagination-mode',\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\n  serviceUrl: 'service-url',\n};\n\nclass ManageUsersElement extends HTMLElement {\n  container;\n\n  mountPoint;\n\n  unsubscribeFromKeycloakEvent;\n\n  keycloak = getKeycloakInstance();\n\n  connectedCallback() {\n    this.mountPoint = document.createElement('div');\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\n\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\n      this.render();\n    });\n\n    this.render();\n\n    //retargetEvents(shadowRoot);\n    this.appendChild(this.mountPoint);\n  }\n\n  render() {\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\n    const locale = this.getAttribute(ATTRIBUTES.locale) || '';\n    Locale.setLocale(locale);\n\n    ReactDOM.render(\n      <KeycloakContext.Provider value={this.keycloak}>\n        <ManageUsers serviceUrl={serviceUrl} locale={locale}/>\n      </KeycloakContext.Provider>,\n      this.mountPoint\n    );\n  }\n}\n\ncustomElements.get('cp-manage-users') || customElements.define('cp-manage-users', ManageUsersElement);\n","import React, {Component} from 'react';\nimport i18n from '../../i18n';\nimport {Form, Select, SelectItem, Button, TextArea, TextInput} from 'carbon-components-react';\nimport withKeycloak from '../../auth/withKeycloak';\nimport {apiProjectGet} from '../../api/projects';\nimport {apiJiraTicketPost} from '../../api/tickets';\nimport {authenticationChanged, getActiveSubscription, isAuthenticated, isPortalUser} from '../../api/helpers';\nimport Breadcrumbs from \"../Breadcrumbs/Breadcrumbs\";\n\nclass OpenTicketForm extends Component {\n  constructor() {\n    super();\n    this.state = {\n      loading: true,\n      project: {},\n      role: '',\n      invalid: {},\n      submitMsg: '',\n      submitColour: 'black',\n      //form fields\n      type: 'Support',\n      priority: 'Medium',\n      status: 'To Do',\n      summary: '',\n      description: '',\n    };\n    this.types = ['Support', 'New Feature', 'Bug'];\n    this.priorities = ['Critical', 'High', 'Medium', 'Low'];\n  }\n\n  componentDidMount() {\n    if (isAuthenticated(this.props)) {\n      this.fetchData();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (authenticationChanged(this.props, prevProps)) {\n      this.fetchData();\n    }\n  }\n\n  async fetchData() {\n    if (!isPortalUser()) {\n      return;\n    }\n\n    let search = window.location.search;\n    let params = new URLSearchParams(search);\n    let projectId = params.get('project');\n    let project = (await apiProjectGet(this.props.serviceUrl, projectId)).data;\n\n    if (!project) {\n      console.error('Unable to retrieve projectId ', projectId);\n      project = {};\n    }\n\n    this.setState({\n      project: project,\n      loading: false,\n    });\n  }\n\n  handleValidation() {\n    let invalid = {};\n    let formIsValid = true;\n\n    if (this.state.type === '') {\n      formIsValid = false;\n      invalid['type'] = true;\n    }\n\n    if (this.state.summary === '') {\n      formIsValid = false;\n      invalid['summary'] = true;\n    }\n\n    if (this.state.description === '') {\n      formIsValid = false;\n      invalid['description'] = true;\n    }\n\n    if (this.state.priority === '') {\n      formIsValid = false;\n      invalid['priority'] = true;\n    }\n\n    this.setState({\n      invalid: invalid,\n    });\n    return formIsValid;\n  }\n\n  handleChanges = e => {\n    const input = e.target;\n    const name = input.name;\n    const value = input.value;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n\n    const formIsValid = this.handleValidation();\n\n    if (formIsValid) {\n      const subscription = getActiveSubscription(this.state.project);\n      if (subscription) {\n        this.createTicket()\n          .then(() => {\n            this.setState({\n              submitMsg: i18n.t('submitMessages.created'),\n              submitColour: '#24a148',\n            });\n          })\n          .catch(() => {\n            this.setState({\n              submitMsg: i18n.t('submitMessages.ticketError'),\n              submitColour: '#da1e28',\n            });\n          });\n      }\n      // if no subscriptions, don't create ticket\n      else {\n        this.setState({\n          submitMsg: i18n.t('submitMessages.subscriptionRequired'),\n          submitColour: '#da1e28',\n        });\n      }\n    } else {\n      this.setState({\n        submitMsg: i18n.t('submitMessages.error'),\n        submitColour: '#da1e28',\n      });\n    }\n  };\n\n  async createTicket() {\n    if (isPortalUser()) {\n      const ticket = {\n        type: this.state.type,\n        summary: this.state.summary,\n        description: this.state.description,\n        priority: this.state.priority,\n        // these fields are just placeholders to validate the POST request (fields will be set in the backend)\n        systemId: '999',\n        status: 'To Do',\n        createDate: '2021-02-22T14:14:09-05:00',\n        updateDate: '2021-02-22T14:14:09-05:00',\n      };\n      return await apiJiraTicketPost(this.props.serviceUrl, this.state.project.id, ticket);\n    }\n  }\n\n  render() {\n    if (!this.state.loading) {\n      if (isPortalUser()) {\n        return (\n          <div id=\"entando-customer-portal\">\n            <Breadcrumbs project={this.state.project} locale={this.props.locale}/>\n            <div className=\"form-container\">\n              <p style={{color: this.state.submitColour}}>{this.state.submitMsg}</p>\n              <Form onSubmit={this.handleFormSubmit}>\n                <div className=\"bx--grid\">\n                  <div className=\"bx--row\" style={{padding: '1em 0'}}>\n                    <div className=\"bx--col\">\n                      <div className=\"form-desc\">\n                        <h4>{i18n.t('supportTicketForm.formTitle')}</h4>\n                        <div>{i18n.t('supportTicketForm.desc')}</div>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"bx--row\">\n                    <div className=\"bx--col\">\n                      <div>\n                        <strong>{i18n.t('projectDetails.project')}:</strong> {this.state.project.name}\n                      </div>\n                      <Select\n                        id=\"type\"\n                        name=\"type\"\n                        labelText={i18n.t('supportTicketForm.type') + ' *'}\n                        value={this.state.type}\n                        onChange={this.handleChanges}\n                        invalidText={i18n.t('validation.invalid.required')}\n                        invalid={this.state.invalid['type']}\n                      >\n                        {this.types.map((type, i) => (\n                          <SelectItem key={i} text={type} value={type}>\n                            {type}\n                          </SelectItem>\n                        ))}\n                      </Select>\n                      <Select\n                        id=\"priority\"\n                        name=\"priority\"\n                        labelText={i18n.t('supportTicketForm.priority') + ' *'}\n                        value={this.state.priority}\n                        onChange={this.handleChanges}\n                        invalidText={i18n.t('validation.invalid.required')}\n                        invalid={this.state.invalid['priority']}\n                      >\n                        {this.priorities.map((priority, i) => (\n                          <SelectItem key={i} text={priority} value={priority}>\n                            {priority}\n                          </SelectItem>\n                        ))}\n                      </Select>\n                    </div>\n                  </div>\n                  <div className=\"bx--row\">\n                    <div className=\"bx--col\">\n                      <TextInput\n                        labelText={i18n.t('supportTicketForm.ticketSummary') + ' *'}\n                        placeholder={i18n.t('supportTicketForm.addticketSummary')}\n                        id=\"summary\"\n                        name=\"summary\"\n                        value={this.state.summary}\n                        onChange={this.handleChanges}\n                        invalidText={i18n.t('validation.invalid.required')}\n                        invalid={this.state.invalid['summary']}\n                      />\n                    </div>\n                  </div>\n                  <div className=\"bx--row\">\n                    <div className=\"bx--col\">\n                      <TextArea\n                        labelText={i18n.t('supportTicketForm.ticketDescription') + ' *'}\n                        placeholder={i18n.t('supportTicketForm.addticketDescription')}\n                        name=\"description\"\n                        value={this.state.description}\n                        onChange={this.handleChanges}\n                        invalidText={i18n.t('validation.invalid.required')}\n                        invalid={this.state.invalid['description']}\n                      />\n                      <Button kind=\"primary\" tabIndex={0} type=\"submit\">\n                        {' '}\n                        {i18n.t('buttons.submit')}{' '}\n                      </Button>\n                    </div>\n                  </div>\n                </div>\n              </Form>\n            </div>\n          </div>\n        );\n      } else {\n        return <p>{i18n.t('userMessages.unauthorized')}</p>;\n      }\n    } else {\n      return null;\n    }\n  }\n}\n\nexport default withKeycloak(OpenTicketForm);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport OpenTicketForm from '../components/Forms/OpenTicketForm';\nimport '../index.scss';\nimport * as Locale from '../i18n';\n\nimport KeycloakContext from '../auth/KeycloakContext';\n\nimport {subscribeToWidgetEvent} from '../helpers/widgetEvents';\nimport {KEYCLOAK_EVENT_TYPE} from './widgetEventTypes';\n\nconst getKeycloakInstance = () =>\n  (window && window.entando && window.entando.keycloak && {...window.entando.keycloak, initialized: true}) || {\n    initialized: false,\n  };\n\nconst ATTRIBUTES = {\n  hidden: 'hidden',\n  locale: 'locale',\n  paginationMode: 'pagination-mode',\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\n  serviceUrl: 'service-url',\n};\n\nclass OpenTicketElement extends HTMLElement {\n  container;\n\n  mountPoint;\n\n  unsubscribeFromKeycloakEvent;\n\n  keycloak = getKeycloakInstance();\n\n  connectedCallback() {\n    this.mountPoint = document.createElement('div');\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\n\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\n      this.render();\n    });\n\n    this.render();\n\n    //retargetEvents(shadowRoot);\n    this.appendChild(this.mountPoint);\n  }\n\n  render() {\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\n    const locale = this.getAttribute(ATTRIBUTES.locale) || '';\n    Locale.setLocale(locale);\n\n    ReactDOM.render(\n      <KeycloakContext.Provider value={this.keycloak}>\n        <OpenTicketForm serviceUrl={serviceUrl} locale={locale}/>\n      </KeycloakContext.Provider>,\n      this.mountPoint\n    );\n  }\n}\n\ncustomElements.get('cp-open-ticket') || customElements.define('cp-open-ticket', OpenTicketElement);\n","import React, {Component} from 'react';\nimport i18n from '../../i18n';\nimport {\n  Form,\n  TextInput,\n  Select,\n  SelectItem,\n  Button,\n  DatePicker,\n  DatePickerInput,\n  TextArea\n} from 'carbon-components-react';\nimport withKeycloak from '../../auth/withKeycloak';\nimport {apiProjectGet} from '../../api/projects';\nimport {\n  apiProjectSubscriptionPost,\n  apiProjectSubscriptionPut,\n  apiRenewSubscription,\n  apiSubscriptionGet,\n  stripTime,\n} from '../../api/subscriptions';\nimport {apiProductVersionsGet} from '../../api/productVersion';\nimport {authenticationChanged, isAuthenticated, isPortalAdmin, isPortalUser} from '../../api/helpers';\nimport {apiAddSubscriptionToProject} from '../../api/projects';\nimport moment from 'moment';\nimport Breadcrumbs from \"../Breadcrumbs/Breadcrumbs\";\n\nconst FORM_TYPE = {\n  new: 'new',\n  renewal: 'renewal',\n  edit: 'edit',\n};\n\nconst SUBSCRIPTION_LEVEL = {\n  GOLD: 'GOLD',\n  PLATINUM: 'PLATINUM',\n};\n\nconst SUBSCRIPTION_STATUS = {\n  requested: 'REQUESTED',\n  pending: 'PENDING',\n  active: 'ACTIVE',\n  expired: 'EXPIRED',\n};\n\nclass SubscriptionForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      project: {},\n      projectId: '',\n      subscription: {},\n      startDate: '',\n      level: 'PLATINUM',\n      lengthInMonths: '',\n      notes: '',\n      entandoVersionId: '',\n      status: '',\n      formType: 'new',\n      invalid: {},\n      productVersions: [],\n      submitSuccess: false,\n      submitError: false,\n      submitColour: 'black',\n    };\n  }\n\n  componentDidMount() {\n    if (isAuthenticated(this.props)) {\n      this.fetchData();\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (authenticationChanged(this.props, prevProps)) {\n      this.fetchData();\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n\n  async fetchData() {\n    if (!isPortalUser()) {\n      return;\n    }\n\n    const serviceUrl = this.props.serviceUrl;\n\n    const search = window.location.search;\n    const params = new URLSearchParams(search);\n\n    const subscriptionId = params.get('subscription');\n    let projectId = params.get('project');\n\n    let subscription = {};\n    let project = {};\n    let formType = FORM_TYPE.new;\n    let status = '';\n    const isAdmin = isPortalAdmin();\n\n    if (subscriptionId !== null) {\n      subscription = (await apiSubscriptionGet(serviceUrl, subscriptionId)).data;\n      status = isAdmin ? subscription.status : SUBSCRIPTION_STATUS.requested;\n      formType = isAdmin ? FORM_TYPE.edit : FORM_TYPE.renewal;\n      project = subscription.project;\n    } else if (projectId !== null) {\n      project = (await apiProjectGet(serviceUrl, projectId)).data;\n      status = isAdmin ? SUBSCRIPTION_STATUS.pending : SUBSCRIPTION_STATUS.requested;\n    } else {\n      console.log('Unable to load project and/or subscription');\n      return;\n    }\n\n    const productVersions = (await apiProductVersionsGet(serviceUrl)).data;\n\n    this.setState({\n      subscription: subscription,\n      level: subscription.level ? subscription.level : '',\n      entandoVersionId: subscription.entandoVersion ? subscription.entandoVersion.id : '',\n      startDate: stripTime(subscription.startDate),\n      lengthInMonths: subscription.lengthInMonths ? subscription.lengthInMonths : '',\n      notes: subscription.notes ? subscription.notes : '',\n      status: status,\n      formType: formType,\n      project: project,\n      projectId: projectId,\n      productVersions: productVersions,\n    });\n  }\n\n  isNumeric(str) {\n    return !isNaN(str) && !isNaN(parseInt(str));\n  }\n\n  handleValidation() {\n    let invalid = {};\n\n    if (!this.state.startDate || !this.state.startDate.match(/^(0[1-9]|1[0-2])\\/(0[1-9]|1\\d|2\\d|3[01])\\/(19|20)\\d{2}$/)) {\n      invalid['startDate'] = true;\n    }\n\n    if (!this.state.lengthInMonths || !this.isNumeric(this.state.lengthInMonths)) {\n      invalid['lengthInMonths'] = true;\n    }\n\n    if (!this.state.level) {\n      invalid['level'] = true;\n    }\n\n    if (this.state.entandoVersionId === '') {\n      invalid['entandoVersionId'] = true;\n    }\n\n    this.setState({ invalid: invalid });\n    return Object.keys(invalid).length === 0;\n  }\n\n  handleChanges = e => {\n    const input = e.target;\n    const name = input.name;\n    const value = input.value;\n    this.setState({ [name]: value });\n    this.setState({\n      submitSuccess: false,\n      submitError: false,\n    });\n  };\n\n  handleStartDateChange = date => {\n    let formatted = '';\n    if (date && date[0]) {\n      formatted = moment(date[0].toISOString()).format('MM/DD/YYYY');\n    }\n    this.setState({\n      startDate: formatted,\n    });\n  };\n\n  updateStateForSuccess(success) {\n    if (success) {\n      this.setState({\n        submitSuccess: true,\n        submitError: false,\n        submitColour: '#24a148',\n      });\n    } else {\n      this.setState({\n        submitSuccess: false,\n        submitError: true,\n        submitColour: '#da1e28',\n      });\n    }\n  }\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    this.setState({\n      submitSuccess: false,\n      submitError: false,\n    });\n    const formIsValid = this.handleValidation();\n\n    if (formIsValid) {\n      const formType = this.state.formType;\n      const serviceUrl = this.props.serviceUrl;\n      const subscriptionRequest = this.stateToSubscription();\n\n      if (formType === FORM_TYPE.edit) {\n        apiProjectSubscriptionPut(serviceUrl, subscriptionRequest)\n          .then(() => {\n            this.updateStateForSuccess(true);\n          })\n          .catch(() => {\n            this.updateStateForSuccess(false);\n          });\n      } else if (formType === FORM_TYPE.new) {\n        this.newSubscription(subscriptionRequest)\n          .then(res => {\n            apiAddSubscriptionToProject(serviceUrl, this.state.projectId, res.data.id);\n            this.updateStateForSuccess(true);\n          })\n          .catch(() => {\n            this.updateStateForSuccess(false);\n          });\n      } else if (formType === FORM_TYPE.renewal) {\n        this.renewSubscription(subscriptionRequest)\n          .then(res => {\n            apiAddSubscriptionToProject(serviceUrl, this.state.projectId, res.data.id);\n            this.updateStateForSuccess(true);\n          })\n          .catch(() => {\n            this.updateStateForSuccess(false);\n          });\n      } else {\n        console.log('Illegal operation');\n      }\n    }\n  };\n\n  stateToSubscription() {\n    return {\n      entandoVersionId: this.state.entandoVersionId,\n      projectId: this.state.projectId,\n      renewal: this.state.formType === FORM_TYPE.renewal,\n      projectSubscription: {\n        id: this.state.subscription.id,\n        startDate: new Date(this.state.startDate),\n        lengthInMonths: this.state.lengthInMonths,\n        level: this.state.level,\n        status: this.state.status.toUpperCase(),\n        notes: this.state.notes,\n      },\n    };\n  }\n\n  async newSubscription(request) {\n    return await apiProjectSubscriptionPost(this.props.serviceUrl, request);\n  }\n\n  async renewSubscription(request) {\n    return await apiRenewSubscription(this.props.serviceUrl, request);\n  }\n\n  setupFormComponents() {\n    const subscriptionLevelList = Object.entries(SUBSCRIPTION_LEVEL).map(([key, value]) => (\n      <SelectItem key={key} text={value} value={key}>\n        {value}\n      </SelectItem>\n    ));\n    subscriptionLevelList.unshift(<SelectItem key=\"-1\" text={i18n.t('subscriptionForm.chooseLevel')} value=\"\"/>);\n\n    const versionList = this.state.productVersions.map(version => {\n      // only allow the user to choose from active entando versions\n      if (version.status) {\n        return (\n          <SelectItem key={version.id} text={version.name} value={version.id}>\n            {version.name}\n          </SelectItem>\n        );\n      } else {\n        return null;\n      }\n    });\n    versionList.unshift(<SelectItem key=\"-1\" text={i18n.t('subscriptionForm.chooseVersion')} value=\"\"/>);\n\n    const statusList = Object.entries(SUBSCRIPTION_STATUS).map(([key, value]) => (\n      <SelectItem key={key} text={value} value={value}>\n        {value}\n      </SelectItem>\n    ));\n\n    return {subscriptionLevelList, versionList, statusList};\n  }\n\n  renderForm() {\n    const {subscriptionLevelList, versionList, statusList} = this.setupFormComponents();\n    return (\n      <div>\n        <div className=\"bx--row\">\n          <div className=\"bx--col\">\n            <div>\n              <span>{i18n.t('subscriptionForm.projectName')}:</span> {this.state.project.name}\n            </div>\n            <Select\n              id=\"status\"\n              name=\"status\"\n              labelText={i18n.t('subscriptionForm.subscriptionStatus')}\n              value={this.state.status}\n              onChange={this.handleChanges}\n              invalidText={i18n.t('validation.invalid.required')}\n              invalid={this.state.invalid['status']}\n              disabled={!isPortalAdmin()}\n            >\n              {statusList}\n            </Select>\n            <Select\n              id=\"level\"\n              name=\"level\"\n              labelText={i18n.t('subscriptionForm.subscriptionLevel') + ' *'}\n              value={this.state.level || ''}\n              onChange={this.handleChanges}\n              invalidText={i18n.t('validation.invalid.required')}\n              invalid={this.state.invalid['level']}\n            >\n              {subscriptionLevelList}\n            </Select>\n            <Select\n              id=\"entandoVersionId\"\n              name=\"entandoVersionId\"\n              labelText={i18n.t('subscriptionForm.entandoVersion') + ' *'}\n              value={this.state.entandoVersionId}\n              onChange={this.handleChanges}\n              invalidText={i18n.t('validation.invalid.required')}\n              invalid={this.state.invalid['entandoVersionId']}\n            >\n              {versionList}\n            </Select>\n          </div>\n          <div className=\"bx--col\">\n            <DatePicker dateFormat=\"m/d/Y\" datePickerType=\"single\" value={this.state.startDate}\n                        onChange={this.handleStartDateChange}>\n              <DatePickerInput\n                id=\"startDate\"\n                name=\"startDate\"\n                placeholder=\"mm/dd/yyyy\"\n                labelText={i18n.t('subscriptionForm.subscriptionStartDate')}\n                type=\"text\"\n                invalidText={i18n.t('validation.invalid.date')}\n                invalid={this.state.invalid['startDate']}\n              />\n            </DatePicker>\n            <TextInput\n              id=\"lengthInMonths\"\n              name=\"lengthInMonths\"\n              labelText={i18n.t('subscriptionForm.subscriptionLength') + ' *'}\n              value={this.state.lengthInMonths}\n              onChange={this.handleChanges}\n              invalidText={i18n.t('validation.invalid.number')}\n              invalid={this.state.invalid['lengthInMonths']}\n            />\n            {isPortalAdmin() && (\n              <TextArea\n                id={'notes'}\n                name=\"notes\"\n                labelText={i18n.t('adminDashboard.addProject.notes')}\n                value={this.state.notes}\n                onChange={this.handleChanges}\n              />\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  successErrorMessage() {\n    const isAdmin = isPortalAdmin();\n    const { subscriptionType, submitSuccess, submitError } = this.state;\n\n    if (subscriptionType === 'new') {\n      if (submitSuccess) {\n        return isAdmin ? this.createFormMessage('adminSubmitNewSuccess') : this.createFormMessage('customerSubmitSuccess');\n      } else if (submitError) {\n        return this.createFormMessage('newSubError');\n      }\n    } else {\n      if (submitSuccess) {\n        return isAdmin ? this.createFormMessage('adminRenewNewSuccess') : this.createFormMessage('customerSubmitSuccess');\n      } else if (submitError) {\n        return this.createFormMessage('renewSubError');\n      }\n    }\n  }\n\n  createFormMessage(subMessageKey) {\n    return <p style={{ color: this.state.submitColour }}>{i18n.t(`subscriptionForm.${subMessageKey}`)}</p>;\n  }\n\n  render() {\n    const formType = this.state.formType;\n    let formLabelKey = 'subscriptionForm.newSubscription';\n    if (formType !== 'new') {\n      formLabelKey = isPortalAdmin() ? 'subscriptionForm.editSubscription' : 'subscriptionForm.renewSubscription';\n    }\n\n    if (!this.state.loading) {\n      if (isPortalUser()) {\n        return (\n          <div id=\"entando-customer-portal\">\n            <Breadcrumbs project={this.state.project} subscription={this.state.subscription}\n                         locale={this.props.locale}/>\n            <div className=\"form-container\">\n              {this.successErrorMessage()}\n              <Form onSubmit={this.handleFormSubmit}>\n                <div className=\"bx--grid\">\n                  <div className=\"bx--row\">\n                    <div className=\"bx--col\">\n                      <strong>{i18n.t(formLabelKey)}</strong>\n                    </div>\n                  </div>\n                  {this.renderForm()}\n                  <Button kind=\"primary\" tabIndex={0} type=\"submit\">\n                    {' '}\n                    {i18n.t('buttons.submit')}\n                  </Button>\n                </div>\n              </Form>\n            </div>\n          </div>\n        );\n      } else {\n        return <p>{i18n.t('userMessages.unauthorized')}</p>;\n      }\n    }\n    // Loading\n    else {\n      return null;\n    }\n  }\n}\n\nexport default withKeycloak(SubscriptionForm);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport SubscriptionForm from '../components/Forms/SubscriptionForm';\nimport '../index.scss';\nimport * as Locale from '../i18n';\n\nimport KeycloakContext from '../auth/KeycloakContext';\n\nimport { subscribeToWidgetEvent } from '../helpers/widgetEvents';\nimport { KEYCLOAK_EVENT_TYPE } from './widgetEventTypes';\n\nconst getKeycloakInstance = () =>\n  (window && window.entando && window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\n    initialized: false,\n  };\n\nconst ATTRIBUTES = {\n  hidden: 'hidden',\n  locale: 'locale',\n  paginationMode: 'pagination-mode',\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\n  serviceUrl: 'service-url',\n};\n\nclass SubscriptionFormElement extends HTMLElement {\n  container;\n\n  mountPoint;\n\n  unsubscribeFromKeycloakEvent;\n\n  keycloak = getKeycloakInstance();\n\n  connectedCallback() {\n    this.mountPoint = document.createElement('div');\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\n\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\n      this.render();\n    });\n\n    this.render();\n\n    //retargetEvents(shadowRoot);\n    this.appendChild(this.mountPoint);\n  }\n\n  render() {\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\n    const locale = this.getAttribute(ATTRIBUTES.locale) || '';\n    Locale.setLocale(locale);\n\n    ReactDOM.render(\n      <KeycloakContext.Provider value={this.keycloak}>\n        <SubscriptionForm serviceUrl={serviceUrl} locale={locale}/>\n      </KeycloakContext.Provider>,\n      this.mountPoint\n    );\n  }\n}\n\ncustomElements.get('cp-subscription-form') || customElements.define('cp-subscription-form', SubscriptionFormElement);\n","import React, {Component} from 'react';\nimport {BrowserRouter, Route, Switch, Link} from 'react-router-dom';\nimport App from '../components/App';\nimport withKeycloak from '../auth/withKeycloak';\nimport SubscriptionForm from '../components/Forms/SubscriptionForm';\nimport AdminConfiguration from '../components/Admin/Configuration/AdminConfiguration';\nimport OpenTicketForm from '../components/Forms/OpenTicketForm';\nimport ManageUsers from '../components/Admin/ManageUsers/ManageUsers';\nimport ManageSubscriptions from '../components/Admin/ManageSubscriptions/ManageSubscriptions';\nimport {authenticationChanged, getPageUrl, isAuthenticated, isPortalAdmin} from '../api/helpers';\nimport {\n  PAGE_ADMIN_CONFIG, PAGE_CUSTOMER_PORTAL, PAGE_MANAGE_SUBSCRIPTIONS,\n  PAGE_MANAGE_USERS,\n  PAGE_SUBSCRIPTION_FORM,\n  PAGE_TICKET_FORM\n} from \"../api/constants\";\nimport Login from \"../components/Login/Login\";\n\nclass LocalApp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n    };\n  }\n\n  componentDidMount() {\n    if (isAuthenticated(this.props)) {\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (authenticationChanged(this.props, prevProps)) {\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n\n  render() {\n    const {locale, serviceUrl} = this.props;\n    if (!this.state.loading) {\n      return (\n        <div>\n          <BrowserRouter forceRefresh={true}>\n            <Login locale={locale}/>\n            <div>\n              <ul>\n                {isPortalAdmin() && (\n                  <li>\n                    <Link to={getPageUrl(PAGE_ADMIN_CONFIG, locale)}>Admin</Link>\n                  </li>\n                )}\n              </ul>\n            </div>\n            <Switch>\n              <Route path={getPageUrl(PAGE_ADMIN_CONFIG, locale)}>\n                <AdminConfiguration serviceUrl={serviceUrl} locale={locale}/>\n              </Route>\n              <Route path={getPageUrl(PAGE_MANAGE_SUBSCRIPTIONS, locale)}>\n                <ManageSubscriptions serviceUrl={serviceUrl} locale={locale}/>\n              </Route>\n              <Route path={getPageUrl(PAGE_MANAGE_USERS, locale)}>\n                <ManageUsers serviceUrl={serviceUrl} locale={locale}/>\n              </Route>\n              <Route path={getPageUrl(PAGE_SUBSCRIPTION_FORM, locale)}>\n                <SubscriptionForm serviceUrl={serviceUrl} locale={locale}/>\n              </Route>\n              <Route path={getPageUrl(PAGE_TICKET_FORM, locale)}>\n                <OpenTicketForm serviceUrl={serviceUrl} locale={locale}/>\n              </Route>\n              <Route path={getPageUrl(PAGE_CUSTOMER_PORTAL, locale)}>\n                <App serviceUrl={serviceUrl} locale={locale}/>\n              </Route>\n              <Route path=\"/\" exact={true}>\n                <App serviceUrl={serviceUrl} locale={locale}/>\n              </Route>\n            </Switch>\n          </BrowserRouter>\n        </div>\n      );\n    } else {\n      return null;\n    }\n  }\n}\n\nexport default withKeycloak(LocalApp);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '../index.scss';\n// import './entando.css';\nimport * as Locale from '../i18n';\n\nimport KeycloakContext from '../auth/KeycloakContext';\nimport LocalApp from '../local/LocalApp';\n\nimport {subscribeToWidgetEvent} from '../helpers/widgetEvents';\nimport {KEYCLOAK_EVENT_TYPE} from '../custom-elements/widgetEventTypes';\n\nconst getKeycloakInstance = () =>\n  (window && window.entando && window.entando.keycloak && {...window.entando.keycloak, initialized: true}) || {\n    initialized: false,\n  };\n\nconst ATTRIBUTES = {\n  hidden: 'hidden',\n  locale: 'locale',\n  paginationMode: 'pagination-mode',\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\n  serviceUrl: 'service-url',\n};\n\nclass LocalAppElement extends HTMLElement {\n  container;\n\n  mountPoint;\n\n  unsubscribeFromKeycloakEvent;\n\n  keycloak = getKeycloakInstance();\n\n  connectedCallback() {\n    this.mountPoint = document.createElement('div');\n    this.keycloak = {...getKeycloakInstance(), initialized: true};\n\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\n      this.keycloak = {...getKeycloakInstance(), initialized: true};\n      this.render();\n    });\n\n    this.render();\n\n    //retargetEvents(shadowRoot);\n    this.appendChild(this.mountPoint);\n  }\n\n  render() {\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\n    const locale = this.getAttribute(ATTRIBUTES.locale) || '';\n    Locale.setLocale(locale);\n\n    ReactDOM.render(\n      <KeycloakContext.Provider value={this.keycloak}>\n        <LocalApp serviceUrl={serviceUrl} locale={locale}/>\n      </KeycloakContext.Provider>,\n      this.mountPoint\n    );\n  }\n}\n\ncustomElements.define('cp-local-app', LocalAppElement);\n"],"sourceRoot":""}