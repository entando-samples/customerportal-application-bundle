{"version":3,"sources":["i18n.js","auth/KeycloakContext.js","components/__types__/ref.js","auth/withKeycloak.js","api/helpers.js","api/customers.js","components/Admin/AddCustomerModal.js","api/partners.js","api/projects.js","components/Admin/AddPartnerModal.js","components/Admin/AddProjectModal.js","auth/KeycloakViews.js","components/Admin/EditProjectModal.js","components/Customer/customDataTable.js","components/Customer/customerDetails.js","components/Admin/EditCustomerModal.js","components/Customer/CustomerAccordian.js","components/Admin/AdminDashboard.js","helpers/widgetEvents.js","custom-elements/widgetEventTypes.js","custom-elements/AdminDashboardElement.js","api/tickets.js","api/ticketingsystem.js","components/SubscriptionDetails/TicketList.js","api/subscriptions.js","api/portalusers.js","components/Admin/EditSubscriptionModal.js","components/SubscriptionDetails/subscription.js","api/keycloak.js","components/Customer/CustomerProjectList.js","components/App.js","custom-elements/AdminAddCustomerElement.js","components/Admin/RoleCheck.js","custom-elements/AdminRoleCheckElement.js","custom-elements/CustomDataTableElement.js","custom-elements/CustomerDetailsElement.js","custom-elements/SubscriptionElement.js","components/Forms/openTicket.js","custom-elements/FormsOpenTicketElement.js","components/Navigation/Navigation.js","custom-elements/NavigationElement.js","components/Forms/enhancementRequest.js","custom-elements/FormsEnhancementRequestElement.js","custom-elements/AppElement.js","custom-elements/TicketListElement.js","components/Admin/Configuration/TicketingSystem.js","api/productVersion.js","components/Admin/AddProductVersionModal.js","components/Admin/EditVersionModal.js","components/Admin/Configuration/ProductVersion.js","components/Admin/Configuration/AdminConfiguration.js","custom-elements/AdminConfigurationElement.js","custom-elements/OpenTicketElement.js","components/Admin/ManageUser/AssignUser.js","components/Admin/ManageUser/DeleteUser.js","components/Admin/ManageUser/ManageUser.js","custom-elements/ManageUserElement.js","custom-elements/AssignUserElement.js","custom-elements/DeleteUserElement.js","custom-elements/TicketingSystemElement.js","custom-elements/ProductVersionElement.js","components/Forms/SubscriptionForm.js","custom-elements/SubscriptionFormElement.js"],"names":["i18n","defaultLocale","locale","fallbacks","translations","en","it","setLocale","KeycloakContext","PropTypes","oneOfType","func","shape","current","elementType","React","createContext","withKeycloak","WrappedComponent","WithKeycloakComponent","renderWrappedComponent","value","props","forwardedRef","rest","ref","keycloak","Consumer","this","Component","defaultProps","forwardRef","getKeycloakToken","window","entando","authenticated","token","hasKeycloakClientRole","clientRole","resourceAccess","client","item","roles","includes","getDefaultOptions","headers","Headers","Authorization","getDefaultKeycloakOptions","getUrl","url","request","options","a","fetch","response","has","parseInt","get","status","data","json","Promise","reject","Error","statusText","resource","apiCustomerDelete","serviceUrl","id","method","apiCustomersGet","apiCustomerGet","apiCustomerPost","customer","body","JSON","stringify","apiCustomerPut","apiGetCustomersProjects","customerId","apiAddProjectToCustomer","projectId","adminResource","apiAdminCustomersGet","apiAdminCustomerGet","myResource","apiMyCustomersGet","apiGetMyCustomersProjects","handleChanges","e","input","target","name","setState","handleFormSubmit","handleValidation","state","customerNumber","contactName","contactPhone","contactEmail","notes","customerPost","then","result","submitMsg","t","submitColour","updateCustomerList","catch","err","clearValues","document","querySelector","className","baseState","invalid","formIsValid","lastAtPos","lastIndexOf","lastDotPos","indexOf","length","initialized","addEventListener","ModalWrapper","buttonTriggerText","modalHeading","buttonTriggerClassName","handleSubmit","primaryButtonText","secondaryButtonText","modalLabel","style","color","Form","onSubmit","TextInput","labelText","onChange","invalidText","TextArea","apiPartnerPost","partner","apiProjectsGet","apiProjectGet","apiProjectPost","project","apiProjectPut","apiAddTicketToProject","ticketId","apiAddSubscriptionToProject","subscriptionId","apiAddUserToProject","userId","apiAddPartnerToProject","partnerId","apiGetProjectsUsers","apiGetProjectSubscriptions","apiGetProjectIdNames","apiGetMyProjectIdNames","apiAdminProjectsGet","apiMyProjectsGet","partnerNumber","partnerPost","projectList","prevProps","changedAuth","getProjects","projects","Select","defaultValue","SelectItem","text","Object","keys","allProjects","map","i","description","systemId","trim","alert","projectPost","getAllProjects","customerList","getCustomers","customers","label","allCustomers","AuthenticatedView","children","UnauthenticatedView","projectPut","updateProjectList","modalId","buttonId","getProjectDetails","buttonClassName","CustomTable","fetchData","headerData","header","key","console","log","render","DataTable","rows","rowData","getHeaderProps","getTableProps","TableContainer","Table","TableHead","TableRow","TableHeader","TableBody","index","projectSubscriptions","TableCell","partners","tickets","width","sub","to","entandoVersion","String","Date","startDate","toDateString","setMonth","getMonth","lengthInMonths","projectName","href","partnerName","endDate","openTickets","getCustomer","Tile","getCustomerDetails","updateCustomer","getCustomersProjects","confirm","deleteCustomer","AccordionItem","title","open","accordionOpened","display","textDecoration","Button","kind","onClick","handleDelete","getTime","handleSearch","event","newFilteredState","filter","toLowerCase","filteredCustomers","currentPage","undefined","forceUpdate","customersProjects","role","test","numberOfPages","Math","ceil","Search","placeHolderText","onKeyPress","Accordion","indexOfLastItem","firstIndexOfCurrentPage","PaginationNav","loop","Boolean","page","Number","totalItems","itemsShown","cssClass","subscribeToWidgetEvent","eventType","eventHandler","removeEventListener","KEYCLOAK_EVENT_TYPE","getKeycloakInstance","ATTRIBUTES","AdminDashboardElement","mountPoint","createElement","unsubscribeFromKeycloakEvent","appendChild","getAttribute","ReactDOM","Provider","HTMLElement","customElements","define","jiraResource","apiJiraTicketsGet","organization","apiJiraTicketPost","ticket","apiTicketingSystemDelete","apiTicketingSystemsGet","apiTicketingSystemPost","ticketingsystem","apiTicketingSystemPut","TicketList","currentTicketingSystem","ticketingSystems","substr","type","priority","createDate","updateDate","creationDate","openTicket","apiSubscriptionGet","apiProjectSubscriptionPost","projectSubscriptionCreation","apiProjectSubscriptionPut","apiGetMySubscription","apiRenewSubscription","projectSubscriptionRenew","apiUserDelete","apiUsersGet","apiUserPost","user","apiUserGetByUsername","username","subscriptionRequest","projectSubscription","subscription","level","moment","format","subscriptionPut","updateSubscription","handleStartDateChange","date","toISOString","isNumeric","match","str","isNaN","parseFloat","getSubscriptionDetails","disabled","DatePicker","dateFormat","datePickerType","DatePickerInput","placeholder","subscriptionData","getSubscription","loading","users","params","license","usersResource","process","apiKeycloakUserGet","path","AdminAddCustomerElement","RoleCheck","roleType","renderForm","AdminRoleCheckElement","CustomDataTableElement","CustomerDetailsElement","SubscriptionElement","parse","preventDefault","fetchProjectSubscription","createTicket","res","error","types","priorities","ticketingSystem","fetchProjects","getTicketingSystem","tabIndex","FormsOpenTicketElement","Navigation","NavigationElement","EnhancementRequest","ticketNo","customerName","openedBy","enhancementDescription","FormsEnhancementRequestElement","hidden","paginationMode","disableDefaultEventHandler","AppElement","Locale","TicketListCustomerElement","createTicketingSystem","updateTicketingSystem","ticketingSystemType","serviceAccount","serviceAccountSecret","getTicketingSystems","deleteTicketingSystem","apiProductVersionsGet","apiProductVersionGet","versionId","apiUpdateProductVersionsStatus","apiProductVersionPost","productVersion","apiProductVersionPut","apiProductVersionDelete","addProductVersion","updateProductVersions","handleEndDateChange","version","versionPut","getVersionDetails","ProductVersion","handleDeleteVersion","deleteVersion","getProductVersions","productVersions","ToggleSmall","handleToggleChange","aria-label","defaultToggled","EditVersionModal","marginTop","fill","entVersion","adminConfig","content","class","toString","AdminConfigurationElement","OpenTicketElement","mapKeycloakUserEmails","keycloakUsers","usernameEmailMap","Map","forEach","keycloakUser","set","email","assignUser","handleFormValidation","assignUserToProject","getPortalUserId","portalUserId","portalUserApi","portalUser","message","createPortalUser","authServerUrl","keycloakUrl","userList","projectIdsNames","size","unshift","setupFormComponents","handleRemoveUser","portalUsers","updatedPortalUsers","delete","handleUserDisplay","displayUsers","filterText","handleMapFormatting","portalUsernames","values","dateAdded","createdTimestamp","toLocaleString","month","getFullYear","userAccess","row","cells","cell","userFunctionality","ManageUserElement","AssignUserElement","DeleteUserElement","TicketingSystemElement","ProductVersionElement","subscriptionLevel","GOLD","PLATINUM","subscriptionStatus","subscriptionTypes","submitSuccess","submitError","subscriptionType","newSubscription","renewSubscription","subscriptionLength","entandoVersionId","selectedProjectId","subscriptionLevelList","entries","versionList","formInputs","formComponents","isAdmin","createFormMessage","subMessageKey","successErrorMessage","required","SubsciptionFormElement"],"mappings":"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","file":"static/js/main.63a2f19a.chunk.js","sourcesContent":["import i18n from 'i18n-js';\r\n\r\nimport en from './i18n/locales/en.json';\r\nimport it from './i18n/locales/it.json';\r\n\r\ni18n.defaultLocale = 'en';\r\ni18n.locale = 'en';\r\ni18n.fallbacks = true;\r\ni18n.translations = { en, it };\r\n\r\nexport const setLocale = (locale) => {\r\n    i18n.locale = locale;\r\n}\r\n\r\nexport default i18n;","import React from 'react';\r\n\r\nconst KeycloakContext = React.createContext(null);\r\n\r\nexport default KeycloakContext;\r\n","import PropTypes from 'prop-types';\r\n\r\nexport default PropTypes.oneOfType([\r\n  PropTypes.func,\r\n  PropTypes.shape({ current: PropTypes.elementType }),\r\n  PropTypes.shape(null),\r\n]);\r\n","/* eslint-disable react/jsx-props-no-spreading */\r\nimport React, { forwardRef, Component } from 'react';\r\nimport refType from '../components/__types__/ref';\r\nimport KeycloakContext from './KeycloakContext';\r\n\r\nexport default function withKeycloak(WrappedComponent) {\r\n  class WithKeycloakComponent extends Component {\r\n    renderWrappedComponent = value => {\r\n      const { forwardedRef, ...rest } = this.props;\r\n      return <WrappedComponent {...rest} ref={forwardedRef} keycloak={value} />;\r\n    };\r\n\r\n    render() {\r\n      return <KeycloakContext.Consumer>{this.renderWrappedComponent}</KeycloakContext.Consumer>;\r\n    }\r\n  }\r\n\r\n  \r\n  WithKeycloakComponent.propTypes = {\r\n    forwardedRef: refType,\r\n  };\r\n  \r\n\r\n  WithKeycloakComponent.defaultProps = {\r\n    forwardedRef: () => {},\r\n  };\r\n\r\n  return forwardRef((props, ref) => <WithKeycloakComponent {...props} forwardedRef={ref} />);\r\n}\r\n","export const getKeycloakToken = () => {\r\n  if (\r\n    window &&\r\n    window.entando &&\r\n    window.entando.keycloak &&\r\n    window.entando.keycloak.authenticated\r\n  ) {\r\n    return window.entando.keycloak.token;\r\n  }\r\n  return '';\r\n};\r\n\r\nexport const hasKeycloakClientRole = (clientRole) => {\r\n  if (getKeycloakToken()) {\r\n    const { resourceAccess } = window.entando.keycloak;\r\n    if (resourceAccess) {\r\n      for (const client in resourceAccess) {\r\n        const item = resourceAccess[client];\r\n        if (item.roles && item.roles.includes(clientRole)) {\r\n          // console.debug(\"Found role {} with client {} \", clientRole, client);\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return false;\r\n};\r\n\r\nexport const getDefaultOptions = () => ({\r\n  headers: new Headers({\r\n    Authorization: `Bearer ${getKeycloakToken()}`,\r\n    'Content-Type': 'application/json'\r\n  }),\r\n});\r\n\r\nexport const getDefaultKeycloakOptions = () => ({\r\n  headers: new Headers({\r\n    Authorization: `Bearer ${getKeycloakToken()}`,\r\n    'Content-Type': 'application/x-www-form-urlencoded'\r\n  }),\r\n});\r\n\r\nexport const getUrl = (url) => {\r\n  return `${url}`;\r\n};\r\n\r\nexport const request = async (url, options) => {\r\n  const response = await fetch(url, options);\r\n\r\n  const headers = {\r\n    ...(response.headers.has('X-Total-Count')\r\n      ? { 'X-Total-Count': parseInt(response.headers.get('X-Total-Count'), 10) }\r\n      : {}),\r\n  };\r\n\r\n  if (response.status === 204) {\r\n    return { data: '', status: response.status};\r\n  }\r\n\r\n  return response.status >= 200 && response.status < 300\r\n    ? { data: await response.json(), headers, status: response.status }\r\n    : Promise.reject(new Error(response.statusText || response.status));\r\n};\r\n","import { getDefaultOptions, request, getUrl } from './helpers';\r\n\r\nconst resource = 'api/customers';\r\n\r\nexport const apiCustomerDelete = async (serviceUrl, id) => {\r\n  const url = `${serviceUrl}/${resource}/${id}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE'\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiCustomersGet = async serviceUrl => {\r\n  const url = getUrl(`${serviceUrl}/${resource}`);\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET'\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiCustomerGet = async (serviceUrl, id) => {\r\n  const url = getUrl(`${serviceUrl}/${resource}/${id}`);\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET'\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiCustomersGetForAdminDashboard = async serviceUrl => {\r\n  const url = `${serviceUrl}/${resource}/all`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET'\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiCustomerPost = async (serviceUrl, customer) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n    body: customer ? JSON.stringify(customer) : null\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiCustomerPut = async (serviceUrl, customer) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'PUT',\r\n    body: customer ? JSON.stringify(customer) : null\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiGetCustomersProjects = async (serviceUrl, customerId) => {\r\n  const url = `${serviceUrl}/${resource}/${customerId}/projects`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET'\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiAddProjectToCustomer = async (serviceUrl, customerId, projectId) => {\r\n  const url = `${serviceUrl}/${resource}/${customerId}/projects/${projectId}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST'\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\n\r\n// Endpoints for backend security\r\nconst adminResource = 'api/customers/admin';\r\nexport const apiAdminCustomersGet = async (serviceUrl) => {\r\n  const url = getUrl(`${serviceUrl}/${adminResource}`);\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET'\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiAdminCustomerGet = async (serviceUrl, customerId) => {\r\n  const url = getUrl(`${serviceUrl}/${adminResource}/${customerId}`);\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET'\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nconst myResource = 'api/customers/mycustomers';\r\nexport const apiMyCustomersGet = async (serviceUrl) => {\r\n  const url = getUrl(`${serviceUrl}/${myResource}`);\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET'\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiGetMyCustomersProjects = async (serviceUrl, customerId) => {\r\n  const url = `${serviceUrl}/${myResource}/${customerId}/projects`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET'\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n","import React, { Component } from 'react';\r\nimport i18n from '../../i18n';\r\nimport { ModalWrapper, Form, TextInput, TextArea } from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport { apiCustomerPost } from '../../api/customers';\r\n\r\nclass AddCustomerModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            name: '',\r\n            customerNumber: '',\r\n            contactName: '',\r\n            contactPhone: '',\r\n            contactEmail: '',\r\n            notes: '',\r\n            invalid: {},\r\n            submitMsg: '',\r\n            submitColour: 'black'\r\n        };\r\n\r\n        this.baseState = this.state\r\n    }\r\n\r\n    handleValidation() {\r\n        let invalid = {};\r\n        let formIsValid = true;\r\n\r\n        if (this.state.name === '') {\r\n            formIsValid = false;\r\n            invalid['name'] = true;\r\n        }\r\n\r\n        if (this.state.customerNumber === '') {\r\n            formIsValid = false;\r\n            invalid['customerNumber'] = true;\r\n        }\r\n\r\n        if (typeof this.state.contactEmail !== 'undefined') {\r\n            let lastAtPos = this.state.contactEmail.lastIndexOf('@');\r\n            let lastDotPos = this.state.contactEmail.lastIndexOf('.');\r\n\r\n            if (\r\n                !(\r\n                    lastAtPos < lastDotPos &&\r\n                    lastAtPos > 0 &&\r\n                    this.state.contactEmail.indexOf('@@') == -1 &&\r\n                    lastDotPos > 2 &&\r\n                    this.state.contactEmail.length - lastDotPos > 2\r\n                )\r\n            ) {\r\n                formIsValid = false;\r\n                invalid['contactEmail'] = true;\r\n            }\r\n        }\r\n\r\n        this.setState({ invalid: invalid });\r\n        return formIsValid;\r\n    }\r\n\r\n    handleChanges = e => {\r\n        const input = e.target;\r\n        const name = input.name;\r\n        const value = input.value;\r\n        this.setState({ [name]: value });\r\n    };\r\n\r\n    async customerPost(customer) {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n        if (authenticated) {\r\n            return await apiCustomerPost(this.props.serviceUrl, customer);\r\n        }\r\n    }\r\n\r\n\r\n    handleFormSubmit = e => {\r\n        const formIsValid = this.handleValidation();\r\n\r\n        if (formIsValid) {\r\n            const customer = {\r\n                name: this.state.name,\r\n                customerNumber: this.state.customerNumber,\r\n                contactName: this.state.contactName,\r\n                contactPhone: this.state.contactPhone,\r\n                contactEmail: this.state.contactEmail,\r\n                notes: this.state.notes\r\n              };\r\n\r\n            this.customerPost(customer).then(result => {\r\n                this.setState({\r\n                    submitMsg: i18n.t('submitMessages.added'),\r\n                    submitColour: '#24a148'\r\n                })\r\n                this.props.updateCustomerList();\r\n            }).catch(err => {\r\n                this.setState({\r\n                    submitMsg: i18n.t('submitMessages.error'),\r\n                    submitColour: '#da1e28'\r\n                })\r\n            });\r\n        }\r\n        //this.props.testFunction();\r\n        //super.componentDidMount();\r\n    };\r\n\r\n    clearValues = () => {\r\n        const customerModalElement = document.querySelector('#modal-form-customer');\r\n        if(!customerModalElement.className.includes(\"is-visible\")) {\r\n            this.setState(this.baseState);\r\n        }\r\n    }\r\n    \r\n    componentDidMount() {\r\n        const modalOpenButton = document.querySelector('.add-customer-button');\r\n        modalOpenButton.addEventListener(\"click\", this.clearValues, false);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ModalWrapper\r\n                buttonTriggerText={i18n.t('buttons.addCustomer')}\r\n                modalHeading={i18n.t('adminDashboard.addCustomer.title')}\r\n                buttonTriggerClassName=\"add-customer bx--btn bx--btn--tertiary add-customer-button\"\r\n                className=\"modal-form\"\r\n                id=\"modal-form-customer\"\r\n                handleSubmit={this.handleFormSubmit}\r\n                primaryButtonText={i18n.t('modalText.save')}\r\n                secondaryButtonText={i18n.t('modalText.cancel')}\r\n                modalLabel={<p style={{color: this.state.submitColour}}>{this.state.submitMsg}</p>}\r\n            >\r\n                <div className=\"form-container\">\r\n                    <Form onSubmit={this.handleFormSubmit}>\r\n                        <TextInput\r\n                            name=\"name\"\r\n                            labelText={i18n.t('adminDashboard.addCustomer.customerName') + \" *\"}\r\n                            value={this.state.name}\r\n                            onChange={this.handleChanges}\r\n                            invalidText={i18n.t('validation.invalid.required')}\r\n                            invalid={this.state.invalid['name']}\r\n                        />\r\n                        <TextInput\r\n                            name=\"customerNumber\"\r\n                            labelText={i18n.t('adminDashboard.addCustomer.customerNumber') + \" *\"}\r\n                            value={this.state.customerNumber}\r\n                            onChange={this.handleChanges}\r\n                            invalidText={i18n.t('validation.invalid.required')}\r\n                            invalid={this.state.invalid['customerNumber']}\r\n                        />\r\n                        <TextInput\r\n                            name=\"contactName\"\r\n                            labelText={i18n.t('adminDashboard.addCustomer.contactName')}\r\n                            value={this.state.contactName}\r\n                            onChange={this.handleChanges}\r\n                        />\r\n                        <TextInput\r\n                            name=\"contactPhone\"\r\n                            labelText={i18n.t('adminDashboard.addCustomer.contactPhone')}\r\n                            value={this.state.contactPhone}\r\n                            onChange={this.handleChanges}\r\n                        />\r\n                        <TextInput\r\n                            name=\"contactEmail\"\r\n                            labelText={i18n.t('adminDashboard.addCustomer.contactEmail') + \" *\"}\r\n                            value={this.state.contactEmail}\r\n                            onChange={this.handleChanges}\r\n                            invalidText={i18n.t('validation.invalid.email')}\r\n                            invalid={this.state.invalid['contactEmail']}\r\n                        />\r\n                        <TextArea\r\n                            name=\"notes\"\r\n                            labelText={i18n.t('adminDashboard.addCustomer.notes')}\r\n                            value={this.state.notes}\r\n                            onChange={this.handleChanges}\r\n                        />\r\n                    </Form>\r\n                </div>\r\n            </ModalWrapper>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withKeycloak(AddCustomerModal);\r\n","import { getDefaultOptions, request, getUrl } from './helpers';\r\n\r\nconst resource = 'api/partners';\r\n\r\nexport const apiPartnerDelete = async (serviceUrl, id) => {\r\n  const url = `${serviceUrl}/${resource}/${id}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiPartnersGet = async (serviceUrl) => {\r\n  const url = getUrl(\r\n    `${serviceUrl}/${resource}`\r\n  );\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiPartnerPost = async (serviceUrl, partner) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n    body: partner ? JSON.stringify(partner) : null,\r\n  };\r\n  return request(url, options);\r\n};\r\n","import { getDefaultOptions, request, getUrl } from './helpers';\r\n\r\nconst resource = 'api/projects';\r\n\r\nexport const apiProjectsDelete = async (serviceUrl, id) => {\r\n  const url = `${serviceUrl}/${resource}/${id}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiProjectsGet = async (serviceUrl) => {\r\n  const url = getUrl(\r\n    `${serviceUrl}/${resource}`\r\n  );\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiProjectGet = async (serviceUrl, id) => {\r\n  const url = getUrl(\r\n    `${serviceUrl}/${resource}/${id}`\r\n  );\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiProjectsGetForCustomer = async (serviceUrl, customerNumber) => {\r\n  const url = `${serviceUrl}/${resource}/subscriptions/customer/${customerNumber}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiProjectPost = async (serviceUrl, project) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n    body: project ? JSON.stringify(project) : null,\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiProjectPut = async (serviceUrl, project) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'PUT',\r\n    body: project ? JSON.stringify(project) : null,\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiAddTicketToProject = async (serviceUrl, projectId, ticketId) => {\r\n  const url = `${serviceUrl}/${resource}/${projectId}/tickets/${ticketId}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiAddSubscriptionToProject = async (serviceUrl, projectId, subscriptionId) => {\r\n  const url = `${serviceUrl}/${resource}/${projectId}/subscriptions/${subscriptionId}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiAddUserToProject = async (serviceUrl, projectId, userId) => {\r\n  const url = `${serviceUrl}/${resource}/${projectId}/users/${userId}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiAddPartnerToProject = async (serviceUrl, projectId, partnerId) => {\r\n  const url = `${serviceUrl}/${resource}/${projectId}/partners/${partnerId}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiGetProjectsUsers = async (serviceUrl, projectId) => {\r\n  const url = `${serviceUrl}/${resource}/${projectId}/users/`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiGetProjectsTickets = async (serviceUrl, projectId) => {\r\n  const url = `${serviceUrl}/${resource}/${projectId}/tickets/`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiGetProjectSubscriptions = async (serviceUrl, projectId) => {\r\n  const url = `${serviceUrl}/${resource}/${projectId}/subscriptions/`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiGetProjectIdNames = async (serviceUrl) => {\r\n  const url = `${serviceUrl}/${resource}/nameId/`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiGetMyProjectIdNames = async (serviceUrl) => {\r\n  const url = `${serviceUrl}/${resource}/myprojects/nameId/`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\n// Endpoints for backend security\r\nconst adminResource = 'api/projects/admin';\r\nexport const apiAdminProjectsGet = async (serviceUrl) => {\r\n  const url = getUrl(`${serviceUrl}/${adminResource}`);\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET'\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nconst myResource = 'api/projects/myprojects';\r\nexport const apiMyProjectsGet = async (serviceUrl) => {\r\n  const url = getUrl(`${serviceUrl}/${myResource}`);\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET'\r\n  };\r\n\r\n  return request(url, options);\r\n};","import React, { Component } from 'react';\r\nimport i18n from '../../i18n';\r\nimport { ModalWrapper, Form, TextInput, Select, SelectItem, TextArea } from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport { apiPartnerPost } from '../../api/partners';\r\nimport { apiProjectPost, apiProjectsGet, apiAddPartnerToProject } from '../../api/projects';\r\n\r\nclass AddPartnerModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      projectList: {},\r\n      projectId: '',\r\n      name: '',\r\n      partnerNumber: '',\r\n      notes: '',\r\n      invalid: {},\r\n      submitMsg: '',\r\n      submitColour: 'black'\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n    const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n\r\n    if (authenticated && changedAuth) {\r\n      this.getProjects();\r\n    }\r\n  }\r\n\r\n  handleValidation() {\r\n    let invalid = {};\r\n    let formIsValid = true;\r\n\r\n    //project\r\n    if (this.state.projectId === '' || this.state.projectId === 'project-list') {\r\n      formIsValid = false;\r\n      invalid['projectId'] = true;\r\n    }\r\n\r\n    if (this.state.name === '') {\r\n      formIsValid = false;\r\n      invalid['name'] = true;\r\n    }\r\n\r\n    if (this.state.partnerNumber === '') {\r\n      formIsValid = false;\r\n      invalid['partnerNumber'] = true;\r\n    }\r\n\r\n    this.setState({ invalid: invalid });\r\n    return formIsValid;\r\n  }\r\n\r\n  handleChanges = e => {\r\n    const input = e.target;\r\n    const name = input.name;\r\n    const value = input.value;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  async getProjects() {\r\n    const { t, keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n    if (authenticated) {\r\n      const projects = await apiProjectsGet(this.props.serviceUrl);\r\n      this.setState({ projectList: projects });\r\n    }\r\n  }\r\n\r\n  async partnerPost(partner) {\r\n    const { t, keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n    if (authenticated) {\r\n      const result = await apiPartnerPost(this.props.serviceUrl, partner);\r\n      return await apiAddPartnerToProject(this.props.serviceUrl, this.state.projectId, result.data.id);\r\n    }\r\n  }\r\n\r\n  handleFormSubmit = e => {\r\n    const formIsValid = this.handleValidation();\r\n\r\n    if (formIsValid) {\r\n      const partner = {\r\n        name: this.state.name,\r\n        partnerNumber: this.state.partnerNumber,\r\n        notes: this.state.notes\r\n      };\r\n      this.partnerPost(partner).then(result => {\r\n        this.setState({\r\n            submitMsg: i18n.t('submitMessages.added'),\r\n            submitColour: '#24a148'\r\n        })\r\n        this.props.updateCustomerList();\r\n      }).catch(err => {\r\n          this.setState({\r\n              submitMsg: i18n.t('submitMessages.error'),\r\n              submitColour: '#da1e28'\r\n          })\r\n      });\r\n    }\r\n  };\r\n\r\n  clearValues = () => {\r\n    const partnerModalElement = document.querySelector('#modal-form-partner');\r\n    if(!partnerModalElement.className.includes(\"is-visible\")) {\r\n      this.setState({\r\n        projectId: '',\r\n        name: '',\r\n        partnerNumber: '',\r\n        notes: '',\r\n        invalid: {},\r\n        submitMsg: '',\r\n        submitColour: 'black'\r\n      })\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getProjects();\r\n\r\n    const modalOpenButton = document.querySelector('.add-partner-button');\r\n    modalOpenButton.addEventListener(\"click\", this.clearValues, false);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <ModalWrapper\r\n        buttonTriggerText={i18n.t('buttons.addPartner')}\r\n        modalHeading={i18n.t('adminDashboard.addPartner.title')}\r\n        buttonTriggerClassName=\"add-partner bx--btn bx--btn--tertiary add-partner-button\"\r\n        className=\"modal-form\"\r\n        id=\"modal-form-partner\"\r\n        handleSubmit={this.handleFormSubmit}\r\n        primaryButtonText={i18n.t('modalText.save')}\r\n        secondaryButtonText={i18n.t('modalText.cancel')}\r\n        modalLabel={<p style={{color: this.state.submitColour}}>{this.state.submitMsg}</p>}\r\n      >\r\n        <div className=\"form-container\">\r\n          {/*<p> {i18n.t('adminDashboard.addPartner.desc')}</p>*/}\r\n          <Form onSubmit={this.handleFormSubmit}>\r\n            <Select\r\n              defaultValue=\"project-list\"\r\n              name=\"projectId\"\r\n              labelText={i18n.t('adminDashboard.addPartner.projectList') + \" *\"}\r\n              value={this.state.projectId}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.required')}\r\n              invalid={this.state.invalid['projectId']}\r\n            >\r\n              <SelectItem text={i18n.t('adminDashboard.addPartner.selectProject')} value=\"project-list\" />\r\n              {Object.keys(this.props.allProjects).length !== 0\r\n                ? this.props.allProjects.map((projectList, i) => (\r\n                    <SelectItem key={i} text={projectList.name} value={projectList.id}>\r\n                      {projectList.name}\r\n                    </SelectItem>\r\n                  ))\r\n                : null}\r\n            </Select>\r\n\r\n            <TextInput\r\n              name=\"name\"\r\n              labelText={i18n.t('adminDashboard.addPartner.partnerName') + \" *\"}\r\n              value={this.state.name}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.required')}\r\n              invalid={this.state.invalid['name']}\r\n            />\r\n            <TextInput\r\n              name=\"partnerNumber\"\r\n              labelText={i18n.t('adminDashboard.addPartner.partnerNumber') + \" *\"}\r\n              value={this.state.partnerNumber}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.required')}\r\n              invalid={this.state.invalid['partnerNumber']}\r\n            />\r\n            <TextArea\r\n              name=\"notes\"\r\n              labelText={i18n.t('adminDashboard.addPartner.notes')}\r\n              value={this.state.notes}\r\n              onChange={this.handleChanges}\r\n            />\r\n          </Form>\r\n        </div>\r\n      </ModalWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withKeycloak(AddPartnerModal);\r\n","import React, { Component } from 'react';\r\nimport i18n from '../../i18n';\r\nimport { ModalWrapper, Form, TextInput, Select, SelectItem, TextArea } from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport { apiCustomersGet, apiAddProjectToCustomer } from '../../api/customers';\r\nimport { apiProjectPost, apiProjectsGet } from '../../api/projects';\r\n\r\nclass AddProjectModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      projects: {},\r\n      customerList: {},\r\n      customerId: '',\r\n      name: '',\r\n      description: '',\r\n      systemId: '',\r\n      contactName: '',\r\n      contactPhone: '',\r\n      contactEmail: '',\r\n      notes: '',\r\n      invalid: {},\r\n      submitMsg: '',\r\n      submitColour: 'black'\r\n    };\r\n  }\r\n\r\n  handleValidation() {\r\n    let invalid = {};\r\n    let formIsValid = true;\r\n\r\n    //customer\r\n    if (this.state.customerId === '' || this.state.customerId === 'customer-list') {\r\n      formIsValid = false;\r\n      invalid['customerId'] = true;\r\n    }\r\n\r\n    //name\r\n    if (this.state.name === '') {\r\n      formIsValid = false;\r\n      invalid['name'] = true;\r\n    }\r\n\r\n    //description\r\n    if (this.state.description === '') {\r\n      formIsValid = false;\r\n      invalid['description'] = true;\r\n    }\r\n\r\n    //contactEmail\r\n    if (typeof this.state.contactEmail !== 'undefined') {\r\n      let lastAtPos = this.state.contactEmail.lastIndexOf('@');\r\n      let lastDotPos = this.state.contactEmail.lastIndexOf('.');\r\n\r\n      if (\r\n        !(\r\n          lastAtPos < lastDotPos &&\r\n          lastAtPos > 0 &&\r\n          this.state.contactEmail.indexOf('@@') == -1 &&\r\n          lastDotPos > 2 &&\r\n          this.state.contactEmail.length - lastDotPos > 2\r\n        )\r\n      ) {\r\n        formIsValid = false;\r\n        invalid['contactEmail'] = true;\r\n      }\r\n    }\r\n\r\n    this.setState({ invalid: invalid });\r\n    return formIsValid;\r\n  }\r\n\r\n  async getAllProjects() {\r\n    const projects = await apiProjectsGet(this.props.serviceUrl);\r\n    this.setState({\r\n      projects: projects.data\r\n    });\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n    const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n\r\n    if (authenticated && changedAuth) {\r\n      this.getCustomers();\r\n      this.getAllProjects();\r\n    }\r\n  }\r\n\r\n  handleChanges = e => {\r\n    const input = e.target;\r\n    const name = input.name;\r\n    const value = input.value;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  async getCustomers() {\r\n    const { t, keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n    if (authenticated) {\r\n      const customers = await apiCustomersGet(this.props.serviceUrl);\r\n      this.setState({ customerList: customers });\r\n    }\r\n  }\r\n\r\n  async projectPost(project) {\r\n    const { t, keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n    if (authenticated) {\r\n      const result = await apiProjectPost(this.props.serviceUrl, project);\r\n      return await apiAddProjectToCustomer(this.props.serviceUrl, this.state.customerId, result.data.id);\r\n    }\r\n  }\r\n\r\n  handleFormSubmit = e => {\r\n    const formIsValid = this.handleValidation();\r\n\r\n    if (formIsValid) {\r\n      const project = {\r\n        name: this.state.name,\r\n        description: this.state.description,\r\n        systemId: this.state.systemId,\r\n        contactName: this.state.contactName,\r\n        contactPhone: this.state.contactPhone,\r\n        contactEmail: this.state.contactEmail,\r\n        notes: this.state.notes\r\n      };\r\n      for (var i = 0; i < this.state.projects.length; i++) {\r\n        if (project.systemId === this.state.projects[i].systemId && project.systemId.trim() !== \"\") {\r\n          window.alert('That system id is already in use in another project');\r\n          return;\r\n        }\r\n      }\r\n      this.projectPost(project).then(result => {\r\n        this.setState({\r\n            submitMsg: i18n.t('submitMessages.added'),\r\n            submitColour: '#24a148'\r\n        })\r\n        this.props.updateCustomerList();\r\n        this.getAllProjects();\r\n      }).catch(err => {\r\n          this.setState({\r\n              submitMsg: i18n.t('submitMessages.error'),\r\n              submitColour: '#da1e28'\r\n          })\r\n      });\r\n    }\r\n  };\r\n\r\n  clearValues = () => {\r\n    const projectModalElement = document.querySelector('#modal-form-project');\r\n    if(!projectModalElement.className.includes(\"is-visible\")) {\r\n      this.setState({\r\n        customerId: '',\r\n        name: '',\r\n        description: '',\r\n        systemId: '',\r\n        contactName: '',\r\n        contactPhone: '',\r\n        contactEmail: '',\r\n        notes: '',\r\n        invalid: {}\r\n      })\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getCustomers();\r\n    this.getAllProjects();\r\n\r\n    const modalOpenButton = document.querySelector('.add-project-button');\r\n    modalOpenButton.addEventListener(\"click\", this.clearValues, false);\r\n  }\r\n  \r\n  render() {\r\n    const customerList = ['Customer1', 'Customer2', 'Customer3'];\r\n    return (\r\n      <ModalWrapper\r\n        buttonTriggerText={i18n.t('buttons.addProject')}\r\n        modalHeading={i18n.t('adminDashboard.addProject.title')}\r\n        buttonTriggerClassName=\"add-project bx--btn bx--btn--tertiary add-project-button\"\r\n        className=\"modal-form\"\r\n        id=\"modal-form-project\"\r\n        handleSubmit={this.handleFormSubmit}\r\n        primaryButtonText={i18n.t('modalText.save')}\r\n        secondaryButtonText={i18n.t('modalText.cancel')}\r\n        modalLabel={<p style={{color: this.state.submitColour}}>{this.state.submitMsg}</p>}\r\n      >\r\n        <div className=\"form-container\">\r\n          {/*<p> {i18n.t('adminDashboard.addProject.desc')} </p>*/}\r\n          <Form onSubmit={this.handleFormSubmit}>\r\n            <Select\r\n              defaultValue=\"customer-list\"\r\n              name=\"customerId\"\r\n              labelText={i18n.t('adminDashboard.addProject.customerList') + \" *\"}\r\n              defaultValue={{ label: \"Select Dept\", value: 0 }}\r\n              value={this.state.customerId}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.required')}\r\n              invalid={this.state.invalid['customerId']}\r\n            >\r\n              <SelectItem text={i18n.t('adminDashboard.addProject.selectCustomer')} value=\"customer-list\" />\r\n              {Object.keys(this.props.allCustomers).length !== 0\r\n                ? this.props.allCustomers.map((customerList, i) => (\r\n                    <SelectItem key={i} text={customerList.name} value={customerList.id}>\r\n                      {customerList.name}\r\n                    </SelectItem>\r\n                  ))\r\n                : null}\r\n            </Select>\r\n\r\n            <TextInput\r\n              name=\"name\"\r\n              labelText={i18n.t('adminDashboard.addProject.projectName') + \" *\"}\r\n              value={this.state.name}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.required')}\r\n              invalid={this.state.invalid['name']}\r\n            />\r\n            <TextInput\r\n              name=\"description\"\r\n              labelText={i18n.t('adminDashboard.addProject.projectDesc') + \" *\"}\r\n              value={this.state.description}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.required')}\r\n              invalid={this.state.invalid['description']}\r\n            />\r\n            <TextInput\r\n              name=\"systemId\"\r\n              labelText={i18n.t('adminDashboard.addProject.systemId')}\r\n              value={this.state.systemId}\r\n              onChange={this.handleChanges}\r\n            />\r\n            <TextInput\r\n              name=\"contactName\"\r\n              labelText={i18n.t('adminDashboard.addProject.contactName')}\r\n              value={this.state.contactName}\r\n              onChange={this.handleChanges}\r\n            />\r\n            <TextInput\r\n              name=\"contactPhone\"\r\n              labelText={i18n.t('adminDashboard.addProject.contactPhone')}\r\n              value={this.state.contactPhone}\r\n              onChange={this.handleChanges}\r\n            />\r\n            <TextInput\r\n              name=\"contactEmail\"\r\n              labelText={i18n.t('adminDashboard.addProject.contactEmail') + \" *\"}\r\n              value={this.state.contactEmail}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.email')}\r\n              invalid={this.state.invalid['contactEmail']}\r\n            />\r\n            <TextArea\r\n              name=\"notes\"\r\n              labelText={i18n.t('adminDashboard.addProject.notes')}\r\n              value={this.state.notes}\r\n              onChange={this.handleChanges}\r\n            />\r\n          </Form>\r\n        </div>\r\n      </ModalWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withKeycloak(AddProjectModal);\r\n","export const AuthenticatedView = ({ children, keycloak }) => {\r\n  const authenticated = keycloak.initialized && keycloak.authenticated;\r\n  return authenticated ? children : null;\r\n};\r\n\r\nexport const UnauthenticatedView = ({ children, keycloak }) => {\r\n  const authenticated = keycloak.initialized && keycloak.authenticated;\r\n  return !authenticated ? children : null;\r\n};\r\n","import React, { Component } from 'react';\r\nimport i18n from '../../i18n';\r\nimport { ModalWrapper, Form, TextInput, Select, SelectItem, TextArea } from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport { apiCustomersGet, apiAddProjectToCustomer } from '../../api/customers';\r\nimport { apiProjectGet, apiProjectPut, apiProjectsGet } from '../../api/projects';\r\n\r\nclass EditProjectModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        this.state = {\r\n            projects: {},\r\n            customerList: {},\r\n            customerId: '',\r\n            name: '',\r\n            description: '',\r\n            systemId: '',\r\n            contactName: '',\r\n            contactPhone: '',\r\n            contactEmail:'',\r\n            notes:'',\r\n            invalid: {},\r\n            modalId: '',\r\n            buttonId: '',\r\n            submitMsg: '',\r\n            submitColour: 'black'\r\n        };\r\n    }\r\n\r\n    handleValidation() {\r\n        let invalid = {};\r\n        let formIsValid = true;\r\n\r\n        //name\r\n        if(this.state.name === ''){\r\n          formIsValid = false;\r\n          invalid[\"name\"] = true;\r\n        }\r\n\r\n        //description\r\n        if(this.state.description === ''){\r\n            formIsValid = false;\r\n            invalid[\"description\"] = true;\r\n        }\r\n\r\n        //contactEmail\r\n        if(typeof this.state.contactEmail !== \"undefined\"){\r\n          let lastAtPos = this.state.contactEmail.lastIndexOf('@');\r\n          let lastDotPos = this.state.contactEmail.lastIndexOf('.');\r\n    \r\n          if (!(lastAtPos < lastDotPos && lastAtPos > 0 && this.state.contactEmail.indexOf('@@') == -1 && lastDotPos > 2 && (this.state.contactEmail.length - lastDotPos) > 2)) {\r\n            formIsValid = false;\r\n            invalid[\"contactEmail\"] = true;\r\n          }\r\n        }\r\n    \r\n        this.setState({invalid: invalid});\r\n        return formIsValid;\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const { keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n    \r\n        const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n    \r\n        if (authenticated && changedAuth) {\r\n          this.getCustomers();\r\n          this.getAllProjects();\r\n          this.getProjectDetails();\r\n        }\r\n      }\r\n\r\n    handleChanges = e => {\r\n        const input = e.target;\r\n        const name = input.name;\r\n        const value = input.value;\r\n        this.setState({ [name]: value });\r\n    };\r\n\r\n    async getCustomers() {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n        if (authenticated) {\r\n            const customers = await apiCustomersGet(this.props.serviceUrl);\r\n            this.setState({customerList: customers})\r\n        }\r\n    }\r\n\r\n    async getProjectDetails() {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n        if (authenticated) {\r\n            const project = await apiProjectGet(this.props.serviceUrl, this.props.project.id);\r\n            this.setState({\r\n                name: project.data.name,\r\n                description: project.data.description,\r\n                systemId: project.data.systemId,\r\n                contactName: project.data.contactName,\r\n                contactPhone: project.data.contactPhone,\r\n                contactEmail:project.data.contactEmail,\r\n                notes:project.data.notes,\r\n                modalId: \"modal-form-project-edit-\" + project.data.id,\r\n                buttonId: \"edit-project-button-\" + project.data.id\r\n            })\r\n        }\r\n    }\r\n\r\n    async getAllProjects() {\r\n        const projects = await apiProjectsGet(this.props.serviceUrl);\r\n        this.setState({\r\n          projects: projects.data\r\n        });\r\n      }\r\n\r\n    async projectPut(project) {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n        if (authenticated) {\r\n            return await apiProjectPut(this.props.serviceUrl, project);\r\n        }\r\n    }\r\n\r\n    handleFormSubmit = (e) => {\r\n        const formIsValid = this.handleValidation();\r\n\r\n        if (formIsValid) {\r\n            const project = {\r\n                id: this.props.project.id,\r\n                customer: this.props.project.customer,\r\n                name: this.state.name,\r\n                description: this.state.description,\r\n                systemId: this.state.systemId,\r\n                contactName: this.state.contactName,\r\n                contactPhone: this.state.contactPhone,\r\n                contactEmail: this.state.contactEmail,\r\n                notes: this.state.notes\r\n            }\r\n            for (var i = 0; i < this.props.allProjects.length; i++) {\r\n                if((project.systemId === this.props.allProjects[i].systemId) && (project.id !== this.props.allProjects[i].id) && (project.systemId.trim() !== \"\")) {\r\n                    window.alert('That system id is already in use in another project');\r\n                    return;\r\n                }\r\n            }\r\n            this.projectPut(project).then(result => {\r\n                this.setState({\r\n                    submitMsg: i18n.t('submitMessages.updated'),\r\n                    submitColour: '#24a148'\r\n                })\r\n                this.props.updateProjectList();\r\n            }).catch(err => {\r\n                this.setState({\r\n                    submitMsg: i18n.t('submitMessages.error'),\r\n                    submitColour: '#da1e28'\r\n                })\r\n            });\r\n        }\r\n    };\r\n\r\n    clearValues = () => {\r\n        const { keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n        const customerModalElement = document.querySelector('#' + this.state.modalId);\r\n        if(!customerModalElement.className.includes(\"is-visible\") && authenticated) {\r\n            this.setState({\r\n                name: this.props.project.name,\r\n                description: this.props.project.description,\r\n                systemId: this.props.project.systemId,\r\n                contactName: this.props.project.contactName,\r\n                contactPhone: this.props.project.contactPhone,\r\n                contactEmail:this.props.project.contactEmail,\r\n                notes:this.props.project.notes,\r\n                invalid: {}\r\n            })\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n    \r\n        if (authenticated) {\r\n            this.getCustomers();\r\n            this.getAllProjects();\r\n            this.getProjectDetails();\r\n\r\n            const modalOpenButton = document.querySelector('.edit-project-button-' + this.props.project.id);\r\n            modalOpenButton.addEventListener(\"click\", this.clearValues, false);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const buttonClassName = \"bx--btn bx--btn--ghost edit-project-button-\" + this.props.project.id;\r\n        return (\r\n            <ModalWrapper\r\n                buttonTriggerText={i18n.t('buttons.edit')}\r\n                modalHeading={i18n.t('adminDashboard.addProject.editTitle')}\r\n                buttonTriggerClassName={buttonClassName}\r\n                className=\"modal-form\"\r\n                id={this.state.modalId}\r\n                handleSubmit={this.handleFormSubmit}\r\n                primaryButtonText={i18n.t('modalText.save')}\r\n                secondaryButtonText={i18n.t('modalText.cancel')}\r\n                modalLabel={<p style={{color: this.state.submitColour}}>{this.state.submitMsg}</p>}\r\n            >\r\n                <div className=\"form-container\">\r\n                    {/*<p> {i18n.t('adminDashboard.addProject.desc')} </p>*/}\r\n                    <Form onSubmit={this.handleFormSubmit}>\r\n                        <TextInput \r\n                            name=\"name\" \r\n                            labelText={i18n.t('adminDashboard.addProject.projectName') + \" *\"} \r\n                            value={this.state.name} \r\n                            onChange={this.handleChanges} \r\n                            invalidText={i18n.t('validation.invalid.required')} \r\n                            invalid={this.state.invalid[\"name\"]} \r\n                        />\r\n                        <TextInput \r\n                            name=\"description\" \r\n                            labelText={i18n.t('adminDashboard.addProject.projectDesc') + \" *\"} \r\n                            value={this.state.description} \r\n                            onChange={this.handleChanges} \r\n                            invalidText={i18n.t('validation.invalid.required')} \r\n                            invalid={this.state.invalid[\"description\"]} \r\n                        />\r\n                        <TextInput \r\n                            name=\"systemId\" \r\n                            labelText={i18n.t('adminDashboard.addProject.systemId')} \r\n                            value={this.state.systemId}\r\n                            onChange={this.handleChanges} \r\n                        />\r\n                        <TextInput \r\n                            name=\"contactName\" \r\n                            labelText={i18n.t('adminDashboard.addProject.contactName')} \r\n                            value={this.state.contactName} \r\n                            onChange={this.handleChanges} \r\n                        />\r\n                        <TextInput \r\n                            name=\"contactPhone\" \r\n                            labelText={i18n.t('adminDashboard.addProject.contactPhone')} \r\n                            value={this.state.contactPhone} \r\n                            onChange={this.handleChanges} \r\n                        />\r\n                        <TextInput \r\n                            name=\"contactEmail\" \r\n                            labelText={i18n.t('adminDashboard.addProject.contactEmail') + \" *\"} \r\n                            value={this.state.contactEmail} \r\n                            onChange={this.handleChanges} \r\n                            invalidText={i18n.t('validation.invalid.email')} \r\n                            invalid={this.state.invalid[\"contactEmail\"]} \r\n                        />\r\n                        <TextArea \r\n                            name=\"notes\" \r\n                            labelText={i18n.t('adminDashboard.addProject.notes')} \r\n                            value={this.state.notes} \r\n                            onChange={this.handleChanges} \r\n                        />\r\n                    </Form>\r\n                </div> \r\n            </ModalWrapper>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default withKeycloak(EditProjectModal)","import React, { Component } from 'react';\r\nimport { DataTable, TableContainer, Table, TableHead, TableRow, TableHeader, TableBody, TableCell } from 'carbon-components-react';\r\nimport '../../index.scss';\r\nimport { apiGetCustomersProjects, apiGetMyCustomersProjects } from '../../api/customers';\r\nimport { AuthenticatedView, UnauthenticatedView } from '../../auth/KeycloakViews';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport { Link, HashRouter } from 'react-router-dom';\r\nimport i18n from '../../i18n';\r\nimport EditProjectModal from '../Admin/EditProjectModal'\r\nimport { hasKeycloakClientRole } from '../../api/helpers';\r\n\r\nclass CustomTable extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n      projects: {}\r\n     }\r\n     this.headerData = [\r\n      {\r\n        header: i18n.t('customerDashboard.projectName'),\r\n        key: 'projectName',\r\n      },\r\n      {\r\n        header: i18n.t('customerDashboard.partners'),\r\n        key: 'partners',\r\n      },\r\n      {\r\n        header: i18n.t('customerDashboard.entandoVersion'),\r\n        key: 'entandoVersion',\r\n      },\r\n      {\r\n        header: i18n.t('customerDashboard.status'),\r\n        key: 'status',\r\n      },\r\n      {\r\n        header: i18n.t('customerDashboard.startDate'),\r\n        key: 'startDate',\r\n      },\r\n      {\r\n          header: i18n.t('customerDashboard.endDate'),\r\n          key: 'endDate',\r\n      },\r\n      {\r\n          header: i18n.t('customerDashboard.openTickets'),\r\n          key: 'openTickets',\r\n      },\r\n      {\r\n          header: i18n.t('customerDashboard.action'),\r\n          key: 'action',\r\n      }\r\n    ];\r\n  }\r\n\r\n  async fetchData() {\r\n    const { t, keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n    \r\n    if (authenticated) {\r\n      try {\r\n      var projects;\r\n      if (hasKeycloakClientRole('ROLE_ADMIN') || hasKeycloakClientRole('ROLE_SUPPORT')) {\r\n        projects = await apiGetCustomersProjects(this.props.serviceUrl, this.props.customerNumber);\r\n      }\r\n      else {\r\n        projects = await apiGetMyCustomersProjects(this.props.serviceUrl, this.props.customerNumber);\r\n      }\r\n      \r\n      this.setState({\r\n          projects: projects\r\n      });\r\n    } catch(error) {\r\n      console.log(error)\r\n    }\r\n    }\r\n    this.render();\r\n}\r\n\r\ncomponentDidMount(){\r\n  const { keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n    if (authenticated) {\r\n      this.fetchData();\r\n    }\r\n}\r\n\r\nupdateProjectList = () => {\r\n  this.fetchData();\r\n}\r\n\r\ncomponentDidUpdate(prevProps) {\r\n    const { keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n    const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n\r\n    if (authenticated && changedAuth) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n\r\n  render() { \r\n    return (\r\n      <div>\r\n        <DataTable rows={rowData} headers={this.headerData}>\r\n        {({ rows, headers, getHeaderProps, getTableProps }) => (\r\n          <TableContainer description={i18n.t('customerDashboard.tableDesc')}>\r\n            <Table {...getTableProps()}>\r\n              <TableHead>\r\n                <TableRow>\r\n                  {headers.map((header) => (\r\n                    <TableHeader {...getHeaderProps({ header })}>\r\n                      {header.header}\r\n                    </TableHeader>\r\n                  ))}\r\n                  {hasKeycloakClientRole('ROLE_ADMIN') || hasKeycloakClientRole('ROLE_SUPPORT') ? <TableHeader>Notes</TableHeader> : null}\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n              {Object.keys(this.state.projects).length !== 0 ? \r\n                  this.state.projects.data.map((project, index) => {\r\n                    if (project.projectSubscriptions.length === 0) {\r\n                      return(\r\n                        <TableRow key={index} >\r\n                          <TableCell>{project.name}</TableCell>\r\n                          {project.partners.length !== 0 ? \r\n                            <TableCell>\r\n                              {project.partners.map(partner => (\r\n                                <p>{partner.name}</p>\r\n                              ))}\r\n                            </TableCell> \r\n                          : <TableCell>{i18n.t('userMessages.none')}</TableCell>}\r\n                          <TableCell>{i18n.t('userMessages.none')}</TableCell>\r\n                          <TableCell>{i18n.t('userMessages.none')}</TableCell>\r\n                          <TableCell>{i18n.t('userMessages.none')}</TableCell>\r\n                          <TableCell>{i18n.t('userMessages.none')}</TableCell>\r\n                          <TableCell>{project.tickets.length}</TableCell>\r\n                          <TableCell>{hasKeycloakClientRole('ROLE_ADMIN') ? <EditProjectModal key={project.id} allProjects={this.state.projects.data} project={project} serviceUrl={this.props.serviceUrl} updateProjectList={this.updateProjectList}/> : null}</TableCell>\r\n                          {hasKeycloakClientRole('ROLE_ADMIN') || hasKeycloakClientRole('ROLE_SUPPORT')  ? <TableCell style={{width: '350px'}}>{project.notes}</TableCell> : null}\r\n                      </TableRow>\r\n                      )\r\n                    }\r\n                    else {\r\n                      var sub = project.projectSubscriptions[project.projectSubscriptions.length - 1];\r\n                      return(\r\n                        <TableRow key={index} >\r\n                            <TableCell><Link to={`/subscription-details/${sub.id}`}>{project.name}</Link></TableCell>\r\n                            {project.partners.length !== 0 ? \r\n                              <TableCell>\r\n                                {project.partners.map(partner => (\r\n                                  <p>{partner.name}</p>\r\n                                ))}\r\n                              </TableCell> \r\n                              : <TableCell>{i18n.t('userMessages.none')}</TableCell>}\r\n                            {sub.entandoVersion ? <TableCell>{sub.entandoVersion.name}</TableCell> : <TableCell>{i18n.t('userMessages.none')}</TableCell>}\r\n                            <TableCell>{sub.status}</TableCell>\r\n                            <TableCell>{String(new Date(sub.startDate).toDateString())}</TableCell>\r\n                            <TableCell>{String(new Date(new Date(sub.startDate).setMonth(new Date(sub.startDate).getMonth() + sub.lengthInMonths)).toDateString())}</TableCell>\r\n                            <TableCell>{project.tickets.length}</TableCell>\r\n                            <TableCell>{hasKeycloakClientRole('ROLE_ADMIN') ? <EditProjectModal key={project.id} allProjects={this.state.projects.data} project={project} serviceUrl={this.props.serviceUrl} updateProjectList={this.updateProjectList}/> : null}</TableCell>\r\n                            {hasKeycloakClientRole('ROLE_ADMIN') || hasKeycloakClientRole('ROLE_SUPPORT') ? <TableCell>{project.notes}</TableCell> : null}\r\n                        </TableRow>\r\n                      )\r\n                    }\r\n                  }) : null\r\n              }\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        )}\r\n      </DataTable>\r\n    </div>\r\n  )}\r\n}\r\n\r\n\r\nconst rowData = [\r\n  {\r\n       id: 'a',\r\n       projectName: <a href=\"\">Supplier Portal</a>,\r\n       partnerName: 'Leonardo',\r\n       entandoVersion: 5.2,\r\n       startDate: 'October, 2019',\r\n       endDate: 'October, 2022',\r\n       openTickets: '5',\r\n    },\r\n    {\r\n      id: 'b',\r\n      projectName: <a href=\"\">Task Manager</a>,\r\n      partnerName: 'Veriday',\r\n      entandoVersion: 5.2,\r\n      startDate: 'July, 2019',\r\n      endDate: 'July, 2022',\r\n      openTickets: '2',\r\n    },\r\n    {\r\n      id: 'c',\r\n      projectName: <a href=\"\">Sales Coordination App</a>,\r\n      partnerName: 'Accenture',\r\n      entandoVersion: 6.2,\r\n      startDate: 'September, 2019',\r\n      endDate: 'September, 2022',\r\n      openTickets: '2',\r\n    },\r\n    {\r\n      id: 'd',\r\n      projectName: <a href=\"\">Website</a>,\r\n      partnerName: 'Veriday',\r\n      entandoVersion: 5.2,\r\n      startDate: 'October, 2019',\r\n      endDate: 'October, 2022',\r\n      openTickets: '1',\r\n    }  \r\n];\r\n \r\nexport default withKeycloak(CustomTable);","import React from 'react';\r\nimport i18n from '../../i18n';\r\nimport { Tile } from 'carbon-components-react';\r\nimport { apiCustomerGet } from '../../api/customers';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\n\r\nconst customerData = {\r\n  name: 'Ford',\r\n  id: '5564 4563 3345',\r\n  startDate: '01/01/2020'\r\n};\r\n\r\nclass CustomerDetails extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      customer: {}\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    const { keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n    if (authenticated) {\r\n      this.getCustomer(this.props.customerNumber);\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n    const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n\r\n    if (authenticated && changedAuth) {\r\n      this.getCustomer(this.props.customerNumber);\r\n    }\r\n  }\r\n\r\n  async getCustomer() {\r\n    const { keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n    if (authenticated) {\r\n      const customer = await apiCustomerGet(this.props.serviceUrl, this.props.customerNumber);\r\n      this.setState({\r\n        customer: customer.data\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { name, id, startDate } = customerData; //destructuring\r\n    return (\r\n      <div className=\"customer-details\">\r\n        <Tile>\r\n          <p>\r\n            <strong>{i18n.t('customerDashboard.customerName')}</strong> {this.state.customer.name}\r\n          </p>\r\n          <p>\r\n            <strong>{i18n.t('customerDashboard.customerId')}</strong> {this.state.customer.id}\r\n          </p>\r\n        </Tile>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withKeycloak(CustomerDetails);\r\n","import React, { Component } from 'react';\r\nimport i18n from '../../i18n';\r\nimport { ModalWrapper, Form, TextInput, TextArea } from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport { apiCustomerGet, apiCustomerPut } from '../../api/customers';\r\n\r\nclass EditCustomerModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            name: '',\r\n            customerNumber: '',\r\n            contactName: '',\r\n            contactPhone: '',\r\n            contactEmail: '',\r\n            notes: '',\r\n            invalid: {},\r\n            modalId: '',\r\n            buttonId: '',\r\n            submitMsg: '',\r\n            submitColour: 'black'\r\n        };\r\n    }\r\n\r\n    handleValidation() {\r\n        let invalid = {};\r\n        let formIsValid = true;\r\n\r\n        //name\r\n        if (this.state.name === '') {\r\n            formIsValid = false;\r\n            invalid['name'] = true;\r\n        }\r\n\r\n        //customerNumber\r\n        if (this.state.customerNumber === '') {\r\n            formIsValid = false;\r\n            invalid['customerNumber'] = true;\r\n        }\r\n\r\n        //contactEmail\r\n        if (typeof this.state.contactEmail !== 'undefined') {\r\n            let lastAtPos = this.state.contactEmail.lastIndexOf('@');\r\n            let lastDotPos = this.state.contactEmail.lastIndexOf('.');\r\n\r\n            if (\r\n                !(\r\n                    lastAtPos < lastDotPos &&\r\n                    lastAtPos > 0 &&\r\n                    this.state.contactEmail.indexOf('@@') == -1 &&\r\n                    lastDotPos > 2 &&\r\n                    this.state.contactEmail.length - lastDotPos > 2\r\n                )\r\n            ) {\r\n                formIsValid = false;\r\n                invalid['contactEmail'] = true;\r\n            }\r\n        }\r\n\r\n        this.setState({ invalid: invalid });\r\n        return formIsValid;\r\n    }\r\n\r\n    handleChanges = e => {\r\n        const input = e.target;\r\n        const name = input.name;\r\n        const value = input.value;\r\n        this.setState({ [name]: value });\r\n\r\n    };\r\n\r\n    async updateCustomer(customer) {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n        if (authenticated) {\r\n            return await apiCustomerPut(this.props.serviceUrl, customer);\r\n        }\r\n    }\r\n\r\n    getCustomerDetails = (customerId) => {\r\n        this.getCustomer(customerId)\r\n    }\r\n\r\n    async getCustomer(customerId) {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n        if (authenticated) {\r\n            const customer = await apiCustomerGet(this.props.serviceUrl, customerId);\r\n            this.setState({\r\n                name: customer.data.name,\r\n                customerNumber: customer.data.customerNumber,\r\n                contactName: customer.data.contactName,\r\n                contactPhone: customer.data.contactPhone,\r\n                contactEmail:customer.data.contactEmail,\r\n                notes:customer.data.notes,\r\n                modalId: \"modal-form-customer-edit-\" + customer.data.id,\r\n                buttonId: \"edit-customer-button-\" + customer.data.id\r\n              })\r\n        }\r\n    }\r\n\r\n    handleFormSubmit = e => {\r\n        const formIsValid = this.handleValidation();\r\n\r\n        if (formIsValid) {\r\n            const customer = {\r\n                id: this.props.customer.id,\r\n                name: this.state.name,\r\n                customerNumber: this.state.customerNumber,\r\n                contactName: this.state.contactName,\r\n                contactPhone: this.state.contactPhone,\r\n                contactEmail:this.state.contactEmail,\r\n                notes:this.state.notes\r\n            }\r\n            this.updateCustomer(customer).then(result => {\r\n                this.setState({\r\n                    submitMsg: i18n.t('submitMessages.updated'),\r\n                    submitColour: '#24a148'\r\n                })\r\n                this.props.updateCustomerList();\r\n                this.getCustomerDetails(this.props.customer.id);\r\n\r\n            }).catch(err => {\r\n                this.setState({\r\n                    submitMsg: i18n.t('submitMessages.error'),\r\n                    submitColour: '#da1e28'\r\n                })\r\n            });\r\n        }\r\n    };\r\n\r\n    clearValues = () => {\r\n        const { keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n        const customerModalElement = document.querySelector('#' + this.state.modalId);\r\n        if(!customerModalElement.className.includes(\"is-visible\") && authenticated) {\r\n            this.setState({\r\n                name: this.props.customer.name,\r\n                customerNumber: this.props.customer.customerNumber,\r\n                contactName: this.props.customer.contactName,\r\n                contactPhone: this.props.customer.contactPhone,\r\n                contactEmail:this.props.customer.contactEmail,\r\n                notes:this.props.customer.notes,\r\n                invalid: {}\r\n            })\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n    \r\n        if (authenticated) {\r\n            if (this.props.customerId) {\r\n                this.getCustomerDetails(this.props.customerId);\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n    \r\n        const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n    \r\n        if (authenticated && changedAuth) {\r\n              this.getCustomerDetails(this.props.customerId);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const buttonClassName = \"bx--btn bx--btn--ghost edit-customer-button-\" + this.props.customer.id;\r\n        return (\r\n            <ModalWrapper\r\n                buttonTriggerText={i18n.t('buttons.edit')}\r\n                modalHeading={i18n.t('adminDashboard.editCustomer.title')}\r\n                buttonTriggerClassName={buttonClassName}\r\n                className=\"modal-form\"\r\n                id={this.state.modalId}\r\n                handleSubmit={this.handleFormSubmit}\r\n                primaryButtonText={i18n.t('modalText.save')}\r\n                secondaryButtonText={i18n.t('modalText.cancel')}\r\n                modalLabel={<p style={{color: this.state.submitColour}}>{this.state.submitMsg}</p>}\r\n            >\r\n                <div className=\"form-container\">\r\n                    <Form onSubmit={this.handleFormSubmit}>\r\n                        <TextInput\r\n                            name=\"name\"\r\n                            labelText={i18n.t('adminDashboard.addCustomer.customerName') + \" *\"}\r\n                            value={this.state.name}\r\n                            onChange={this.handleChanges}\r\n                            invalidText={i18n.t('validation.invalid.required')}\r\n                            invalid={this.state.invalid['name']}\r\n                        />\r\n                        <TextInput\r\n                            name=\"customerNumber\"\r\n                            labelText={i18n.t('adminDashboard.addCustomer.customerNumber') + \" *\"}\r\n                            value={this.state.customerNumber}\r\n                            onChange={this.handleChanges}\r\n                            invalidText={i18n.t('validation.invalid.required')}\r\n                            invalid={this.state.invalid['customerNumber']}\r\n                        />\r\n                        <TextInput\r\n                            name=\"contactName\"\r\n                            labelText={i18n.t('adminDashboard.addCustomer.contactName')}\r\n                            value={this.state.contactName}\r\n                            onChange={this.handleChanges}\r\n                        />\r\n                        <TextInput\r\n                            name=\"contactPhone\"\r\n                            labelText={i18n.t('adminDashboard.addCustomer.contactPhone')}\r\n                            value={this.state.contactPhone}\r\n                            onChange={this.handleChanges}\r\n                        />\r\n                        <TextInput\r\n                            name=\"contactEmail\"\r\n                            labelText={i18n.t('adminDashboard.addCustomer.contactEmail') + \" *\"}\r\n                            value={this.state.contactEmail}\r\n                            onChange={this.handleChanges}\r\n                            invalidText={i18n.t('validation.invalid.email')}\r\n                            invalid={this.state.invalid['contactEmail']}\r\n                        />\r\n                        <TextArea\r\n                            name=\"notes\"\r\n                            labelText={i18n.t('adminDashboard.addCustomer.notes')}\r\n                            value={this.state.notes}\r\n                            onChange={this.handleChanges}\r\n                        />\r\n                    </Form>\r\n                </div>\r\n            </ModalWrapper>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withKeycloak(EditCustomerModal);\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { AccordionItem, Button } from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport { apiCustomerGet, apiCustomerDelete, apiGetCustomersProjects,  apiGetMyCustomersProjects } from '../../api/customers';\r\nimport { apiGetProjectsUsers } from '../../api/projects';\r\nimport CustomTable from './customDataTable';\r\nimport CustomerDetails from './customerDetails';\r\nimport { hasKeycloakClientRole } from '../../api/helpers';\r\nimport EditCustomerModal from '../Admin/EditCustomerModal';\r\nimport i18n from '../../i18n';\r\n\r\nclass CustomerAccordian extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            projects: {},\r\n            customer: {},\r\n            authenticated: false\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        const { keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n        if (authenticated) {\r\n            this.getCustomersProjects(this.props.customerNumber);\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const { keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n    \r\n        const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n    \r\n        if (authenticated && changedAuth) {\r\n            this.getCustomersProjects(this.props.customerNumber);\r\n        }\r\n      }\r\n\r\n    async getCustomersProjects(id) {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n        if (authenticated) {\r\n            const customer = await apiCustomerGet(this.props.serviceUrl, id);\r\n\r\n            var projects;\r\n            try {\r\n                if (hasKeycloakClientRole('ROLE_ADMIN') || hasKeycloakClientRole('ROLE_SUPPORT')) {\r\n                    projects = await apiGetCustomersProjects(this.props.serviceUrl, id);\r\n                }\r\n                else {\r\n                    projects = await apiGetMyCustomersProjects(this.props.serviceUrl, id);\r\n                }\r\n\r\n                this.setState({\r\n                    projects: projects.data,\r\n                    customer: customer.data\r\n                })\r\n            } catch(error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n    }\r\n\r\n    async deleteCustomer() {\r\n        return await apiCustomerDelete(this.props.serviceUrl, this.state.customer.id);\r\n    }\r\n\r\n    handleDelete(e) {\r\n        if (window.confirm(\"Are you sure you want to delete this customer?\")) {\r\n            this.deleteCustomer().then(result => {\r\n                this.props.updateCustomerList();\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        var { t, keycloak } = this.props;\r\n        var authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n        return(\r\n            <div>\r\n                <div>\r\n                    {hasKeycloakClientRole('ROLE_CUSTOMER') ? \r\n                        <CustomerDetails serviceUrl={this.props.serviceUrl} customerNumber={this.props.customerNumber} /> : null \r\n                    }\r\n                    <AccordionItem title={this.props.title} open={this.props.accordionOpened}>\r\n                        <div style={{display: 'flex'}}>\r\n                            {hasKeycloakClientRole('ROLE_ADMIN') || hasKeycloakClientRole('ROLE_SUPPORT') ?\r\n                                <Link style={{textDecoration: 'none'}} to={`/customer-details/${this.state.customer.id}`}><Button kind='ghost'>{i18n.t('buttons.viewDetails')}</Button></Link>  : null\r\n                            }\r\n                            {hasKeycloakClientRole('ROLE_ADMIN') ?\r\n                                <div style={{display: 'flex'}}>\r\n                                    <EditCustomerModal serviceUrl={this.props.serviceUrl} customer={this.state.customer} key={this.state.customer.id} updateCustomerList={this.props.updateCustomerList} customerId={this.state.customer.id}/>\r\n                                    <Button kind='ghost' style={{color: 'red'}} onClick={() => this.handleDelete()}>{i18n.t('buttons.delete')}</Button>\r\n                                </div>  : null\r\n                            }\r\n                        </div>\r\n                        <CustomTable key={(new Date).getTime()} serviceUrl={this.props.serviceUrl} customerNumber={this.props.customerNumber} locale={this.props.locale} />\r\n                    </AccordionItem>\r\n                </div> \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withKeycloak(CustomerAccordian);","import React from 'react';\r\nimport i18n from '../../i18n';\r\nimport { Accordion, PaginationNav, Search, Tile} from 'carbon-components-react';\r\nimport AddCustomerModal from './AddCustomerModal';\r\nimport AddPartnerModal from './AddPartnerModal';\r\nimport AddProjectModal from './AddProjectModal'\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport { apiAdminCustomersGet, apiMyCustomersGet } from '../../api/customers';\r\nimport CustomerAccordian from '../Customer/CustomerAccordian';\r\nimport { hasKeycloakClientRole } from '../../api/helpers';\r\nimport { apiProjectsGet, apiMyProjectsGet } from '../../api/projects';\r\n\r\nclass AdminDashboard extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            customers: {},\r\n            projects: {},\r\n            customersProjects: {},\r\n            role: '',\r\n            filteredCustomers: {},\r\n            currentPage: 0,\r\n            test: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getCustomers();\r\n        this.getProjects();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n    \r\n        const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n    \r\n        if (authenticated && changedAuth) {\r\n          this.getCustomers();\r\n          this.getProjects();\r\n        }\r\n      }\r\n\r\n    async getProjects() {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n        if (authenticated) {\r\n            var projects = ''\r\n            if (hasKeycloakClientRole('ROLE_ADMIN') || hasKeycloakClientRole('ROLE_SUPPORT')) {\r\n                projects = await apiProjectsGet(this.props.serviceUrl);\r\n            }\r\n            else {\r\n                projects = await apiMyProjectsGet(this.props.serviceUrl);\r\n            }\r\n            this.setState({\r\n                projects: projects.data,\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    async getCustomers() {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n        if (authenticated) {\r\n            var customers;\r\n            if (hasKeycloakClientRole('ROLE_ADMIN') || hasKeycloakClientRole('ROLE_SUPPORT')) {\r\n                customers = await apiAdminCustomersGet(this.props.serviceUrl);\r\n            }\r\n            else {\r\n                customers = await apiMyCustomersGet(this.props.serviceUrl);\r\n            }\r\n\r\n            this.setState({\r\n                customers: customers.data,\r\n                filteredCustomers: customers.data\r\n            })\r\n        }\r\n    }\r\n\r\n    handleSearch = (event) => {\r\n        if (event.key === 'Enter') {\r\n            const newFilteredState = this.state.customers.filter(customer => customer.name.toLowerCase().includes(event.target.value.toLowerCase()))\r\n            this.setState({\r\n                filteredCustomers: newFilteredState,\r\n                currentPage: 0\r\n            })\r\n        }\r\n        else {\r\n            if (event.target.value === '' || event.target.value === undefined) {\r\n                this.setState({\r\n                    filteredCustomers: this.state.customers\r\n                })\r\n            }\r\n        }\r\n        this.forceUpdate();\r\n    }\r\n\r\n    updateCustomerList = () => {\r\n        this.getCustomers();\r\n        this.getProjects();\r\n    }\r\n\r\n    render(){\r\n        var numberOfPages = 1;\r\n        if (Object.keys(this.state.filteredCustomers).length !== 0) {\r\n            numberOfPages = Math.ceil(this.state.filteredCustomers.length / 5);\r\n        }\r\n        else {\r\n            numberOfPages = 1;\r\n        }\r\n        \r\n        const props = () => ({\r\n            loop: Boolean(false),\r\n            page: Number(this.state.currentPage),\r\n            totalItems: Number(numberOfPages),\r\n            itemsShown: Number(1),\r\n            onChange: (event) => this.setState({currentPage: event}),\r\n        });\r\n\r\n        return(\r\n            <div className=\"admin-dashboard\">\r\n                {hasKeycloakClientRole('ROLE_ADMIN') ? \r\n                    <h3 className=\"pageTitle\">{i18n.t('adminDashboard.adminTitle')}</h3> : \r\n                hasKeycloakClientRole('ROLE_SUPPORT') ? \r\n                    <h3 className=\"pageTitle\">{i18n.t('adminDashboard.supportTitle')}</h3> : \r\n                hasKeycloakClientRole('ROLE_CUSTOMER') ? \r\n                    <h3 className=\"pageTitle\">{i18n.t('adminDashboard.customerTitle')}</h3> : \r\n                hasKeycloakClientRole('ROLE_PARTNER') ? \r\n                    <h3 className=\"pageTitle\">{i18n.t('adminDashboard.partnerTitle')}</h3> : \r\n                null}\r\n            {hasKeycloakClientRole('ROLE_ADMIN') || hasKeycloakClientRole('ROLE_SUPPORT') || hasKeycloakClientRole('ROLE_PARTNER') ?\r\n                <Tile>\r\n                    <p className=\"title\">{i18n.t('adminDashboard.allCustomers')}</p>\r\n                    <div className=\"bx--row\">\r\n                        <div className=\"bx--col\">\r\n                            <Search onChange={this.handleSearch} id=\"search\" placeHolderText={i18n.t('adminDashboard.searchText')} onKeyPress={this.handleSearch}/>\r\n                        </div>\r\n                        {hasKeycloakClientRole('ROLE_ADMIN') ?\r\n                        <div className=\"bx--col\">\r\n                            \r\n                            <div>\r\n                                <AddPartnerModal serviceUrl={this.props.serviceUrl} updateCustomerList={this.updateCustomerList} allProjects={this.state.projects} />\r\n                                <AddCustomerModal serviceUrl={this.props.serviceUrl} updateCustomerList={this.updateCustomerList} />\r\n                                <AddProjectModal serviceUrl={this.props.serviceUrl} updateCustomerList={this.updateCustomerList} allCustomers={this.state.customers} />\r\n                            </div>\r\n                        </div> : null}\r\n                    </div>\r\n                </Tile>  \r\n                : null\r\n            }\r\n                    \r\n                <div className=\"form-container\">\r\n                    <Accordion>\r\n                        {Object.keys(this.state.customers).length !== 0 ? this.state.filteredCustomers.map((customer, index) => {\r\n                            // Pagination for Admin and Support roles (5 items per page)\r\n                            var indexOfLastItem = ((this.state.currentPage + 1) * 5) - 1;\r\n                            var firstIndexOfCurrentPage = this.state.currentPage * 5;\r\n                            var accordionOpened = this.state.customers.length === 1;\r\n                            \r\n                            if (hasKeycloakClientRole('ROLE_ADMIN') || hasKeycloakClientRole('ROLE_SUPPORT') || hasKeycloakClientRole('ROLE_CUSTOMER') || hasKeycloakClientRole('ROLE_PARTNER')) {\r\n                                if (index >= firstIndexOfCurrentPage && index <= indexOfLastItem) {\r\n                                    return(\r\n                                        <CustomerAccordian key={customer.id} serviceUrl={this.props.serviceUrl} customerNumber={customer.id} title={customer.name} updateCustomerList={this.updateCustomerList} locale={this.props.locale} accordionOpened={accordionOpened}/>\r\n                                    )\r\n                                }\r\n                                else {\r\n                                    return(null)\r\n                                }\r\n                            }\r\n                            else {\r\n                                return(null)\r\n                            }\r\n                        }) : null}\r\n                    </Accordion>\r\n                    <PaginationNav {...props()} cssClass='pagination-right' />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default withKeycloak(AdminDashboard);","export const publishWidgetEvent = (eventId, payload) => {\r\n  const widgetEvent = new CustomEvent(eventId, {\r\n    detail: {\r\n      payload,\r\n    },\r\n  });\r\n  window.dispatchEvent(widgetEvent);\r\n};\r\n\r\nexport const createWidgetEventPublisher = eventType => payload =>\r\n  publishWidgetEvent(eventType, payload);\r\n\r\nexport const subscribeToWidgetEvent = (eventType, eventHandler) => {\r\n  window.addEventListener(eventType, eventHandler);\r\n\r\n  return () => {\r\n    window.removeEventListener(eventType, eventHandler);\r\n  };\r\n};\r\n\r\nexport const subscribeToWidgetEvents = (widgetEvents, eventHandler) => {\r\n  widgetEvents.forEach(eventType => window.addEventListener(eventType, eventHandler));\r\n\r\n  return () => {\r\n    widgetEvents.forEach(eventType => window.removeEventListener(eventType, eventHandler));\r\n  };\r\n};\r\n\r\nexport const widgetEventToFSA = widgetEvent => {\r\n  // for info about Flux Standard Action (FSA) see https://github.com/redux-utilities/flux-standard-action\r\n  const {\r\n    type,\r\n    detail: { payload, error, meta },\r\n  } = widgetEvent;\r\n  return { type, payload, error, meta };\r\n};\r\n","export const INPUT_EVENT_TYPES = {\r\n    formUpdate: 'customer.form.update',\r\n    formCreate: 'customer.form.create',\r\n    formDelete: 'customer.form.delete',\r\n  };\r\n  \r\n  export const OUTPUT_EVENT_TYPES = {\r\n    select: 'customer.table.select',\r\n    add: 'customer.table.add',\r\n    error: 'customer.table.error',\r\n    delete: 'customer.table.delete',\r\n  };\r\n  \r\n  export const KEYCLOAK_EVENT_TYPE = 'keycloak';\r\n  ","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport AdminDashboard from '../components/Admin/AdminDashboard';\r\nimport '../index.scss'\r\nimport './dashboard.css'\r\n\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\n\r\nimport {\r\n  subscribeToWidgetEvent\r\n} from '../helpers/widgetEvents';\r\nimport {\r\n  KEYCLOAK_EVENT_TYPE,\r\n} from '../custom-elements/widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window &&\r\n    window.entando &&\r\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\nconst ATTRIBUTES = {\r\n  hidden: 'hidden',\r\n  locale: 'locale',\r\n  paginationMode: 'pagination-mode',\r\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n  serviceUrl: 'service-url',\r\n};\r\n\r\nclass AdminDashboardElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    \r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    //retargetEvents(shadowRoot);\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <AdminDashboard serviceUrl={serviceUrl} />\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.define('admin-dashboard-widget', AdminDashboardElement);\r\n","import { getDefaultOptions, request, getUrl } from './helpers';\r\n\r\nconst resource = 'api/tickets';\r\n\r\nexport const apiTicketDelete = async (serviceUrl, id) => {\r\n  const url = `${serviceUrl}/${resource}/${id}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiTicketsGet = async (serviceUrl ) => {\r\n\r\n  const url = getUrl(\r\n    `${serviceUrl}/${resource}`\r\n  );\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiTicketPost = async (serviceUrl, ticket) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n    body: ticket ? JSON.stringify(ticket) : null,\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\n\r\nconst jiraResource = 'api/tickets/ticketingsystem';\r\nexport const apiJiraTicketDelete = async (serviceUrl, id) => {\r\n  const url = `${serviceUrl}/${jiraResource}/${id}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiJiraTicketsGet = async (serviceUrl, projectName, organization) => {\r\n  const url = `${serviceUrl}/${jiraResource}/${projectName}/${organization}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiJiraTicketPost = async (serviceUrl, projectName, organization, ticket) => {\r\n  const url = `${serviceUrl}/${jiraResource}/${projectName}/${organization}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n    body: ticket ? JSON.stringify(ticket) : null,\r\n  };\r\n  return request(url, options);\r\n};","import { getDefaultOptions, request, getUrl } from './helpers';\r\n\r\nconst resource = 'api/ticketing-systems';\r\n\r\nexport const apiTicketingSystemDelete = async (serviceUrl, id) => {\r\n  const url = `${serviceUrl}/${resource}/${id}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE',\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiTicketingSystemsGet = async (serviceUrl) => {\r\n  const url = getUrl(\r\n    `${serviceUrl}/${resource}`\r\n  );\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiTicketingSystemPost = async (serviceUrl, ticketingsystem) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n    body: ticketingsystem ? JSON.stringify(ticketingsystem) : null,\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiTicketingSystemPut = async (serviceUrl, ticketingsystem) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'PUT',\r\n    body: ticketingsystem ? JSON.stringify(ticketingsystem) : null,\r\n  };\r\n  return request(url, options);\r\n};","import React, { Component } from 'react';\r\nimport { DataTable, TableContainer, Table, TableHead, TableRow, TableHeader, TableBody, TableCell, PaginationNav } from 'carbon-components-react';\r\nimport { apiJiraTicketsGet } from '../../api/tickets';\r\nimport { apiTicketingSystemsGet } from '../../api/ticketingsystem';\r\nimport { AuthenticatedView, UnauthenticatedView } from '../../auth/KeycloakViews';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport { apiProjectGet, apiAddTicketToProject } from '../../api/projects';\r\nimport { hasKeycloakClientRole } from '../../api/helpers';\r\nimport i18n from '../../i18n';\r\n\r\nclass TicketList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n      tickets: {},\r\n      project: {},\r\n      currentTicketingSystem: {},\r\n      currentPage: 0\r\n     }\r\n     this.headerData = [\r\n      {\r\n        header: i18n.t('ticketDetails.issue'),\r\n        key: 'issue',\r\n      },\r\n      {\r\n        header: i18n.t('ticketDetails.description'),\r\n        key: 'description',\r\n      },\r\n      {\r\n        header: i18n.t('ticketDetails.status'),\r\n        key: 'status',\r\n      },\r\n      {\r\n        header: i18n.t('ticketDetails.type'),\r\n        key: 'type',\r\n      },\r\n      {\r\n        header: i18n.t('ticketDetails.priority'),\r\n        key: 'priority',\r\n      },\r\n      {\r\n        header: i18n.t('ticketDetails.created'),\r\n        key: 'created',\r\n      },\r\n      {\r\n        header: i18n.t('ticketDetails.updated'),\r\n        key: 'updated',\r\n      },\r\n      {\r\n        header: i18n.t('ticketDetails.link'),\r\n        key: 'link',\r\n      }\r\n    ];\r\n  }\r\n\r\n  async fetchData() {\r\n    const { t, keycloak } = this.props;\r\n    var authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n    if (authenticated) {\r\n      try {\r\n          const project = await apiProjectGet(this.props.serviceUrl, this.props.projectId);\r\n          const ticketingSystems = await apiTicketingSystemsGet(this.props.serviceUrl);\r\n          const currentTicketingSystem = ticketingSystems.data[ticketingSystems.data.length-1]\r\n          var tickets = await apiJiraTicketsGet(this.props.serviceUrl, currentTicketingSystem.systemId, project.data.systemId);\r\n          for(var i = 0; i < tickets.data.length; i++) {\r\n            apiAddTicketToProject(this.props.serviceUrl, this.props.projectId, tickets.data[i].id);\r\n          }\r\n\r\n          this.setState({\r\n              tickets: tickets,\r\n              project: project,\r\n              currentTicketingSystem: currentTicketingSystem\r\n          });\r\n      }\r\n      catch(err) {\r\n        console.log(err)\r\n      }\r\n    }\r\n}\r\n\r\ncomponentDidMount(){\r\n  const { keycloak } = this.props;\r\n  const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n  if(authenticated) {\r\n    if (hasKeycloakClientRole('ROLE_ADMIN') || hasKeycloakClientRole('ROLE_SUPPORT') || hasKeycloakClientRole('ROLE_CUSTOMER') || hasKeycloakClientRole('ROLE_PARTNER')) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n}\r\n\r\ncomponentDidUpdate(prevProps) {\r\n  const { keycloak } = this.props;\r\n  const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n  const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n\r\n  if (authenticated && changedAuth) {\r\n    if (hasKeycloakClientRole('ROLE_ADMIN') || hasKeycloakClientRole('ROLE_SUPPORT') || hasKeycloakClientRole('ROLE_CUSTOMER') || hasKeycloakClientRole('ROLE_PARTNER')) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n}\r\n\r\n  render() {\r\n    var numberOfPages = 1;\r\n    if (Object.keys(this.state.tickets).length !== 0) {\r\n        numberOfPages = Math.ceil(this.state.tickets.data.length / 10);\r\n    }\r\n\r\n    const paginationProps = () => ({\r\n      loop: Boolean(false),\r\n      page: Number(this.state.currentPage),\r\n      totalItems: Number(numberOfPages),\r\n      itemsShown: Number(1),\r\n      onChange: (event) => this.setState({currentPage: event}),\r\n    });\r\n\r\n    return ( \r\n      <div>\r\n        <DataTable rows={rowData} headers={this.headerData}>\r\n        {({ rows, headers, getHeaderProps, getTableProps }) => (\r\n          <TableContainer \r\n            title={i18n.t('ticketDetails.listOfTickets')} \r\n            description={Object.keys(this.state.tickets).length !== 0 && Object.keys(this.state.project).length !== 0  ? <a href={this.state.currentTicketingSystem.url.substr(0, this.state.currentTicketingSystem.url.indexOf(\"/rest\")) + \"/browse/\" + this.state.tickets.data[0].systemId + \"?jql=Organizations=\" + this.state.project.data.systemId} style={{textDecoration: 'none'}} target=\"_blank\" >{i18n.t('ticketDetails.tickets')}</a> : <a>{i18n.t('ticketDetails.tickets')}</a>}\r\n          >\r\n            <Table {...getTableProps()}>\r\n              <TableHead>\r\n                <TableRow>\r\n                  {headers.map((header) => (\r\n                    <TableHeader {...getHeaderProps({ header })}>\r\n                      {header.header}\r\n                    </TableHeader>\r\n                  ))}\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {Object.keys(this.state.tickets).length !== 0 ? this.state.tickets.data.map((ticket, index) => {\r\n                  var indexOfLastItem = ((this.state.currentPage + 1) * 10) - 1;\r\n                  var firstIndexOfCurrentPage = this.state.currentPage * 10;\r\n\r\n                  if (index >= firstIndexOfCurrentPage && index <= indexOfLastItem) {\r\n                    return (\r\n                      <TableRow key={ticket.id}>\r\n                        <TableCell key={ticket.id}>{ticket.systemId}</TableCell>\r\n                        <TableCell key={ticket.id}>{ticket.description}</TableCell>\r\n                        <TableCell key={ticket.id}>{ticket.status}</TableCell>\r\n                        <TableCell key={ticket.id}>{ticket.type}</TableCell>\r\n                        <TableCell key={ticket.id}>{ticket.priority}</TableCell>\r\n                        <TableCell key={ticket.id}>{new Date(ticket.createDate).toDateString()}</TableCell>\r\n                        <TableCell key={ticket.id}>{new Date(ticket.updateDate).toDateString()}</TableCell>\r\n                        <TableCell key={ticket.id}><a href={this.state.currentTicketingSystem.url.substr(0, this.state.currentTicketingSystem.url.indexOf(\"/rest\")) + \"/browse/\" + ticket.systemId} target=\"_blank\">{i18n.t('ticketDetails.viewTicket')}</a></TableCell>\r\n                      </TableRow>\r\n                    )\r\n                  }\r\n                  else {\r\n                    return(null)\r\n                  }\r\n                }) : <p></p> }\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        )}\r\n      </DataTable>\r\n      <PaginationNav {...paginationProps()} cssClass='pagination-right' />\r\n    </div>\r\n  )}\r\n}\r\n\r\nconst rowData = [\r\n  {\r\n       id: 'a',\r\n       projectName: 'Ticket1',\r\n       project: 'Leonardo',\r\n       entandoVersion: 6.2,\r\n       creationDate: 'October, 2019',\r\n       openTicket: <a href=\"\">Open Ticket</a>,\r\n    },\r\n    {\r\n        id: 'a',\r\n        projectName: 'Ticket1',\r\n        project: 'Leonardo',\r\n        entandoVersion: 6.2,\r\n        creationDate: 'October, 2019',\r\n        openTicket: <a href=\"\">Open Ticket</a>,\r\n    },\r\n    {\r\n        id: 'a',\r\n        projectName: 'Ticket1',\r\n        project: 'Leonardo',\r\n        entandoVersion: 6.2,\r\n        creationDate: 'October, 2019',\r\n        openTicket: <a href=\"\">Open Ticket</a>,\r\n     },\r\n  \r\n];\r\n \r\nexport default withKeycloak(TicketList);","import { getDefaultOptions, request } from './helpers';\r\n\r\nconst resource = 'api/project-subscriptions'\r\n\r\nexport const apiSubscriptionGet = async (serviceUrl, id) => {\r\n    const url = `${serviceUrl}/${resource}/${id}`;\r\n    const options = {\r\n        ...getDefaultOptions(),\r\n        method: 'GET',\r\n    };\r\n    return request(url, options);\r\n};\r\n\r\n\r\nexport const apiSubscriptionGetAll = async (serviceUrl) => {\r\n    const url = `${serviceUrl}/${resource}`;\r\n    const options = {\r\n        ...getDefaultOptions(),\r\n        method: 'GET',\r\n    };\r\n    return request(url, options);\r\n};\r\n\r\n// Project Subscription creation consists of an object containing a projectSubscription, an entandoVersionId, and a\r\n// project id, see SubscriptionCreationRequest.\r\n/**\r\n * Called to create a new project subscription\r\n * \r\n * @param {string} serviceUrl \r\n * @param {ProjectSubscriptionCreation} projectSubscriptionCreation \r\n * @returns \r\n */\r\nexport const apiProjectSubscriptionPost = async (serviceUrl, projectSubscriptionCreation) => {\r\n    const url = `${serviceUrl}/${resource}`;\r\n    const options = {\r\n        ...getDefaultOptions(),\r\n        method: 'POST',\r\n        body: projectSubscriptionCreation ? JSON.stringify(projectSubscriptionCreation) : null,\r\n    };\r\n    return request(url, options);\r\n};\r\n\r\nexport const apiProjectSubscriptionPut = async (serviceUrl, projectSubscriptionCreation) => {\r\n    const url = `${serviceUrl}/${resource}`;\r\n    const options = {\r\n        ...getDefaultOptions(),\r\n        method: 'PUT',\r\n        body: projectSubscriptionCreation ? JSON.stringify(projectSubscriptionCreation) : null,\r\n    };\r\n    return request(url, options);\r\n};\r\n\r\nconst myResource = 'api/project-subscriptions/mysubscription'\r\nexport const apiGetMySubscription = async (serviceUrl, customerId) => {\r\n    const url = `${serviceUrl}/${myResource}/${customerId}`;\r\n    const options = {\r\n      ...getDefaultOptions(),\r\n      method: 'GET'\r\n    };\r\n  \r\n    return request(url, options);\r\n  };\r\n\r\n  // Same format as {projectSubscriptionCreation}\r\nexport const apiRenewSubscription = async (serviceUrl, projectSubscriptionRenew) => {\r\n    const url = `${serviceUrl}/${resource}/renew`;\r\n\r\n    const options = {\r\n        ...getDefaultOptions(),\r\n        method: 'PUT',\r\n        body: projectSubscriptionRenew ? JSON.stringify(projectSubscriptionRenew) : null\r\n    };\r\n\r\n    return request(url, options);\r\n};","import { getDefaultOptions, request, getUrl } from './helpers';\r\n\r\nconst resource = 'api/portal-users';\r\n\r\nexport const apiUserDelete = async (serviceUrl, id) => {\r\n  const url = `${serviceUrl}/${resource}/${id}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE',\r\n  };\r\n  return await request(url, options);\r\n};\r\n\r\nexport const apiUsersPut = async (serviceUrl, user) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'PUT',\r\n    body: user ? JSON.stringify(user) : null,\r\n  };\r\n  return await request(url, options);\r\n};\r\n\r\nexport const apiUsersGet = async (serviceUrl) => {\r\n  const url = getUrl(\r\n    `${serviceUrl}/${resource}`\r\n  );\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return await request(url, options);\r\n};\r\n\r\nexport const apiUserGet = async (serviceUrl, userId) => {\r\n  const url = getUrl(\r\n    `${serviceUrl}/${resource}/${userId}`\r\n  );\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return await request(url, options);\r\n};\r\n\r\nexport const apiUserPost = async (serviceUrl, user) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'POST',\r\n    body: user ? JSON.stringify(user) : null,\r\n  };\r\n  return await request(url, options);\r\n};\r\n\r\nexport const apiUserGetByUsername = async (serviceUrl, username) => {\r\n  const url = getUrl(\r\n    `${serviceUrl}/${resource}/username/${username}`\r\n  );\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'GET',\r\n  };\r\n\r\n  return await request(url, options);\r\n};","import React, { Component } from 'react';\r\nimport i18n from '../../i18n';\r\nimport { ModalWrapper, Form, TextInput, TextArea, Select, SelectItem, DatePicker, DatePickerInput} from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport { apiProjectSubscriptionPut, apiSubscriptionGet } from '../../api/subscriptions';\r\nimport moment from 'moment';\r\n\r\nclass EditSubscriptionModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            level: '',\r\n            status: '',\r\n            lengthInMonths: '',\r\n            startDate: '',\r\n            notes: '',\r\n            invalid: {},\r\n            submitMsg: '',\r\n            submitColour: 'black'\r\n        };\r\n    }\r\n\r\n    handleValidation() {\r\n        let invalid = {};\r\n        let formIsValid = true;\r\n\r\n        if (this.state.level === 'level') {\r\n            formIsValid = false;\r\n            invalid['level'] = true;\r\n        }\r\n\r\n        if (this.state.status === 'status') {\r\n            formIsValid = false;\r\n            invalid['status'] = true;\r\n        }\r\n\r\n        if (this.state.lengthInMonths === '' || !this.isNumeric(String(this.state.lengthInMonths))) {\r\n            formIsValid = false;\r\n            invalid['lengthInMonths'] = true;\r\n        }\r\n\r\n        if(typeof this.state.startDate !== \"undefined\"){\r\n            if(!this.state.startDate.match(/^(0[1-9]|1[0-2])\\/(0[1-9]|1\\d|2\\d|3[01])\\/(19|20)\\d{2}$/)){\r\n              formIsValid = false;\r\n              invalid['startDate'] = true;\r\n            }\r\n        }\r\n\r\n        this.setState({ invalid: invalid });\r\n        return formIsValid;\r\n    }\r\n\r\n    isNumeric(str) {\r\n        if (typeof str != \"string\")\r\n            return false\r\n        return !isNaN(str) && !isNaN(parseFloat(str))\r\n    }\r\n\r\n    handleChanges = e => {\r\n        const input = e.target;\r\n        const name = input.name;\r\n        const value = input.value;\r\n        this.setState({ [name]: value });\r\n    };\r\n\r\n    handleFormSubmit = (e) => {\r\n        const formIsValid = this.handleValidation();\r\n\r\n        if (formIsValid) {\r\n            const subscriptionRequest = {\r\n                projectSubscription : {\r\n                    id: this.props.subscription.id,\r\n                    level: this.state.level,\r\n                    status: this.state.status,\r\n                    lengthInMonths: this.state.lengthInMonths,\r\n                    startDate: moment(this.state.startDate).format(),\r\n                    notes: this.state.notes,\r\n                    project: this.props.project,\r\n                    entandoVersion: this.props.subscription.entandoVersion\r\n                }\r\n            }\r\n            this.subscriptionPut(subscriptionRequest).then(result => {\r\n                this.setState({\r\n                    submitMsg: i18n.t('submitMessages.updated'),\r\n                    submitColour: '#24a148'\r\n                })\r\n                this.props.updateSubscription();\r\n            }).catch(err => {\r\n                this.setState({\r\n                    submitMsg: i18n.t('submitMessages.error'),\r\n                    submitColour: '#da1e28'\r\n                })\r\n            });\r\n        }\r\n    };\r\n\r\n    componentDidMount() {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n        if (authenticated) {\r\n            this.getSubscriptionDetails();\r\n\r\n        }\r\n    }\r\n\r\n    handleStartDateChange = (date) => {\r\n        this.setState({\r\n            startDate: moment(date[0].toISOString()).format('MM/DD/YYYY')\r\n        })\r\n    }\r\n\r\n    async getSubscriptionDetails() {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n        if (authenticated) {\r\n            const subscription =  await apiSubscriptionGet(this.props.serviceUrl, this.props.subscription.id);\r\n            this.setState({\r\n                level: subscription.data.level,\r\n                status: subscription.data.status,\r\n                lengthInMonths: subscription.data.lengthInMonths,\r\n                startDate: moment(subscription.data.startDate).format('MM/DD/YYYY'),\r\n                notes: subscription.data.notes,\r\n                submitMsg: ''\r\n            })\r\n        }\r\n    }\r\n\r\n    async subscriptionPut(subscription) {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n        if (authenticated) {\r\n            return await apiProjectSubscriptionPut(this.props.serviceUrl, subscription);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const levelList = ['GOLD', 'PLATINUM'];\r\n        const statusList = ['REQUESTED', 'PENDING', 'ACTIVE', 'EXPIRED'];\r\n        return (\r\n            <ModalWrapper\r\n                buttonTriggerText={i18n.t('buttons.edit')}\r\n                modalHeading={i18n.t('editSubscription.title')}\r\n                buttonTriggerClassName=\"add-project bx--btn bx--btn--tertiary edit-sub-button\"\r\n                className=\"modal-form\"\r\n                id=\"modal-form-sub-edit\"\r\n                handleSubmit={this.handleFormSubmit}\r\n                primaryButtonText={i18n.t('modalText.save')}\r\n                secondaryButtonText={i18n.t('modalText.cancel')}\r\n                modalLabel={<p style={{color: this.state.submitColour}}>{this.state.submitMsg}</p>}\r\n            >\r\n                {/*<p> Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse cursus fermentum risus, sit amet fringilla nunc pellentesque quis. </p>*/}\r\n                <div className=\"form-container\">\r\n                    <Form onSubmit={this.handleFormSubmit}>\r\n                        <Select\r\n                            name=\"level\"\r\n                            labelText={i18n.t('subscriptionDetails.level') + \" *\"}\r\n                            value={this.state.level}\r\n                            onChange={this.handleChanges}\r\n                            invalidText={i18n.t('validation.invalid.required')}\r\n                            invalid={this.state.invalid['level']}\r\n                            >\r\n                            <SelectItem disabled text=\"Select Level\" value=\"level\" />\r\n                            {levelList.map((level, i) => (\r\n                                    <SelectItem key={i} text={level} value={level}>\r\n                                        {level}\r\n                                    </SelectItem>\r\n                            ))}\r\n                        </Select>\r\n                        <Select\r\n                            name=\"status\"\r\n                            labelText={i18n.t('subscriptionDetails.status') + \" *\"}\r\n                            value={this.state.status}\r\n                            onChange={this.handleChanges}\r\n                            invalidText={i18n.t('validation.invalid.required')}\r\n                            invalid={this.state.invalid['status']}\r\n                            >\r\n                            <SelectItem disabled text=\"Select Status\" value=\"status\" />\r\n                            {statusList.map((status, i) => (\r\n                                <SelectItem key={i} text={status} value={status}>\r\n                                    {status}\r\n                                </SelectItem>\r\n                            ))}\r\n                        </Select>\r\n                        <DatePicker dateFormat=\"m/d/Y\" datePickerType=\"single\" onChange={this.handleStartDateChange} value={this.state.startDate}>\r\n                            <DatePickerInput\r\n                                name=\"startDate\"\r\n                                placeholder=\"mm/dd/yyyy\"\r\n                                labelText={i18n.t('subscriptionDetails.startDate') + \" *\"}\r\n                                //onChange={this.handleChanges}\r\n                                type=\"text\"\r\n                                invalidText={i18n.t('validation.invalid.date')}\r\n                                invalid={this.state.invalid['startDate']}\r\n                            />\r\n                        </DatePicker>\r\n                        <TextInput\r\n                            name=\"lengthInMonths\"\r\n                            labelText={i18n.t('subscriptionDetails.lengthInMonths') + \" *\"}\r\n                            value={this.state.lengthInMonths}\r\n                            onChange={this.handleChanges}\r\n                            invalidText={i18n.t('validation.invalid.number')}\r\n                            invalid={this.state.invalid['lengthInMonths']}\r\n                        />\r\n                        <TextArea\r\n                            name=\"notes\"\r\n                            labelText={i18n.t('adminDashboard.addProject.notes')}\r\n                            value={this.state.notes}\r\n                            onChange={this.handleChanges}\r\n                        />\r\n                    </Form>\r\n                </div>\r\n            </ModalWrapper>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withKeycloak(EditSubscriptionModal)\r\n\r\n\r\n","import React from 'react';\r\nimport TicketList from './TicketList';\r\nimport { Tile } from 'carbon-components-react';\r\nimport { apiSubscriptionGet, apiGetMySubscription } from '../../api/subscriptions'\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport { apiUsersGet } from '../../api/portalusers';\r\nimport { apiGetProjectsUsers, apiProjectGet } from '../../api/projects'; \r\nimport { hasKeycloakClientRole } from '../../api/helpers';\r\nimport EditSubscriptionModal from '../Admin/EditSubscriptionModal';\r\nimport i18n from '../../i18n';\r\n\r\nconst subscriptionData = {\r\n    description: 'Entando Product Support Subscription Suplier Portal',\r\n    commitment: 'Leonardo',\r\n    type: 'Product Support Subscription Entando Platform',\r\n    quantityRequest: '1(8 Core)',\r\n    components: '',\r\n    level: 'Gold',\r\n    startDate: 'May 2019',\r\n    endDate: 'May 2020',\r\n    license: 'Free Commercial Open Source',\r\n};\r\n\r\nclass Subscription extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loading: true,\r\n            subscription: {},\r\n            users: {},\r\n            project: {},\r\n            customer: {}\r\n        }\r\n    }\r\n\r\n    async getSubscription() {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n        if (authenticated) {\r\n            try {\r\n                var subscription;\r\n                var users = '';\r\n                if (hasKeycloakClientRole('ROLE_ADMIN') || hasKeycloakClientRole('ROLE_SUPPORT')) {\r\n                    subscription = await apiSubscriptionGet(this.props.serviceUrl, this.props.match.params.id);\r\n                    var project = '';\r\n                    if (subscription.data.project) {\r\n                        project = await apiProjectGet(this.props.serviceUrl, subscription.data.project.id)\r\n                        users = await apiGetProjectsUsers(this.props.serviceUrl, project.data.id)\r\n                    }\r\n                }\r\n                else if (hasKeycloakClientRole('ROLE_CUSTOMER') || hasKeycloakClientRole('ROLE_PARTNER')) {\r\n                    subscription = await apiGetMySubscription(this.props.serviceUrl, this.props.match.params.id);\r\n                    var project = '';\r\n                    if (subscription.data.project) {\r\n                        project = await apiProjectGet(this.props.serviceUrl, subscription.data.project.id)\r\n                    }\r\n                }\r\n                this.setState({\r\n                    subscription: subscription,\r\n                    project: project,\r\n                    customer: project.customer,\r\n                    users: users,\r\n                    loading: false\r\n                })\r\n            }\r\n            catch(err) {\r\n                console.log(err)\r\n            }\r\n        }\r\n    }\r\n\r\n    updateSubscription = () => {\r\n        this.getSubscription();\r\n    }\r\n\r\n    componentDidMount(){\r\n        const { keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n        if (authenticated) {\r\n            if (hasKeycloakClientRole('ROLE_ADMIN') || hasKeycloakClientRole('ROLE_SUPPORT') || hasKeycloakClientRole('ROLE_CUSTOMER') || hasKeycloakClientRole('ROLE_PARTNER')) {\r\n                this.getSubscription();\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const { keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n    \r\n        const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n    \r\n        if (authenticated && changedAuth) {\r\n            if (hasKeycloakClientRole('ROLE_ADMIN') || hasKeycloakClientRole('ROLE_SUPPORT') || hasKeycloakClientRole('ROLE_CUSTOMER') || hasKeycloakClientRole('ROLE_PARTNER')) {\r\n                this.getSubscription();\r\n            }\r\n        }\r\n      }\r\n\r\n    render() {\r\n        const { description, commitment, type, quantityRequest, components, level, startDate, endDate, license } = subscriptionData\r\n        var { t, keycloak } = this.props;\r\n        var authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n        if (!this.state.loading) {\r\n            if (hasKeycloakClientRole('ROLE_ADMIN') || hasKeycloakClientRole('ROLE_SUPPORT') || hasKeycloakClientRole('ROLE_CUSTOMER') || hasKeycloakClientRole('ROLE_PARTNER')) {\r\n                if (Object.keys(this.state.subscription).length !== 0 && Object.keys(this.state.project).length !== 0) {\r\n                    return (\r\n                        <div className=\"subscription-details\">\r\n                            <div>\r\n                            <Tile>\r\n                                <div className=\"bx--grid\">\r\n                                    <div className=\"bx--row\">\r\n                                        <div className=\"bx--col\">\r\n                                            <p><strong>{i18n.t('customerDashboard.customerName')}:</strong> {this.state.project.data.customer.name}</p>\r\n                                            <p><strong>{i18n.t('customerDashboard.projectName')}:</strong> {this.state.project.data.name}</p>\r\n                                            <p><strong>{i18n.t('subscriptionDetails.description')}:</strong> {this.state.subscription.data.project.description}</p>\r\n                                            <p><strong>{i18n.t('subscriptionDetails.partners')}:</strong>\r\n                                            {this.state.project.data !== '' && Object.keys(this.state.project.data.partners).length !== 0 ? \r\n                                                <>\r\n                                                    {this.state.project.data.partners.map((partner, index) => (\r\n                                                        <> {index === this.state.project.data.partners.length - 1 ? partner.name : partner.name + \", \"} </>\r\n                                                    ))}\r\n                                                </>\r\n                                                : <> None </>\r\n                                            }\r\n                                            </p>\r\n                                            <p><strong>{i18n.t('subscriptionDetails.type')}:</strong> {type}</p>\r\n                                            {(hasKeycloakClientRole('ROLE_ADMIN') || hasKeycloakClientRole('ROLE_SUPPORT')) ?\r\n                                                <p><strong>{i18n.t('subscriptionDetails.notes')}:</strong> {this.state.subscription.data.notes}</p> : null\r\n                                            }\r\n                                        </div>\r\n                                        <div className=\"bx--col\">\r\n                                            <p><strong>{i18n.t('subscriptionDetails.status')}:</strong> {this.state.subscription.data.status}</p>\r\n                                            <p><strong>{i18n.t('subscriptionDetails.level')}:</strong> {this.state.subscription.data.level}</p>\r\n                                            <p><strong>{i18n.t('subscriptionDetails.startDate')}:</strong> {String(new Date(this.state.subscription.data.startDate).toDateString())}</p>\r\n                                            <p><strong>{i18n.t('subscriptionDetails.endDate')}:</strong> {String(new Date(new Date(this.state.subscription.data.startDate).setMonth(new Date(this.state.subscription.data.startDate).getMonth() + this.state.subscription.data.lengthInMonths)).toDateString())}</p>\r\n                                            <p><strong>{i18n.t('subscriptionDetails.license')}:</strong> {license}</p>\r\n                                            {hasKeycloakClientRole('ROLE_ADMIN') || hasKeycloakClientRole('ROLE_SUPPORT') ? \r\n                                                <>\r\n                                                    <p><strong>{i18n.t('subscriptionDetails.assignedUsers')}:</strong>\r\n                                                    {this.state.project.data !== '' && Object.keys(this.state.users.data).length !== 0 ?\r\n                                                        <>\r\n                                                            {this.state.users.data.map((user, index) => (\r\n                                                                <> {index === this.state.users.data.length - 1 ? user.username : user.username + \", \"} </>\r\n                                                            ))}\r\n                                                        </>\r\n                                                        : <> None </>\r\n                                                    }\r\n                                                    </p>\r\n                                                </> : null\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                {hasKeycloakClientRole('ROLE_ADMIN') ? \r\n                                    <EditSubscriptionModal project={this.state.project.data} subscription={this.state.subscription.data} serviceUrl={this.props.serviceUrl} updateSubscription={this.updateSubscription}/>\r\n                                : null}\r\n                            </Tile>\r\n                            <br/>\r\n                            <TicketList projectId={this.state.project.data.id} serviceUrl={this.props.serviceUrl} />\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }\r\n                else {\r\n                    return(<p>{i18n.t('userMessages.unauthorized')}</p>)\r\n                }\r\n            }\r\n            else {\r\n                return(<p>{i18n.t('userMessages.unauthorized')}</p>)\r\n            }\r\n        }\r\n        else {\r\n            return(null)\r\n        }\r\n    }\r\n}\r\n\r\nexport default withKeycloak(Subscription);","import { getDefaultKeycloakOptions, request, getUrl } from './helpers';\n\nconst usersResource = `admin/realms/${process.env.REACT_APP_KEYCLOAK_REALM}/users`;\nconst tokenResource = `realms/${process.env.REACT_APP_KEYCLOAK_REALM}/protocol/openid-connect/token`;\n \nexport const apiKeycloakUserGet = async (serviceUrl) => {\n  const url = `${serviceUrl}/${usersResource}`;\n  const options = {\n    ...getDefaultKeycloakOptions(),\n    method: 'GET',\n  };\n  return await request(url, options);\n};\n\nexport const apiKeycloakToken = async (serviceUrl) => {\n  const url = getUrl(\n    `${serviceUrl}/${tokenResource}`\n  );\n  const keycloakBody = {\n    client_id: \"web_app\",\n    username: \"admin\",\n    password: \"admin\",\n    grant_type: \"password\"\n  }\n  const options = {\n    ...getDefaultKeycloakOptions(),\n    method: 'POST',\n    body: keycloakBody ? serialize(keycloakBody) : null,\n  };\n  return await request(url, options);\n};\n\nfunction serialize(obj) {\n  var str = [];\n  for (var p in obj)\n    if (obj.hasOwnProperty(p)) {\n      str.push(encodeURIComponent(p) + \"=\" + encodeURIComponent(obj[p]));\n    }\n  return str.join(\"&\");\n}\n","import React from 'react';\r\nimport { Tile } from 'carbon-components-react';\r\nimport CustomTable from './customDataTable';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport { apiAdminProjectsGet } from '../../api/projects';\r\nimport { apiAdminCustomerGet, apiGetCustomersProjects } from '../../api/customers'; \r\nimport { hasKeycloakClientRole } from '../../api/helpers';\r\nimport i18n from '../../i18n';\r\n\r\nclass CustomerProjectList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loading: true,\r\n            projects: {},\r\n            customer: {}\r\n        }\r\n    }\r\n\r\n    async getCustomer() {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n        if (authenticated) {\r\n            try {\r\n                const customer = await apiAdminCustomerGet(this.props.serviceUrl, this.props.match.params.id);\r\n                const projects = await apiGetCustomersProjects(this.props.serviceUrl, customer.data.id);\r\n                this.setState({\r\n                    customer: customer.data,\r\n                    projects: projects.data,\r\n                    loading: false\r\n                })\r\n            }\r\n            catch(err) {\r\n                console.log(err)\r\n            }\r\n        }\r\n    }\r\n\r\n    updateCustomer = () => {\r\n        this.getCustomer();\r\n    }\r\n\r\n    componentDidMount(){\r\n        const { keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n        if (authenticated) {\r\n            if (hasKeycloakClientRole('ROLE_ADMIN') || hasKeycloakClientRole('ROLE_SUPPORT')) {\r\n                this.getCustomer();\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const { keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n    \r\n        const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n    \r\n        if (authenticated && changedAuth) {\r\n            if (hasKeycloakClientRole('ROLE_ADMIN') || hasKeycloakClientRole('ROLE_SUPPORT')) {\r\n                this.getCustomer();\r\n            }\r\n        }\r\n      }\r\n\r\n    render() {\r\n        var { t, keycloak } = this.props;\r\n        var authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n        if (!this.state.loading) {\r\n            if (hasKeycloakClientRole('ROLE_ADMIN') || hasKeycloakClientRole('ROLE_SUPPORT')) {\r\n                if (Object.keys(this.state.customer).length !== 0) {\r\n                    return (\r\n                        <div>\r\n                            <Tile>\r\n                                <div className=\"bx--grid\">\r\n                                    <div className=\"bx--row\">\r\n                                        <div className=\"bx--col\">\r\n                                            <p><strong>{i18n.t('customerDetails.id')}: </strong> {this.state.customer.id}</p>\r\n                                            <p><strong>{i18n.t('customerDetails.name')}: </strong> {this.state.customer.name}</p>\r\n                                            <p><strong>{i18n.t('customerDetails.notes')}: </strong> {this.state.customer.notes}</p>\r\n                                        </div>\r\n                                        <div className=\"bx--col\">\r\n                                            <p><strong>{i18n.t('customerDetails.contactName')}: </strong> {this.state.customer.contactName}</p>\r\n                                            <p><strong>{i18n.t('customerDetails.contactPhone')}: </strong> {this.state.customer.contactPhone}</p>\r\n                                            <p><strong>{i18n.t('customerDetails.contactEmail')}: </strong> {this.state.customer.contactEmail}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </Tile>\r\n                            <CustomTable serviceUrl={this.props.serviceUrl} customerNumber={this.state.customer.id} locale={this.props.locale} />\r\n                        </div>\r\n                    )\r\n                }\r\n                else {\r\n                    return(<p>{i18n.t('userMessages.loading')}...</p>)\r\n                }\r\n            }\r\n            else {\r\n                return(<p>{i18n.t('userMessages.unauthorized')}</p>)\r\n            }\r\n        }\r\n        else {\r\n            return(null)\r\n        }\r\n    }\r\n}\r\n\r\nexport default withKeycloak(CustomerProjectList);","import React, { Component } from 'react';\r\nimport { BrowserRouter, HashRouter, Route, Switch } from 'react-router-dom';\r\nimport AdminDashboard from './Admin/AdminDashboard';\r\nimport Subscription from './SubscriptionDetails/subscription';\r\nimport withKeycloak from '../auth/withKeycloak';\r\nimport { AuthenticatedView, UnauthenticatedView } from '../auth/KeycloakViews';\r\nimport { apiKeycloakToken, apiKeycloakUserGet } from '../api/keycloak';\r\nimport { hasKeycloakClientRole } from '../api/helpers';\r\nimport customerDetails from './Customer/customerDetails';\r\nimport CustomerProjectList from './Customer/CustomerProjectList';\r\nimport i18n from '../i18n';\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loading: true\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n        if (authenticated) {\r\n            this.setState({\r\n                loading: false\r\n            })\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n      \r\n        const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n\r\n        if (authenticated && changedAuth) {\r\n            this.setState({\r\n                loading: false\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        var { t, keycloak } = this.props;\r\n        var authenticated = keycloak.initialized && keycloak.authenticated;\r\n        \r\n        if (!this.state.loading) {\r\n            if (hasKeycloakClientRole('ROLE_ADMIN') || hasKeycloakClientRole('ROLE_SUPPORT') || hasKeycloakClientRole('ROLE_PARTNER') || hasKeycloakClientRole(\"ROLE_CUSTOMER\")) {\r\n                return (\r\n                    <div id=\"entando-customer-portal\">\r\n                        <AuthenticatedView keycloak={keycloak}>\r\n                            <HashRouter>\r\n                                <Switch>\r\n                                    <Route path={\"**/customer-details/:id\"} render={(props) => (\r\n                                        <CustomerProjectList {...props} serviceUrl={this.props.serviceUrl} locale={this.props.locale} />\r\n                                    )}/>\r\n                                    <Route path={\"**/subscription-details/:id\"} render={(props) => (\r\n                                        <Subscription {...props} serviceUrl={this.props.serviceUrl} locale={this.props.locale} />\r\n                                    )}/>\r\n                                    <Route path=\"**/\" render={(props) => (\r\n                                        <AdminDashboard {...props} serviceUrl={this.props.serviceUrl} locale={this.props.locale} />\r\n                                    )}/>\r\n                                </Switch>\r\n                            </HashRouter>\r\n                        </AuthenticatedView>\r\n                        <UnauthenticatedView keycloak={keycloak}>\r\n                            <p>{i18n.t('userMessages.unauthorized')}</p>\r\n                        </UnauthenticatedView>\r\n                    </div>\r\n                )\r\n            }\r\n            else {\r\n                return (<p>{i18n.t('userMessages.unauthorized')}</p>)\r\n            }\r\n        }\r\n        else {\r\n            return(null)\r\n        }\r\n     }\r\n  }\r\n  \r\nexport default withKeycloak(App);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport AddCustomerModal from '../components/Admin/AddCustomerModal';\r\nimport '../index.scss'\r\nimport './dashboard.css'\r\n\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\nimport App from '../components/App';\r\n\r\nimport {\r\n  subscribeToWidgetEvent\r\n} from '../helpers/widgetEvents';\r\nimport {\r\n  KEYCLOAK_EVENT_TYPE,\r\n} from '../custom-elements/widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window &&\r\n    window.entando &&\r\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\nconst ATTRIBUTES = {\r\n  hidden: 'hidden',\r\n  locale: 'locale',\r\n  paginationMode: 'pagination-mode',\r\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n  serviceUrl: 'service-url',\r\n};\r\n\r\nclass AdminAddCustomerElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    \r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    //retargetEvents(shadowRoot);\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <AddCustomerModal serviceUrl={serviceUrl}/>\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.define('admin-add-customer-widget', AdminAddCustomerElement);\r\n\r\n","import React, {Component} from 'react';\r\nimport { Select, SelectItem} from 'carbon-components-react';\r\nimport CustomerDetails from '../Customer/customerDetails';\r\nimport CustomTable from '../Customer/customDataTable';\r\nimport AdminDashboard from './AdminDashboard';\r\nimport '../../index.scss';\r\n\r\nexport default class RoleCheck extends Component {\r\n    state = {\r\n        roleType: 'customer'\r\n    };\r\n\r\n    handleChanges = (e) => {\r\n        const input = e.target;\r\n        const name = input.name;\r\n        const value = input.value;\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    render() {\r\n        const roleType = ['Admin', 'Customer'];\r\n        return (\r\n            \r\n                <div className='role-check'>  \r\n                <Select defaultValue=\"role-type\" name=\"roleType\" labelText=\"Select Role(Testing)\" value={this.state.roleType} onChange={this.handleChanges}>\r\n                        <SelectItem\r\n                                text=\"Select Role\"\r\n                                value=\"role-type\"\r\n                        />\r\n                        {roleType.map((roleType, i) => <SelectItem key={i} text={roleType} value={roleType.toLowerCase()}>{roleType}</SelectItem>)}\r\n                        </Select>\r\n                    { this.renderForm()}\r\n                </div>\r\n            \r\n            );\r\n    }\r\n\r\n    // Render Dashboard based on role\r\n    renderForm() {\r\n        if (this.state.roleType === 'customer') return (\r\n            <div>\r\n                 <h3 className=\"pageTitle\">Welcome to Entando Customer Portal</h3>\r\n                <CustomerDetails />\r\n                <CustomTable />\r\n            </div>\r\n        )\r\n        if (this.state.roleType === 'admin') return (\r\n            <div>\r\n                 <h3 className=\"pageTitle\">Welcome to Entando Admin View</h3>\r\n                <AdminDashboard />\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport RoleCheck from '../components/Admin/RoleCheck';\r\nimport '../index.scss'\r\nimport './dashboard.css'\r\n\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\n\r\nimport {\r\n  subscribeToWidgetEvent\r\n} from '../helpers/widgetEvents';\r\nimport {\r\n  KEYCLOAK_EVENT_TYPE,\r\n} from '../custom-elements/widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window &&\r\n    window.entando &&\r\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\n  const ATTRIBUTES = {\r\n    hidden: 'hidden',\r\n    locale: 'locale',\r\n    paginationMode: 'pagination-mode',\r\n    disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n    serviceUrl: 'service-url',\r\n  };\r\n\r\nclass AdminRoleCheckElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    \r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    //retargetEvents(shadowRoot);\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <RoleCheck serviceUrl={serviceUrl}/>\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.define('admin-rolecheck-widget', AdminRoleCheckElement);\r\n\r\n//export default AdminRoleCheckElement;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport CustomDataTable from '../components/Customer/customDataTable';\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\nimport '../index.scss'\r\nimport './dashboard.css'\r\n\r\nimport {\r\n  subscribeToWidgetEvent\r\n} from '../helpers/widgetEvents';\r\nimport {\r\n  KEYCLOAK_EVENT_TYPE,\r\n} from '../custom-elements/widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window &&\r\n    window.entando &&\r\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\n  const ATTRIBUTES = {\r\n    hidden: 'hidden',\r\n    locale: 'locale',\r\n    paginationMode: 'pagination-mode',\r\n    disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n    serviceUrl: 'service-url',\r\n  };\r\n\r\nclass CustomDataTableElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    \r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <CustomDataTable serviceUrl={serviceUrl}/>\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.define('custom-datatable-widget', CustomDataTableElement);\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport CustomerDetails from '../components/Customer/customerDetails';\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\nimport './dashboard.css'\r\n\r\nimport {\r\n  subscribeToWidgetEvent\r\n} from '../helpers/widgetEvents';\r\nimport {\r\n  KEYCLOAK_EVENT_TYPE,\r\n} from '../custom-elements/widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window &&\r\n    window.entando &&\r\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\n  const ATTRIBUTES = {\r\n    hidden: 'hidden',\r\n    locale: 'locale',\r\n    paginationMode: 'pagination-mode',\r\n    disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n    serviceUrl: 'service-url',\r\n  };\r\n\r\nclass CustomerDetailsElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    \r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <CustomerDetails serviceUrl={serviceUrl}/>\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\ncustomElements.define('customer-details-widget', CustomerDetailsElement);\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Subscription from '../components/SubscriptionDetails/subscription';\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\nimport './dashboard.css'\r\n\r\nimport {\r\n  subscribeToWidgetEvent\r\n} from '../helpers/widgetEvents';\r\nimport {\r\n  KEYCLOAK_EVENT_TYPE,\r\n} from '../custom-elements/widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window &&\r\n    window.entando &&\r\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\nconst ATTRIBUTES = {\r\n  hidden: 'hidden',\r\n  locale: 'locale',\r\n  paginationMode: 'pagination-mode',\r\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n  serviceUrl: 'service-url',\r\n};\r\n\r\n\r\nclass SubscriptionElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    \r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    //retargetEvents(shadowRoot);\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <Subscription serviceUrl={serviceUrl}/>\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.define('subscription-widget', SubscriptionElement);\r\n\r\n","import React, { Component } from 'react';\r\nimport i18n from '../../i18n';\r\nimport { Form, Select, SelectItem, Button, TextArea } from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport { apiAdminProjectsGet, apiMyProjectsGet, apiGetProjectSubscriptions } from '../../api/projects';\r\nimport { apiJiraTicketPost } from '../../api/tickets';\r\nimport { apiTicketingSystemsGet } from '../../api/ticketingsystem';\r\nimport { hasKeycloakClientRole } from '../../api/helpers';\r\n\r\nclass OpenTicket extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            loading: true,\r\n            project: {},\r\n            projects: [],\r\n            systemId: '',\r\n            type: 'Bug',\r\n            description: '',\r\n            priority: 'Medium',\r\n            status: 'To Do',\r\n            createDate: '',\r\n            updateDate: '',\r\n            role: '',\r\n            invalid: {},\r\n            submitMsg: '',\r\n            submitColour: 'black'\r\n        };\r\n        this.types = [\"Bug\", \"Task\"];\r\n        this.priorities = ['Highest', 'High', 'Medium', 'Low', 'Lowest'];\r\n    }\r\n\r\n    handleValidation() {\r\n        let invalid = {};\r\n        let formIsValid = true;\r\n\r\n        if(this.state.project.systemId === undefined || this.state.project.systemId === 'project-list'){\r\n          formIsValid = false;\r\n          invalid['project'] = true;\r\n        }\r\n\r\n        if(this.state.type === '' || this.state.type === 'Select'){\r\n            formIsValid = false;\r\n            invalid['type'] = true;\r\n        }\r\n\r\n        if(this.state.description === '' || this.state.description === 'Select'){\r\n            formIsValid = false;\r\n            invalid['description'] = true;\r\n        }\r\n\r\n        if(this.state.priority === '' || this.state.priority === 'Select'){\r\n            formIsValid = false;\r\n            invalid['priority'] = true;\r\n        }\r\n\r\n        this.setState({invalid: invalid});\r\n        return formIsValid;\r\n    }\r\n\r\n    handleChanges = (e) => {\r\n        const input = e.target;\r\n        const name = input.name;\r\n        const value = input.value;\r\n\r\n        if (name === \"project\" && value != '' && value != 'project-list') {\r\n            this.setState({\r\n                project: JSON.parse(value),\r\n            })\r\n        }\r\n        else {\r\n            this.setState({ [name]: value });\r\n        }\r\n    }\r\n\r\n    handleFormSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        const formIsValid = this.handleValidation();\r\n\r\n        if (formIsValid) {\r\n            // check if project has subscription \r\n            this.fetchProjectSubscription(this.state.project.id).then(result => {\r\n                // if project has subscription, create ticket\r\n                if(result.data.length > 0) {\r\n                    this.createTicket().then(res => {\r\n                        this.setState({\r\n                            submitMsg: i18n.t('submitMessages.created'),\r\n                            submitColour: '#24a148'\r\n                        })\r\n                    }).catch(err => {\r\n                        this.setState({\r\n                            submitMsg: i18n.t('submitMessages.ticketError'),\r\n                            submitColour: '#da1e28'\r\n                        })\r\n                    });\r\n                }\r\n                // if no subscriptions, don't create ticket\r\n                else {\r\n                    this.setState({\r\n                        submitMsg: i18n.t('submitMessages.subscriptionRequired'),\r\n                        submitColour: '#da1e28'\r\n                    })\r\n                }\r\n            }).catch(error => {\r\n                this.setState({\r\n                    submitMsg: i18n.t('submitMessages.error'),\r\n                    submitColour: '#da1e28'\r\n                })\r\n            });\r\n        }\r\n    };\r\n\r\n    async fetchProjectSubscription(projectId) {\r\n        return await apiGetProjectSubscriptions(this.props.serviceUrl, projectId);\r\n    }\r\n\r\n    async fetchProjects() {\r\n        const { t, keycloak } = this.props;\r\n        var authenticated = keycloak.initialized && keycloak.authenticated;\r\n    \r\n        if (authenticated) {\r\n            if (hasKeycloakClientRole('ROLE_ADMIN') || hasKeycloakClientRole('ROLE_SUPPORT')) {\r\n                var projects = await apiAdminProjectsGet(this.props.serviceUrl)\r\n                this.setState({\r\n                    projects: projects.data\r\n                })\r\n            }\r\n            else if (hasKeycloakClientRole('ROLE_CUSTOMER') || hasKeycloakClientRole('ROLE_PARTNER')) {\r\n                var projects = await apiMyProjectsGet(this.props.serviceUrl)\r\n                this.setState({\r\n                    projects: projects.data\r\n                })\r\n            }\r\n        }\r\n\r\n        this.render();\r\n    }\r\n\r\n    async createTicket() {\r\n        const { t, keycloak } = this.props;\r\n        var authenticated = keycloak.initialized && keycloak.authenticated;\r\n    \r\n        if (authenticated) {\r\n            const ticket = {\r\n                systemId: this.state.project.systemId,\r\n                type: this.state.type,\r\n                description: this.state.description,\r\n                priority: this.state.priority,\r\n                status: 'To Do',\r\n                // these dates are just placeholder to validate the POST request (date will be updated in the backend)\r\n                createDate: '2021-02-22T14:14:09-05:00',\r\n                updateDate: '2021-02-22T14:14:09-05:00'\r\n            }\r\n            return await apiJiraTicketPost(this.props.serviceUrl, this.state.ticketingSystem.systemId, this.state.project.systemId, ticket);\r\n            //const addedTicket = await apiAddTicketToProject(this.props.serviceUrl, this.state.project.id, result.data.id);\r\n        }\r\n    }\r\n\r\n    async getTicketingSystem() {\r\n        if (hasKeycloakClientRole('ROLE_ADMIN') || hasKeycloakClientRole('ROLE_SUPPORT') || hasKeycloakClientRole('ROLE_CUSTOMER') || hasKeycloakClientRole('ROLE_PARTNER')) {\r\n            const ticketingSystems = await apiTicketingSystemsGet(this.props.serviceUrl);\r\n            const currentTicketingSystem = ticketingSystems.data[ticketingSystems.data.length-1]\r\n            this.setState({\r\n                ticketingSystem: currentTicketingSystem\r\n            })\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n        if (authenticated) {\r\n            this.fetchProjects();\r\n            this.getTicketingSystem();\r\n            this.setState({\r\n                loading: false\r\n            });\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n      \r\n        const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n      \r\n        if (authenticated && changedAuth) {\r\n            this.fetchProjects();\r\n            this.getTicketingSystem();\r\n            this.setState({\r\n                loading: false\r\n              });\r\n        }\r\n    }\r\n        \r\n    render() {\r\n        if (!this.state.loading) {\r\n            if (hasKeycloakClientRole('ROLE_ADMIN') || hasKeycloakClientRole('ROLE_SUPPORT') || hasKeycloakClientRole('ROLE_CUSTOMER') || hasKeycloakClientRole('ROLE_PARTNER')) {\r\n                return (\r\n                    <div>\r\n                        {hasKeycloakClientRole('ROLE_ADMIN') ? \r\n                            <h3 className=\"pageTitle\">{i18n.t('adminDashboard.adminTitle')}</h3> : \r\n                        hasKeycloakClientRole('ROLE_SUPPORT') ? \r\n                            <h3 className=\"pageTitle\">{i18n.t('adminDashboard.supportTitle')}</h3> : \r\n                        hasKeycloakClientRole('ROLE_CUSTOMER') ? \r\n                            <h3 className=\"pageTitle\">{i18n.t('adminDashboard.customerTitle')}</h3> : \r\n                        hasKeycloakClientRole('ROLE_PARTNER') ? \r\n                            <h3 className=\"pageTitle\">{i18n.t('adminDashboard.partnerTitle')}</h3> : \r\n                        null}\r\n                        <div className=\"form-container\">\r\n                            <p style={{color: this.state.submitColour}}>{this.state.submitMsg}</p>\r\n                            <Form onSubmit={this.handleFormSubmit}>\r\n                                <div className=\"form-desc\">\r\n                                    <h4>{i18n.t('supportTicketForm.formTitle')}</h4>\r\n                                    <p>{i18n.t('supportTicketForm.desc')}</p>\r\n                                </div>\r\n                                <div className=\"bx--grid\">\r\n                                    <div className=\"bx--row\">\r\n                                        <div className=\"bx--col\">\r\n                                            <Select \r\n                                                name=\"project\"\r\n                                                defaultValue={{ label: \"Select Proj\", value: 0 }}\r\n                                                labelText={i18n.t('supportTicketForm.selectProject') + \" *\"} \r\n                                                value={JSON.stringify(this.state.project)} \r\n                                                onChange={this.handleChanges}\r\n                                                invalidText={i18n.t('validation.invalid.required')}\r\n                                                invalid={this.state.invalid['project']} \r\n                                            >\r\n                                                <SelectItem text={i18n.t('adminDashboard.addPartner.selectProject')} value=\"project-list\" />\r\n                                                {Object.keys(this.state.projects).length !== 0 ? this.state.projects.map((project, i) => {\r\n                                                        return (\r\n                                                            <SelectItem key={i} text={project.name} value={JSON.stringify(project)}>{project.name}</SelectItem>\r\n                                                        )\r\n                                                }) : null}\r\n                                            </Select>\r\n                                            <Select \r\n                                                name=\"type\" \r\n                                                labelText={i18n.t('supportTicketForm.type') + \" *\"} \r\n                                                value={this.state.type} \r\n                                                onChange={this.handleChanges}\r\n                                                invalidText={i18n.t('validation.invalid.required')}\r\n                                                invalid={this.state.invalid['type']} \r\n                                            >\r\n                                                {this.types.map((type, i) => (\r\n                                                    <SelectItem key={i} text={type} value={type}>{type}</SelectItem>\r\n                                                ))}\r\n                                            </Select>\r\n                                            <Select \r\n                                                name=\"priority\" \r\n                                                labelText={i18n.t('supportTicketForm.priority') + \" *\"} \r\n                                                value={this.state.priority}\r\n                                                onChange={this.handleChanges}\r\n                                                invalidText={i18n.t('validation.invalid.required')}\r\n                                                invalid={this.state.invalid['priority']} \r\n                                            >\r\n                                                {this.priorities.map((priority, i) => (\r\n                                                    <SelectItem key={i} text={priority} value={priority}>{priority}</SelectItem>\r\n                                                ))}\r\n                                            </Select>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"bx--row\">\r\n                                        <div className=\"bx--col\">\r\n                                            <TextArea \r\n                                                labelText={i18n.t('supportTicketForm.ticketDescription') + \" *\"} \r\n                                                placeholder={i18n.t('supportTicketForm.addticketDescription')} \r\n                                                name=\"description\" \r\n                                                value={this.state.description} \r\n                                                onChange={this.handleChanges}  \r\n                                                invalidText={i18n.t('validation.invalid.required')}\r\n                                                invalid={this.state.invalid['description']} \r\n                                            />\r\n                                            <Button kind=\"primary\" tabIndex={0} type=\"submit\" > {i18n.t('buttons.submit')}  </Button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </Form>\r\n                        </div>\r\n                    </div>    \r\n                );\r\n            }\r\n            else {\r\n                return(<p>{i18n.t('userMessages.unauthorized')}</p>)\r\n            }\r\n        }\r\n        else {\r\n            return(null)\r\n        }\r\n    }\r\n}\r\n\r\nexport default withKeycloak(OpenTicket);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport OpenTicket from '../components/Forms/openTicket';\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\nimport './dashboard.css'\r\n\r\nimport {\r\n  subscribeToWidgetEvent\r\n} from '../helpers/widgetEvents';\r\nimport {\r\n  KEYCLOAK_EVENT_TYPE,\r\n} from '../custom-elements/widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window &&\r\n    window.entando &&\r\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\nconst ATTRIBUTES = {\r\n  hidden: 'hidden',\r\n  locale: 'locale',\r\n  paginationMode: 'pagination-mode',\r\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n  serviceUrl: 'service-url',\r\n};\r\n\r\n\r\nclass FormsOpenTicketElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    \r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    //retargetEvents(shadowRoot);\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <OpenTicket serviceUrl={serviceUrl}/>\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.define('forms-openticket-widget', FormsOpenTicketElement);\r\n\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n \r\nconst Navigation = () => {\r\n    return (\r\n       <ul id='navigation'>\r\n          <li><NavLink to=\"/\">Home</NavLink></li>\r\n          <li><NavLink to=\"/subscription-details\">Subscription Details</NavLink></li>\r\n          <li><NavLink to=\"/subscription\">New or Renew Subscription</NavLink></li>\r\n          <li><NavLink to=\"/service-ticket\">Open Service Ticket</NavLink></li>\r\n          <li><NavLink to=\"/enhancement\">Request for Enhancement Process</NavLink></li>\r\n          <li><NavLink to=\"/manage-users\">Manage Users</NavLink></li>\r\n          <li><NavLink to=\"/configuration-settings\">Configuration Settings</NavLink></li>\r\n      </ul>\r\n    );\r\n}\r\n \r\nexport default Navigation;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Navigation from '../components/Navigation/Navigation';\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\nimport './dashboard.css'\r\n\r\nimport {\r\n  subscribeToWidgetEvent\r\n} from '../helpers/widgetEvents';\r\nimport {\r\n  KEYCLOAK_EVENT_TYPE,\r\n} from '../custom-elements/widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window &&\r\n    window.entando &&\r\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\nconst ATTRIBUTES = {\r\n  hidden: 'hidden',\r\n  locale: 'locale',\r\n  paginationMode: 'pagination-mode',\r\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n  serviceUrl: 'service-url',\r\n};\r\n\r\n\r\nclass NavigationElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    \r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    //retargetEvents(shadowRoot);\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <Navigation serviceUrl={serviceUrl}/>\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.define('navigation-widget', NavigationElement);\r\n","import React, {Component} from 'react';\r\nimport { Form, TextInput, TextArea, Button } from 'carbon-components-react';\r\nimport i18n from '../../i18n';\r\n\r\nexport default class EnhancementRequest extends Component {\r\n    state = {\r\n        ticketNo: '',\r\n        customerName: '',\r\n        projectName: '',\r\n        openedBy: '',\r\n        priority: '',\r\n        partnerName: '',\r\n        enhancementDescription: '',\r\n        invalid: {}\r\n    };\r\n\r\n    handleValidation() {\r\n        let invalid = {};\r\n        let formIsValid = true;\r\n\r\n        if(this.state.ticketNo === ''){\r\n          formIsValid = false;\r\n          invalid['ticketNo'] = true;\r\n        }\r\n\r\n        if(this.state.customerName === ''){\r\n            formIsValid = false;\r\n            invalid['customerName'] = true;\r\n        }\r\n\r\n        if(this.state.projectName === ''){\r\n            formIsValid = false;\r\n            invalid['projectName'] = true;\r\n        }\r\n\r\n        if(this.state.openedBy === ''){\r\n            formIsValid = false;\r\n            invalid['openedBy'] = true;\r\n        }\r\n\r\n        if(this.state.partnerName === ''){\r\n            formIsValid = false;\r\n            invalid['partnerName'] = true;\r\n        }\r\n\r\n        if(this.state.enhancementDescription === ''){\r\n            formIsValid = false;\r\n            invalid['enhancementDescription'] = true;\r\n        }\r\n\r\n        this.setState({invalid: invalid});\r\n        return formIsValid;\r\n    }\r\n\r\n    handleChanges = (e) => {\r\n        const input = e.target;\r\n        const name = input.name;\r\n        const value = input.value;\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    handleFormSubmit = (event) => {\r\n        console.log(this.state.ticketNo)\r\n        event.preventDefault();\r\n\r\n        const formIsValid = this.handleValidation();\r\n\r\n        if (formIsValid) {\r\n            // placeholder\r\n        }\r\n    };\r\n      \r\n    render() {\r\n        return (\r\n            <div>\r\n                <h3 className=\"pageTitle\">{i18n.t('enhancementForm.title')}</h3>\r\n                <div className=\"form-container\">\r\n                    <Form onSubmit={this.handleFormSubmit}>\r\n                        <div className=\"form-desc\">\r\n                            <h4>{i18n.t('enhancementForm.formTitle')}</h4>\r\n                            <p>{i18n.t('enhancementForm.desc')}</p>\r\n                        </div>\r\n                        <div className=\"bx--grid\">\r\n                            <div className=\"bx--row\">\r\n                                <div className=\"bx--col\">\r\n                                    <TextInput \r\n                                        name=\"ticketNo\" \r\n                                        labelText={i18n.t('enhancementForm.ticketNumber')} \r\n                                        value={this.state.ticketNo} \r\n                                        onChange={this.handleChanges}\r\n                                        invalidText={i18n.t('validation.invalid.required')}\r\n                                        invalid={this.state.invalid['ticketNo']} \r\n                                    />\r\n                                    <TextInput \r\n                                        name=\"projectName\" \r\n                                        labelText={i18n.t('enhancementForm.projectName')} \r\n                                        value={this.state.projectName} \r\n                                        onChange={this.handleChanges}\r\n                                        invalidText={i18n.t('validation.invalid.required')}\r\n                                        invalid={this.state.invalid['projectName']} \r\n                                    />\r\n                                    <TextInput \r\n                                        name=\"priority\" \r\n                                        labelText={i18n.t('enhancementForm.priority')} \r\n                                        value={this.state.priority} \r\n                                        onChange={this.handleChanges}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"bx--col\">\r\n                                    <TextInput \r\n                                        name=\"customerName\" \r\n                                        labelText={i18n.t('enhancementForm.customerName')} \r\n                                        value={this.state.customerName} \r\n                                        onChange={this.handleChanges}\r\n                                        invalidText={i18n.t('validation.invalid.required')}\r\n                                        invalid={this.state.invalid['customerName']} \r\n                                    />\r\n                                    <TextInput \r\n                                        name=\"openedBy\" \r\n                                        labelText={i18n.t('enhancementForm.ticketOpenedBy')} \r\n                                        value={this.state.openedBy} \r\n                                        onChange={this.handleChanges}\r\n                                        invalidText={i18n.t('validation.invalid.required')}\r\n                                        invalid={this.state.invalid['openedBy']} \r\n                                    />\r\n                                    <TextInput \r\n                                        name=\"partnerName\" \r\n                                        labelText={i18n.t('enhancementForm.partnerName')} \r\n                                        value={this.state.partnerName} \r\n                                        onChange={this.handleChanges}\r\n                                        invalidText={i18n.t('validation.invalid.required')}\r\n                                        invalid={this.state.invalid['partnerName']} \r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"bx--row\">\r\n                                <div className=\"bx--col\">\r\n                                    <TextArea \r\n                                        labelText={i18n.t('enhancementForm.enhancementDescription')} \r\n                                        placeholder={i18n.t('enhancementForm.addenhancementDescription')} \r\n                                        name=\"enhancementDescription\"  \r\n                                        value={this.state.enhancementDescription} \r\n                                        onChange={this.handleChanges}  \r\n                                        invalidText={i18n.t('validation.invalid.required')}\r\n                                        invalid={this.state.invalid['enhancementDescription']} \r\n                                    />\r\n                                    <Button kind=\"primary\" tabIndex={0} type=\"submit\"> {i18n.t('buttons.submit')}  </Button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Form>\r\n                </div>\r\n            </div>    \r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport EnhancementRequest from '../components/Forms/enhancementRequest';\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\nimport './dashboard.css'\r\n\r\nimport {\r\n  subscribeToWidgetEvent\r\n} from '../helpers/widgetEvents';\r\nimport {\r\n  KEYCLOAK_EVENT_TYPE,\r\n} from '../custom-elements/widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window &&\r\n    window.entando &&\r\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\nconst ATTRIBUTES = {\r\n  hidden: 'hidden',\r\n  locale: 'locale',\r\n  paginationMode: 'pagination-mode',\r\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n  serviceUrl: 'service-url',\r\n};\r\n\r\n\r\nclass FormsEnhancementRequestElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    \r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    //retargetEvents(shadowRoot);\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <EnhancementRequest serviceUrl={serviceUrl}/>\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.define('forms-enhancement-request-widget', FormsEnhancementRequestElement);\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport retargetEvents from 'react-shadow-dom-retarget-events';\r\nimport '../index.scss'\r\nimport './dashboard.css'\r\nimport * as Locale from '../i18n';\r\n\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\nimport App from '../components/App';\r\n\r\nimport {\r\n  subscribeToWidgetEvent\r\n} from '../helpers/widgetEvents';\r\nimport {\r\n  KEYCLOAK_EVENT_TYPE,\r\n} from '../custom-elements/widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window &&\r\n    window.entando &&\r\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\nconst ATTRIBUTES = {\r\n  hidden: 'hidden',\r\n  locale: 'locale',\r\n  paginationMode: 'pagination-mode',\r\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n  serviceUrl: 'service-url',\r\n  locale: 'locale'\r\n};\r\n\r\n\r\nclass AppElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    \r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    //retargetEvents(shadowRoot);\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n    const locale = this.getAttribute(ATTRIBUTES.locale) || '';\r\n    Locale.setLocale(locale);\r\n\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <App serviceUrl={serviceUrl} locale={locale} />\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.define('app-element', AppElement);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport TicketList from '../components/SubscriptionDetails/TicketList';\r\nimport '../index.scss'\r\n//import './dashboard.css'\r\n\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\n\r\nimport {\r\n  subscribeToWidgetEvent\r\n} from '../helpers/widgetEvents';\r\nimport {\r\n  KEYCLOAK_EVENT_TYPE,\r\n} from '../custom-elements/widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window &&\r\n    window.entando &&\r\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\nconst ATTRIBUTES = {\r\n  hidden: 'hidden',\r\n  locale: 'locale',\r\n  paginationMode: 'pagination-mode',\r\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n  serviceUrl: 'service-url',\r\n};\r\n\r\nclass TicketListCustomerElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    \r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    //retargetEvents(shadowRoot);\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <TicketList serviceUrl={serviceUrl}/>\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.define('ticket-list-widget', TicketListCustomerElement);\r\n\r\n","import React, { Component } from 'react';\r\nimport i18n from '../../../i18n';\r\nimport { Form, TextInput, Select, SelectItem, Button} from 'carbon-components-react';\r\nimport { apiTicketingSystemPost, apiTicketingSystemsGet, apiTicketingSystemPut, apiTicketingSystemDelete } from '../../../api/ticketingsystem';\r\nimport { hasKeycloakClientRole } from '../../../api/helpers';\r\nimport withKeycloak from '../../../auth/withKeycloak';\r\n\r\nclass TicketingSystem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            ticketingSystem: '',\r\n            ticketingSystemType:'',\r\n            url: '',\r\n            serviceAccount: '',\r\n            serviceAccount: '',\r\n            systemId: '',\r\n            submitMsg: '',\r\n            submitColour: 'black'\r\n        }\r\n    }\r\n    \r\n    handleChanges = (e) => {\r\n        const input = e.target;\r\n        const name = input.name;\r\n        const value = input.value;\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    async createTicketingSystem() {\r\n        const ticketingSystem = {\r\n            url: this.state.url,\r\n            serviceAccount: this.state.serviceAccount,\r\n            serviceAccountSecret: this.state.serviceAccountSecret,\r\n            systemId: this.state.systemId\r\n        }\r\n        return await apiTicketingSystemPost(this.props.serviceUrl, ticketingSystem);\r\n    }\r\n\r\n    async updateTicketingSystem() {\r\n        const ticketingSystem = {\r\n            id: this.state.ticketingSystem.id,\r\n            url: this.state.url,\r\n            serviceAccount: this.state.serviceAccount,\r\n            serviceAccountSecret: this.state.serviceAccountSecret,\r\n            systemId: this.state.systemId\r\n        }\r\n        return await apiTicketingSystemPut(this.props.serviceUrl, ticketingSystem);\r\n    }\r\n\r\n    async getTicketingSystems() {\r\n        const ticketingSystems = await apiTicketingSystemsGet(this.props.serviceUrl)\r\n        if (ticketingSystems.data.length > 0) {\r\n            const currentTicketingSystem = ticketingSystems.data[ticketingSystems.data.length-1]\r\n            \r\n            this.setState({\r\n                ticketingSystem: currentTicketingSystem,\r\n                url: currentTicketingSystem.url,\r\n                serviceAccount: currentTicketingSystem.serviceAccount,\r\n                serviceAccountSecret: currentTicketingSystem.serviceAccountSecret,\r\n                systemId: currentTicketingSystem.systemId\r\n            })\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n        if (authenticated) {\r\n            this.getTicketingSystems();\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n      \r\n        const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n      \r\n        if (authenticated && changedAuth) {\r\n            this.getTicketingSystems();\r\n        }\r\n    }\r\n\r\n    async deleteTicketingSystem() {\r\n        return await apiTicketingSystemDelete(this.props.serviceUrl, this.state.ticketingSystem.id);\r\n    }\r\n\r\n    handleDelete(e) {\r\n        if (window.confirm(\"Are you sure you want to delete this ticketing system?\")) {\r\n            this.deleteTicketingSystem().then(result => {\r\n                this.setState({\r\n                    submitMsg: i18n.t('submitMessages.deleted'),\r\n                    submitColour: '#24a148'\r\n                })\r\n            }).catch(err => {\r\n                this.setState({\r\n                    submitMsg: i18n.t('submitMessages.error'),\r\n                    submitColour: '#da1e28'\r\n                })\r\n            });\r\n        }\r\n    }\r\n\r\n    handleFormSubmit = (event) => {\r\n        event.preventDefault();\r\n        if (this.state.ticketingSystem === '') {\r\n            this.createTicketingSystem().then(result => {\r\n                this.setState({\r\n                    submitMsg: i18n.t('submitMessages.created'),\r\n                    submitColour: '#24a148'\r\n                })\r\n            }).catch(err => {\r\n                this.setState({\r\n                    submitMsg: i18n.t('submitMessages.error'),\r\n                    submitColour: '#da1e28'\r\n                })\r\n            });\r\n        }\r\n        else {\r\n            this.updateTicketingSystem().then(result => {\r\n                this.setState({\r\n                    submitMsg: i18n.t('submitMessages.updated'),\r\n                    submitColour: '#24a148'\r\n                })\r\n            }).catch(err => {\r\n                this.setState({\r\n                    submitMsg: i18n.t('submitMessages.error'),\r\n                    submitColour: '#da1e28'\r\n                })\r\n            });\r\n        }\r\n    };\r\n\r\n    render() { \r\n        const ticketingSystem = ['Jira', 'Other'];\r\n        if (hasKeycloakClientRole('ROLE_ADMIN')) {\r\n            return (\r\n                <div className=\"cp-form\">\r\n                    <p style={{color: this.state.submitColour}}>{this.state.submitMsg}</p>\r\n                    <Form onSubmit={this.handleFormSubmit}>\r\n                        <div className=\"bx--grid\">\r\n                            <div className=\"bx--row\">\r\n                                <div className=\"bx--col\">\r\n                                    <Select defaultValue=\"ticketing-system\" name=\"ticketingSystemType\" labelText={i18n.t('adminConfig.integrationTicketingSystem.selectBackendTicketingSystem')} value={this.state.ticketingSystemType} onChange={this.handleChanges}>\r\n                                        <SelectItem\r\n                                            text={i18n.t('adminConfig.integrationTicketingSystem.select')}\r\n                                            value=\"ticketing-system\"\r\n                                        />\r\n                                        {ticketingSystem.map((ticketingSystem, i) => <SelectItem key={i} text={ticketingSystem} value={ticketingSystem.toLowerCase()}>{ticketingSystem}</SelectItem>)}\r\n                                    </Select>\r\n                                    <TextInput name=\"serviceAccount\" labelText={i18n.t('adminConfig.integrationTicketingSystem.userName')} value={this.state.serviceAccount} onChange={this.handleChanges}/>\r\n                                    <TextInput name=\"systemId\" labelText={i18n.t('adminConfig.integrationTicketingSystem.projectName')} value={this.state.systemId} onChange={this.handleChanges}/>\r\n                                </div>\r\n                                <div className=\"bx--col\">\r\n                                    <TextInput name=\"url\" labelText={i18n.t('adminConfig.integrationTicketingSystem.url')} value={this.state.url} onChange={this.handleChanges}/>\r\n                                    <TextInput name=\"serviceAccountSecret\" type=\"password\" labelText={i18n.t('adminConfig.integrationTicketingSystem.password')} value={this.state.serviceAccountSecret} onChange={this.handleChanges}/>\r\n                                </div>\r\n                            </div>\r\n                            <Button kind=\"primary\" tabIndex={0} type=\"submit\"> {i18n.t('buttons.submit')}  </Button>\r\n                            {this.state.ticketingSystem ?\r\n                                <Button kind=\"danger\" onClick={() => this.handleDelete()}> Delete </Button> : null\r\n                            }\r\n                        </div>\r\n                    </Form>\r\n                </div>\r\n            );\r\n        }\r\n        // Unauthorized\r\n        else {\r\n            return(<p>{i18n.t('userMessages.unauthorized')}</p>)\r\n        }\r\n    }\r\n}\r\n \r\nexport default withKeycloak(TicketingSystem);","import { getDefaultOptions, request, getUrl } from './helpers';\r\n\r\nconst resource = 'api/entando-versions';\r\n\r\nexport const apiProductVersionsGet = async (serviceUrl) => {\r\n    const url = `${serviceUrl}/${resource}`;\r\n    const options = {\r\n        ...getDefaultOptions(),\r\n        method: 'GET',\r\n    };\r\n\r\n    return request(url, options);\r\n};\r\n\r\nexport const apiProductVersionGet = async (serviceUrl, versionId) => {\r\n  const url = `${serviceUrl}/${resource}/${versionId}`;\r\n  const options = {\r\n      ...getDefaultOptions(),\r\n      method: 'GET',\r\n  };\r\n\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiUpdateProductVersionsStatus = async (serviceUrl, id) => {\r\n    const url = `${serviceUrl}/${resource}/${id}`;\r\n    const options = {\r\n      ...getDefaultOptions(),\r\n      method: 'PUT',\r\n    };\r\n    return request(url, options);\r\n};\r\n\r\nexport const apiProductVersionPost = async (serviceUrl, productVersion) => {\r\n    const url = `${serviceUrl}/${resource}`;\r\n    const options = {\r\n      ...getDefaultOptions(),\r\n      method: 'POST',\r\n      body: productVersion ? JSON.stringify(productVersion) : null,\r\n    };\r\n    return request(url, options);\r\n};\r\n\r\nexport const apiProductVersionPut = async (serviceUrl, productVersion) => {\r\n  const url = `${serviceUrl}/${resource}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'PUT',\r\n    body: productVersion ? JSON.stringify(productVersion) : null,\r\n  };\r\n  return request(url, options);\r\n};\r\n\r\nexport const apiProductVersionDelete = async (serviceUrl, id) => {\r\n  const url = `${serviceUrl}/${resource}/${id}`;\r\n  const options = {\r\n    ...getDefaultOptions(),\r\n    method: 'DELETE',\r\n  };\r\n  return request(url, options);\r\n};","import React, { Component } from 'react';\r\nimport i18n from '../../i18n';\r\nimport { ModalWrapper, Form, TextInput, DatePicker, DatePickerInput } from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport { apiProductVersionPost } from '../../api/productVersion';\r\nimport moment from 'moment';\r\n\r\nclass AddProductVersionModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      name: '',\r\n      startDate: '',\r\n      endDate: '',\r\n      invalid: {},\r\n      submitMsg: '',\r\n      submitColour: 'black'\r\n    };\r\n\r\n    this.baseState = this.state\r\n  }\r\n\r\n  handleValidation() {\r\n    let invalid = {};\r\n    let formIsValid = true;\r\n\r\n    //name\r\n    if (this.state.name === '') {\r\n      formIsValid = false;\r\n      invalid['name'] = true;\r\n    }\r\n\r\n    if (typeof this.state.startDate !== 'undefined') {\r\n      if (!this.state.startDate.match(/^(0[1-9]|1[0-2])\\/(0[1-9]|1\\d|2\\d|3[01])\\/(19|20)\\d{2}$/)) {\r\n        formIsValid = false;\r\n        invalid['startDate'] = true;\r\n      }\r\n    }\r\n\r\n    if (typeof this.state.endDate !== 'undefined') {\r\n      if (!this.state.endDate.match(/^(0[1-9]|1[0-2])\\/(0[1-9]|1\\d|2\\d|3[01])\\/(19|20)\\d{2}$/)) {\r\n        formIsValid = false;\r\n        invalid['endDate'] = true;\r\n      }\r\n    }\r\n\r\n    this.setState({ invalid: invalid });\r\n    return formIsValid;\r\n  }\r\n\r\n  handleChanges = e => {\r\n    const input = e.target;\r\n    const name = input.name;\r\n    const value = input.value;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  async addProductVersion() {\r\n    const { t, keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n    if (authenticated) {\r\n      return await apiProductVersionPost(this.props.serviceUrl, this.state);\r\n    }\r\n  }\r\n\r\n  handleFormSubmit = e => {\r\n    const formIsValid = this.handleValidation();\r\n\r\n    if (formIsValid) {\r\n      this.addProductVersion().then(result => {\r\n        this.setState({\r\n            submitMsg: i18n.t('submitMessages.added'),\r\n            submitColour: '#24a148'\r\n        })\r\n        this.props.updateProductVersions();\r\n      }).catch(err => {\r\n          this.setState({\r\n              submitMsg: i18n.t('submitMessages.error'),\r\n              submitColour: '#da1e28'\r\n          })\r\n      });\r\n    }\r\n  };\r\n\r\n  clearValues = () => {\r\n    const customerModalElement = document.querySelector('#modal-form-product-version');\r\n    if(!customerModalElement.className.includes(\"is-visible\")) {\r\n      this.setState(this.baseState);\r\n    }\r\n  }\r\n\r\n  handleStartDateChange = (date) => {\r\n    this.setState({\r\n        startDate: moment(date[0].toISOString()).format('MM/DD/YYYY')\r\n    })\r\n  }\r\n\r\n  handleEndDateChange = (date) => {\r\n    this.setState({\r\n        endDate: moment(date[0].toISOString()).format('MM/DD/YYYY')\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    const modalOpenButton = document.querySelector('.add-product-version-button');\r\n    modalOpenButton.addEventListener(\"click\", this.clearValues, false);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <ModalWrapper\r\n        buttonTriggerText={i18n.t('buttons.addProductVersion')}\r\n        modalHeading={i18n.t('adminDashboard.addProductVersion.title')}\r\n        buttonTriggerClassName=\"add-product-version bx--btn bx--btn--tertiary add-product-version-button\"\r\n        className=\"modal-form\"\r\n        id=\"modal-form-product-version\"\r\n        handleSubmit={this.handleFormSubmit}\r\n        modalLabel={<p style={{color: this.state.submitColour}}>{this.state.submitMsg}</p>}\r\n      >\r\n        <div className=\"form-container\">\r\n          <p> {i18n.t('adminDashboard.addProductVersion.desc')} </p>\r\n          <Form onSubmit={this.handleFormSubmit}>\r\n            <TextInput\r\n              name=\"name\"\r\n              labelText={i18n.t('adminDashboard.addProductVersion.productVersion')}\r\n              value={this.state.name}\r\n              onChange={this.handleChanges}\r\n              invalidText={i18n.t('validation.invalid.required')}\r\n              invalid={this.state.invalid['name']}\r\n            />\r\n            <DatePicker dateFormat=\"m/d/Y\" datePickerType=\"single\" onChange={this.handleStartDateChange}>\r\n              <DatePickerInput\r\n                name=\"startDate\"\r\n                placeholder=\"mm/dd/yyyy\"\r\n                labelText={i18n.t('adminDashboard.addProductVersion.productVersionStartDate')}\r\n                value={this.state.startDate}\r\n                //onChange={this.handleChanges}\r\n                type=\"text\"\r\n                invalidText={i18n.t('validation.invalid.date')}\r\n                invalid={this.state.invalid['startDate']}\r\n              />\r\n            </DatePicker>\r\n            <DatePicker dateFormat=\"m/d/Y\" datePickerType=\"single\" onChange={this.handleEndDateChange}>\r\n              <DatePickerInput\r\n                name=\"endDate\"\r\n                placeholder=\"mm/dd/yyyy\"\r\n                labelText={i18n.t('adminDashboard.addProductVersion.productVersionEndDate')}\r\n                value={this.state.endDate}\r\n                //onChange={this.handleChanges}\r\n                type=\"text\"\r\n                invalidText={i18n.t('validation.invalid.date')}\r\n                invalid={this.state.invalid['endDate']}\r\n              />\r\n            </DatePicker>\r\n          </Form>\r\n        </div>\r\n      </ModalWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withKeycloak(AddProductVersionModal);\r\n","import React, { Component } from 'react';\r\nimport i18n from '../../i18n';\r\nimport { ModalWrapper, Form, TextInput, DatePicker, DatePickerInput } from 'carbon-components-react';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport { apiProductVersionGet, apiProductVersionPut } from '../../api/productVersion';\r\nimport moment from 'moment';\r\n\r\nclass EditProjectModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            name: '',\r\n            startDate: '',\r\n            endDate: '',\r\n            invalid: {},\r\n            modalId: '',\r\n            buttonId: '',\r\n            submitMsg: '',\r\n            submitColour: 'black'\r\n        };\r\n    }\r\n\r\n    handleValidation() {\r\n        let invalid = {};\r\n        let formIsValid = true;\r\n\r\n        //name\r\n        if(this.state.name === ''){\r\n          formIsValid = false;\r\n          invalid[\"name\"] = true;\r\n        }\r\n\r\n        if(typeof this.state.startDate !== \"undefined\"){\r\n            if(!this.state.startDate.match(/^(0[1-9]|1[0-2])\\/(0[1-9]|1\\d|2\\d|3[01])\\/(19|20)\\d{2}$/)){\r\n              formIsValid = false;\r\n              invalid['startDate'] = true;\r\n            }\r\n        }\r\n\r\n        if(typeof this.state.endDate !== \"undefined\"){\r\n            if(!this.state.endDate.match(/^(0[1-9]|1[0-2])\\/(0[1-9]|1\\d|2\\d|3[01])\\/(19|20)\\d{2}$/)){\r\n              formIsValid = false;\r\n              invalid['endDate'] = true;\r\n            }\r\n        }\r\n\r\n\r\n        this.setState({ invalid: invalid });\r\n        return formIsValid;\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const { keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n        const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n\r\n        if (authenticated && changedAuth) {\r\n            this.getVersionDetails();\r\n        }\r\n      }\r\n\r\n    handleChanges = (e) => {\r\n        const input = e.target;\r\n        const name = input.name;\r\n        const value = input.value;\r\n        this.setState({ [name]: value });\r\n    };\r\n\r\n    handleStartDateChange = (date) => {\r\n        this.setState({\r\n            startDate: moment(date[0].toISOString()).format('MM/DD/YYYY')\r\n        })\r\n    }\r\n\r\n    handleEndDateChange = (date) => {\r\n        this.setState({\r\n            endDate: moment(date[0].toISOString()).format('MM/DD/YYYY')\r\n        })\r\n    }\r\n\r\n\r\n    async getVersionDetails() {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n        if (authenticated) {\r\n            const version = await apiProductVersionGet(this.props.serviceUrl, this.props.version.id);\r\n            this.setState({\r\n                name: version.data.name,\r\n                startDate: moment(version.data.startDate).format('MM/DD/YYYY'),\r\n                endDate: moment(version.data.endDate).format('MM/DD/YYYY'),\r\n                modalId: \"modal-form-version-edit-\" + version.data.id,\r\n                buttonId: \"edit-version-button-\" + version.data.id\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    async versionPut(version) {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n        if (authenticated) {\r\n            return await apiProductVersionPut(this.props.serviceUrl, version);\r\n        }\r\n    }\r\n\r\n    handleFormSubmit = (e) => {\r\n        const formIsValid = this.handleValidation();\r\n\r\n        if (formIsValid) {\r\n            const version = {\r\n                id: this.props.version.id,\r\n                name: this.state.name,\r\n                startDate: moment(this.state.startDate).format(),\r\n                endDate: moment(this.state.endDate).format()\r\n            }\r\n            this.versionPut(version).then(result => {\r\n                this.setState({\r\n                    submitMsg: i18n.t('submitMessages.updated'),\r\n                    submitColour: '#24a148'\r\n                })\r\n                this.props.updateProductVersions();\r\n            }).catch(err => {\r\n                this.setState({\r\n                    submitMsg: i18n.t('submitMessages.error'),\r\n                    submitColour: '#da1e28'\r\n                })\r\n            });\r\n        }\r\n    };\r\n\r\n    componentDidMount() {\r\n        const { keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n        if (authenticated) {\r\n            this.getVersionDetails();\r\n            const modalOpenButton = document.querySelector('.edit-version-button-' + this.props.version.id);\r\n            modalOpenButton.addEventListener(\"click\", this.clearValues, false);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const buttonClassName = \"bx--btn bx--btn--ghost edit-version-button-\" + this.props.version.id;\r\n        return (\r\n            <ModalWrapper\r\n                buttonTriggerText={i18n.t('buttons.edit')}\r\n                modalHeading={i18n.t('adminDashboard.addProject.editTitle')}\r\n                buttonTriggerClassName={buttonClassName}\r\n                className=\"modal-form\"\r\n                id={this.state.modalId}\r\n                handleSubmit={this.handleFormSubmit}\r\n                primaryButtonText={i18n.t('modalText.save')}\r\n                secondaryButtonText={i18n.t('modalText.cancel')}\r\n                modalLabel={<p style={{color: this.state.submitColour}}>{this.state.submitMsg}</p>}\r\n            >\r\n                <div className=\"form-container\">\r\n                    <Form onSubmit={this.handleFormSubmit}>\r\n                        <TextInput\r\n                            name=\"name\"\r\n                            labelText={i18n.t('adminDashboard.addProject.projectName') + \" *\"}\r\n                            value={this.state.name}\r\n                            onChange={this.handleChanges}\r\n                            invalidText={i18n.t('validation.invalid.required')}\r\n                            invalid={this.state.invalid[\"name\"]}\r\n                        />\r\n                        <DatePicker dateFormat=\"m/d/Y\" datePickerType=\"single\" onChange={this.handleStartDateChange} value={this.state.startDate}>\r\n                            <DatePickerInput\r\n                                name=\"startDate\"\r\n                                placeholder=\"mm/dd/yyyy\"\r\n                                labelText={i18n.t('subscriptionDetails.startDate') + \" *\"}\r\n                                onChange={this.handleChanges}\r\n                                type=\"text\"\r\n                                invalidText={i18n.t('validation.invalid.date')}\r\n                                invalid={this.state.invalid['startDate']}\r\n                            />\r\n                        </DatePicker>\r\n                        <DatePicker dateFormat=\"m/d/Y\" datePickerType=\"single\" onChange={this.handleEndDateChange} name=\"endDate\" value={this.state.endDate}>\r\n                            <DatePickerInput\r\n                                name=\"endDate\"\r\n                                placeholder=\"mm/dd/yyyy\"\r\n                                labelText={i18n.t('subscriptionDetails.endDate') + \" *\"}\r\n                                onChange={this.handleChanges}\r\n                                type=\"text\"\r\n                                invalidText={i18n.t('validation.invalid.date')}\r\n                                invalid={this.state.invalid['endDate']}\r\n                            />\r\n                        </DatePicker>\r\n                    </Form>\r\n                </div>\r\n            </ModalWrapper>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default withKeycloak(EditProjectModal)\r\n","import React, { Component } from 'react';\r\nimport i18n from '../../../i18n';\r\nimport {\r\n  DataTable,\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableHeader,\r\n  TableBody,\r\n  TableCell,\r\n  ToggleSmall,\r\n  Button\r\n} from 'carbon-components-react';\r\nimport { SubtractAlt16 } from '@carbon/icons-react';\r\nimport { apiProductVersionDelete, apiProductVersionsGet, apiUpdateProductVersionsStatus } from '../../../api/productVersion';\r\nimport withKeycloak from '../../../auth/withKeycloak';\r\nimport AddProductVersionModal from '../AddProductVersionModal';\r\nimport { hasKeycloakClientRole } from '../../../api/helpers';\r\nimport EditCustomerModal from '../EditCustomerModal';\r\nimport EditVersionModal from '../EditVersionModal';\r\n\r\nclass ProductVersion extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      data: ''\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (hasKeycloakClientRole('ROLE_ADMIN') || hasKeycloakClientRole('ROLE_SUPPORT')) {\r\n      this.getProductVersions();\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n    const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n\r\n    if (authenticated && changedAuth) {\r\n      if (hasKeycloakClientRole('ROLE_ADMIN') || hasKeycloakClientRole('ROLE_SUPPORT')) {\r\n        this.getProductVersions();\r\n      }\r\n    }\r\n  }\r\n\r\n  async getProductVersions() {\r\n    const { t, keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n    if (authenticated) {\r\n      const productVersions = await apiProductVersionsGet(this.props.serviceUrl);\r\n\r\n      this.setState({\r\n        data: productVersions\r\n      });\r\n    }\r\n  }\r\n\r\n  async deleteVersion(id) {\r\n    const { t, keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n    if (authenticated) {\r\n      return await apiProductVersionDelete(this.props.serviceUrl, id);\r\n    }\r\n  }\r\n\r\n  handleDeleteVersion = (e, id) => {\r\n    e.preventDefault();\r\n    if (window.confirm(\"Are you sure you want to delete this Entando version?\")) {\r\n      this.deleteVersion(id).then(result => {\r\n        this.setState({\r\n            submitMsg: i18n.t('submitMessages.deleted'),\r\n            submitColour: '#24a148'\r\n        })\r\n        this.updateProductVersions();\r\n      }).catch(err => {\r\n        this.setState({\r\n            submitMsg: i18n.t('submitMessages.error'),\r\n            submitColour: '#da1e28'\r\n        })\r\n      });\r\n    }\r\n  }\r\n\r\n  updateProductVersions = () => {\r\n    this.getProductVersions();\r\n  }\r\n\r\n  async handleToggleChange(id) {\r\n    await apiUpdateProductVersionsStatus(this.props.serviceUrl, id);\r\n  }\r\n\r\n  render() {\r\n    if (hasKeycloakClientRole('ROLE_ADMIN') || hasKeycloakClientRole('ROLE_SUPPORT')) {\r\n      return (\r\n        <div>\r\n          <DataTable rows={rowData} headers={headerData}>\r\n            {({ rows, headers, getHeaderProps, getTableProps }) => (\r\n              <TableContainer>\r\n                <Table {...getTableProps()}>\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      {headers.map(header => (\r\n                        <TableHeader {...getHeaderProps({ header })}>{header.header}</TableHeader>\r\n                      ))}\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {Object.keys(this.state.data).length !== 0\r\n                      ? this.state.data.data.map((productVersion, index) => (\r\n                          <TableRow key={index}>\r\n                            <TableCell>{productVersion.name}</TableCell>\r\n                            <TableCell>\r\n                              <ToggleSmall\r\n                                onClick={() => this.handleToggleChange(productVersion.id)}\r\n                                aria-label=\"toggle button\"\r\n                                id={productVersion.id}\r\n                                defaultToggled={productVersion.status ? true : false}\r\n                              />\r\n                            </TableCell>\r\n                            <TableCell>{productVersion.startDate}</TableCell>\r\n                            <TableCell>{productVersion.endDate}</TableCell>\r\n                            <TableCell>\r\n                              <div style={{display: 'flex'}}>\r\n                                <EditVersionModal key={productVersion.id} version={productVersion} serviceUrl={this.props.serviceUrl} updateProductVersions={this.updateProductVersions} />\r\n                                <a onClick={(e) => this.handleDeleteVersion(e, productVersion.id)} href=\"\" style={{display: 'flex', marginTop: '12px'}}>\r\n                                  <SubtractAlt16 fill=\"red\" style={{marginTop: '4px'}} />\r\n                                  <p>{i18n.t('buttons.delete')}</p>\r\n                                </a>\r\n                              </div>\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        ))\r\n                      : null}\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            )}\r\n          </DataTable>\r\n          <br />\r\n          <AddProductVersionModal serviceUrl={this.props.serviceUrl} updateProductVersions={this.updateProductVersions} />\r\n        </div>\r\n      );\r\n    }\r\n    else {\r\n      return(<p>{i18n.t('userMessages.unauthorized')}</p>)\r\n    }\r\n  }\r\n}\r\n\r\nconst headerData = [\r\n  {\r\n    header: i18n.t('adminConfig.manageProductVersion.entandoVersion'),\r\n    key: 'entVersion'\r\n  },\r\n  {\r\n    header: i18n.t('adminConfig.manageProductVersion.status'),\r\n    key: 'status'\r\n  },\r\n  {\r\n    header: i18n.t('adminConfig.manageProductVersion.startDate'),\r\n    key: 'startDate'\r\n  },\r\n  {\r\n    header: i18n.t('adminConfig.manageProductVersion.supportEndDate'),\r\n    key: 'endDate'\r\n  },\r\n  {\r\n    header: i18n.t('customerDashboard.action'),\r\n    key: 'action',\r\n}\r\n];\r\n\r\nconst rowData = [\r\n  {\r\n    id: 'a',\r\n    entVersion: '5.2',\r\n    status: <ToggleSmall aria-label=\"toggle button\" defaultToggled id=\"status-1\" />,\r\n    startDate: 'April, 2018',\r\n    endDate: 'April, 2022'\r\n  },\r\n  {\r\n    id: 'b',\r\n    entVersion: '6.3',\r\n    status: <ToggleSmall aria-label=\"toggle button\" id=\"status-2\" />,\r\n    startDate: 'Jile, 2019',\r\n    endDate: 'April, 2023'\r\n  },\r\n  {\r\n    id: 'c',\r\n    entVersion: '6.2',\r\n    status: <ToggleSmall aria-label=\"toggle button\" defaultToggled id=\"status-3\" />,\r\n    startDate: 'September, 2020',\r\n    endDate: 'April, 2024'\r\n  }\r\n];\r\n\r\nexport default withKeycloak(ProductVersion);\r\n","import React from 'react';\r\nimport i18n from '../../../i18n';\r\nimport { Accordion, AccordionItem, Tile } from 'carbon-components-react';\r\nimport TicketingSystem from './TicketingSystem';\r\nimport ProductVersion from './ProductVersion';\r\nimport { hasKeycloakClientRole } from '../../../api/helpers';\r\nimport withKeycloak from '../../../auth/withKeycloak';\r\n\r\nclass AdminConfiguration extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: true\r\n    }\r\n    this.adminConfig = [\r\n      {\r\n        label: (\r\n          <div>\r\n            <p className=\"title\">{i18n.t('adminConfig.integrationTicketingSystem.title')}</p>\r\n            <p className=\"desc\">{i18n.t('adminConfig.integrationTicketingSystem.desc')}</p>\r\n          </div>\r\n        ),\r\n        content: <TicketingSystem serviceUrl={this.props.serviceUrl} />\r\n      },\r\n      {\r\n        label: (\r\n          <div>\r\n            <p className=\"title\">{i18n.t('adminConfig.manageProductVersion.title')}</p>\r\n            <p className=\"desc\">{i18n.t('adminConfig.manageProductVersion.desc')}</p>\r\n          </div>\r\n        ),\r\n        content: <ProductVersion serviceUrl={this.props.serviceUrl} />\r\n      }\r\n    ];\r\n  }\r\n\r\ncomponentDidMount() {\r\n  const { keycloak } = this.props;\r\n  const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n  if (authenticated) {\r\n    this.setState({\r\n      loading: false\r\n    })\r\n  }\r\n}\r\n\r\ncomponentDidUpdate(prevProps) {\r\n  const { keycloak } = this.props;\r\n  const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n  const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n\r\n  if (authenticated && changedAuth) {\r\n    this.setState({\r\n      loading: false\r\n    });\r\n  }\r\n}\r\n\r\nrender() {\r\n  if (!this.state.loading) {\r\n    // Authorized\r\n    if (hasKeycloakClientRole('ROLE_ADMIN')) {\r\n      return(\r\n        <div>\r\n          <h3 className=\"pageTitle\">{i18n.t('adminDashboard.adminTitle')}</h3>\r\n          <div className=\"form-container\">\r\n            <Tile>\r\n              <p className=\"title\">{i18n.t('adminConfig.title')}</p>\r\n              <p class=\"desc\">{i18n.t('adminConfig.desc')}</p>\r\n            </Tile>\r\n            <Accordion>\r\n              {this.adminConfig.map((item, index) => (\r\n                <AccordionItem key={index.toString()} index={index} title={item.label} description={item.description}>\r\n                  <p>{item.content}</p>\r\n                </AccordionItem>\r\n              ))}\r\n            </Accordion>\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n    // Unauthorized\r\n    else {\r\n      return(<p>{i18n.t('userMessages.unauthorized')}</p>)\r\n    }\r\n  }\r\n  // Loading\r\n  else {\r\n    return(null)\r\n  }\r\n}\r\n\r\n}\r\nexport default withKeycloak(AdminConfiguration);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport AdminConfiguration from '../components/Admin/Configuration/AdminConfiguration';\r\nimport '../index.scss'\r\nimport './dashboard.css'\r\nimport * as Locale from '../i18n';\r\n\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\n\r\nimport {\r\n  subscribeToWidgetEvent\r\n} from '../helpers/widgetEvents';\r\nimport {\r\n  KEYCLOAK_EVENT_TYPE,\r\n} from './widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window &&\r\n    window.entando &&\r\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\nconst ATTRIBUTES = {\r\n  hidden: 'hidden',\r\n  locale: 'locale',\r\n  paginationMode: 'pagination-mode',\r\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n  serviceUrl: 'service-url',\r\n  locale: 'locale'\r\n};\r\n\r\nclass AdminConfigurationElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    \r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    //retargetEvents(shadowRoot);\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n    const locale = this.getAttribute(ATTRIBUTES.locale) || '';\r\n    Locale.setLocale(locale);\r\n\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <AdminConfiguration serviceUrl={serviceUrl}/>\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.define('admin-configuration-widget', AdminConfigurationElement);\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport OpenTicket from '../components/Forms/openTicket';\r\nimport '../index.scss'\r\nimport './dashboard.css'\r\nimport * as Locale from '../i18n';\r\n\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\n\r\nimport {\r\n  subscribeToWidgetEvent\r\n} from '../helpers/widgetEvents';\r\nimport {\r\n  KEYCLOAK_EVENT_TYPE,\r\n} from '../custom-elements/widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window &&\r\n    window.entando &&\r\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\nconst ATTRIBUTES = {\r\n  hidden: 'hidden',\r\n  locale: 'locale',\r\n  paginationMode: 'pagination-mode',\r\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n  serviceUrl: 'service-url',\r\n  locale: 'locale'\r\n};\r\n\r\nclass OpenTicketElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    \r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    //retargetEvents(shadowRoot);\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n    const locale = this.getAttribute(ATTRIBUTES.locale) || '';\r\n    Locale.setLocale(locale);\r\n\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <OpenTicket serviceUrl={serviceUrl}/>\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.define('open-ticket-widget', OpenTicketElement);\r\n\r\n","import React, { Component } from 'react';\r\nimport { Form, TextInput, Select, SelectItem, Button } from 'carbon-components-react';\r\nimport * as portalUserApi from '../../../api/portalusers';\r\nimport { apiAddUserToProject, apiGetProjectIdNames } from '../../../api/projects';\r\nimport withKeycloak from '../../../auth/withKeycloak';\r\nimport { apiKeycloakUserGet } from '../../../api/keycloak';\r\nimport i18n from '../../../i18n';\r\nclass AssignUser extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            projectId: '',\r\n            assignUser: '',\r\n            users: new Map(),\r\n            projects: {},\r\n            invalid: {},\r\n            submitMsg: '',\r\n            submitColour: 'black'\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { t, keycloak } = this.props;\r\n\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n        if (authenticated) {\r\n            this.fetchData(keycloak.authServerUrl);\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n      \r\n        const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n      \r\n        if (authenticated && changedAuth) {\r\n            this.fetchData(keycloak.authServerUrl);\r\n        }\r\n    }\r\n\r\n    async fetchData(keycloakUrl) {\r\n        const users = this.mapKeycloakUserEmails((await apiKeycloakUserGet(keycloakUrl)).data);\r\n        const projects = (await apiGetProjectIdNames(this.props.serviceUrl)).data;\r\n        this.setState({\r\n            users,\r\n            projects\r\n        });\r\n    }\r\n\r\n    mapKeycloakUserEmails = keycloakUsers => {\r\n        const usernameEmailMap = new Map();\r\n        keycloakUsers.forEach(keycloakUser => usernameEmailMap.set(keycloakUser.username, keycloakUser.email));\r\n        return usernameEmailMap;\r\n    };\r\n\r\n    handleChanges = e => {\r\n        const input = e.target;\r\n        const name = input.name;\r\n        const value = input.value;\r\n        this.setState({ [name]: value });\r\n    };\r\n\r\n    handleFormSubmit = event => {\r\n        event.preventDefault();\r\n        const { projectId, assignUser } = this.state;\r\n        const formIsValid = this.handleFormValidation();\r\n\r\n        if (formIsValid) {\r\n            this.assignUserToProject(projectId, assignUser).then(res => {\r\n                if (res.status === 201) {\r\n                    this.setState({\r\n                        submitMsg: i18n.t('submitMessages.updated'),\r\n                        submitColour: '#24a148'\r\n                    })\r\n                } else {\r\n                    this.setState({\r\n                        submitMsg: i18n.t('submitMessages.error'),\r\n                        submitColour: '#da1e28'\r\n                    })\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    handleFormValidation() {\r\n        let invalid = {};\r\n        let formIsValid = true;\r\n        const { projectId, assignUser } = this.state;\r\n\r\n        //name\r\n        if (projectId === '') {\r\n            formIsValid = false;\r\n            invalid['projectId'] = true;\r\n        }\r\n\r\n        //customerNumber\r\n        if (assignUser === '') {\r\n            formIsValid = false;\r\n            invalid['assignUser'] = true;\r\n        }\r\n\r\n        this.setState({ invalid: invalid });\r\n        return formIsValid;\r\n    }\r\n\r\n    assignUserToProject = async (projectId, username) => {\r\n        const portalUserId = await this.getPortalUserId({ username, email: this.state.users.get(username) });\r\n        return await apiAddUserToProject(this.props.serviceUrl, projectId, portalUserId);\r\n    };\r\n\r\n    getPortalUserId = async keycloakUser => {\r\n        let portalUserId = null;\r\n        try {\r\n            const portalUser = await portalUserApi.apiUserGetByUsername(this.props.serviceUrl, keycloakUser.username);\r\n            portalUserId = portalUser.data.id;\r\n        } catch (e) {\r\n            if (e.message.toLowerCase().includes('not found')) {\r\n                const portalUser = await this.createPortalUser(keycloakUser);\r\n                portalUserId = portalUser.data.id;\r\n            }\r\n        }\r\n\r\n        return portalUserId;\r\n    };\r\n\r\n    createPortalUser = async keycloakUser => {\r\n        return await portalUserApi.apiUserPost(this.props.serviceUrl, { username: keycloakUser.username, email: keycloakUser.email });\r\n    };\r\n\r\n    setupFormComponents() {\r\n        const users = this.state.users;\r\n        const projectIdsNames = this.state.projects;\r\n        let userList, projectList = (userList = null);\r\n\r\n        if (users.size > 0) {\r\n            userList = [...users.keys()].map((assignUser, i) => (\r\n                <SelectItem key={i} text={assignUser} value={assignUser}>\r\n                    {assignUser}\r\n                </SelectItem>\r\n            ));\r\n            userList.unshift(<SelectItem key=\"-1\" text={i18n.t('manageUsers.assign.userList')} value=\"\" />);\r\n        } else {\r\n            userList = <SelectItem text={i18n.t('manageUsers.assign.noUsers')} value=\"\" />;\r\n        }\r\n\r\n        if (projectIdsNames != null && Object.keys(projectIdsNames).length > 0) {\r\n            projectList = Object.keys(projectIdsNames).map((projectId, i) => (\r\n                <SelectItem key={i} text={projectIdsNames[projectId]} value={projectId}>\r\n                    test\r\n                </SelectItem>\r\n            ));\r\n            projectList.unshift(<SelectItem key=\"-1\" text={i18n.t('manageUsers.assign.projectList')} value=\"\" />);\r\n        } else {\r\n            projectList = <SelectItem text={i18n.t('manageUsers.assign.noProjects')} value=\"\" />;\r\n        }\r\n\r\n        return { userList, projectList };\r\n    }\r\n\r\n    render() {\r\n        const { userList, projectList } = this.setupFormComponents();\r\n\r\n        return (\r\n            <div>\r\n                <p style={{color: this.state.submitColour}}>{this.state.submitMsg}</p>\r\n                <Form onSubmit={this.handleFormSubmit}>\r\n                    <div className=\"bx--grid\">\r\n                        <div className=\"bx--row\">\r\n                            <div className=\"bx--col\">\r\n                                <Select\r\n                                    name=\"projectId\"\r\n                                    labelText={i18n.t('manageUsers.assign.projectName')}\r\n                                    value={this.state.projectId}\r\n                                    onChange={this.handleChanges}\r\n                                    invalidText={i18n.t('validation.invalid.required')}\r\n                                    invalid={this.state.invalid['projectId']}\r\n                                >\r\n                                    {projectList}\r\n                                </Select>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"bx--row\">\r\n                            <div className=\"bx--col\">\r\n                                <Select\r\n                                    name=\"assignUser\"\r\n                                    labelText={i18n.t('manageUsers.assign.assignUser')}\r\n                                    value={this.state.assignUser}\r\n                                    onChange={this.handleChanges}\r\n                                    invalidText={i18n.t('validation.invalid.required')}\r\n                                    invalid={this.state.invalid['assignUser']}\r\n                                >\r\n                                    {userList}\r\n                                </Select>\r\n                            </div>\r\n                        </div>\r\n                        <Button kind=\"primary\" tabIndex={0} type=\"submit\">\r\n                            {' '}\r\n                            {i18n.t('buttons.submit')}{' '}\r\n                        </Button>\r\n                    </div>\r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withKeycloak(AssignUser);\r\n","import React, { Component } from 'react';\r\nimport { DataTable, TableContainer, Table, TableHead, TableRow, TableHeader, TableBody, TableCell } from 'carbon-components-react';\r\nimport { SubtractAlt16 } from '@carbon/icons-react';\r\nimport { apiUsersGet, apiUserDelete } from '../../../api/portalusers';\r\nimport withKeycloak from '../../../auth/withKeycloak';\r\nimport { apiKeycloakUserGet } from '../../../api/keycloak';\r\nimport i18n from '../../../i18n';\r\n\r\nclass DeleteUser extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            portalUsers: new Map(),\r\n            keycloakUsers: new Map(),\r\n            displayUsers: [],\r\n            filterText: ''\r\n        };\r\n        this.headerData = [\r\n            {\r\n                header: i18n.t('manageUsers.delete.userName'),\r\n                key: 'username',\r\n            },\r\n            {\r\n                header: i18n.t('manageUsers.delete.userEmail'),\r\n                key: 'email',\r\n            },\r\n            {\r\n                header: i18n.t('manageUsers.delete.dateAdded'),\r\n                key: 'dateAdded',\r\n            },\r\n            {\r\n                header: i18n.t('manageUsers.delete.userAccess'),\r\n                key: 'userAccess',\r\n            }\r\n        ];\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n      \r\n        if (authenticated) {\r\n            this.fetchData(keycloak.authServerUrl);\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n      \r\n        const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n      \r\n        if (authenticated && changedAuth) {\r\n            this.fetchData(keycloak.authServerUrl);\r\n        }\r\n    }\r\n\r\n    async fetchData(keycloakUrl) {\r\n        const { keycloak } = this.props;\r\n\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n        if (authenticated) {\r\n            const portalUsers = this.handleMapFormatting((await apiUsersGet(this.props.serviceUrl)).data);\r\n            const keycloakUsers = this.handleMapFormatting((await apiKeycloakUserGet(keycloakUrl)).data);\r\n\r\n            this.setState({\r\n                portalUsers,\r\n                keycloakUsers\r\n            });\r\n\r\n            this.handleUserDisplay();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Turns the list of user objects into a map where the key is the unique username.\r\n     */\r\n    handleMapFormatting(users) {\r\n        return new Map(users.map(user => [user.username, user]));\r\n    }\r\n\r\n    handleUserDisplay() {\r\n        const { portalUsers, keycloakUsers } = this.state;\r\n        const portalUsernames = [...portalUsers.keys()];\r\n        const keycloakUserObjects = [...keycloakUsers.values()];\r\n\r\n        const displayUsers = keycloakUserObjects.map(keycloakUser => (\r\n            {\r\n                id:  keycloakUser.username,\r\n                username: keycloakUser.username,\r\n                email: keycloakUser.email,\r\n                dateAdded: `${new Date(keycloakUser.createdTimestamp).toLocaleString('default', { month: 'long'})} ${new Date(keycloakUser.createdTimestamp).getFullYear()}`,\r\n                userAccess: portalUsernames.includes(keycloakUser.username) ? <a onClick={event => this.handleRemoveUser(keycloakUser.username, event)} href=\"\"><SubtractAlt16 fill=\"red\" />{i18n.t('manageUsers.delete.removeUser')}</a> : ''\r\n            }\r\n        ));\r\n\r\n        this.setState({\r\n            displayUsers\r\n        });\r\n    }\r\n\r\n    handleRemoveUser = (username, event) => {\r\n        event.preventDefault();\r\n        const userId = this.state.portalUsers.get(username).id;\r\n        apiUserDelete(this.props.serviceUrl, userId).then(res => {\r\n            if (res.status === 204) {\r\n                const updatedPortalUsers = this.state.portalUsers;\r\n                updatedPortalUsers.delete(username);\r\n                this.setState({\r\n                    portalUsers: updatedPortalUsers\r\n                });\r\n                this.handleUserDisplay();\r\n            } else {\r\n                // TODO: Error message\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <DataTable rows={this.state.displayUsers} headers={this.headerData}>\r\n                {({ rows, headers, getHeaderProps, getTableProps }) => (\r\n                    <TableContainer>\r\n                        <Table {...getTableProps()}>\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    {headers.map((header) => (\r\n                                        <TableHeader {...getHeaderProps({ header })}>\r\n                                            {header.header}\r\n                                        </TableHeader>\r\n                                    ))}\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {rows.map((row) => (\r\n                                    <TableRow key={row.id}>\r\n                                        {row.cells.map((cell) => (\r\n                                            <TableCell key={cell.id}>{cell.value}</TableCell>\r\n                                        ))}\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                )}\r\n            </DataTable>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withKeycloak(DeleteUser);","import React, { Component } from 'react';\r\nimport i18n from '../../../i18n';\r\nimport { Accordion, AccordionItem } from 'carbon-components-react';\r\nimport AssignUser from './AssignUser';\r\nimport DeleteUser from './DeleteUser';\r\nimport { hasKeycloakClientRole } from '../../../api/helpers';\r\nimport withKeycloak from '../../../auth/withKeycloak';\r\n\r\nclass ManageUser extends Component {\r\n  userFunctionality;\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: true\r\n    }\r\n    this.userFunctionality = [\r\n      {\r\n        label: (\r\n          <div>\r\n            <p className=\"title\">{i18n.t('manageUsers.assign.title')}</p>\r\n            <p className=\"desc\">{i18n.t('manageUsers.assign.desc')}</p>\r\n          </div>\r\n        ),\r\n        content: <AssignUser serviceUrl={this.props.serviceUrl} />,\r\n        open: true\r\n      },\r\n      {\r\n        label: (\r\n          <div>\r\n            <p className=\"title\">{i18n.t('manageUsers.manage.title')}</p>\r\n            <p className=\"desc\">{i18n.t('manageUsers.manage.desc')}</p>\r\n          </div>\r\n        ),\r\n        content: <DeleteUser serviceUrl={this.props.serviceUrl} />,\r\n        open: false\r\n      }\r\n    ];\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n  \r\n    if (authenticated) {\r\n      this.setState({\r\n        loading: false\r\n      })\r\n    }\r\n  }\r\n  \r\n  componentDidUpdate(prevProps) {\r\n    const { keycloak } = this.props;\r\n    const authenticated = keycloak.initialized && keycloak.authenticated;\r\n  \r\n    const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n  \r\n    if (authenticated && changedAuth) {\r\n      this.setState({\r\n        loading: false\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (!this.state.loading) {\r\n      if (hasKeycloakClientRole('ROLE_ADMIN')) {\r\n        return (\r\n          <div>\r\n            <h3 className=\"pageTitle\">{i18n.t('adminDashboard.adminTitle')}</h3>\r\n            <div className=\"form-container\">\r\n              <Accordion>\r\n                {this.userFunctionality.map((item, index) => (\r\n                  <AccordionItem key={index.toString()} index={index} title={item.label} description={item.description} open={item.open}>\r\n                    <p>{item.content}</p>\r\n                  </AccordionItem>\r\n                ))}\r\n              </Accordion>\r\n            </div>\r\n          </div>\r\n        )\r\n      }\r\n      // Unauthorized\r\n      else {\r\n        return(<p>{i18n.t('userMessages.unauthorized')}</p>)\r\n      }\r\n    }\r\n    // Loading\r\n    else {\r\n      return(null)\r\n    }\r\n  }\r\n}\r\n\r\nexport default withKeycloak(ManageUser);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport ManageUser from '../components/Admin/ManageUser/ManageUser';\r\nimport '../index.scss'\r\nimport './dashboard.css'\r\nimport * as Locale from '../i18n';\r\n\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\n\r\nimport {\r\n  subscribeToWidgetEvent\r\n} from '../helpers/widgetEvents';\r\nimport {\r\n  KEYCLOAK_EVENT_TYPE,\r\n} from '../custom-elements/widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window &&\r\n    window.entando &&\r\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\nconst ATTRIBUTES = {\r\n  hidden: 'hidden',\r\n  locale: 'locale',\r\n  paginationMode: 'pagination-mode',\r\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n  serviceUrl: 'service-url',\r\n  locale: 'locale'\r\n};\r\n\r\nclass ManageUserElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    \r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    //retargetEvents(shadowRoot);\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n    const locale = this.getAttribute(ATTRIBUTES.locale) || '';\r\n    Locale.setLocale(locale);\r\n\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <ManageUser serviceUrl={serviceUrl}/>\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.define('manage-user-widget', ManageUserElement);\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport AssignUser from '../components/Admin/ManageUser/AssignUser';\r\nimport '../index.scss'\r\nimport './dashboard.css'\r\n\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\n\r\nimport {\r\n  subscribeToWidgetEvent\r\n} from '../helpers/widgetEvents';\r\nimport {\r\n  KEYCLOAK_EVENT_TYPE,\r\n} from '../custom-elements/widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window &&\r\n    window.entando &&\r\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\nconst ATTRIBUTES = {\r\n  hidden: 'hidden',\r\n  locale: 'locale',\r\n  paginationMode: 'pagination-mode',\r\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n  serviceUrl: 'service-url'\r\n};\r\n\r\nclass AssignUserElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    \r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    //retargetEvents(shadowRoot);\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n    \r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <AssignUser serviceUrl={serviceUrl} />\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.define('assign-user-widget', AssignUserElement);\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport DeleteUser from '../components/Admin/ManageUser/DeleteUser';\r\nimport '../index.scss'\r\nimport './dashboard.css'\r\n\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\n\r\nimport {\r\n  subscribeToWidgetEvent\r\n} from '../helpers/widgetEvents';\r\nimport {\r\n  KEYCLOAK_EVENT_TYPE,\r\n} from '../custom-elements/widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window &&\r\n    window.entando &&\r\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\nconst ATTRIBUTES = {\r\n  hidden: 'hidden',\r\n  locale: 'locale',\r\n  paginationMode: 'pagination-mode',\r\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n  serviceUrl: 'service-url',\r\n};\r\n\r\nclass DeleteUserElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    \r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    //retargetEvents(shadowRoot);\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n    \r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <DeleteUser serviceUrl={serviceUrl} />\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.define('delete-user-widget', DeleteUserElement);\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport TicketingSystem from '../components/Admin/Configuration/TicketingSystem';\r\nimport '../index.scss'\r\nimport './dashboard.css'\r\n\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\n\r\nimport {\r\n  subscribeToWidgetEvent\r\n} from '../helpers/widgetEvents';\r\nimport {\r\n  KEYCLOAK_EVENT_TYPE,\r\n} from './widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window &&\r\n    window.entando &&\r\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\nconst ATTRIBUTES = {\r\n  hidden: 'hidden',\r\n  locale: 'locale',\r\n  paginationMode: 'pagination-mode',\r\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n  serviceUrl: 'service-url',\r\n};\r\n\r\nclass TicketingSystemElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    \r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    //retargetEvents(shadowRoot);\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <TicketingSystem serviceUrl={serviceUrl}/>\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.define('ticketing-system-widget', TicketingSystemElement);\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport ProductVersion from '../components/Admin/Configuration/ProductVersion';\r\nimport '../index.scss'\r\nimport './dashboard.css'\r\n\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\n\r\nimport {\r\n  subscribeToWidgetEvent\r\n} from '../helpers/widgetEvents';\r\nimport {\r\n  KEYCLOAK_EVENT_TYPE,\r\n} from './widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window &&\r\n    window.entando &&\r\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\nconst ATTRIBUTES = {\r\n  hidden: 'hidden',\r\n  locale: 'locale',\r\n  paginationMode: 'pagination-mode',\r\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n  serviceUrl: 'service-url',\r\n};\r\n\r\nclass ProductVersionElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    \r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    //retargetEvents(shadowRoot);\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <ProductVersion serviceUrl={serviceUrl}/>\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.define('product-version-widget', ProductVersionElement);\r\n\r\n","import React, { Component } from 'react';\r\nimport i18n from '../../i18n';\r\nimport { Form, TextInput, Select, SelectItem, Button, DatePicker, DatePickerInput } from 'carbon-components-react';\r\nimport { apiGetProjectIdNames, apiGetMyProjectIdNames } from '../../api/projects';\r\nimport withKeycloak from '../../auth/withKeycloak';\r\nimport { apiProjectSubscriptionPost, apiRenewSubscription } from '../../api/subscriptions';\r\nimport { apiProductVersionsGet } from '../../api/productVersion';\r\nimport { hasKeycloakClientRole } from '../../api/helpers';\r\nimport { apiAddSubscriptionToProject } from '../../api/projects';\r\nimport moment from 'moment';\r\n\r\nconst subscriptionLevel = {\r\n    GOLD: 'Gold',\r\n    PLATINUM: 'Platinum'\r\n}\r\n\r\nconst subscriptionStatus = {\r\n    requested: 'REQUESTED',\r\n    pending: 'PENDING',\r\n    active: 'ACTIVE',\r\n    expired: 'EXPIRED'\r\n}\r\n\r\nconst subscriptionTypes = ['New', 'Existing'];\r\n\r\nclass SubscriptionForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loading: true,\r\n            subscriptionType: '',\r\n            projectId: '',\r\n            startDate: '',\r\n            subscriptionLevel: '',\r\n            subscriptionLength: '',\r\n            entandoVersionId: '',\r\n            invalid: {},\r\n            projects: {},\r\n            productVersions: [],\r\n            selectedProjectId: '',\r\n            submitSuccess: false,\r\n            submitError: false,\r\n            submitColour: 'black'\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { t, keycloak } = this.props;\r\n\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n        if (authenticated) {\r\n            if (hasKeycloakClientRole('ROLE_ADMIN') || hasKeycloakClientRole('ROLE_SUPPORT') || hasKeycloakClientRole('ROLE_CUSTOMER') || hasKeycloakClientRole('ROLE_PARTNER')) {\r\n                this.fetchData();\r\n            }\r\n            this.setState({\r\n                loading: false\r\n            })\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const { t, keycloak } = this.props;\r\n        const authenticated = keycloak.initialized && keycloak.authenticated;\r\n\r\n        const changedAuth = prevProps.keycloak.authenticated !== authenticated;\r\n\r\n        if (authenticated && changedAuth) {\r\n            if (hasKeycloakClientRole('ROLE_ADMIN') || hasKeycloakClientRole('ROLE_SUPPORT') || hasKeycloakClientRole('ROLE_CUSTOMER') || hasKeycloakClientRole('ROLE_PARTNER')) {\r\n                this.fetchData();\r\n            }\r\n            this.setState({\r\n                loading: false\r\n            })\r\n        }\r\n    }\r\n\r\n    async fetchData() {\r\n        var projects = ''\r\n        if (hasKeycloakClientRole('ROLE_ADMIN') || hasKeycloakClientRole('ROLE_SUPPORT')) {\r\n            projects = (await apiGetProjectIdNames(this.props.serviceUrl)).data;\r\n        }\r\n        else {\r\n            projects = (await apiGetMyProjectIdNames(this.props.serviceUrl)).data;\r\n        }\r\n        const productVersions = (await apiProductVersionsGet(this.props.serviceUrl)).data;\r\n\r\n        this.setState({\r\n            projects,\r\n            productVersions\r\n        });\r\n    }\r\n\r\n    isNumeric(str) {\r\n        if (typeof str != \"string\") \r\n            return false\r\n        return !isNaN(str) && !isNaN(parseFloat(str))\r\n    }\r\n\r\n    handleValidation() {\r\n        let invalid = {};\r\n        let formIsValid = true;\r\n\r\n        if (this.state.subscriptionType === '') {\r\n            formIsValid = false;\r\n            invalid['subscriptionType'] = true;\r\n        }\r\n\r\n        if (this.state.projectId === '') {\r\n            formIsValid = false;\r\n            invalid['projectId'] = true;\r\n        }\r\n\r\n        if (typeof this.state.startDate !== \"undefined\") {\r\n            if (!this.state.startDate.match(/^(0[1-9]|1[0-2])\\/(0[1-9]|1\\d|2\\d|3[01])\\/(19|20)\\d{2}$/)) {\r\n                formIsValid = false;\r\n                invalid[\"startDate\"] = true;\r\n            }\r\n        }\r\n\r\n        if (this.state.subscriptionLength === '' || !this.isNumeric(this.state.subscriptionLength)) {\r\n            formIsValid = false;\r\n            invalid['subscriptionLength'] = true;\r\n        }\r\n\r\n        if (this.state.subscriptionLevel === '') {\r\n            formIsValid = false;\r\n            invalid['level'] = true;\r\n        }\r\n\r\n        if (this.state.entandoVersionId === '') {\r\n            formIsValid = false;\r\n            invalid['entandoVersionId'] = true;\r\n        }\r\n\r\n        this.setState({ invalid: invalid });\r\n        return formIsValid;\r\n    }\r\n\r\n    handleChanges = (e) => {\r\n        const input = e.target;\r\n        const name = input.name;\r\n        const value = input.value;\r\n        this.setState({ [name]: value });\r\n        this.setState({\r\n            submitSuccess: false,\r\n            submitError: false\r\n        });\r\n    }\r\n\r\n    handleStartDateChange = (date) => {\r\n        if (date !== \"\") {\r\n            this.setState({\r\n                startDate: moment(date[0].toISOString()).format('MM/DD/YYYY')\r\n            })\r\n        }\r\n    }\r\n\r\n    handleFormSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            submitSuccess: false,\r\n            submitError: false\r\n        });\r\n        const formIsValid = this.handleValidation();\r\n\r\n        if (formIsValid) {\r\n            if (this.state.subscriptionType === 'new') {\r\n                this.newSubscription().then(res => {\r\n                    apiAddSubscriptionToProject(this.props.serviceUrl, this.state.projectId, res.data.id)\r\n                    this.setState({\r\n                        submitSuccess: true,\r\n                        submitError: false,\r\n                        submitColour: '#24a148'\r\n                    });\r\n                }).catch(err => {\r\n                    this.setState({\r\n                        submitSuccess: false,\r\n                        submitError: true,\r\n                        submitColour: '#da1e28'\r\n                    });\r\n                });\r\n            } else if (this.state.subscriptionType === 'existing') {\r\n                this.renewSubscription().then(res => {\r\n                    apiAddSubscriptionToProject(this.props.serviceUrl, this.state.projectId, res.data.id)\r\n                    this.setState({\r\n                        submitSuccess: true,\r\n                        submitError: false,\r\n                        submitColour: '#24a148'\r\n                    });\r\n                }).catch(err => {\r\n                    this.setState({\r\n                        submitSuccess: false,\r\n                        submitError: true,\r\n                        submitColour: '#da1e28'\r\n                    });\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    async newSubscription() {\r\n        const subscriptionRequest = {\r\n            entandoVersionId: this.state.entandoVersionId,\r\n            projectId: this.state.projectId,\r\n            projectSubscription: {\r\n                startDate: new Date(this.state.startDate),\r\n                lengthInMonths: this.state.subscriptionLength,\r\n                level: this.state.subscriptionLevel,\r\n                status: this.subscriptionStatus()\r\n            }\r\n        }\r\n\r\n        return await apiProjectSubscriptionPost(this.props.serviceUrl, subscriptionRequest);\r\n    }\r\n\r\n    async renewSubscription() {\r\n        const subscriptionRequest = {\r\n            entandoVersionId: this.state.entandoVersionId,\r\n            projectId: this.state.projectId,\r\n            projectSubscription: {\r\n                startDate: new Date(this.state.startDate),\r\n                lengthInMonths: this.state.subscriptionLength,\r\n                level: this.state.subscriptionLevel,\r\n                status: this.subscriptionStatus()\r\n            }\r\n        }\r\n\r\n        return await apiRenewSubscription(this.props.serviceUrl, subscriptionRequest);\r\n    }\r\n\r\n    subscriptionStatus() {\r\n        return hasKeycloakClientRole('ROLE_ADMIN') ? subscriptionStatus.active : subscriptionStatus.requested;\r\n    }\r\n\r\n    setupFormComponents() {\r\n        const projectIdsNames = this.state.projects;\r\n        let projectList = null;\r\n\r\n        if (projectIdsNames != null && Object.keys(projectIdsNames).length > 0) {\r\n            projectList = Object.keys(projectIdsNames).map((projectId, i) => (\r\n                <SelectItem key={i} text={projectIdsNames[projectId]} value={projectId}>{projectIdsNames[projectId]}</SelectItem>\r\n            ));\r\n            projectList.unshift(<SelectItem key=\"-1\" text={i18n.t('manageUsers.assign.projectList')} value=\"\" />);\r\n        } else {\r\n            projectList = <SelectItem text={i18n.t('manageUsers.assign.noProjects')} value=\"\" />;\r\n        }\r\n\r\n        const subscriptionLevelList = Object.entries(subscriptionLevel).map(([key, value]) => (\r\n            <SelectItem key={key} text={value} value={key}>{value}</SelectItem>\r\n        ));\r\n        subscriptionLevelList.unshift(<SelectItem key=\"-1\" text={i18n.t('subscriptionForm.chooseLevel')} value=\"\" />)\r\n\r\n        const versionList = this.state.productVersions.map(version => {\r\n            // only allow the user to choose from active entando versions\r\n            if (version.status) {\r\n                return(<SelectItem key={version.id} text={version.name} value={version.id}>{version.name}</SelectItem>)\r\n            }\r\n            else {\r\n                return(null)\r\n            }\r\n        });\r\n        versionList.unshift(<SelectItem key=\"-1\" text={i18n.t('subscriptionForm.chooseVersion')} value=\"\" />)\r\n\r\n        return { projectList, subscriptionLevelList, versionList }\r\n    }\r\n\r\n    renderForm() {\r\n        const formComponents = this.setupFormComponents()\r\n        const { projectList, subscriptionLevelList, versionList } = formComponents;\r\n        let formInputs;\r\n\r\n        if (this.state.subscriptionType === 'new') {\r\n            formInputs = (\r\n                <div>\r\n                    <p><strong>{i18n.t('subscriptionForm.newSubscription')}</strong></p><br />\r\n                    <div className=\"bx--row\">\r\n                        <div className=\"bx--col\">\r\n                            <Select\r\n                                id=\"projectId\"\r\n                                name=\"projectId\"\r\n                                labelText={i18n.t('subscriptionForm.projectName')}\r\n                                value={this.state.projectId}\r\n                                onChange={this.handleChanges}\r\n                                invalidText={i18n.t('validation.invalid.required')}\r\n                                invalid={this.state.invalid['projectId']}\r\n                            >\r\n                                {projectList}\r\n                            </Select>\r\n                            <Select\r\n                                id=\"subscriptionLevel\"\r\n                                name=\"subscriptionLevel\"\r\n                                labelText={i18n.t('subscriptionForm.desiredSubscriptionLevel') + \" *\"}\r\n                                value={this.state.subscriptionLevel} onChange={this.handleChanges}\r\n                                invalidText={i18n.t('validation.invalid.required')}\r\n                                invalid={this.state.invalid['level']}\r\n                            >\r\n                                {subscriptionLevelList}\r\n                            </Select>\r\n                            <Select\r\n                                id=\"entandoVersionId\"\r\n                                name=\"entandoVersionId\"\r\n                                labelText={i18n.t('subscriptionForm.entandoVersion') + \" *\"}\r\n                                value={this.state.entandoVersionId}\r\n                                onChange={this.handleChanges}\r\n                                invalidText={i18n.t('validation.invalid.required')}\r\n                                invalid={this.state.invalid['entandoVersionId']}\r\n                            >\r\n                                {versionList}\r\n                            </Select>\r\n                        </div>\r\n                        <div className=\"bx--col\">\r\n                            <DatePicker dateFormat=\"m/d/Y\" datePickerType=\"single\" onChange={this.handleStartDateChange}>\r\n                                <DatePickerInput\r\n                                    id=\"startDate\"\r\n                                    name=\"startDate\"\r\n                                    placeholder=\"mm/dd/yyyy\"\r\n                                    labelText={i18n.t('subscriptionForm.desiredSubscriptionStartDate')}\r\n                                    value={this.state.startDate}\r\n                                    //onChange={this.handleChanges}\r\n                                    type=\"text\"\r\n                                    invalidText={i18n.t('validation.invalid.date')}\r\n                                    invalid={this.state.invalid['startDate']}\r\n                                />\r\n                            </DatePicker>\r\n                            <TextInput\r\n                                id=\"subscriptionLength\"\r\n                                name=\"subscriptionLength\"\r\n                                labelText={i18n.t('subscriptionForm.desiredSubscriptionLength') + \" *\"}\r\n                                value={this.state.subscriptionLength}\r\n                                onChange={this.handleChanges}\r\n                                invalidText={i18n.t('validation.invalid.number')}\r\n                                invalid={this.state.invalid['subscriptionLength']}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        } else if (this.state.subscriptionType === 'existing') {\r\n            formInputs = (\r\n                <div>\r\n                    <p><strong>{i18n.t('subscriptionForm.renewSubscription')}</strong></p><br />\r\n                    <div className=\"bx--row\">\r\n                        <div className=\"bx--col\">\r\n                            <Select\r\n                                id=\"projectId\"\r\n                                name=\"projectId\"\r\n                                labelText={i18n.t('subscriptionForm.projectName')}\r\n                                value={this.state.projectId}\r\n                                onChange={this.handleChanges}\r\n                                invalidText={i18n.t('validation.invalid.required')}\r\n                                invalid={this.state.invalid['projectId']}\r\n                            >\r\n                                {projectList}\r\n                            </Select>\r\n                            <Select\r\n                                id=\"subscriptionLevel\"\r\n                                name=\"subscriptionLevel\"\r\n                                labelText={i18n.t('subscriptionForm.desiredSubscriptionLevel') + \" *\"}\r\n                                value={this.state.subscriptionLevel}\r\n                                onChange={this.handleChanges}\r\n                                invalidText={i18n.t('validation.invalid.required')}\r\n                                invalid={this.state.invalid['level']}\r\n                            >\r\n                                {subscriptionLevelList}\r\n                            </Select>\r\n                            <Select\r\n                                id=\"entandoVersionId\"\r\n                                name=\"entandoVersionId\"\r\n                                labelText={i18n.t('subscriptionForm.entandoVersion') + \" *\"}\r\n                                value={this.state.entandoVersionId}\r\n                                onChange={this.handleChanges}\r\n                                invalidText={i18n.t('validation.invalid.required')}\r\n                                invalid={this.state.invalid['entandoVersionId']}\r\n                            >\r\n                                {versionList}\r\n                            </Select>\r\n                        </div>\r\n                        <div className=\"bx--col\">\r\n                            <DatePicker dateFormat=\"m/d/Y\" datePickerType=\"single\" onChange={this.handleStartDateChange}>\r\n                                <DatePickerInput\r\n                                    id=\"startDate\"\r\n                                    name=\"startDate\"\r\n                                    placeholder=\"mm/dd/yyyy\"\r\n                                    labelText={i18n.t('subscriptionForm.desiredSubscriptionStartDate')}\r\n                                    value={this.state.startDate}\r\n                                    //onChange={this.handleChanges}\r\n                                    type=\"text\"\r\n                                    invalidText={i18n.t('validation.invalid.date')}\r\n                                    invalid={this.state.invalid['startDate']}\r\n                                />\r\n                            </DatePicker>\r\n                            <TextInput\r\n                                id=\"subscriptionLength\"\r\n                                name=\"subscriptionLength\"\r\n                                labelText={i18n.t('subscriptionForm.desiredSubscriptionLength') + \" *\"}\r\n                                value={this.state.subscriptionLength}\r\n                                onChange={this.handleChanges}\r\n                                invalidText={i18n.t('validation.invalid.number')}\r\n                                invalid={this.state.invalid['subscriptionLength']}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        return formInputs;\r\n    }\r\n\r\n    successErrorMessage() {\r\n        const isAdmin = hasKeycloakClientRole('ROLE_ADMIN');\r\n        const { subscriptionType, submitSuccess, submitError } = this.state;\r\n\r\n        if (subscriptionType === 'new') {\r\n            if (submitSuccess) {\r\n                return isAdmin ? this.createFormMessage('adminSubmitNewSuccess') : this.createFormMessage('customerSubmitSuccess');\r\n            } else if (submitError) {\r\n                return this.createFormMessage('newSubError');\r\n            }\r\n        } else {\r\n            if (submitSuccess) {\r\n                return isAdmin ? this.createFormMessage('adminRenewNewSuccess') : this.createFormMessage('customerSubmitSuccess');\r\n            } else if (submitError) {\r\n                return this.createFormMessage('renewSubError');\r\n            }\r\n        }\r\n    }\r\n\r\n    createFormMessage(subMessageKey) {\r\n        return <p style={{color: this.state.submitColour}}>{i18n.t(`subscriptionForm.${subMessageKey}`)}</p>\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.loading) {\r\n            if (hasKeycloakClientRole('ROLE_ADMIN') || hasKeycloakClientRole('ROLE_SUPPORT') || hasKeycloakClientRole('ROLE_CUSTOMER') || hasKeycloakClientRole('ROLE_PARTNER')) {\r\n                return (\r\n                    <div>\r\n                        {hasKeycloakClientRole('ROLE_ADMIN') ? \r\n                            <h3 className=\"pageTitle\">{i18n.t('adminDashboard.adminTitle')}</h3> : \r\n                        hasKeycloakClientRole('ROLE_SUPPORT') ? \r\n                            <h3 className=\"pageTitle\">{i18n.t('adminDashboard.supportTitle')}</h3> : \r\n                        hasKeycloakClientRole('ROLE_CUSTOMER') ? \r\n                            <h3 className=\"pageTitle\">{i18n.t('adminDashboard.customerTitle')}</h3> : \r\n                        hasKeycloakClientRole('ROLE_PARTNER') ? \r\n                            <h3 className=\"pageTitle\">{i18n.t('adminDashboard.partnerTitle')}</h3> : \r\n                        null}\r\n                        <div className=\"form-container\">\r\n                            {this.successErrorMessage()}\r\n                            <Form onSubmit={this.handleFormSubmit}>\r\n                                <div className=\"form-desc\">\r\n                                    <h4>{i18n.t('subscriptionForm.formTitle')}</h4>\r\n                                </div>\r\n                                <div className=\"bx--grid\">\r\n                                    <div className=\"bx--row\">\r\n                                        <div className=\"bx--col\">\r\n                                            <Select id=\"subscriptionType\" name=\"subscriptionType\" labelText={i18n.t('subscriptionForm.subscriptionType')} required value={this.state.subscriptionType} onChange={this.handleChanges}>\r\n                                                <SelectItem\r\n                                                    text={i18n.t('subscriptionForm.selectType')}\r\n                                                    value=\"\"\r\n                                                />\r\n                                                {subscriptionTypes.map((subscriptionType, i) => <SelectItem key={i} text={subscriptionType} required value={subscriptionType.toLowerCase()}>{subscriptionType}</SelectItem>)}\r\n                                            </Select>\r\n                                        </div>\r\n                                    </div>\r\n                                    {this.renderForm()}\r\n                                    {this.state.subscriptionType ? <Button kind=\"primary\" tabIndex={0} type=\"submit\" > {i18n.t('buttons.submit')}</Button> : ''}\r\n                                </div>\r\n                            </Form>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            }\r\n            else {\r\n                return(<p>{i18n.t('userMessages.unauthorized')}</p>)\r\n            }\r\n        }\r\n        else {\r\n            return(null)\r\n        }\r\n    }\r\n}\r\n\r\nexport default withKeycloak(SubscriptionForm);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport SubsciptionForm from '../components/Forms/SubscriptionForm';\r\nimport '../index.scss'\r\nimport './dashboard.css'\r\nimport * as Locale from '../i18n';\r\n\r\nimport KeycloakContext from '../auth/KeycloakContext';\r\n\r\nimport {\r\n  subscribeToWidgetEvent\r\n} from '../helpers/widgetEvents';\r\nimport {\r\n  KEYCLOAK_EVENT_TYPE,\r\n} from '../custom-elements/widgetEventTypes';\r\n\r\nconst getKeycloakInstance = () =>\r\n  (window &&\r\n    window.entando &&\r\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\r\n    initialized: false,\r\n  };\r\n\r\nconst ATTRIBUTES = {\r\n  hidden: 'hidden',\r\n  locale: 'locale',\r\n  paginationMode: 'pagination-mode',\r\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\r\n  serviceUrl: 'service-url',\r\n  locale: 'locale'\r\n};\r\n\r\nclass SubsciptionFormElement extends HTMLElement {\r\n  container;\r\n\r\n  mountPoint;\r\n\r\n\r\n  unsubscribeFromKeycloakEvent;\r\n\r\n\r\n  keycloak = getKeycloakInstance();\r\n\r\n  connectedCallback() {\r\n    this.mountPoint = document.createElement('div');\r\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n\r\n    \r\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\r\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\r\n      this.render();\r\n    });\r\n\r\n    this.render();\r\n\r\n    //retargetEvents(shadowRoot);\r\n    this.appendChild(this.mountPoint);\r\n  }\r\n\r\n  render() {\r\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\r\n    const locale = this.getAttribute(ATTRIBUTES.locale) || '';\r\n    Locale.setLocale(locale);\r\n\r\n    ReactDOM.render(\r\n      <KeycloakContext.Provider value={this.keycloak}>\r\n        <SubsciptionForm serviceUrl={serviceUrl}/>\r\n      </KeycloakContext.Provider>,\r\n      this.mountPoint\r\n    );\r\n  }\r\n}\r\n\r\ncustomElements.define('subscription-form-widget', SubsciptionFormElement);\r\n\r\n"],"sourceRoot":""}